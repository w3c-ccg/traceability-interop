{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "60f58a5b-7ff7-496c-95a7-6862ca0d2a2b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3eb3e68e-0260-4f3d-a50b-1dbf20100e28",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b812b8d-5a42-4f5a-a02b-2aa35f1a3f97",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf728dea-6654-4a40-a45e-6ddef6dfc9d4"
                }
              }
            ]
          },
          {
            "id": "79009f32-3f58-4d3b-ac8b-76fb505e225e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87d7a903-40f5-415a-83a0-6571fafa874a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "019b648e-7082-40a9-abeb-cf65577d4272"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "28fca3c0-c7a6-4d69-bb04-72f97d072d66",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80bf5182-3e71-4185-b727-33f34981f44a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b85e10aa-1e98-496d-9c96-6fcd7941fdfa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6402fbc2-9f5d-4569-80c1-53fc7e555345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcf632fa-e90b-477f-bf77-1ba35f3ce129"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b620a14-1bec-4f45-95d8-8ac582ac9656",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98b38d07-b8fe-4577-84f9-1ff687f962f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1057ae18-b838-48bc-b7d4-32679401aecd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "770609ec-9deb-4970-9336-5cf7f861c933"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6602c01f-f404-4901-8272-16130a91029b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2bd2c34b-10c1-49ef-bcf1-695f74377f6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "536c9066-e4f3-4a5c-a2dd-2d39f447d5e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9b007ec-c091-4feb-96f7-f1d727f955ba"
            }
          }
        ]
      },
      {
        "id": "83f1a1fd-432a-4153-a640-3119bc2559d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3bf284cf-6b5f-4366-8a5e-7ee00f7ef490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1efc1f8-8f70-4ea9-ab8e-027b954f2561",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46997388-93bd-4f3a-bf84-1a3f3db1aab3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bca2f3-1cbc-4d1f-a4c3-f5264b1ef2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7beed9b7-b667-46ea-bfe8-fab8284f1b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ee06cb-9e13-4532-b944-bbfea34289c9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61a8737-08fd-46b3-9d46-29785de7f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07483ae8-e277-4ebb-8c93-1321287d15e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19342759-fa6c-4140-869e-02fd25c1ea16",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af4bfb-34c4-43fb-8ed7-544ab75c5adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70d45d50-449b-4bb9-bc5d-46063c79cdd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1729b4e7-9fb5-48dd-be7d-63cafb718a45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e71a7e8d-97cb-4892-a930-c549fcc47b6b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f844f0c-e172-4dc4-afcc-a40db67e4277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa107348-7be9-433c-903d-27330ca72d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e6b965-2744-4481-886c-cadb1f9ec27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242ae972-5491-44cb-80d0-92477c9adab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2567e43-a102-4581-b141-b668325c11d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a71279b6-67e3-4fad-a0a6-10c8f90ea740",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54360a9-d873-490e-8b71-2f2125ef71c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb9948c3-8693-45f3-8ebe-ed2a0d41ac6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89338f12-3f7e-4e4f-9a89-f95cee8d7e9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dc7ca994-4639-43b8-9cd8-81ab854c6908"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2dd8eb3-de5f-4089-9e13-bbf83d923443",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "822a5d32-aae1-4e13-b4d9-831ef6d8af77"
            }
          }
        ]
      },
      {
        "id": "019fafb4-fec5-4674-be8f-38fdeb2fc893",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb71aa66-6e39-4789-9cce-f911c7c59eb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4c6342e-87a6-47b1-8f5e-8d14c40e3e83",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ee934596-1a2e-4b6d-aefa-77e85a804ced",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9641e93-3a20-43d1-8fcd-cc40d7ebbcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e40152-6a3b-4355-b65e-6af573570d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc6380a-4306-4e00-95bc-cdffa15349e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8be8a4e9-e90b-4a08-937b-d465dd2ece3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25792cf5-586a-4b3b-8ec7-68b84a531556",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea5a4c9-8fe7-4271-8335-d50d5482c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ab24f7-aa1e-4cd5-8a32-277c46fc6bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576955b3-0341-4297-9cd9-842181678ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "896a6fcd-f713-4c5a-904c-fc1815e4e9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e21fde7-1b29-4d67-9e68-ab5f5d4cb013",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7dade-8bdf-4028-b29f-f774d1fa0c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ce223c-99a2-490a-9364-3cd047ae65bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6732103d-5095-42b6-a31e-0f26e00d029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6620abef-6be6-4d44-a5ad-bab19018dc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ab34d-5b40-4619-a542-1ff320495afe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45148bae-be87-47ec-9520-60caabbd9a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5711901a-d0b2-4767-b284-424389bbe08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5887c1e-8506-4508-8d48-2f6a9ccb4ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8fb206c-5f53-48d3-a66b-42a84a57695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec4b117-6a91-4d70-9373-e6d6b3a74497",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417ac84-091e-475a-9ccf-d8c7d244482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7f680c-f9db-4607-ae3f-3725caabcf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33980a3b-f552-43ba-a055-df7563ff0d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd98c56-c43b-488f-aacd-8fbd7f787674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30781245-9c53-4b15-b417-bf4c5ab143fb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084633b4-2be3-47a2-8c96-b1e02207dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eab344-cfa7-4ed5-80c9-71a237e22c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a927c7-e8c7-410c-9c8a-5237e98ea742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e892fa3c-f0bf-4c73-af66-01e79cb16b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90da97ee-1705-4ed7-abb0-2a3362aaa70f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0b8d6-d27f-4e62-8731-c9e0b575cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d15a007-b4ef-4c4a-a446-d8e4df24c9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb4a990-22d1-4d7b-9aa4-bcb4b659b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe10aa1-9c58-419b-bc37-35876c18fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca214723-1f73-41ee-b455-e13f60bdf63d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0830fe40-a81e-429c-a532-f96ef276c807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952a840b-b249-4c5a-a4d5-85a4d6a6420c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34abad88-34a8-4d83-9738-ffa126e95fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d600318-8e82-46bc-ace1-8f787c1196c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e18c9-2e8e-44ff-8000-e675122ba103",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acea4b06-8d4f-46a1-84d8-6ff74b51f98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91fd72f-2407-4873-bbeb-a087afeadbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3785ac-4b53-4646-a33d-de751a173444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b747c5-9b0b-41a8-8dd1-d3fb684a95b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142b1cd-45ae-4fbe-bd13-64094e218bac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7436c5f-d399-40b1-b28e-0f10e1e2d637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba284f1-6f98-4740-b409-9217890cae8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517bdc10-0eb5-44cb-987f-f4b1e84ff4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d483ac1-3fe4-465e-8324-11646b6b1dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b73fc-39ee-4517-b568-22e2abb69346",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de68c2-665e-4f83-997b-5ed0d09f70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c817ada6-7ca2-4bfb-8f7f-1e446b75f289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8597e943-58e8-4c33-86d0-6434879f773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbfc4474-eb07-4ee2-a5b3-88020439ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de6a264-4dee-49c4-9ef6-8c123becb3f5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b69cf3c-8987-4997-b324-436433ef7e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2c4bb4-d5fd-48e9-9297-bdd1037f7295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe913f-0cbe-4cc5-8562-a45f024d68e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e0def70-8ab6-416f-9d3b-9beeb38aa583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c873e9-66b6-4361-aa60-05a39fc93316",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253100c3-fad5-41b8-9d41-9513f310eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf15791-4e88-47aa-8574-4e98761202ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e6723-5523-4a7e-9443-4cdfc3551703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cdf0211-c789-4b7e-9852-bcd24923751a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c9886b-03fd-4e71-89a9-461ab15a000c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388c83dd-4923-4009-8a6b-848eef651907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fee347-6139-4052-bf0d-a37b439d4b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fb64f7-68e8-46f5-b561-a716f5fbb3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b392e9b-35c4-45ae-b7c8-678e104bf9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0073b23c-360d-4f6f-8617-a50c6db3d0a5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc42e285-5853-4747-bb3c-3917b95923e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61483a5-630f-4156-bc61-9a3e64c57153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28227102-5323-4d9f-80ae-6e8054c8f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e645e4-c22a-4bcd-97ef-3e4f05277c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ef1b16-8570-452e-b37e-298296c26eac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b4746c-f94d-48a5-bbd6-7fd453cd31e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ec0754-1cba-4545-ad93-2fb0e480b3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9491d1-8046-4ad5-b224-f4698608a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48755ead-0348-49e5-abba-432d0bacfc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9140f432-28e0-4f34-bfc4-aed5ae7f62fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab99b1e-9ede-4a07-85c7-d608e4ea69aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f2ac1f-2572-4f9a-94ab-d9726aa4b38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936c9839-7592-4d4b-8f89-2af364da2399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfbc5510-10aa-414a-ba1c-8557e314025d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e16f5ab-6699-499e-a144-106327dfaf95",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcec8129-33ff-4cb4-9371-f5c929c25e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06f8877-f277-4f40-b0b1-651b036f108f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fd63b8-0564-4712-a585-0d77e8bb19b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7422e1-e264-43a9-bd82-f35d7eb13bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ffa29-1903-490e-a9e4-626f57b5c144",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f4c54e-9dc6-4e92-9f80-67cc8e9bfde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf038d7-a463-4983-9ab0-9028bbb5517f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c204aef-c168-405b-8a5f-9f51143fafaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70dd3800-4d39-4692-9101-b95167481554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f1efcb-5a0a-4828-94e8-ed693c7d4c2d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd214d0-2445-4aaa-8070-9e00f54876a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748070cf-2ae3-4c2e-8ffe-85e3cc93db28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f4ca5-280e-4090-9633-87218ec7ba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f2f10b-f197-4282-a90f-cbf0565cb724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20452bec-a4e6-4c4c-a6ca-f0493bde6c6c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b58449-6363-4b39-8a24-265c044b7c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5708818b-dfce-432e-8ee4-b4a0569227d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a93efe-f27c-4883-905c-37c5d4d55200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3abd7718-0e2f-4106-93b4-9958a1942720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc66cc1-e4ee-4bff-89ee-adbaff7c5430",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09448d36-ed82-4fe9-b607-74d791c1978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776990e2-98f4-4430-aebc-45e803f8292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e5d548-304b-4cf0-aa18-5560f19fe383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16413308-47ac-47f4-898f-a891ddebac68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215b164a-0b3e-4116-a379-7f4de1e83b42",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d099bb-3f6d-4b20-8e8d-b59142fad891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554e5e35-63f4-4fba-86d3-132e7298b379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5d3771-6bd7-4c75-9986-ba5d935f5c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7af54e-0d6d-4d08-8249-8a0222fa9969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a22e1-2937-402a-944e-1ee2be4e6339",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324ee494-307b-4bb3-87b0-82d7b8933c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed9df2e-21ec-43e8-8343-7f53dc842d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b1806d-dc44-4ec1-a841-1997ea736470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de96ed61-0cb1-404f-9a1e-c9e30f7f7f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a90a8d-fb13-4f86-9cf1-59f1bb0c4fa4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0707fb32-fcbd-4670-b2f0-2e2f8eb079d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c859f13-eca1-49b3-903e-33fa105dfd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4363f2-f66f-4fd9-8b61-c35fd4185e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0688c135-0bd3-4d46-bfeb-d0d187889f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6ada68-14fe-4e4d-8c90-0d8b33cd47b1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a30ab02-459d-4b3a-a898-f3d10937592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe4e3c0-00d4-4416-9613-05571c294b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bbbfb7-e0cf-47f4-a96c-d9e3efe525ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "115b9548-99a0-49d0-ad50-0a139319c2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a149732-10c4-4baa-b315-d8fb056cee21",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fc7bb7-7b69-4efd-be23-a904b2900f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea46176c-1af4-41c0-9f0a-b8b349fdd49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86605622-adde-4b43-9f36-f681a216d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "046a1747-e009-4431-9fde-c992d34b95f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab226b-2cf1-4e09-a621-9c071df2e17e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e5b31-2d5b-414e-9b18-c1e7d276a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d3b0be-e2a4-43e0-86d9-a1fdfc083e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76772738-6200-4b3f-b816-be284a2962f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5468b91f-9b5b-45da-9822-0dcfa7613f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80852340-b1fb-44f6-959e-2fddf895a280",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e06703-6c7b-48c5-b693-a6a1292dcd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce1f124-6fd6-4463-8642-c03ac1a5c916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea040c-fd22-42a6-9801-816449324968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "428292ca-f62d-4aa2-aa64-26682ddb8541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c29398b-96eb-4435-9e70-5e00ce8d1c91",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e4c66b-11d1-4b03-b5dd-b5a3f003baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a886da-0108-4a9b-b340-5e3f43690d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbbdcc2-96b6-46a3-aadb-d1247c0a718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa48806-f37d-43d5-9cfa-a79247d29790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e40fe-0f71-45b7-8ec5-a40239342d7d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdfc0fa-9744-4b91-97f8-bd777a3adebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5b449f-090f-4ae8-8954-1775b0a7231a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d3789-8a4a-41a1-93d6-e9c612beade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1979d648-60e2-4b72-a7fa-84068a3ad955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0010cd5b-8d0b-447c-8b85-9481051cdfe7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82729b0-2d2c-4f35-bcf4-364ddcea0f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f052541-9bd1-4bd3-8250-488822388977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972cdc28-f941-4543-9906-6827bbb38e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a4d14a-92c9-4c0c-babe-8a433ba40652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3a224d-f4ee-488f-92dc-719490238748",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38df0d0-9873-4bd5-a14e-c22e75c2731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1012a185-e68c-4cb2-ba05-5aa553e58d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00543066-e553-4636-aa4a-2b83b9b747bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce28baef-9f5d-4f84-af2a-e632d0a48a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c60090-f735-4074-8824-648cd3dae9f7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8d8d9d-c015-4004-b8a4-8430cf39cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e1e259-4853-422c-abaf-56592e0fd048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f347109-a6e5-4e4b-a8b4-5c3b76fba33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7865ce8d-44b7-4044-bcb6-eb30c5f02865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcf8493-461b-4eee-8a70-6ea4e11d435e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bd4dc7-8b46-48bb-880c-183a98923ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2537984-ec60-4337-a52d-f910e43f817e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7853eb-9d99-45c5-a04d-c91b46012ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "35af8c3a-19ec-4054-9f6d-64d8ef41f770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d80af-3e36-4c3e-983b-1f0b51abe3b7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd35f6-6183-4035-842b-e7fe1a51046c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c15e5e-0f4e-4c31-a11e-85010c9b2b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a6ebf2-5a99-4bac-8b47-89cbd11a4784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37836cb6-36c4-48bf-84a0-35312f9b2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d4e187-dca6-4cc8-9552-7eefad7afd26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6d165-87e3-4d98-9653-2e4f6b5a5ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb98fc1-8699-45c5-a2df-3bf6f553d28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc30cdb-14c3-4d2f-8cb8-a257456c1b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0dff13-145d-4d28-b931-f25410b12ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b754aa4-f247-4687-bff0-24588eae8675",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33630c51-ed94-4cea-81a2-7d3a00d7aeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f662a69-89f5-416b-b2dd-0113d7fe6cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2513bb04-4e88-4e12-bbf1-3bf3bd188eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6155acd9-2589-4816-9f9e-5e2838ba7a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574eca4e-5681-492b-91b9-3448be4c3dd6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf4ce8-0001-41fe-b673-418be15b35b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf4fe58-741e-4e2f-b197-46bfa81a8eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f09b18c-7fb1-4308-9f17-adf82285980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c48af558-ac80-46b5-a1bd-ae23938fd35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5a5380-360b-46f7-a4e6-a035d8c718fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bcb92c-6114-4513-bb4f-6d2317a00448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e979e9-a471-4af2-88a1-8cda0d675402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1eca1-b34f-4d85-8a9c-4c7280bbe29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e127c0-d4bc-439e-a5af-7ea95c65162d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f324f3d-109d-4a41-913e-31b20402df54",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbb2f2d-b4c3-45a6-80c7-f69ab16f549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad7dc2d-34ca-441b-a4ff-52b724540a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309f4c82-7fe7-4968-b6e9-0dbffe66bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cf56cb-e270-4ec9-96f8-37ab0acba25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a375a8-935b-4cde-8e0f-daaf862ee0ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccaf010-b2e3-408c-9aea-4db42c69f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361ff003-1bbc-46ee-9b93-4c5482a202fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83bf3c-8f0b-47ba-a146-c402b4e32f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8878d1d7-2e9e-4312-8f6d-b9841cff3a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447d9048-8ac1-41e5-8a9d-e936faee8875",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0568acab-f1cf-40e4-8cff-c32f6a80288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa63756-a73a-491f-9a46-b7713a35c09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aec8650-1402-48be-bd10-40737fe9bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1105ae20-8272-47a0-afd9-ed78a2a74aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac085b-d039-4ed8-9722-dee73f3e3e8d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c743bf-d488-4524-9bc8-977c07636123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cfc346-0629-4add-9902-f17d3352b249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a5267-7795-4d9c-a7a4-de723195c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa0d504-768a-46db-8ac6-51e7c4995839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8193fae3-aea5-45a2-8a6b-72905d758117",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03aa008-533f-402b-8260-12dd8758fecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b582025a-cd79-421e-ae75-ffbbadc6e7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da576629-f435-45ee-8ee8-27ebb9c37b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32fe72c-0488-47a4-8248-12df05fc64cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ee7103-2829-4f5f-9594-448398eecbf0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dad00a-cf6e-4e8b-a918-0198c09733e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b62cd7-ae5a-46ab-b4e0-d32dc80263d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d6c908-9953-4189-b884-2a01f0b82e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8785cc-4738-413f-8060-973ee16b3d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39e4ef7-16b1-45a7-b8c6-b8971b9f8472",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a674f67-5720-4073-9e95-51df4fb97b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd97486-bfdb-4205-955e-90eedd87bb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd2f0f-d093-4ca9-8e76-708698547c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "435bd013-f29e-456f-b993-75694a355fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71516128-f3bf-41a1-b6c1-212c0639e321",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a51002-4e7b-4670-8ce4-1c9e0e05c5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c14e3f-b486-4555-b97c-cde11c7132c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0e4356-6cee-4895-b8f5-0edb5eb06f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6464a46-b825-43dd-97db-6e1b0b6ae6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e0dca-4037-42aa-8ec4-5efb87487d96",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6b25be-a752-418c-8d30-0c526c7f2c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75ec97f-ffbd-4781-90ae-cb6d2ee825dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5c4d81-5af4-4cc9-98f4-b567f950effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9db802f-88c2-4b96-9a82-cadf30401b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd6dc6d-b1b7-4617-b929-711f25f19a59",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c5b5f1-dd78-4e34-b4fa-ac9dac74e6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529fbf5e-a2cc-4348-8b76-1bd42107c32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b4cdd-4811-4e23-af32-a49a97503c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4f3181-397f-484c-ba14-f90b6267078e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b412f6c3-6426-4ca1-abc2-f60ebfc9e173",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c0551-48b1-4d72-b6cc-b5f609b0ec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99c8107-46ff-45bf-b711-b074bab58db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d9d1f-80bf-479f-8e72-5953e3c0efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c145c7a1-4544-42e1-b769-6ecf2bd6107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98369cbf-be99-4991-9101-f020274dd1f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afcfb72-62a1-421e-8b40-52913baa2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b58a9f-184c-4b32-89c9-74190f8ca154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5033a54a-551d-4647-a4d7-7805243b533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "158d96d5-e2ff-4902-b17f-01613dc0075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108fcad6-7907-41d4-88ca-d74a6095a250",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321131d-3481-4e0e-afe9-36d593f25d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d185d3db-5293-4b90-a913-019b48759fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36da47c4-0280-461e-98ae-674ad6119ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec14ae3a-cba1-4ff7-8420-b53d7b4a4923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8679f1e4-3b21-476a-a872-00ad26d822b6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2182b053-cef5-45d1-9e26-ef80dde8b36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c440b699-3bf9-48c5-8802-9dc7dc4f290c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe457d5-e36b-4970-9815-d185af96a2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce700440-4d92-4015-806b-547b938bbbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b282135-c45b-46df-b796-b8f70e73078d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ca04a2-a6ec-4d98-a911-9b923dc15393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c859a0e-7ae2-4e5a-a487-62dbe0400ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37e9d23-9d52-4e9c-b5aa-0bd0181356c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc598a7-19b7-4d4a-bbfc-9ff910f895f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29578a2d-25cf-42b9-8be2-b25b62cc1e83",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fab5ab-8089-4743-b0e0-09fa0891a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a580920-ca9e-45f1-8be2-671e9ad0cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d87676-5e6b-4f48-b0e5-9eca1bb6bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a6fc91-3a84-48c0-ba90-977c4b3477e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdce35d-a017-4643-b9d3-115b908ce218",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ddd3be-e097-43e3-aef3-ccbb7621aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba27e14-a797-4326-85ef-356ea4e2f733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4687da18-c44a-4064-a97f-94588e8efb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d06813dc-e673-41d0-ae2f-d77328fe5c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfcd513-50a6-4290-85f3-086d91e5b6ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9cd872-8380-4d52-bb83-0008347fcf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc611bd8-33bb-4df9-816b-9a317f6c357b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a068b2-d76f-4998-a4b2-a7f8b6ab6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce54e0f-b8d2-4f98-ae2b-72364d439323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681d382c-2f33-4beb-8415-91234347b2e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6309f4-776f-4615-a040-dbf9ac6b975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e96314-8446-4835-9732-a99b6a318271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ccb7f7-f887-4ead-bbae-d24017082a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d572c77e-09b7-4011-ba91-53e569db9ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bd0cb2-2868-4a0b-ae4f-b1550854d110",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333444ed-51f4-4345-80c2-a5edfdd0f37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90052c2e-5e95-4ae2-886b-9edaca7a16ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e49007-2f80-4f53-8e5c-a194c0e9f622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe475bce-868e-4c04-963f-87fceef87f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6d931-d347-4658-b16f-89e052d6f734",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43a669e-c6d7-4bfd-8d9e-4f20a3dc9eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162b98e1-6977-4748-a26b-5d1e3534f903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc5f943-ba54-4240-a2c3-f0367ec10809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a129034-edb1-46c2-8f83-2af6472c2bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952a18a-6b47-47eb-83ae-cec291598f6e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d669ac21-ae68-43fa-956a-4912eca5def2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2c4a3d-f27e-40e4-be1f-41ac898748a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc6e8df-6286-46b7-8f44-764639d107a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6162ebd9-2c27-4796-82a4-afc13ed9bdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0538bf-5d3a-4f4d-b269-fd187e014044",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93be2140-7b33-485f-9e54-25413dfacd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b69c91a-60f4-40f5-bc98-816ac2a1b49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788b8fbf-a587-4b26-84a8-b30dd3577e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b63ddd1-9659-48e3-90d6-014cafd6199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d80cb9-7047-4ddb-98ab-afc27345dd82",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1454fb09-c83b-4598-a378-c6a35a75af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9932ac-d204-4ecb-a5fa-4ca760c3505a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57a2ede-8509-4e78-8482-784c279dc2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4c8f5c-2467-4781-8cb4-24a0011ea2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b215649a-238b-4588-8b6b-bc8203aa31d3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c29c4f-c4a3-41c7-bdf5-f24dfac07a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac77bf3-4b4d-4d72-a87d-942f18fa6613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b222f0fc-442a-4f9e-871a-0c438ea65195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f342ded1-c6a4-4713-81ad-724eb7027ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e8e492-b686-4c68-a57d-d82ec6f49091",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e10f50-030f-4540-afa0-7d798193b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e39f277-5eb6-40f6-b729-af0ac4309e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ba9026-f611-4c18-83a1-190bf432b179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cca2b9-1ac1-4e41-87ea-c2bbfb68896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948e399e-bbf6-4fe6-a00f-e58a4d4f9f17",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f426fd05-b137-4df1-8005-659688a8e533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68dcc0b-5613-4a7b-afe1-dbae4f5e8723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b38903-bfa4-4cb1-bdf4-3d34c7ae4e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28595e5f-02cf-4d25-bafb-560ee3ac774f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb2436f-d98a-42b7-a4e9-dbd1378786e8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d0f805-f597-475e-a02e-f4ecc0ea266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c14a3d5-f85f-41a1-a633-8bca4dd85be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8cd695-80ef-4e94-82b5-06f4c4bad79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8adfacf3-06c1-4170-bca3-02b77f7d5d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc21de7-16ab-437e-a569-978e7a2fe5e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9508ce9a-6e04-4640-a6f3-89dd11e550d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d05c7f-a803-4b86-9bb5-e5d8b0964eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de83fff-e979-4c83-b9a1-876d7407cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8457ad15-6579-4522-9500-3f922e354e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7696e2fc-b70a-4c7a-8932-5373d00debb1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fee55a5-065f-494e-aa82-a068f3d88539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf98d0e5-7692-445a-afb7-7fc7b42d22f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a64393-cc24-4346-94e2-a8312eeec978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1272de1-ceef-4fc6-a4c9-133641ccc679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e773f-5a66-4ed9-960e-b67ed82b9ac2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd45241d-10dd-4768-9eaf-46f9334bf272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c008822-c990-4f41-865a-5fce476f9654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8870232a-e42b-4a07-aa54-7d9358e6e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1550d0-5262-423a-9f78-a7802a3c9e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9799cd9a-e65b-4756-be87-7133fc500d64",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4386b2b5-6b63-4736-b40d-1671d7923f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce747696-739d-4896-bf4a-1d286634a62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b944f-d7a9-4ab6-a38c-41959dee8882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a93b7a5-2fce-432a-90ef-d4db6023214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a134f5-d534-404d-b182-62d95180d9c0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ddce4e-b5b9-4b43-b608-f76b53bea729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8f3e6d-ad3f-4cd6-af84-7a14fa600ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff69a03-aa4f-4a78-81f0-2188a40bdcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e95b8f8-f88b-4c9e-9773-9b8838b1cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36183eed-7dfa-461a-8bc0-6a05be3f0317",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04aaaaee-3ecb-4334-a88d-1cd3f2730559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c0f06-9363-44e2-8ad6-88adf6cec363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc249aa5-42a1-4a4e-8615-83d127c21a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25e3e73b-dc9f-47eb-af23-eb33bc689da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dda654-729f-4e3a-a869-bc38eb914084",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f40a90-04d1-44b8-a508-f55b3d0478cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cee989-15cf-4759-bcd4-9b231438796a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bb12fe-ff43-4a35-a496-a3ffa986a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcac3c8-ed63-4d16-ac2b-d9063cda7a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea56219-6af8-4bb4-a4cb-4028341b0336",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb1d63c-61c0-4ab6-8cf2-7e5292eccbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762f5d1f-33a7-4a15-b455-bf5d12080ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b7e170-412e-4deb-9c3f-485c6c1a0f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4382b88-4a44-4ad3-ad84-af6f132510b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1248dc-2da5-4c55-8e86-cad9d78c98da",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2e6b71-4339-4c3e-8e6f-12affe2b9e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c26e7b-ed77-4feb-898c-c25a446fd6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0985c2-1db6-4d9c-93a8-d1ba63de4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e57d923-51ea-492c-92a1-3703cbf18bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671cf944-29af-49cd-9ff6-5e6d2279d6d0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236d0c94-aed7-4822-96c0-b21d510e08bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6cd617-dfa2-4956-b1d6-ab861d897b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c96619-ec66-4ca1-a598-0839480841b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe083d97-4c85-4c66-adde-e151eee6fdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb775bf7-502d-40d4-a201-9e12584ed948",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf167133-0e83-456c-947c-efd4ed27e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fe1354-e474-4686-8e15-d125b3e7b141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2475060b-e4d4-4798-b028-53a10c45f901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd133524-db8d-4b0f-9c1c-019053f6674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4a533c-aae1-4e1c-8f50-bc66d62b9d63",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126355d9-1d41-4eae-9289-abc27dd829a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c273b011-9493-427b-a867-990f82f0d6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2824d49b-00e2-4f72-a8f8-c5ebeac936af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8560f8e7-7b8b-4e97-bfb8-d80f90f50ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63415a1-89ed-40b6-bcb2-e75e01347303",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203db0e5-a898-41ac-a642-6930cd8df8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0cccae-374a-4411-aefc-69b32344df6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cbfe54-e33b-4d4f-969c-5426667150ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da52397-4a21-4057-8b06-443321150046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0861b464-e4e9-4195-b18c-a02b64147b90",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b314bbb-00cf-45c3-b9f2-a2dded97d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665f233c-bfeb-4cdf-94d9-3f57981b8408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2c2f9-3c87-46f5-ac28-7ab5d99ecbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "964749e9-0cde-4349-a83b-67fc6efa01c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a258de-4255-4551-93d7-f455fe6fd31b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8863155-4c73-4271-a989-1c13bcef56c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed44dfa-2080-4e20-8589-9f83f36615d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b63606-4cdb-4135-abb2-5564a1ea054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b61e2d0-df4c-440c-9227-8bfb49d4c8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad305b5-d22c-4d43-8efd-384e1247f8b0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64936181-8813-4720-803b-aa31a60f3f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f8c681-3e38-44c0-93b1-9a9863f71ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f894f314-e9a6-4725-8f2a-5d000d4b7571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8350aa-e4b6-427d-9984-83f214bbefaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee8fab3-f83b-44e9-997d-256a14f5340a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f242da-b3bf-4f8b-b0d2-f512bf3d6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9517516-7b62-4a9d-ac70-1009f510d6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c625b6c0-79ea-4950-bcbe-a0b7d54138fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "352c3a7c-86ad-4342-8529-3c40742194c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0da600-a387-4ca5-9737-bf386231e44a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a853a6dd-f9da-4bcc-8eb8-cb9f55710be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3bcc1b-036d-48c5-9877-9f6bb66b18ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748cb8ae-6345-4fdb-80b4-602a36e066b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72b27d9d-deab-4c56-8935-048e334ffe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fda556a-6039-4697-8a26-9c544370a8d7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a806222-76f6-47f7-a6f0-e5192f6d59bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffbbfc7-1fe9-4217-90a3-f35ccd16104d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bf2826-800d-46ab-9822-572be1242139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f035cf-f466-4388-b2e9-a81f7780d0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f0c814-bbed-4319-9d7c-58fd3b9642ba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691a033f-7d60-4be4-90de-c178ac8140a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36c5de0-de7b-46be-b8f9-e2c594a9d2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dbfb70-7053-4ca5-9f2e-fc8a67c4da05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4655c2-2e4d-4b74-a638-7168fb9b9603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d265d7a-8afe-4e93-88b4-d5112c23de77",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69abc021-6a4e-4351-bd8c-a97b3fffac58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ded3266-bb66-4d51-8ca0-179ebf280fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267a343d-a8bb-402f-95e9-e90dfbb14038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f919b73-3601-46a9-bedc-ad3276c2b95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c76ace-c4a0-4318-8fa7-1082e55190c2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc7ae0-5a7f-4383-a7dc-120b3dd63e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d42c4e-e635-420b-a311-b1e2a37c8d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb88a7ad-a97b-480d-8506-01c7fc46be03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ce3279-3b79-4fb4-bc7c-6d1eb9bfdb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1a37a3-01a2-45b6-9786-b875989fc12a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa62a8d-5fe5-4ba0-8aa2-c0e67209780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1e4477-c81c-4c14-97ea-02ac76285d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f2fab5-f181-43f1-972b-0f16ae7c1c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6cc0f9-e648-4fd1-88ff-30339a75e935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3817a131-0628-4cde-aaff-5cea055b145c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d4d362-ef8b-40c8-ad38-523f14080dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c8e6c80e-dffc-412a-a700-e60a4fc2c4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664436c0-0f1c-46e2-9bad-a9f509bd7457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aecbe54-986e-48e0-9baf-a580f5e8e3e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91678fd2-5525-4221-a8d7-e0031d912efd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "968aa66e-cdb0-42db-bf3f-dc178ac1da64",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e362162-ab87-4e74-b1f3-8af97c160bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e6fa93d-11f8-4c01-80ae-478e4f5e4b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eef271-2582-47a4-b86c-9351bb92b658",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfd75fdb-c0be-4594-ac15-372a78d65bda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af8bb8c6-634a-4e3e-88bf-2bc7b6ea608b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b04d3ee6-7d07-43d8-bb71-7ace772bbc67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "229d4fca-318d-47f0-a1e6-cec2a1a7a8cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607476bc-fe8b-42ef-8b4f-b8a2b8701b02"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddb1a530-0d2e-42ee-a75d-fde3ed631c23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ad3d92c-869d-4dfc-9bbb-cc4a28836b02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "192d560a-d8c6-4375-befb-3bec42653ce7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0e27d87-259d-4281-86aa-5f98784f7c58"
                }
              }
            ]
          },
          {
            "id": "a5b94690-79db-4fae-9aa5-717e8214288d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37d69d55-c61e-41d4-8e30-18b85eb1877b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1448cc2c-665b-49f0-bad0-15c0056d04c8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734acb51-8ddd-4d6c-89ec-8eddf0319e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "beb4a048-b6e3-41f6-9ab7-057c0ef097e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72275313-561c-48a7-bbb7-962dea6e5584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d2bd7a-5fb9-49f8-b24d-a27ca04d6d4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43a479db-b399-469d-b4c2-24b1e9a0ede2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87decfb-309f-467e-be92-433cc4c73003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18aeb049-8314-4b86-af65-c4839aa931ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e06665a-b17e-497e-8b14-ac33f39c8afc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3af84eb7-740c-4996-831a-e9741437ef7d"
                    }
                  }
                ]
              },
              {
                "id": "327b7fda-e518-4e73-a9ee-99ea231a4b60",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87306b46-992e-41d1-87f9-e8920bb9c4cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "065c570a-693c-45a1-bb19-550f88580903"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56fd4d42-c269-4558-8d19-31dc693ba7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c442f52-34d7-4e09-aa1f-7dcc2707aba4"
                    }
                  }
                ]
              },
              {
                "id": "d2993021-7cdb-4415-ad07-1e9cb835e559",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f53e073-05d7-4160-8d4c-814c9853e80b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "accf32c1-b43d-48b1-84d7-df7fcc56f51c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274e19c5-49c1-48e3-9897-60e2929b6cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8735ddef-002e-4afa-8b84-b948ca9632ec"
                    }
                  }
                ]
              },
              {
                "id": "d856e368-63e0-48f0-9523-b8d7614e965d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8f7a0e-bbe9-4d6e-ad22-b48f540d8f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c212accb-f47d-4314-b578-0d74888d3550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "958411d2-e30b-4dbb-8d23-b1e187e0bea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d61f4367-abc7-4ed3-bbd2-bbf30e028a36"
                    }
                  }
                ]
              },
              {
                "id": "f959c6a6-84a9-48fa-b55d-57e4ada3498d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5afc93f7-2e2b-452d-ac3c-9b6d920b046b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7451e1b1-66cd-43e0-bdff-b3eafbec0825"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081b76a6-c49c-41f3-b612-2ec8e19ce2be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "938cda25-2de5-4158-8c3c-f3bf5fc4cf9b"
                    }
                  }
                ]
              },
              {
                "id": "18020871-beae-438f-9a0d-def3d4417033",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "419e4d08-f88c-475a-912e-1488c3246ba4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ffe1dd7-f2ce-4339-bb83-a79e51fcf6dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f355febd-ff3b-4620-8594-6f4cb009d5ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e203be13-2519-4716-8c77-b66035a0a8c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4a00680-6cae-4159-918d-93af092608e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dee1b0ab-2185-45ab-8e3b-0207922ee5a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6cf2c94a-b289-4989-b239-9decb5a7638e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66507da8-b1f8-439a-9339-9e938d9e4a59"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df490fca-9129-4030-8970-7aa4b61b748a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f5112aff-8ed6-4f63-b51a-d7dd8c06bcfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16f6f05c-28ce-4d7b-836b-bdf7d14f5b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a49a58e-1989-4e8e-9009-e3e43c01883d"
            }
          }
        ]
      },
      {
        "id": "0ed41117-862b-42be-bbdd-838e2bb72854",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "77e6fe63-6f2b-408f-9829-41b3f294853a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cb99ebb-159a-402b-b9d2-856dbab97ca9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2b2ce1f-044a-45b3-847b-e8c4ca5690d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4886173b-84a4-41cd-a5a2-5176fb65c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43f641c-7091-4d66-893a-3ac3b6261bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d018d3a5-cbe2-4503-8b0a-864e047513af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "913ed3ae-6464-408f-aaac-e7dd7e37763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161b95ee-6794-4d41-8ce0-c3c7c9750ac3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f13b02-d140-48b4-b473-863b8320c10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6949d645-0226-41ba-9b94-ac490e363845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808c735-53f3-4db2-adf3-acedcc561643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d114286-8932-4e6d-a8c6-94bc05e64b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f9c3b8-9f1e-4dbc-9666-2c19f6748804",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0163f5-0b3c-4dba-9628-09060f5ba97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f83dd84-0801-4eca-bc00-87b52b866ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0004fea1-959c-4fb2-bfca-ea80965a9a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15f580b-7e34-4e93-8d81-4d7df6243a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3c465-2ec8-41b5-9245-cf3722b17c92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6970f3f2-7d9f-464d-98af-2043aa994213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2a01a0-c034-4afe-855f-122d4e8b6084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0821961-19b3-45fc-b978-ce2665f86fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1305ab-53bc-45ca-acb6-ae9f51292efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58e59e2-4fd7-4a29-8544-acb187ea9d31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c78ec20-141b-4729-8571-c53a407f0160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17913364-4c52-4010-bee1-b294e0ca0b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c0f4a-d5fe-46fe-9d07-966e34f18f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5a1246-2b5d-4fa9-9110-9be8289bf03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be2dc6-426e-4489-a9af-3ced864d5a2e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88c4d5-65c2-4250-b0bc-b760f4aca8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c070b-f6fa-43ec-8b1b-9cbab0684211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48937c-0a87-443a-9f38-670bc5b6064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c13726db-51cf-4510-bc84-2f6f608b737d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcb343c-0bba-4ebd-b919-a7d05024c445",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b403261-eea2-4af8-aec7-7ca18f99cb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3d3958-0e35-43c2-bdea-f1f5d296eb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d80ae9-8af4-42a3-8478-b9e50c86848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3456095e-bfc6-4698-b890-734ebe7e8971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be866fe3-5514-401f-bdcd-324cf7e0696f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45c6a11-78cf-41a6-8f8f-170a12c2e2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62a8139-f16c-4904-ac6e-44dd7a949f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df445064-3f01-4245-963a-344f1a6696cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "314575dc-763e-4333-b8d0-9212210e950a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e2fe07-4a28-4667-a843-9d36febae16d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0b6134-7bf0-4684-a6f3-b66607e89736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f375a5-7574-4243-b9e2-d6eea86a7e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fe9d53-9ce7-4316-9328-83f19f43eb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0f2a5e-1933-4915-87d5-0af26b71d927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17906dd0-d78d-4baa-a7c6-ed9b69760a82",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80309667-1ec0-412c-ac30-fb3dda2aab37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00b08ad-d95d-4025-ac22-6de79cff19be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b23c4ad-0308-491e-9ccd-6913464000cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "951671c2-9969-4bf8-aa17-6ddd69bca17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7efaf-ca70-4d33-b838-4c0ec993c03f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84513887-c7dd-4f2c-8d63-9a0e7929c29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc0862d-481b-461d-9713-c19aab091c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191dbd8a-2321-49b8-8385-608c69c9d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ecbc51-6c14-4093-a94d-80bbfe1581ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8129c8c3-7f35-4b5d-8115-bbbd0092da77",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feff8593-d3df-49b1-8e88-b47448ed7a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fd9745-9a33-4161-9312-89e84d03948d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9053ce14-5bea-4f05-bf23-ad5261e62dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d781a3c-ef6e-4297-b698-7ed6bc3d2bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353a9f3c-798e-4a87-ae94-c43d38719b5d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833c9d1b-7a99-4d46-a0d1-ef3b55d9a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1186efb1-9a37-4071-99cb-07adf0429285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b64aabf-fe7f-43a8-9513-5292ae91fcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be411edc-d639-4cbb-b0ef-66c6c4ffbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e460b3ea-437d-4ada-a3dc-4f7f4a65ade7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4cfe3-ae8c-4fab-a074-cb32d2fed955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1b8a92-2a92-4f74-a1a7-e74383740b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b679c4c-5ec0-476d-8030-34c5b3b629dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a293b8f6-3945-46e3-90f3-640c2f94ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828aeac1-141e-434a-b331-720f5ee39246",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0ded45-4983-4df2-8f0b-88c8dad51be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c2c584-42e7-4698-9159-46a748320565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae16c73-5a6e-4ac6-bea5-07f28c8b97b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82dd492-e8a4-4daf-87ef-0d8089e15e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ad6da-6132-4682-aa6d-fab89d7917e5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8c4e0-2e60-46aa-bbbe-8922bca2d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dfb07b-3b9e-457e-83ef-9fa100555e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08459bd-c9dc-493a-b885-c6216154dce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1eff26e-64cf-4cc8-8b0e-3e895f93f478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f731752c-377c-493a-bb9a-aa10b4ea383e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a09644-a631-4611-8e5d-c3d2fd3b62e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a18d32-3d6d-44b5-92f7-84598fb5ba71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef6437d-b59c-4403-a5e6-32968793f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbcfb23-489c-4d95-b617-7318a218c9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0267e295-9a68-4e9e-94ee-cb2c9ea47323",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea864418-8bee-441e-88c4-a91852d85d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6a7d71-41a4-4f56-ac76-e71f85bed53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64053559-1324-407c-8d30-3ebe0f75b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "631f0f38-3701-434d-85c9-36a343603428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4ed605-dd60-47de-ad44-543b22076c1f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9a002e-9b5a-4676-adcb-fb58df968359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293c620c-9e2e-4a0b-b7e7-12d1847972bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fadd88f-a53c-4330-8f23-e45346166b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46260786-85f7-4564-bf19-a2dd85be1702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc18145-bad5-48d8-b565-85d12d5f77d2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faca753-0919-4736-947b-482b3e78e333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714b2910-720a-4a67-ba3c-8891b7910cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18dfdd-e32d-40c7-a6c2-8ed579688fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f099b877-114d-4b63-ad52-1ab3edb8d41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fcb95b-2328-49ae-8dba-188cd3debbfd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711abf5c-2826-4bdd-a709-eb0d60bb86a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9576c53f-5e19-4b7e-b9f2-7f9858c56781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bedf82-3ee8-4df9-b860-646306f8d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a369b3-4e10-445d-b8c6-4f99dd110704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff283e5a-9805-4bf1-95e0-1a70d87dbcfe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1421cb-aae0-40d6-912c-016f0291b30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac3fbdc-5b42-42cd-8e62-a44457f2464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a923df8-10c5-4b3c-a0cf-e95d4cd151d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e767183-0db1-4076-b3a8-e3a056daec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6789c7a0-1669-4fd3-9465-b29acdb90687",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077eb61b-b872-481d-a823-5d03f674bdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9a9025-d6f8-43f9-8f86-64e8ff3c6ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7b0969-6c2d-4931-bd78-3553de67811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce11fe53-f817-4701-b949-74c9264bcb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e1dad0-63fd-42ed-b7d3-4cb56cd4e6ce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7f5997-0fcf-43c6-9345-c3220bf844b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a08bbfc-09ae-411b-93f5-037936ffc168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d9d0f3-212c-4900-916b-a3e35841e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26bf9e3-efb3-48ff-a2b9-6602beb9757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32227bfc-fb1e-4235-970d-703b9b77a95f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b1e707-7c2e-4f7f-a379-599a6f1b4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b043597c-2c88-427b-9637-5c6494cdbc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ea1dc-e8d1-4176-8bc4-5b5351a6385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "311699bb-e0c2-4486-9ba5-29d1db6c7d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b40985-51b3-4df4-9403-6eef5ad8b291",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a133ba-24ae-4a4a-98fc-b10a46c9cc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68b1c94-28e2-43c6-8af2-8f0c71a4c347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f414217-53f6-4773-882c-dc8c6a3d83d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "189e879d-15b0-4196-8787-7a846757f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869605a1-42a9-4f04-8885-b452b11b88ff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c652ab-afe1-4037-979f-999979f6448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bceb23-d8ff-46ba-95db-7fc516c3cd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6616f9-5589-4fc5-9cb2-554d6a69b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7dcedf-a237-43a9-a576-ad23a4a1b79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80911532-ef25-452f-aa71-9f212909ada0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0a636-0472-47d2-b684-d0d23955dffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e17eb79-915d-4575-9712-b89cffa45bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87429406-991a-4874-9dc8-c43d81a4d616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d09856-d03b-4362-a949-d2ea1b9e31e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b05de9d-ddb9-46eb-a2c3-1cc82171d418",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341b4b9-6b21-4926-ac1d-9bce2a35dfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788424b0-62bc-455f-a987-c5a7dee4140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b922f7ec-9b54-4898-9662-bdcc124ce936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32137110-40db-46d9-8aa4-12b77306d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43efc05-efed-4a7a-a091-f2b759daa385",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8fb0e2-3949-4926-ba5c-5a5960baf275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caf7ae0-2eab-4a66-80f6-2c6cb6963140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7243a7-9866-4507-a453-d82a04333478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9af18fa-8381-45e2-9b76-a63c8ea42bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539b92d-8d45-4c84-8a33-08930c4d745e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df89217-a62a-4d0d-bed8-4adfcd4d34c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78aae7e-dfef-43cd-a667-304bf2390734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d3fdc8-d2c0-4836-b315-180f3b586bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e0c944-d6cf-4b27-81e8-9b440cf8064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6822428-c6c9-420f-a685-89f69b3c982c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1accd66d-a414-45cd-bb7c-06fdb37f12c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44265a7c-cf7f-4db2-a5d4-c19e848246eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9104ac04-475f-44c7-9da4-4947be5d2be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09faba7-547c-4d0c-9826-fa8a257b9ba1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3960cfe5-078d-4f10-a31d-73e3641f5b5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2c2cc91-d186-4174-94da-184fb5c1fbfa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993d47ee-1c7b-4bf2-b2fb-eb0a5af6aabc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "341da61e-03ee-4a45-9ed1-1e37fa008c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4797247d-b00c-467c-a844-9305c5d0e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d947c8c-3fb5-4cd5-879f-fae1b02e1b3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8285c2db-2705-4374-9500-8442281b1649",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e82af31-44cf-4693-874c-d5a911263a67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57787b2f-5691-4ca5-aa6f-251aa77c6574",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bb41818-1c77-4895-993b-fdeb6a0f8e6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4925588d-67c8-4142-9af8-c6e1adc3ef12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "caaf1003-b9be-4f8c-9377-e041e497af82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e097efb-9e92-4a7e-ae99-3412399053fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fce687b-febc-4d26-aa64-c6726a6649af"
            }
          }
        ]
      },
      {
        "id": "90f65884-e920-4744-98ee-01bc8ae5700b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2c8d4f31-56b6-4299-bf6c-015c4d8f2804",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38cecefc-078d-4419-a0ab-89e3799cf071",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bccf54b1-fa5d-4245-b0fa-edad943fc65c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c6be2f-539e-42b7-80ac-b4744adf5098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b65933-4541-47c6-b32e-a34710bdf9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7925ad13-ecf7-40ba-8b86-56b2a53b7058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f587515-b322-4a53-a20d-1ddaa7fda20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0e3d52-da9d-4503-b707-18080475faaf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1387599-08cd-4df3-aa10-5acaad01c218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76864937-ad13-4da2-95d6-c8aacc980a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0093d44e-ab65-4252-a595-796fd8df2cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63492ed2-e6ad-47bb-80c2-da11afc3cab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b58c9c-601a-42b6-ac38-a1d06f9acd31",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a15f68c-2254-4a12-8182-74f070923edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b067c85-460d-4616-9e16-c0e0c552b841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ada13e-f385-4219-88ec-7c47fff437e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "166354dd-4f27-4f55-ab2a-9cb444c0aabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb46d41-d823-4335-bd1a-38c6521fbe2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aae1ef-8c96-47e2-b946-fd659730bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b02f34-82ac-4740-ac14-93714f328d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a7ad7-56d2-48ec-9962-d4bfc63aaff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6445cfeb-e67e-48a0-acf2-3ee26e414d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef146c7-ee1d-4719-a3d8-3c248af08a2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f60b73-9ec7-42ca-a4e1-f9a364a39b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfe29af-14db-4356-9f61-aef38863507f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd10db4-d284-47f9-8ed7-54eefda49ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bd8fa5-165b-4f15-b15e-00ef8a2f193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ab6c04-32c7-4447-ba0d-853353796f9a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40490762-1957-462e-9de2-067d09d1f682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a996539-28cc-4b4d-90a1-5283503e9a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94588e9b-ab2c-4a8c-9676-960a02ec0da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0435c5-21ce-4688-8239-c296a8b39e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae1c3db-4c60-4c3e-9688-13e6c1ba55ac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91facb9-d714-4fcd-839c-c2d0e3ce53d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4428dd-f01f-4472-acd8-dd3d70c49f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aed31f4-1f3e-45a1-8b15-c1ce5ce3a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "898f76e9-ac73-4b96-b4cb-be99e021a209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c3c7f7-d766-41a7-b8c5-322cb8213457",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559057bc-0da9-44e6-93ef-b39cc0d8c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46775667-8e8e-481e-b772-c853fc0232fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25dbc32-fcb1-41c8-b1c3-ebee18a7d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99105e4-bafb-4e2d-88f9-88d57dad88d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c9e235-a60f-4f06-ba24-2584b56b840f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d83fa4-5923-4cd7-b3db-772a43af078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adb5c19-0602-4a2c-aed4-9c888ceeddac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e914c7c-92ea-4b82-acbd-9c932881c892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21c8a474-d966-4471-a2b9-0b727304b4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7c10dc-569b-4dcb-bc5b-b8a1e184fa78",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3ee8d8-bfb3-4462-b72d-78d3884bfad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1597752-a240-4daf-a9be-f1ec0be8d012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350eb71d-d45c-4d61-a2c0-78ed15402c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf5075e-ad1f-49c7-8e8d-e430b4316aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ec8e5-5c9b-45b2-ba8d-c637ab85a6ec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bbfb71-5cd5-47aa-b2fc-8e71ff553f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a27599-046c-46e3-a566-bce48c7ca264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a05404-47ca-4353-ae76-d5cc21c6969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1f10b9-cd4e-44c9-aa45-4605ab7e20e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163e599e-fec1-4c0e-9a1f-ff5e5a56c314",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcf95e6-4305-4562-8ca0-6ea98742e783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03ba795-9295-45b5-b6fa-4641117655f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0e3ead-412f-4694-a0ee-2a79df8d5b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9f9bd7-2970-4c62-877e-4f4af95469aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239962bf-9ed2-48db-a28d-d8c8dd8270e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e399cdb3-20c0-4431-a204-9cd840ca045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62bfee2-83d2-4948-8fd3-989c303e0127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07955454-7421-469f-bc0c-43737596a74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e5c348-8016-40e7-8206-861ce6786ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee0078e-9b12-464e-9661-a911db4337c2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4a1582-e025-4790-911f-b6e05afc21e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3202cf3-2f59-45ab-81f6-4e61de0c7dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11c0643-02b7-4081-a422-9ab3adaed715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecb0854-8eef-48d9-926e-e39c47eb41a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709869b5-ed00-4f8e-a047-5a3ecb1c6ef1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba0ee39-065c-44fd-bb3c-4a5c346d3608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b46f92-43af-412e-b9b2-1301d305398a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42447f1-fa82-4b54-bbc1-326dfb94ef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d54a4f-96b1-4a56-955b-7c076bf7c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af1ba9-a67e-4640-aa15-2507fb6c2f67",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4aa94b-8b3a-4717-bbb1-15c5e44fb1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71676c0c-f8c7-473d-bdf3-de7b4b157a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c65dff6-2f1c-4019-b9d1-5e5db7256efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d3b55f-aa74-467e-ac21-8d30a23f9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c745d94c-b84f-4960-b3f9-7558eb8ee542",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba4591f-534e-44f0-b728-33e6438975d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd2fb75-13fc-4793-892f-84704bd0d61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3fff9a-b27f-453f-91a4-0ecfbdcc2dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e2a89f-5527-4950-9c58-d0dcb1ef9e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8686f491-02e9-4a0b-ba09-055fb25713d2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aade0838-6727-4b29-82b6-d18280dc81be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bba289-f53e-4c23-ab8b-74fa6b5cc686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b623d3-1e2b-4eae-ace8-391baf561205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "090805d6-32d0-4dc4-9910-b0679eb79bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b025746-fd02-46ca-a90a-8e91ef0257f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d604dd-5618-413c-b3dc-f610192dc5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcf48cb-01b6-466a-9ee2-d804cd68355e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a49a56-76b6-4655-8c2d-eae9611363bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef05771d-17ec-4396-b02d-dedb7a847d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4583aaeb-7dbb-4aa7-93a9-129ba362a988",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325e26b0-f168-46f2-b8b8-cdd3e895762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af2f3a-302d-47ab-9130-d02bc841c265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0506ae24-17c9-4699-8183-b67d4661607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b9ac49-c675-4fca-99c5-42cd05fb6468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab37676-a8e2-4908-8937-2e271c216c73",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8cace0-1241-4719-a109-ba400fe1f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0300fcba-1179-43eb-b4d9-c34f6f32e1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae05a82-0ccd-4180-9270-424b13b1d130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a741fc-1e12-4555-b5af-767d6e372986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aec057-ed39-4af3-92af-6ac2c409ab70",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21e1d12-41c0-4e95-a273-cda433d31b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b066ca8-cf06-4ec9-92cb-90a3f0dbe6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9170b0-a737-460d-8cb0-964727aa5bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "804d2433-17bb-4b5b-bd66-ce0fee684205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a607cd1f-9575-4282-b32c-11be7fbbcd0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cd1a09-5457-41a9-8bb3-b9d7bbaaf51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39c2e52-4563-4689-91c7-8637f942ea1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac940c-ba06-477f-a745-6ce0cecb50c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1311e934-d35d-4355-8f70-100c50ecdc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a959bb6-14ce-4bb6-bc1e-5f65023986a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1560775d-cb7b-4fb9-963a-3fcdd11681b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c35ec4-dc6b-45e0-9abe-b8a5cb6b26c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f114574e-5c06-4d84-a7af-458e354103d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8b6499-5dd5-43bd-ada9-b4230f872c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0722ec5-f93e-4717-a484-a7d99a57bfeb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55fed80-d426-4c5a-b046-ed203bc7047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb147ce-79c1-4268-87d3-fa81d72f3a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce07da5-50fc-4100-bae4-4ed407c6360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d479eab-2d02-4356-8c41-465b7169cf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752aa841-5a18-40bd-9173-12533e04cb1d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a846c28b-ae9d-4c48-9e37-61b57cedd8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03566f71-f950-401c-960a-8f8d5461ba4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b27452a-3270-402d-a3a5-0c2e4badb9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0221ba0-4fe5-40b4-bcec-7baabe68534a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac8eb4d-a0d7-42f9-b234-35fa94ab115f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82783af4-7075-4f7e-8d46-2f68480cc1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6f58c9-11fb-4e93-a624-4b31019f5317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e266c6-2b2a-43a4-95de-e5a97dfb4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605bd37f-2dc2-4643-8ffa-4b555b93c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4b23b3-3960-417d-8939-2f8c7f030edc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e44c609-9635-4bb0-bbb6-f5b17aea9568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4981ab5-d05e-4129-ab6b-136ce5fd29ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56af1487-c0ae-41ff-963b-cdb924ef2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc304af-319d-4fb6-9a28-866cf96046a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d999344f-79f7-47f0-b22f-96fa45a47ebb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14015446-0f23-4773-bb9d-8533a351f729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8537a4b2-8a2b-481b-940c-56f8b8348cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea4390-435f-467e-a83a-78b3ddb8cc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a268f1f9-0eff-4515-8dd7-18d1ef258ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30136d53-a530-4928-ba7e-338168cb83e4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a977f5-11a6-4c6f-83fc-2f01124c5465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b670ab7-4c64-4683-81c1-41bd1b24c587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225aebc9-9778-41e3-ad49-eb6fe469f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50905c9-3703-4c60-a037-89ca208174a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724b2b51-9dea-456b-9072-b6aa401f0a07",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624eff65-e155-4e8e-8818-5d6c9d1e43f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd5974b-1d66-4c4a-b848-03f1c1f1c01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5501d9-dd7d-4a83-bc12-902a370bb69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "186cc378-b37c-40cc-91fa-6239bcaf74e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36683a21-af9b-44af-9477-f2264fea9169",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33c21da-3d93-414e-b3cc-7c766e86cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5046cf6-6c82-40f5-aeb8-607f7279855b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94f5e0-dff4-434a-8007-d70bc3bb6194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b88b47-d59f-48db-96d6-94f0621197e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38221170-1336-4c48-9d90-812d626ab239",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4a2e98-5b2d-464e-9cd1-6b086954d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c43d03-60ed-4b35-b284-bbfa224e7be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e38035-514e-44a5-b043-25d2aba53b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30887421-7d32-4c54-a423-506303b53638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317ec036-e3e0-4566-81f4-b9e09aebdca6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151519ee-6013-4550-ba9a-4d97247dcccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b478d2-04a9-41b4-85f3-9322224f120e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa84a8e-096b-4870-aa23-bf77a67e8ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34ffe03d-9586-474c-a279-c038e9b014f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0bd89b-8d96-47b7-bfd4-9cece73d10f4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5da3a9-3fc4-4516-a351-691d0c9b4bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31acb24-2af2-4e96-b273-dfcfca09b83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f34499d-630d-4e52-98d0-4420be6219c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecdc25f-1719-474b-8af2-73d5cedc9611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f79d3d-df28-4e1b-b5c0-d623ff0f4439",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b583ae4-27a4-4530-bce4-4cfab41748c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3e8824-d2c3-4cfa-a875-7d18da0b5232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2338ab71-6f2b-4411-9fa9-d624de26c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfaa6e8-b036-4a4b-91f0-7427c93ed806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed86199-408e-44ba-81c9-9770e8f37295",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad02cc-01fb-47bb-acb2-1c67203de7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d52cebf-cec1-4c97-aecf-1e3b82d8cfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd5d9e-b843-4957-b903-c46a821708ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d74eb4-df30-4afc-96b9-7db6aa7240b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2cce6ee8-5b02-44bb-9336-cb431f632364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbb106b3-7370-4dd8-83cb-9da55088692e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ef4e78-8b34-4046-94e0-29733cc6817e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3991bc5f-3a80-4ce0-9c24-7066797e4883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b19a2-653b-4383-8c47-f66e19533d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "119b7941-9217-4b13-ac21-17425548965a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca5a4d2e-0707-4e52-8c8c-e3b5180aef99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fe7e190-2e4f-487b-9989-cf25f163af8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c92527-3158-42b8-aee7-05ebb2bfcaf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c90f18be-e7cc-4b67-ae71-ab3bed87417c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "320094f9-c8a4-47d6-b75b-5f9e49f09693",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4af2dbc0-0e4f-4150-99be-3435f97dd4b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "066bb6d2-497a-4c7c-92bd-f5deb17233bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a76cd51-ab82-4ec5-895b-fea70e6251cb"
            }
          }
        ]
      },
      {
        "id": "fac452ec-8d2f-4a94-9017-ad2825c06177",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "da8974b9-19e6-4450-a85c-06c2de25867b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8670d4b5-a762-43fd-8db9-31d3182c255d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc927fc2-0673-44fa-8547-6e14809fab01",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ed40e-e4bf-4ee1-94df-e671543c8f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27e0fe1-59cd-4912-9a49-7ab185033c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3113a16a-c939-40f5-8132-8d43a15e69f9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75828d1-4ac5-485f-9f3e-7e9c6a006753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506111e6-32a4-4a7f-be9d-cffe611ad48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4554fe84-f546-4a3b-bcff-489eda9aeca7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4873cc8d-a8ea-4932-90cd-98afa2c64079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cbb3de-8a8f-4c5f-944d-3d01ad73a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a078df1-db6f-432b-a498-6bdab3185820",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74d68cd-34ed-4b88-98cc-81f3c5a17537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5033d9-083f-4de9-a38a-a8562570d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d0a92-c4fb-47cf-b92f-5ad863e4096b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72a1d98-6d61-4000-aaee-dd9c6f329e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc140620-fec3-4f8d-b2d7-dd0dd6bc6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9990defa-4029-4b52-8dcc-098570252b98",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c14ac3-0ab3-46ef-9bc7-4652a5f7cdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f09795f-ee35-4d54-93d4-2928d506f501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf94cf2-b316-4aea-8840-8b0839271cf0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e35910-32af-4935-9464-f0d66427caaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dadc37-11f7-4407-b183-10a4fa319ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35af5931-c27a-4eb3-80c4-90a2ca228457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286e0238-fb14-4986-8a5d-decf04476f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5de242-9ef9-4d40-9950-25719e0e732d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f6a6ed-1917-46fa-9479-fcfc3ff4c706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e1d6cc-0935-442a-b93e-d325a98713d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f56f75-1620-49c5-9302-19d861b74512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845debcf-232c-4d94-a207-37c0fb7347ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36856455-18b3-4ab0-aad5-d483d5a84518",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebfd149-522b-4552-8fa9-fa562c15d145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eeee61f-e36c-41f3-8f82-d5f056e32914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c66b73-2ad4-4ed8-9ccc-3cf6c50385b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3d6105-53dc-4a27-b0bd-1f08d78f0fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af9a1ff-e147-4076-91bb-b15b1212f531",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a4b5e-b4c3-42b5-afb4-bd6c7e29a51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c727732f-64f5-4e32-b991-b49755741ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b184ccb4-63d6-4b98-94e9-fd0c7c5cb3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3f9872-5757-406c-ab06-006a3613a15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7d0ea0-2883-47e9-a8c8-8207ff42f023",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85534e8e-b853-4707-9f1c-a51b3e91eed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0be941b-3d6d-4362-a57a-3afd57aa10d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38daf6d9-b126-417c-be87-6ccd6a3f2a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f6353a-9896-47d7-90c6-8a7bf378338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad6dc46-9cf4-4fc5-b628-f194d030b087",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8c5bf-e01f-49a9-bd96-a7fcaff8585c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5cea89-62b2-4a31-b7ba-8847cc106e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb07b081-afcd-4665-8a54-734a7e0134e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ca9b2a-a48e-4480-8981-fde0825a914d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed4ef88-3c9b-402e-b710-edfe8b27c83c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aa7a85-ad89-4126-bb49-fc532f08bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46748a3-9b69-42a7-9b96-6ed85471a888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc26dcd-e722-4d0d-9799-b60f4bbbd5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4954c236-2a36-48a0-ad81-73f9f3a7cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777232c4-947e-459a-8267-298bcf95c94f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d517f40d-6fa1-4c96-bebd-11f21ea91f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9475db1-c417-4f71-89c8-a0c1da8b73d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f0e291-fa84-49a3-90f7-c8c7cccdb9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b50bff-e0c4-4579-a481-e3d6a2b4a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42c91b9-98f0-4da5-abf9-7b18f6b897bd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925134c2-7914-42c4-a7f1-249af5780bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd0340e-8215-4555-8b3c-2d311ddd1c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21ef3b3-fc69-4eca-b97a-957c783c59cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d3784a-f290-4f72-801a-032851b255cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609ae985-df61-4032-92bb-4c5576212b41",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa9162f-19b4-4711-9f83-ca920c7efdc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40cacfdd-4a3e-4aae-8783-6083366736dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75394502-de03-481e-a487-1a43a772d07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028474fb-7f64-4594-9170-457e9809ee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421e69e6-9c36-4a17-b699-1a50dc2a29a6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c711cc97-9080-4c25-9f8e-e69707135912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea25d71a-79f3-4df7-87c2-fa48b232028a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb862c-93a9-49d4-bca6-447075dd1818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b2b2b1-468a-4e75-8c4a-2e68566421ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c92fdbd-1397-4ebd-9f1f-671070c178e2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a6e705-5a79-4a19-bf42-0e9583367cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaa1ea4-2ed0-4768-a67c-455cacfaf673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1923bd79-c8fd-4d9f-a5e2-220a992b67cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140f3d63-6192-4b3d-9323-5d80abbdc55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfc468-7b0f-4bf1-97db-6dc3274242ae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a753a2b-797b-4c0e-9767-5f703ef97b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e05eb8-9aea-4423-aee2-818e397620ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89930fd4-2d45-4254-bcd0-2cd6f8c8d626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc7374b-7f67-43c2-99fc-93e4e3b79f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2976a0c-9472-4f8a-a48c-f07f39c61b1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce0af2c-8677-4a24-a38f-077fdeb58ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cc995c-8b76-4475-bb6f-9a76feed41d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846cc30f-b56d-4536-a8c1-0a6241bbce45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c313554e-210d-4b19-bccb-6cc28815c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070570f4-6ff9-4724-ac7b-03f190d341c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498cb89e-7896-4b18-8f15-30ca45da89ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751024e1-72c4-4671-b848-c1314981f024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0682818-ff12-4a59-8b20-1aa81f7ab8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52daa30f-8c56-4e92-b2ca-99ae6295a67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769382d-92c5-4d9e-82a3-8e424aa874f8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef78a28-5225-4afd-8924-d2785b2db784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a754ce21-d321-4766-99cd-f0cba71ac349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4b1465-50e0-4269-af23-a50d605878ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458f80c7-945e-43ac-aa3a-c3d51190ee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006bad5b-2f53-45ab-a165-f94bc9f513aa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb44716b-dd2b-434d-9db7-836bdad47154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718f2ee3-d305-4abe-927a-0f7be5a36237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b6a477-505e-488b-a064-4e22b2c1d575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e09df-11a9-455b-b05d-930bb0bd0618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae77a03-750f-4915-ac56-e9b27a2cbec4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0411110-15df-4462-9be6-5851e63b3a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29416aaf-c97d-4380-b3f9-89cb87331cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd82eac8-847c-4566-9dbf-ed358d0c3a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c5be92-83a3-4b0b-aaeb-fbd11adec5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494cada7-a8e1-4aee-84ad-2c3501bfab66",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a23580-19b1-405e-be5d-9bbb19b826bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123a2cbe-0f05-42e6-8a02-7ea8b1221761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e2eeae-6329-4333-b303-3241a549480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df34cd8-3fd6-497f-9139-596e37bde8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8472bff0-051e-4905-a2b7-57a94457b92b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c52ef-400d-40d3-aa22-f6b1073648e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0eefc96-004e-4db3-87ba-51296857c43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa52d75-49f5-44bd-a2f3-6f0de32cee37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131b7db1-e1d8-4788-93ef-d8a3a95220db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4660585e-29f5-4180-b210-425b9186ef34",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0378c0-fb47-4808-be94-0528b94daabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6fb5c1-8663-4fb5-9c1f-622e0fb5a870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a970fc-1a97-42e7-b66e-f1d5246918cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a909bc49-0e32-4bd1-9d53-90f03b69d61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f615d231-b8d4-4c16-b2fa-f04cf00161ca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff23db-f0f9-435e-ad3d-dd9b140d4943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20ef8b6-4a2c-4f56-b982-4d3f208bb96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf00d8f-b546-415d-a159-58f0196c95fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630940d3-9cce-43b2-93f5-42be691e7f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bfbf70-1400-4438-98b8-6e3bb73d6057",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d029309-baac-4ba3-abf4-8a309deb07ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8754824f-84b3-4258-86db-b16b731e6935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba9a59e-ae57-47cf-906a-61452473f578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a00f8c-895d-43ba-8ca8-79fa3225b2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a7c71c-1609-43c5-a191-cc954b9c2eb4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2148e638-2114-48f0-a9ed-d640717af600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6dd6c4a-e256-4b20-a1c4-d848e09baac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4475744e-5478-4cb7-b4d3-233094dcf1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b431234f-f40c-4931-b1f4-b8dc8fb75bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763005f8-604d-4177-97d2-3d8fdaf522fc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654a7a98-f086-47ac-b0bf-b2156ad265c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afff4845-8e7f-4b52-b52f-6b24ebd53e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b49fb3-7735-484d-8c11-9b81f7ae81b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d05c8-8b2b-4e63-b69a-23696cd73b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71298882-a04c-478f-8572-e4e9024eb15a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa08e96-44e5-49d6-a92b-e9bc48f1a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d73c6f9-c818-4c26-8ea6-936aad44e666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9125e354-fa42-49fc-a3cc-020fe797044a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3254c7ed-874c-43b1-85dc-132bc812a6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a6a7a8-8cd8-4787-bcef-11e99f751cca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6ba49-c9b8-49c6-8d7a-afe726778427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377fe9eb-cc7f-4a99-952f-cdd8bcf3f89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c544909-0382-4f9a-98b5-f224f514ba4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f547b369-eda7-45c3-b905-aa7dc16680d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6995cf-ba21-4bc0-b6c9-024889254c81",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a7005b-19d6-41ab-83a1-c77e69ee3b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca931972-977b-4e60-979a-a1da14a3ed38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a08fadf-94c5-45ab-a641-fc123811f4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16ef1a6-811c-45ed-9e70-0b8e067655c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd214f29-b4c2-4562-a79f-7f6bd435812f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b11070-a3c1-4b75-854b-36cd3917513f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ada4d9-f09c-444b-81d7-81d6b45b11ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff338da-44c5-434e-96c8-1195095d5cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c213cf1f-a535-499b-9f20-5a2215e86cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67da1bf1-0056-4916-893d-d938d315e655",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a85b4d9-4c98-458c-a4f9-d183e3f46fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadcfe3e-62bd-4ecc-8957-4efe0105351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542ef769-e37d-4a48-95ef-c6672f166840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32c573c-f8d2-4689-93bf-ab5e0173aa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0988cfb-46af-438b-84a8-887b78484012",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f396885-dd1c-4c9d-b02b-982c98ff7f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7936e5da-2190-4099-b1da-9405df26aa1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d56347-338a-4af3-8c11-679cd03994f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1860f56c-1b2c-4c5c-8256-cec429e6179e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43015897-656d-4b5d-b43a-7eced3cdea5c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc2394e-b932-467b-8218-2e69737c9451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e299d35-382d-484d-be21-9cbd552ca63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9bb0b7-fad9-4557-9027-0ea477b73974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf398a60-2254-4964-9487-619614830f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3600ab83-29f6-46b6-8cef-cd7a004c878c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406aa464-06d7-4845-970a-ec07b81355a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59654eca-8c69-439f-96d9-d595ef5fb991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750f20b-f829-4152-9744-f0f296fd3977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821b6064-2a3a-4dfa-baed-adb5e385e2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a2de59-0f78-41dc-9cd7-e287de5a45ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d402087-bd45-4aa1-8564-7f5f180fa7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0018d309-dd6f-4bb6-ae80-3295d752d474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7241930-268d-42bc-b1f9-3da93cd86627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e66e30-995e-4c2d-a251-7d3f45e2717f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa534ead-9a8d-45bf-95c0-1f2916a7dc3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e589a-b8d2-47a4-beac-caa7fb0afb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f7d552-10ee-4733-b664-322e6bfe9c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434a3e99-5fb4-4cc6-b9fd-921223fa43c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd08254f-bbf9-4a5a-a546-1f45638c7874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9926bb5b-11b8-44db-94a3-83e8e807ee52",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6e35e7-61cf-463a-9293-c0a0eb152efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8aa53e-40fa-4ea7-a030-f247787beb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4a4e44-5add-4843-bb89-f7925640702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f6265f-6cb6-4f3f-9448-896c4440fd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d75516-cb04-4541-abe9-700fe33ce730",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8634af4b-5c59-452c-95c0-43aa4c93d5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83519fe-c1ea-420a-b44c-f9f65fa2007f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152ba5f4-675e-46aa-b796-a3419e189375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3f6d4f-2568-44fc-834e-d47013888c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b956de-8051-43c8-8965-a4f4faa54fae",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38bbf42-32b5-4096-9919-c03d9866e9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb9cf7c-768e-489e-a0eb-6b2b7174ab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e2c357-0895-4387-ad6f-0a5b8b62fc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1c2927-ce76-418f-8f5f-95b2affabb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156ffe65-fec1-4c09-b1bd-4a8e235cf5df",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01aefcb-f3aa-420a-924c-4daf24866bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b33f6a9-ae63-4649-8365-93fdc48ac694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bae5e2-5e1e-4645-9699-40cec956f6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0b66a4-61b7-48a8-840f-2b52881ab288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8133e20b-0edd-4d48-baf8-68803bc80078",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b015be-6a2b-4aee-a28a-2cda6e8e95a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f5d7ba-d641-4350-be89-29dc014f6fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e87ae0-5931-4151-8e0a-531e2bf09ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4660a8b4-cd35-416b-bc87-ab5f2e6429eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03641bbe-6f2f-452e-84d2-2675bb2c8e79",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd200f75-ccda-42c2-b9c5-7153eca2d5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526dcb2a-c98f-4877-99e2-5db16e479646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150082df-6a39-412b-b7e8-8182cec0a248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f777c852-2a34-444e-a859-e4dec3ac2b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d09f92-cdfa-4fc3-b5e3-eda9f3fd4c84",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bd4c82-1b4e-41de-a5b3-615e34e0eb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe234011-f684-4c4d-aaa2-a1a6fb888ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a74650-32c3-4465-a869-c34968be29e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef72d88f-6207-4295-a787-6c305e58324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa9a9b0-d30d-4fe5-965f-efbe4fa7e663",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b524f7f9-6b01-4412-a9bd-3302d3e1df8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf4b902-425d-4d6a-9502-89bdf45f2d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f540278-580a-44d1-910e-d81371a26365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a991af-3ecc-4dd4-a0bd-4798fd42f12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edba574-dc60-4d5c-a257-796548c57761",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf333a70-5136-45fc-ae9f-d624944a5207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a3c877-5ddd-4fde-a85e-05179469b3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b22988-46c5-4092-8c39-a381cfe0cd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0ad175-faca-46c3-9313-ec7cbf7f03cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b32ca3-caae-46c1-80e4-399cf8d3a47f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a14979-5fe1-45b4-8c93-501f077f9527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa016db-2779-430f-95ea-bb8a34578073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0d9934-0fc1-4572-885f-842ee58ab05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccac953-c3fc-478f-822d-bf7df2d11260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf018ba7-2e86-43dc-8b9c-db88bced5c2a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ffc712-22a2-4963-bcb6-0c7154d63c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81acfa87-e376-4b01-a9f6-ea4144eb9c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0227f-b7e5-4708-90c9-9f808ae8602b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e57ae16-9830-4ed3-a922-1d097469b8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad2609-53a3-4a81-8a5f-8accac064ec0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8800c33d-8713-4b14-94fe-6803f16c5f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e7fc13-c07a-4781-9df5-38b7cd36217d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c4689d-96d5-496d-806b-b6ee7bb0d95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e866b18f-6135-4e20-b6de-93165ec92f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965674da-7177-4348-86f7-3f399a3d11fe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72caab9-3efc-4d00-a591-71e336f31d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45ce7f4-7f00-42dd-939f-c08d3f95de0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0ca449-913d-453a-9466-dab497a45946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb078a9-1b5d-43a7-8cb1-23991baad1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78084929-2bbe-40a5-a7e7-1e979fde754a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f22a4c-2bb7-4492-b307-7d0f438c7b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f97e388-faf4-49fc-bde3-c6439aff4dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6687ca-096b-41a7-956a-a5ddd2d90589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad063f1-1221-4837-9c43-37ec990ce397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84a1c24-f305-4999-ba39-cb354afd8672",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f05266-24d2-42d1-9a65-c0b3ffcedd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a973d342-3e47-46a1-b603-1c33a030b159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab60fd-e621-436e-a7a7-12c75311a2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45358e6f-a334-4835-9ca1-30052ad39b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fb0bda-eba3-4fca-b734-3f71471138a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c499df6b-b791-4ba0-a9d2-212ee18491b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23452dde-9d77-455d-8b55-ab51a30fda77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc997dbd-500b-4c79-aba5-dd121529f664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519d0b8d-a890-41cf-8ecb-d194f9c18359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96116de-7e06-4f22-b345-08aeeee7bab7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d708c967-14cb-42b1-b08c-ff6a3aae0052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2afd633-2dc4-47bc-a167-bddc9c79e5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b191b0d9-2004-4450-90fd-dfd4c367fb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb5407f-6cce-492d-9516-b33a085460af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b98768b-3ad3-40a7-a2cd-3b04ae1d8b63",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759a47e1-12da-4b9c-a820-6f713bd7511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e45f45-1ba5-4e19-9ff0-935d21b1b0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503a99f-38cb-4951-b914-3d499037bde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e97501-d2d2-4a09-bf72-cb36f3dc54b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebdd06a-b09a-4225-a4c6-56d57403250b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0a3f1b-42be-44b1-9fa9-fb1e6c1b3baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6061c2-0dd0-4f69-a456-4b78309a8916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47219d2a-9fcb-47b0-b7d6-988e5b564da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cc1fa9-439a-4788-8803-77ba14e51ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1236118-4279-44e2-b951-641b833a8161",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73e9c21-67ed-417a-9a08-c31c1d3d4840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1347967-4bc3-4762-ac0e-6bf3f88944ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdad6f0-ee4a-47f3-be75-2dd2dda51e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28f2baf-ffc4-488b-944a-ae43e050eeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383caee0-3116-49de-9c3e-6889ae801be1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe326f6-d782-4e43-9bca-ff1ff6239c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af36b32-f9bd-4012-9cc6-65ca08ef494f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d937301-00f4-4933-a1db-338f8f9cf736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd9063-3fe3-414f-a215-ce42b160fe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757f4c9b-5308-48a2-8f98-2b67367da2c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7f8d1e-d86f-4f20-88c3-c4c93a92019f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a4d11f-e99a-4465-bc74-ac25986518d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1345196-37a2-4c7d-a60b-a94c01df252c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5eb158-87da-492f-8939-dc305dd3efb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c304369-fd50-425b-8e48-d8fdfe7868f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f02c67-884a-4ed3-9d04-83cdfa9f7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312d2adc-b86b-40d7-a2a0-5b3ac7c5435c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8a7044-0b6a-4fd7-b227-7ad65e6c95b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfc87ef-b65b-4ea5-9c57-6fa573ce8b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba9b0b2-6ad9-4ae3-be62-7f1fd1a2d7d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dacb4e-2766-466f-8882-d103b8a73f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6682fadc-8506-4ec4-999b-f850a4eaedec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d87809c-3784-4158-a63e-557392118af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661e997d-01e2-427e-a636-3ff308d8b7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cbab1f-9d45-401c-9e08-964f419c6c4e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b391fd-0c85-4fca-ac4f-00938343c0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0972ce9f-fcb5-406a-bf92-a280d2544152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb84873-379f-4ea1-b2d9-02e651e4682e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e903ab-7e81-4860-8bef-19f78408f505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572008c-56de-4231-b001-174b6e1ecd39",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe76d69-ba11-45ad-81d3-f6e1ded6161b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6bf7f8f-6d2d-4fae-8b56-a878100ad374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb671cf6-e9b8-4e41-9baa-53ce044a08a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f78520-07f4-4500-918f-dacbae6e8919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d5c721-d0c6-4ee8-8518-5225d19c9c3c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84d3cc7-ea4e-424f-bdd7-3d71da1bfbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af6de93-3436-4b17-aab5-7ae1dba4be54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3defb35-cbff-48f4-90e8-99b97e9c7eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4769cd7c-766d-4d2e-a0c5-108c1f7562be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dd170e-137c-4c49-9d92-e6dfb75ce867",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b32bc47-1a89-48c2-a751-b0aaf6631555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f025ef86-609b-4c3d-824c-319d5ce5aa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2d0333-6a94-4b9b-9e85-ee9f886c8d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3d7b44-7fb8-4d33-bccc-9d3fb89a3921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d438147c-76ed-4905-8ac9-95fad90e4f58",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb66cb3c-e5e1-465d-9074-a8b5b427cd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ceb7ea-03f7-4fa7-8480-69c0aad7ea93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847ac1ca-5700-4100-b1e9-ef7503cb6d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f88389-d975-4664-8c8c-6bebf9eae05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146169f1-f216-4853-9d74-7417fa94a236",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2e7f0f-0c51-4251-a4b8-2c7f831b60b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd8060b-b95b-4149-894a-2f6214dd2601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2901431d-8520-47e6-9d65-88d96edefdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5318b59e-367a-497a-a3a8-ea522cb5ccb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cb5b32-f254-4be5-916e-c086441dd51e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ccb484-7ba8-41ce-91d7-efa34877cee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c46ebb5-1231-44c4-b46d-12d5312b2919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af562d84-a174-43af-a89c-dd24762f59a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97cc120-77f2-4157-abc2-7b41ea53162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f992012-c747-4a42-894f-ddad19f61e5c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d68d74-cf11-4bf3-b8e6-704ef7ed6bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9640a4ab-4ef7-4631-a0d5-d04cb28d4ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83db040-6cf5-4190-bafc-a66dad63741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6730723e-04e5-49ed-a7a9-1c22593d262d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8522249a-28e3-4fd4-a151-fbb7d110ff9e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5814bb78-c55c-45e1-a3ce-56e22ff976b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe520e2-ee50-4268-8a57-1b0ad219b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ab851f-a449-4d31-9ad9-76e7a5d684d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e76ec31-0cf5-4a6a-bfae-a5705ed44c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b93d28-b784-48ad-90a5-f81d0abe163b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5d35e0-ea44-4ae9-932c-2054bca968b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf33731e-e64b-4092-aebf-52bfb1c8a207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7016778-3342-4291-b265-850528ee6117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb976c13-f7c9-4f47-8f70-a77285138c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6c4d0a-eb4a-4287-bf80-1074cefc3728",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acbead9-305e-406e-b5e0-db98359a5012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96288d3-e9c2-4ae3-a6ed-6d9c78e8b637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7f62da-31d1-49ec-b9f5-4cf88bbd14a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28aa320c-bb46-4449-ad9d-18f631fa1e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473e522a-362c-4fdf-8440-160ce1179091",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4269643-b0d9-42c2-a363-b5e6aae8f466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e7eac4-b1d9-4d9c-a259-39bb23cf9598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d921bc2-6c25-4213-958b-ef79bed2ae5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bea8fbd-bf97-48ec-91a3-56ae438804f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b1b9e6-d9bd-475d-86e8-da656cdb22e5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4e6db0-0a77-4b40-9274-ce4b52763521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e968a784-8f19-4f73-9890-b626d0c758ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec9bfc-7de0-4614-b9f1-c6580f610256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef838053-0b9f-4017-aa7c-5114bc6c0990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc81a02-09f2-4e18-aeda-7c7ebab7649e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10d5f93-27a0-47db-a678-822d9bc74d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0beb9bfc-7c86-4c1b-ac1b-f0c6505847e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9032f9-432d-48cc-8362-8a273fa4cc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5fa3f0-3e3b-42cb-b7f3-7929c1a4a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f1ff0-6bd4-465f-b19c-40e9ba8aa585",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9b898a-4dfe-4332-b1c3-6f95ef756d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951db08a-057d-4d4b-a1c5-f098f0b1f408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ab0280-bdc9-4a03-931c-14cfd91b4b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390fe6ad-362f-42fb-aba5-66e29119a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a5ff5b-460b-4f22-9fa2-90879074e428",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccaedca-e3e9-4294-9960-cc72a3582b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d873424f-6918-402b-9cb1-f4953d7fc958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e861d4-31ae-4538-b7e3-9438c9041b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4172b9-30b3-4c29-993f-0d5b06b3cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637caa00-325d-43c3-842d-313bba7c117f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81495f69-5178-4496-ad11-858c8dc08aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb95246-1823-4e3a-9eb6-b35f8f85d202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59fa885-b319-47ad-9476-d8f705c18380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b83c4e9-86c3-4c2a-9923-0b272d9a9a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c4e186-a7f1-43ff-8711-658509132e8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac465092-4197-4b6a-81a6-dda6f10a0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207cfd7e-dfef-4f74-bcea-ed2d4a6ab3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0891d6a8-9dd2-412c-8062-8a297ea31d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b757e-51fb-4688-96c8-cb05feaf7c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da7cbdb-cf98-4336-ab65-fb4ba4e5ba9c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc81f8-5e0e-45e7-8460-5f8c36a0856f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851895aa-0bdf-41b6-bca0-d47689a1b4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e5db38-1d56-45eb-9cbe-3d06c931f73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466d8480-4777-4042-b669-4ff86fc259cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a6295d-7ea2-4bea-b431-35c51a296b4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f4d9d8-ba87-4aab-8f70-3ef20230e95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2e708b-46c8-4648-abb6-d80c0e45b01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a21996-1773-4764-a360-8494d6f071ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ab6f63-4f5e-4047-825a-79aeb1972c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623d8afd-d349-42ce-b2e7-9bba9667104b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909e78c-57d6-4448-9ff1-d83ef91b6e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42829c7e-b265-4f39-b0cb-4584cc5316b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f05702d-0a1e-492e-aae7-3065dd151943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951f5d5e-31ef-4faf-9b20-a0f1c09a729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c599c7-58eb-4f2a-9182-9e2f79651867",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ed66f9-43e5-4b46-aabf-927243644d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bd6f28-6233-4c5f-a27f-9a972299a951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d4b99b-d3dd-42cf-8f37-f2cadb5bd262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a72919d-43d2-4bd5-b78d-a62d0c936af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e2be44-9e6b-4bc8-a6d0-8c9af1202050",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382e7df4-67da-4cc0-b9ed-abe080ab2924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb8fea3-5dbc-47d5-9d7e-dda6c1210d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71755978-8635-4abc-b0cb-48c5ac7718ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a06c4c9-91b9-4c84-b618-4ae9650b2f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637a9cb6-74d0-48b0-86c1-5dd818f384e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19911a06-fb16-4739-ad93-d82aea257d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee5354b5-748e-4930-a3ef-35adec016022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031987cf-8f81-49d3-a6c5-e4d7f7ac9031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351c369a-ac77-4250-83c8-fc7f1d60dc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c04211-d4f4-48b4-b010-5632cd1190d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfba8596-e26a-4a26-8f5e-e3c56a02b719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b273bf08-88c2-4afd-a223-11604765cca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5af5b25-9388-4fbf-9d2f-2eb24dc06bb6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9b457e-fa66-4a25-b10a-81c2fd4f1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf592292-d3cd-447d-ba75-eb480b06c3e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fa4970-557c-4c5b-b52c-62d92af06580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0ddb66-cc1d-4754-8eff-c4b9710a5aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4e0239-55d0-4ea5-925b-112bacb75287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1557c0-e52e-4b8b-89a1-206ca2a01833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5ad2c4-88a0-481d-a199-20d0922561f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cfcde4-dd11-4eca-b30e-118c17d60e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b2d5d2-bf16-4a82-8f21-fc529cac7db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ef902a-e7f7-4c95-ba30-e4cfd5afc1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dbaabc-4c70-45d8-9272-e0b48916f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00de2da6-c80c-404a-80eb-8b38e13a5b1e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec82d21-ac37-48ed-bbb8-f18e782991db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e65e2df-714a-40dd-abcd-4af033047c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c1d922-b4a9-40b1-9473-fe7a403f208d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c3b01c-b35a-4f3e-98d0-2c2f5c37153c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb0b185-eb81-4ec5-8ed9-132ec178796b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0914002e-78db-4c81-aedf-88a347e9ac41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823c5117-d4bb-4204-8fe7-8133e3ea8bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc2d6e-d0c8-4cf6-b8da-d1c5994407ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa09c9b-5eea-40d8-9e5e-43ee534c2768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391893b-4366-4f15-9075-5ddebf0d6d05",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c875a3-86ef-464a-9481-70e73c18d1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1868cf2-f6ed-49a9-868e-84c431ab3993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc051e6e-2238-4a91-879d-a4e88e0f83af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a264492-6df7-4297-a803-2ce9fcfb8a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f46ebf-7203-45ef-a495-b87a92ac0360",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a431b04a-27b1-4d4f-8f9b-ac21717e5b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611bb339-6c7b-4ca7-be98-09846af3d21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769dace2-1443-4679-bb98-b1df0998492c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047c3bd5-2898-42cc-881a-690e51abc017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f169d314-5538-4400-b28a-9ff7e421136e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78cb5d-c6d8-42c1-8315-85bad2526904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94058b2e-74cb-4bb7-85ec-61225e4c71c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f6586-49d3-4b06-a2f6-55c440d575bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cb65d1-b67f-4bd9-be89-438e7b5c119c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12d25568-a775-46dd-aaef-589958231fce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "143946a0-b57d-4f0c-8489-e3ffb2af574d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75199c3b-98d8-434f-8372-3abad171ce32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2a7962a-dbc9-4992-9e43-a36c0299438f"
                    }
                  }
                ]
              },
              {
                "id": "53ea9a2f-600a-4a11-95c8-1c52c3703982",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3135c9f5-059a-407b-a312-74ba79af0359",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c8e80c-202b-49cc-a100-bb8a3149a42a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cd46a20c-810b-466f-87e3-9087a04f2ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394b8bf6-41ef-4e92-8e6f-74fc01565683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c2bedee-3a4b-4c8d-9922-489b3e33fb3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3297975-65fd-4a72-a9f0-e3a25ab8decf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1f6d1b3-d039-4b4c-9ec3-076588e8a5f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "259a73cd-e20c-4862-89f3-1864426b2602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc56921c-fb8c-4be8-9795-623145dcaf40"
                    }
                  }
                ]
              },
              {
                "id": "6738fe88-9c22-4b7e-b0fb-414bb654a816",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a50699d1-f72b-4f73-beb1-34a6645c46f6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e276cf4f-9bc0-452f-a7f1-3853e7eac6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fc9f6c71-9533-4be2-b1c6-1256de6f0fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d266f5f5-3b51-4712-b802-2c4488317827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e36397-95cf-4e0b-9d94-98f0a152215d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "949f31a0-fda5-444d-9914-277810e120cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "889247a6-a23b-420f-a09a-3ce5f79fc9b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e8d8d3c-c278-4115-a219-15d0ee493bb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80982014-38d5-4381-bf81-f6a0f16f116c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae6b28fe-8b39-4f1c-a0fa-c10c84eb5c69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f14c620f-9961-4053-a6e5-9865ffecc930"
                    }
                  }
                ]
              },
              {
                "id": "badb5e9a-56f1-4108-a593-7544e2bfdcbd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "348a1c05-ea51-431a-b9a1-947ede838a5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d4fae84-b779-4aa5-931c-cef33bab57c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "529d9690-3a79-4cdf-be4a-647c4fb67d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96a6f312-611f-4527-befb-1e25b952e278"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8425ff6-d3fc-46ff-9507-634094772eec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "18fcf05d-5d79-4193-8a57-917aa5ac8f84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79420737-f285-419a-8af7-703e48f3677e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da6c0bbb-2381-4a5c-9761-1c6223830432"
            }
          }
        ]
      },
      {
        "id": "c1ca3737-32e5-455e-b44a-9c62451c9bb6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cc7752f1-b5ca-43a5-a18d-6ab3407139fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c842acc6-19cb-4433-9431-6fc91d9ff31b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a33a1384-a0fc-4d4c-90b5-ce3997548cd0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c1bb8-af59-4856-a1ff-806302c0e8e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d88fac77-f04f-4c5d-b0fe-b9a482443dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37bf853-6b42-44f6-a97f-e7e2ad7e3cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ac24fd8-3ca0-4169-9754-7c2b36b474e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45726559-bc92-4b93-b9a1-014c528e987c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6df94e4-b443-4cda-9048-a0664ccf0b88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5223028-0047-41bc-803c-f853d75d17c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f1e7907-0988-4ff4-b2c3-f42e47ab1c7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8d3133d-bfcb-4466-b957-6a6cf054559c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7670c28-a8a0-4b2e-88a2-56ae472f71a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67830eb3-62c7-4f74-a1fd-e7179b248029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a48bda10-09be-4dd1-8d79-18a7314c81f1"
            }
          }
        ]
      },
      {
        "id": "0667871c-ce95-448d-9f3a-15211a7fa390",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "84fc69ea-aac0-4ba6-a551-e2181643c2bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54d6b395-de23-41bb-aeed-54e55df2e793",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7396bee0-8230-4d27-aa79-1a86c7e77c76",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2662fc-d286-4fd5-bdaa-dfda5bc3c06b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e62893cf-7301-4694-b61e-d1b76dc6d5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f58e441-78c1-4df8-a96b-cd2c1b1c9513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb105c66-7685-46b0-97a8-4cb25f76b5ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8000193e-7428-4be9-970f-7ba016b3d29b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f14de50e-e550-446d-994e-7cf02593e3c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9997997b-9560-418f-9a36-d1e27af0f788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5576ed19-bf49-45b6-b220-4115ff95640c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6fb5a64-1ab4-4203-9935-35a3fffecbb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b1a2400-48bd-46c3-9b72-5c0e8d2af259"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e22e0207-4f23-473d-adc4-63028615a63e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9c5b779-5c09-4d98-af4e-ebea628fca4d"
            }
          }
        ]
      },
      {
        "id": "49c9bb18-796d-407a-98aa-e4df526cd644",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d41fa083-f5fe-4eab-8fa2-c382705f221c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77d521f1-76d5-47d4-803a-f8b37d84fff8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe4b74f4-80c1-4717-ac97-72473ae6d52e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf90ac02-f2ff-42b3-a6df-f64d183766e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f10ecaa0-87ac-4a2f-ad48-29a94823610a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e0e8a-d34a-422a-bb32-f28f50eb0e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e98f110-e617-4d2e-a5c6-13a5a6797959"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24bb0cfe-81e7-4e67-88f0-76dae3fdf2ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a3dd3b1-d9f8-4858-ac17-4cdf73d6ab04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42e74003-dd5d-44e1-a481-78083a7cbd84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79defaa2-d86b-4c86-8487-11a6ae82631d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a6d6d75-7524-4d33-8245-05a1af2d1021",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09a3e273-c0d2-4a72-8553-37406fe57fa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "754f59e1-ddbf-4999-abd2-82a0081d11fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56d0ddd0-8401-48f7-9f26-f056f86c96d1"
            }
          }
        ]
      },
      {
        "id": "7018b92f-707c-46d4-83cd-3cd07dc65718",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60faa146-7b36-4817-9cd6-9c62b948f40a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d499b998-6c0c-4808-a494-860ac61092d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "83bb3156-e762-4db6-a697-8939e950b040",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc034650-a12e-45af-9869-499c11994a7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91c98515-ec75-43fa-8645-2212fdd35368",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.2280701754386,
      "responseMin": 5,
      "responseMax": 2827,
      "responseSd": 318.1091403543401,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701391148927,
      "completed": 1701391188455
    },
    "executions": [
      {
        "id": "3eb3e68e-0260-4f3d-a50b-1dbf20100e28",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d21121ae-e0b5-4972-849d-03634bb05cf5",
          "httpRequestId": "de4f8c0f-2572-41ab-a629-68d0a09ab4d6"
        },
        "item": {
          "id": "3eb3e68e-0260-4f3d-a50b-1dbf20100e28",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "59613d9f-30e5-44c2-a099-a2b884c1219b",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "79009f32-3f58-4d3b-ac8b-76fb505e225e",
        "cursor": {
          "ref": "9c6e96be-8ec2-4287-beb0-b0bfa92298b8",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3327efb-fbff-4adb-acb6-d73ac4b541ed"
        },
        "item": {
          "id": "79009f32-3f58-4d3b-ac8b-76fb505e225e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9f8281cc-6c19-497e-901d-54d966f27076",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "b85e10aa-1e98-496d-9c96-6fcd7941fdfa",
        "cursor": {
          "ref": "b7317603-b201-4253-8d99-8640c54076cf",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5508cb7c-d1a7-4964-8238-36ef43962752"
        },
        "item": {
          "id": "b85e10aa-1e98-496d-9c96-6fcd7941fdfa",
          "name": "did_json"
        },
        "response": {
          "id": "96ee525a-656f-4aa6-ac1c-d3a286b0ac8d",
          "status": "OK",
          "code": 200,
          "responseTime": 528,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46997388-93bd-4f3a-bf84-1a3f3db1aab3",
        "cursor": {
          "ref": "b8d8b9cb-8e14-405b-a7b6-b44808ba430e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bc76135-c1fc-4e68-bde6-e10157719d07"
        },
        "item": {
          "id": "46997388-93bd-4f3a-bf84-1a3f3db1aab3",
          "name": "did:invalid"
        },
        "response": {
          "id": "7799d8a5-d927-4e04-9f79-e3311f8f8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46997388-93bd-4f3a-bf84-1a3f3db1aab3",
        "cursor": {
          "ref": "b8d8b9cb-8e14-405b-a7b6-b44808ba430e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bc76135-c1fc-4e68-bde6-e10157719d07"
        },
        "item": {
          "id": "46997388-93bd-4f3a-bf84-1a3f3db1aab3",
          "name": "did:invalid"
        },
        "response": {
          "id": "7799d8a5-d927-4e04-9f79-e3311f8f8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ee06cb-9e13-4532-b944-bbfea34289c9",
        "cursor": {
          "ref": "ef0709cc-a12d-46f7-959d-265d000d8fd0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "31e974a4-d34a-4dc8-9545-7ccfd111877b"
        },
        "item": {
          "id": "02ee06cb-9e13-4532-b944-bbfea34289c9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8c415fa5-4507-4f6a-a5f9-7f242cbcafc5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19342759-fa6c-4140-869e-02fd25c1ea16",
        "cursor": {
          "ref": "713d094d-3e6d-4cfc-b05d-2b4652cea34e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a156cd53-d2db-4f27-90d7-33e218bda79f"
        },
        "item": {
          "id": "19342759-fa6c-4140-869e-02fd25c1ea16",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "19869d27-66d0-4f11-907f-2ed17d9d3571",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71a7e8d-97cb-4892-a930-c549fcc47b6b",
        "cursor": {
          "ref": "6f8f6e41-261e-4bcc-8bf8-081d0d317d72",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3564464e-878d-42c4-9be0-c99d1fa35e1f"
        },
        "item": {
          "id": "e71a7e8d-97cb-4892-a930-c549fcc47b6b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9218cfab-5eff-439a-96ef-cdeace67562d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71279b6-67e3-4fad-a0a6-10c8f90ea740",
        "cursor": {
          "ref": "8d2a6d14-c5c0-4d8b-9cb0-0f442c72e048",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ad22ffd-b93f-4a35-aa30-5630e87a393d"
        },
        "item": {
          "id": "a71279b6-67e3-4fad-a0a6-10c8f90ea740",
          "name": "identifiers"
        },
        "response": {
          "id": "8af9d705-e531-4576-8c25-5313b3839986",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee934596-1a2e-4b6d-aefa-77e85a804ced",
        "cursor": {
          "ref": "b1b88146-40ff-4e40-ac4d-73f6bd64a5e5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "083bbfa1-0a9f-44bd-9ed7-052e4bbb9b2f"
        },
        "item": {
          "id": "ee934596-1a2e-4b6d-aefa-77e85a804ced",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ebee0e4-012a-487f-a4fd-9dec1c24831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25792cf5-586a-4b3b-8ec7-68b84a531556",
        "cursor": {
          "ref": "00415fcd-7c54-4d5b-bb01-6170a89dc6c7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a304dcce-111c-44ef-8926-e7e5330fb4f8"
        },
        "item": {
          "id": "25792cf5-586a-4b3b-8ec7-68b84a531556",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7455c67-3740-436e-a05c-d1deec0ac62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e21fde7-1b29-4d67-9e68-ab5f5d4cb013",
        "cursor": {
          "ref": "a7f907a6-0435-4d7e-9b92-115d44cfd750",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ad30dfc-cef3-4ba9-95c6-8eb1036926f9"
        },
        "item": {
          "id": "0e21fde7-1b29-4d67-9e68-ab5f5d4cb013",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fb282530-0234-4241-b6b5-8bab433926e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ab34d-5b40-4619-a542-1ff320495afe",
        "cursor": {
          "ref": "62d7d11e-e0cb-42b8-b2f1-bbc5fff383e0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "abbeef69-790e-4892-9252-2073f4f305fa"
        },
        "item": {
          "id": "d05ab34d-5b40-4619-a542-1ff320495afe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a88d9e88-11a4-4b40-9d1e-d962e0dda62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec4b117-6a91-4d70-9373-e6d6b3a74497",
        "cursor": {
          "ref": "d0bb2cd6-e347-428e-90a2-f0f8ffd377f3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "35803ae9-e7a6-403a-9b28-1e25a28a8399"
        },
        "item": {
          "id": "1ec4b117-6a91-4d70-9373-e6d6b3a74497",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "59754d19-6ec4-4a81-be13-7c56c4d55b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30781245-9c53-4b15-b417-bf4c5ab143fb",
        "cursor": {
          "ref": "c976932b-2c01-432c-8d6e-05ac19f2328f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8bafc5a-50f5-4576-a4d2-b3734a85e167"
        },
        "item": {
          "id": "30781245-9c53-4b15-b417-bf4c5ab143fb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3c63c95d-bf1c-4599-8e4c-807a84aac9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90da97ee-1705-4ed7-abb0-2a3362aaa70f",
        "cursor": {
          "ref": "90c93af6-3903-4c4e-ac97-a72cf81d8100",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "41f61a0e-ce2f-4d71-9526-f3e04cde6976"
        },
        "item": {
          "id": "90da97ee-1705-4ed7-abb0-2a3362aaa70f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "189f380d-119c-4ce7-b9d1-a796242e8ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca214723-1f73-41ee-b455-e13f60bdf63d",
        "cursor": {
          "ref": "8e5960cc-c6d2-450a-86dd-68e07598e14a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "32756087-17bc-441a-a838-bcb7dc8bf6ce"
        },
        "item": {
          "id": "ca214723-1f73-41ee-b455-e13f60bdf63d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c7fc7a57-f019-47a9-b04d-0422e357b15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e18c9-2e8e-44ff-8000-e675122ba103",
        "cursor": {
          "ref": "4842bd4d-33d7-4d56-be14-2fd5209eac3b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "298783be-5ee4-41da-85bb-e0862ed587b0"
        },
        "item": {
          "id": "779e18c9-2e8e-44ff-8000-e675122ba103",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bc9e85e3-7d28-4172-9106-597a512c7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142b1cd-45ae-4fbe-bd13-64094e218bac",
        "cursor": {
          "ref": "62cb5138-0da6-4a07-9e45-e9012025c107",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91631f44-e9a9-444a-a7c4-04ea8da70684"
        },
        "item": {
          "id": "0142b1cd-45ae-4fbe-bd13-64094e218bac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a2c1d403-0d36-488d-adae-6a5128dc6232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b73fc-39ee-4517-b568-22e2abb69346",
        "cursor": {
          "ref": "9044dd9f-9889-4766-97a4-c13e6ad276f8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ad42cde-8c71-47be-aff0-e06e37df57d6"
        },
        "item": {
          "id": "424b73fc-39ee-4517-b568-22e2abb69346",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d790303b-8ba9-48ad-b726-d7dd718ee16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de6a264-4dee-49c4-9ef6-8c123becb3f5",
        "cursor": {
          "ref": "82fbfe2c-ce9d-4a4a-bb16-bc526cb9bcd0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f9d55922-8131-46f9-bb56-02de2d3c7c5a"
        },
        "item": {
          "id": "8de6a264-4dee-49c4-9ef6-8c123becb3f5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f738f03-6322-4d6d-9110-e98e36f7be05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c873e9-66b6-4361-aa60-05a39fc93316",
        "cursor": {
          "ref": "a777f0c4-c860-4ca7-9778-29627a0dfea2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "58d0f9e1-b14e-4e39-a82b-a0db6955febb"
        },
        "item": {
          "id": "17c873e9-66b6-4361-aa60-05a39fc93316",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "10bd0969-9506-48e7-a421-2580d1cd62c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c9886b-03fd-4e71-89a9-461ab15a000c",
        "cursor": {
          "ref": "5f99a151-3b03-4928-89e0-86c2e3549a06",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b1eb2736-0333-402f-9003-512caf9ac3ea"
        },
        "item": {
          "id": "55c9886b-03fd-4e71-89a9-461ab15a000c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "138b6ca7-c342-4335-a0b2-ac3496454e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0073b23c-360d-4f6f-8617-a50c6db3d0a5",
        "cursor": {
          "ref": "b53202bc-27b6-4e8d-a586-0bac0a2b4b60",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c88470e6-5d3f-4ee2-9ae4-8cb98013663d"
        },
        "item": {
          "id": "0073b23c-360d-4f6f-8617-a50c6db3d0a5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "def41e1f-ab36-4abe-9f69-212700bb8051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef1b16-8570-452e-b37e-298296c26eac",
        "cursor": {
          "ref": "1bbe6bc2-01b3-460b-865c-ff32e75406f4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc7e04ea-bed8-45dd-86df-62a9e5646253"
        },
        "item": {
          "id": "56ef1b16-8570-452e-b37e-298296c26eac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f5af15fe-fcd1-4cc9-b201-649cec4daac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9140f432-28e0-4f34-bfc4-aed5ae7f62fd",
        "cursor": {
          "ref": "d146aa4e-7c24-42fd-9249-cf8381bd144a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "215c143d-f842-49b3-976c-d054d0a37853"
        },
        "item": {
          "id": "9140f432-28e0-4f34-bfc4-aed5ae7f62fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2b6dbdde-cedb-4dff-afa0-56306fc8f2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e16f5ab-6699-499e-a144-106327dfaf95",
        "cursor": {
          "ref": "97463210-12ee-470a-b5da-3a92a13eedcc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f75d143d-fb3e-4cb6-be68-aaf35047d348"
        },
        "item": {
          "id": "3e16f5ab-6699-499e-a144-106327dfaf95",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "55dcb3e4-eebe-4fcf-a78f-64df6ca8657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ffa29-1903-490e-a9e4-626f57b5c144",
        "cursor": {
          "ref": "2565c077-f169-496a-81f4-6409ea3a050b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4b660a53-1a6c-43a1-a792-eabb96c50a78"
        },
        "item": {
          "id": "2f4ffa29-1903-490e-a9e4-626f57b5c144",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "edd2f2ad-276c-4450-9d96-75ae03684221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f1efcb-5a0a-4828-94e8-ed693c7d4c2d",
        "cursor": {
          "ref": "4dccccd1-5a35-4c6d-a2ce-fce85ed27546",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c48b8cc4-3757-4750-a809-e64b70a96faf"
        },
        "item": {
          "id": "30f1efcb-5a0a-4828-94e8-ed693c7d4c2d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9278ed67-c446-4d7b-abcd-bb791d372190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20452bec-a4e6-4c4c-a6ca-f0493bde6c6c",
        "cursor": {
          "ref": "900bde46-17b5-456e-9fe4-7431c9118fff",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dd318cf7-590e-4ddb-bf45-9a025aabf185"
        },
        "item": {
          "id": "20452bec-a4e6-4c4c-a6ca-f0493bde6c6c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a870bf2d-4d68-40c9-acd9-bd0d8ee40436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc66cc1-e4ee-4bff-89ee-adbaff7c5430",
        "cursor": {
          "ref": "4d08f284-678f-4b61-ad32-a3663405285b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6dea6188-fa19-4d96-abb9-21c10818858b"
        },
        "item": {
          "id": "bbc66cc1-e4ee-4bff-89ee-adbaff7c5430",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "17c8b1ff-43a1-4052-8956-dc461bad5ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215b164a-0b3e-4116-a379-7f4de1e83b42",
        "cursor": {
          "ref": "77fcc24f-b725-425b-895d-d26a2462d661",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fce83fc8-cbea-4b65-ba9d-e1373eabb30a"
        },
        "item": {
          "id": "215b164a-0b3e-4116-a379-7f4de1e83b42",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2126ea3f-e20e-4980-b950-4042e77da185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a22e1-2937-402a-944e-1ee2be4e6339",
        "cursor": {
          "ref": "1d3d4087-a5ae-4043-a5d5-388c60178a69",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "33971f92-5910-410c-be12-2e6765e85f50"
        },
        "item": {
          "id": "061a22e1-2937-402a-944e-1ee2be4e6339",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "28612381-4aae-45c8-9200-7215d0d72135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a90a8d-fb13-4f86-9cf1-59f1bb0c4fa4",
        "cursor": {
          "ref": "a7826f91-ed0f-4b70-b12d-edc106717d9d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0a8aedcf-97ba-45ba-9bf4-1d40c166cf3d"
        },
        "item": {
          "id": "49a90a8d-fb13-4f86-9cf1-59f1bb0c4fa4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f4b56123-dab4-49b2-bc2b-2b7d35524706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6ada68-14fe-4e4d-8c90-0d8b33cd47b1",
        "cursor": {
          "ref": "76c086c7-88f5-44df-afbc-9441d20a8925",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "40d34ba8-d8a6-4e4e-bc31-5ac8082da103"
        },
        "item": {
          "id": "8a6ada68-14fe-4e4d-8c90-0d8b33cd47b1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "72ba95a6-fa85-44e0-b72b-893382b8a332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a149732-10c4-4baa-b315-d8fb056cee21",
        "cursor": {
          "ref": "ee0afa82-ba2b-4855-ab02-d9b4bee65026",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "89b62aa9-947a-4733-b694-4754a5fc3486"
        },
        "item": {
          "id": "8a149732-10c4-4baa-b315-d8fb056cee21",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0aec4ce4-a78b-446d-ab96-1a4faf493349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab226b-2cf1-4e09-a621-9c071df2e17e",
        "cursor": {
          "ref": "f65c6394-c184-43c8-a25e-d53e8824fa70",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d3439c8e-4f1a-41a8-8384-d7abfd7208db"
        },
        "item": {
          "id": "8fab226b-2cf1-4e09-a621-9c071df2e17e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "364b3b28-132c-49dc-843a-c9311c8dbad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80852340-b1fb-44f6-959e-2fddf895a280",
        "cursor": {
          "ref": "ddf2a2a5-7c82-420a-983d-8c22eb3172e5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f97d8e40-905d-4617-8160-25c8035ec939"
        },
        "item": {
          "id": "80852340-b1fb-44f6-959e-2fddf895a280",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c383216f-7653-461e-8031-9a62801985e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c29398b-96eb-4435-9e70-5e00ce8d1c91",
        "cursor": {
          "ref": "9cc9e69b-9523-40f7-84f5-e2eaa8b1b97e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ece5c690-499d-4dce-84b9-1177da8622d7"
        },
        "item": {
          "id": "7c29398b-96eb-4435-9e70-5e00ce8d1c91",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e85c294-c011-4e0e-99f0-1e41e7e18339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e40fe-0f71-45b7-8ec5-a40239342d7d",
        "cursor": {
          "ref": "a72297be-333c-4bbd-a48f-e12f9ecf3c10",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2ebd8ca-a85b-45b6-a4c3-83744ccd3def"
        },
        "item": {
          "id": "173e40fe-0f71-45b7-8ec5-a40239342d7d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0f2c1dec-c5c4-4bf9-8a1b-d8f1c80b65e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0010cd5b-8d0b-447c-8b85-9481051cdfe7",
        "cursor": {
          "ref": "335b771c-a934-43d0-8c35-09464ced1479",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0ddf7b1c-92f5-4587-9668-54322492e2ab"
        },
        "item": {
          "id": "0010cd5b-8d0b-447c-8b85-9481051cdfe7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ab27ef6-07d2-418e-b2a1-f2439a1bd305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3a224d-f4ee-488f-92dc-719490238748",
        "cursor": {
          "ref": "8f78568f-7078-492c-b994-c41f37bbe7ac",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b2f4757-0a7a-448b-982f-07432ea0411d"
        },
        "item": {
          "id": "cd3a224d-f4ee-488f-92dc-719490238748",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e8ad3051-4089-496f-bb8e-aa3f970eb875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c60090-f735-4074-8824-648cd3dae9f7",
        "cursor": {
          "ref": "470a42a1-d5f2-40d8-8f97-48a249ff6518",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2f7fc7a-2f22-464f-a7e2-12b0a42b27f1"
        },
        "item": {
          "id": "71c60090-f735-4074-8824-648cd3dae9f7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c8ef245d-ead5-46c9-976f-a60f09e8f09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcf8493-461b-4eee-8a70-6ea4e11d435e",
        "cursor": {
          "ref": "95d10b4e-4549-440d-a252-1e0c115ed5f8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "12e78d85-6c17-4471-b439-cce960a21bb9"
        },
        "item": {
          "id": "abcf8493-461b-4eee-8a70-6ea4e11d435e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "58c24dd0-7082-4767-9ed1-6a44056270e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d80af-3e36-4c3e-983b-1f0b51abe3b7",
        "cursor": {
          "ref": "0ecc868a-2d17-42a1-b0c1-b13a5e9044e9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4ce448ae-cda3-4892-8d60-f467ac115a4e"
        },
        "item": {
          "id": "549d80af-3e36-4c3e-983b-1f0b51abe3b7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5f95779b-dc7d-4308-b6f2-230032310df5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d4e187-dca6-4cc8-9552-7eefad7afd26",
        "cursor": {
          "ref": "f440d9dc-ae78-44eb-8e10-b5cbde29addf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "94fc8f08-efe8-470f-ba50-30bf6717c169"
        },
        "item": {
          "id": "04d4e187-dca6-4cc8-9552-7eefad7afd26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cee84193-321d-4b3e-ae32-cb9f07ee1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b754aa4-f247-4687-bff0-24588eae8675",
        "cursor": {
          "ref": "c55f31c5-9d9a-4014-9c17-57326f252d01",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "67502c2b-c957-40ce-a71c-165c09d4c7ed"
        },
        "item": {
          "id": "5b754aa4-f247-4687-bff0-24588eae8675",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd5a00b1-a2be-4cee-902c-cc7826dc13d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574eca4e-5681-492b-91b9-3448be4c3dd6",
        "cursor": {
          "ref": "67d5f38d-bd12-43e2-941b-35a10e49ecab",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7dc1c5e5-252c-4437-92c6-d74f717b41e7"
        },
        "item": {
          "id": "574eca4e-5681-492b-91b9-3448be4c3dd6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d0f4550b-889a-48fe-bf9f-71b0262de85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5a5380-360b-46f7-a4e6-a035d8c718fd",
        "cursor": {
          "ref": "249dd851-b4cc-4ff3-b9b5-e8d7958a72a1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8e93fb96-6cb2-4665-b9da-57ab4907c5a9"
        },
        "item": {
          "id": "de5a5380-360b-46f7-a4e6-a035d8c718fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13219da4-ff0d-4582-b25a-e71628830690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f324f3d-109d-4a41-913e-31b20402df54",
        "cursor": {
          "ref": "169f9f6d-87f3-42c0-86c5-7c3b17d0bedd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dbdfd306-1605-4817-aee8-4a5f293b1bfa"
        },
        "item": {
          "id": "3f324f3d-109d-4a41-913e-31b20402df54",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "76cc7567-98af-4564-b7e0-7326e43168c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a375a8-935b-4cde-8e0f-daaf862ee0ba",
        "cursor": {
          "ref": "0ee62b96-fc8b-4279-b4ce-f967067808ed",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1c3f67d-88ae-4509-a4db-43592c5e4cbf"
        },
        "item": {
          "id": "a0a375a8-935b-4cde-8e0f-daaf862ee0ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5522d7d5-586e-40c5-bc5b-f6a7487eac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447d9048-8ac1-41e5-8a9d-e936faee8875",
        "cursor": {
          "ref": "5d763bee-9b68-40fb-922b-18dcd5c0f1ba",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f1617fa1-8fb0-42ca-934f-19d7dff87fcb"
        },
        "item": {
          "id": "447d9048-8ac1-41e5-8a9d-e936faee8875",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "09d2b90b-6ffc-49e4-94bc-2eaf0f32fc99",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 322,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac085b-d039-4ed8-9722-dee73f3e3e8d",
        "cursor": {
          "ref": "fdf9a5ca-bcad-4b26-b9a8-0b57176359ae",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3da87907-e395-427a-9f75-ab491a4d12ba"
        },
        "item": {
          "id": "cbac085b-d039-4ed8-9722-dee73f3e3e8d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ee588b92-29d8-4e71-a5b0-e425a5d145f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8193fae3-aea5-45a2-8a6b-72905d758117",
        "cursor": {
          "ref": "a8a1f68e-417a-42ff-bf7b-69491e6ac16e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "de51aa1c-f5e1-4774-ab9e-292322e1ff13"
        },
        "item": {
          "id": "8193fae3-aea5-45a2-8a6b-72905d758117",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c1f45eff-3654-4e76-ae9e-2276cdfbf491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ee7103-2829-4f5f-9594-448398eecbf0",
        "cursor": {
          "ref": "0346811d-1610-409e-84e7-abe852057e21",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f9acda30-1092-4fa4-b133-6f4a1767672b"
        },
        "item": {
          "id": "43ee7103-2829-4f5f-9594-448398eecbf0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6990f1b5-6d01-4042-af3f-62686338cdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39e4ef7-16b1-45a7-b8c6-b8971b9f8472",
        "cursor": {
          "ref": "1c992108-fdd7-421b-85d0-e48198410aa5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fd4983b7-920b-4000-82a3-7a8c2b63cb6d"
        },
        "item": {
          "id": "c39e4ef7-16b1-45a7-b8c6-b8971b9f8472",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1ed9a724-2e23-4f5a-8280-cc7225164e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71516128-f3bf-41a1-b6c1-212c0639e321",
        "cursor": {
          "ref": "ebd0c36e-0453-4a80-b577-d399bc4e46ab",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a7a39299-6950-4076-8915-efdeaf16a24e"
        },
        "item": {
          "id": "71516128-f3bf-41a1-b6c1-212c0639e321",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "24794185-f73e-4f83-b121-d3e3cc22605b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e0dca-4037-42aa-8ec4-5efb87487d96",
        "cursor": {
          "ref": "23dc32f5-c117-4e89-adf8-160d03c2b20c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb150ce6-0051-4730-b843-0412d2f35e23"
        },
        "item": {
          "id": "e81e0dca-4037-42aa-8ec4-5efb87487d96",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e65641f-65e5-4170-92a2-bd091196d550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd6dc6d-b1b7-4617-b929-711f25f19a59",
        "cursor": {
          "ref": "13145cd1-47b0-465a-89ad-e8dd474852c6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27b0a2e6-067e-4e41-8414-9437c84564f2"
        },
        "item": {
          "id": "3dd6dc6d-b1b7-4617-b929-711f25f19a59",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "963d9eaf-16d8-4e71-9c67-21ee1d8f007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b412f6c3-6426-4ca1-abc2-f60ebfc9e173",
        "cursor": {
          "ref": "1d7e9dc9-087c-4acd-acb3-dce10a3842e0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4e4f7b58-ef31-41f0-ab65-7de6e07034b7"
        },
        "item": {
          "id": "b412f6c3-6426-4ca1-abc2-f60ebfc9e173",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b516122e-e9c1-4189-9117-313c40d5309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98369cbf-be99-4991-9101-f020274dd1f1",
        "cursor": {
          "ref": "8c1875dd-003e-4843-a157-d93e576c8f71",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3286c4a6-797a-441f-8217-24af1b066642"
        },
        "item": {
          "id": "98369cbf-be99-4991-9101-f020274dd1f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3182bba6-85d5-4176-9e52-d37f3b4a8662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108fcad6-7907-41d4-88ca-d74a6095a250",
        "cursor": {
          "ref": "0272bcc4-92aa-41c1-952a-8012320d19c6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "49fcdcb8-19e6-498c-b587-89e1dcd10df7"
        },
        "item": {
          "id": "108fcad6-7907-41d4-88ca-d74a6095a250",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "82123468-4538-4f9f-bf68-3683c2f67975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8679f1e4-3b21-476a-a872-00ad26d822b6",
        "cursor": {
          "ref": "bfd005c2-42b8-4406-a654-6ea3c599f143",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c97ded3a-0ae7-41d6-8d19-7947b5fcb137"
        },
        "item": {
          "id": "8679f1e4-3b21-476a-a872-00ad26d822b6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "848289d3-f531-4257-adcc-7f959724e3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b282135-c45b-46df-b796-b8f70e73078d",
        "cursor": {
          "ref": "094773e9-5026-424f-9f4a-26dd40361f81",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9d66fde0-b5df-4846-bb32-5252dfecf5fb"
        },
        "item": {
          "id": "1b282135-c45b-46df-b796-b8f70e73078d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4aa9d0ee-fcea-467a-b835-93245215971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29578a2d-25cf-42b9-8be2-b25b62cc1e83",
        "cursor": {
          "ref": "f92d7ef4-0b05-4e37-ab32-a101bca032a2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b4e2fa15-702b-4fcb-8e87-6e862c0818b2"
        },
        "item": {
          "id": "29578a2d-25cf-42b9-8be2-b25b62cc1e83",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "248dc764-8c07-4740-b5dc-af2007229a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdce35d-a017-4643-b9d3-115b908ce218",
        "cursor": {
          "ref": "388e09f3-7c22-4ae2-92d5-227840b3dc73",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d7fa88f6-6a12-4c24-8a36-38a2cb3a0d30"
        },
        "item": {
          "id": "1bdce35d-a017-4643-b9d3-115b908ce218",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a3a6abff-d16a-4eac-a899-5b07e4c0ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfcd513-50a6-4290-85f3-086d91e5b6ac",
        "cursor": {
          "ref": "7dc8a508-0bef-42ae-a083-a9bc935e6c89",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a02591cc-8195-47f0-acfd-d413d17a6fe1"
        },
        "item": {
          "id": "9cfcd513-50a6-4290-85f3-086d91e5b6ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "34246a78-f20b-46c4-8ce5-4bbcc4ca285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681d382c-2f33-4beb-8415-91234347b2e2",
        "cursor": {
          "ref": "f4b41027-5479-4a59-9899-797ba0aebd7b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "923c3068-11ca-43ba-989a-c956dd53e4c6"
        },
        "item": {
          "id": "681d382c-2f33-4beb-8415-91234347b2e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a2717b4a-42b4-44b5-b597-aeb2b217ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bd0cb2-2868-4a0b-ae4f-b1550854d110",
        "cursor": {
          "ref": "d6aef366-7edb-4701-831c-d8a8d5c3483d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c114c48f-3e37-429e-bfa4-eedc2daa4fc2"
        },
        "item": {
          "id": "c3bd0cb2-2868-4a0b-ae4f-b1550854d110",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "57ba5f14-0f75-4043-bd97-7bcd59a74e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6d931-d347-4658-b16f-89e052d6f734",
        "cursor": {
          "ref": "c4b1a2b3-5f08-4d8b-9297-5b682b208f4f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9d8d1ffc-2167-48a9-9ee1-5c8419115c18"
        },
        "item": {
          "id": "63a6d931-d347-4658-b16f-89e052d6f734",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a0ad2ac4-4c5d-41bf-a2c9-63d832e42c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952a18a-6b47-47eb-83ae-cec291598f6e",
        "cursor": {
          "ref": "5b31c0cf-1191-4c84-9a9f-fef3f9a54464",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bdc4fcef-14ba-401d-8995-e53021954765"
        },
        "item": {
          "id": "9952a18a-6b47-47eb-83ae-cec291598f6e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1f36806-5d66-4ebf-90b7-d7e91a8bcf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0538bf-5d3a-4f4d-b269-fd187e014044",
        "cursor": {
          "ref": "1e3eea0f-0985-4cf6-a890-492fe5452dd1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0c2a7608-69d8-4b6c-a0ce-fb08cdb75977"
        },
        "item": {
          "id": "5f0538bf-5d3a-4f4d-b269-fd187e014044",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "494bf8ef-a45f-4e37-ac3c-ccb3701c587d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d80cb9-7047-4ddb-98ab-afc27345dd82",
        "cursor": {
          "ref": "68f47ea2-0d2d-42bd-883b-b801a49f6556",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e6e43169-1e94-41b9-8bea-f295a9aab265"
        },
        "item": {
          "id": "c4d80cb9-7047-4ddb-98ab-afc27345dd82",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "51151a8e-1c03-411c-8385-2e7e3e5a9436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b215649a-238b-4588-8b6b-bc8203aa31d3",
        "cursor": {
          "ref": "cd67ea54-4281-41ef-806d-1434b71429e6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a941bfd6-71c8-4d4a-80a6-9583efa2234f"
        },
        "item": {
          "id": "b215649a-238b-4588-8b6b-bc8203aa31d3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b3e3140b-b863-4761-a737-b27ac3ff95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8e492-b686-4c68-a57d-d82ec6f49091",
        "cursor": {
          "ref": "e70e7775-9ef2-4181-82ca-b4cfbe097732",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96e198ec-8903-4709-9166-3ace16b81b04"
        },
        "item": {
          "id": "10e8e492-b686-4c68-a57d-d82ec6f49091",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5f9a90f0-15d8-4dfa-90d5-ee09469a9ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948e399e-bbf6-4fe6-a00f-e58a4d4f9f17",
        "cursor": {
          "ref": "6c7e2b86-c69f-417e-945d-eb642e4eabc5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ccd37a89-cbe7-4a83-80b5-c6c5e909a435"
        },
        "item": {
          "id": "948e399e-bbf6-4fe6-a00f-e58a4d4f9f17",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e1ebf506-cd96-43e5-883f-d8c419824b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb2436f-d98a-42b7-a4e9-dbd1378786e8",
        "cursor": {
          "ref": "4a7219b3-0413-4653-8bd4-b710e54fb50c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "197fec26-e968-4a1b-aa75-c16def802a73"
        },
        "item": {
          "id": "efb2436f-d98a-42b7-a4e9-dbd1378786e8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c3f71c78-6ead-4ba3-a99d-7f1b95266496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc21de7-16ab-437e-a569-978e7a2fe5e6",
        "cursor": {
          "ref": "89d5e05b-ba42-4b19-a415-2812271997e3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6c008f01-51ff-4a7a-a4ec-34f0691f3e7d"
        },
        "item": {
          "id": "dfc21de7-16ab-437e-a569-978e7a2fe5e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1be16f07-c075-4fe5-b1bf-a344a301b8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7696e2fc-b70a-4c7a-8932-5373d00debb1",
        "cursor": {
          "ref": "e1f51b80-2317-4a91-bc1a-58212efc2293",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "24cdb7ff-75ff-4872-938a-33754efb0fd3"
        },
        "item": {
          "id": "7696e2fc-b70a-4c7a-8932-5373d00debb1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8172186-29fb-4afa-850e-145fcb7f69a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e773f-5a66-4ed9-960e-b67ed82b9ac2",
        "cursor": {
          "ref": "c8a701d8-e9a7-4e3d-ac60-6ebfc0c0c18e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e9718fed-02e2-4eba-a679-44134aac90b2"
        },
        "item": {
          "id": "c70e773f-5a66-4ed9-960e-b67ed82b9ac2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c039b14a-0f51-45f3-844a-6dd2491a0f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9799cd9a-e65b-4756-be87-7133fc500d64",
        "cursor": {
          "ref": "5746be2a-36c2-4247-bbd8-93798d7006fe",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a8f21720-2b22-4663-be3d-4d144ab72bd2"
        },
        "item": {
          "id": "9799cd9a-e65b-4756-be87-7133fc500d64",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "558e1331-1119-4c4b-9ecc-569247b78943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a134f5-d534-404d-b182-62d95180d9c0",
        "cursor": {
          "ref": "94fdcead-b5c2-4874-a3de-85d881138365",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "720a6921-36a1-4850-b81e-b5204ed2ae59"
        },
        "item": {
          "id": "77a134f5-d534-404d-b182-62d95180d9c0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "08495bf9-b4ce-4433-869e-ad0cd4d70639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36183eed-7dfa-461a-8bc0-6a05be3f0317",
        "cursor": {
          "ref": "13e9b7d0-c572-4773-b441-605f9d5d5120",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4adc51c5-aa38-45b0-9792-ca404d00671b"
        },
        "item": {
          "id": "36183eed-7dfa-461a-8bc0-6a05be3f0317",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "644a562e-dca3-414e-b970-5d044d35ccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dda654-729f-4e3a-a869-bc38eb914084",
        "cursor": {
          "ref": "247d4708-c222-4047-8f37-7d13740a1e6c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f40d1042-9d34-440a-9980-96a3392ffbb2"
        },
        "item": {
          "id": "54dda654-729f-4e3a-a869-bc38eb914084",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1c181530-bee7-4385-b716-17547b9d57b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea56219-6af8-4bb4-a4cb-4028341b0336",
        "cursor": {
          "ref": "5c925a2a-ce8c-4d21-9559-ae5fe40b3ca4",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "59dd6751-f735-47c1-9163-39715e38776c"
        },
        "item": {
          "id": "6ea56219-6af8-4bb4-a4cb-4028341b0336",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2a5da54a-d21b-48a1-b3a2-1d95da6a01eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1248dc-2da5-4c55-8e86-cad9d78c98da",
        "cursor": {
          "ref": "5033490d-2bf9-40df-a5a6-89a1f4fb57a4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bba82fa1-759f-4784-b00f-4c8015ecb1c2"
        },
        "item": {
          "id": "ff1248dc-2da5-4c55-8e86-cad9d78c98da",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0d83a19b-d9fb-4f34-aaf7-1753edffb559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671cf944-29af-49cd-9ff6-5e6d2279d6d0",
        "cursor": {
          "ref": "01da15f4-ec6c-4fa2-8896-026db695917b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ae2203f8-a41d-4b65-87ad-72b6f96f4294"
        },
        "item": {
          "id": "671cf944-29af-49cd-9ff6-5e6d2279d6d0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec58529c-19b0-4109-820a-8eae2d6c254d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb775bf7-502d-40d4-a201-9e12584ed948",
        "cursor": {
          "ref": "9d6bfae3-6847-457b-88c8-7d82f8e8c134",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "72284366-e501-47ea-be3a-346fec8f2fc3"
        },
        "item": {
          "id": "cb775bf7-502d-40d4-a201-9e12584ed948",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5b6f994-ba08-4857-8057-d02acabbb035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4a533c-aae1-4e1c-8f50-bc66d62b9d63",
        "cursor": {
          "ref": "793ca7ea-f1ed-4afd-a6c3-63afcc083b85",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74f4b643-37de-4ca8-91a8-c6c2ca3d0634"
        },
        "item": {
          "id": "0c4a533c-aae1-4e1c-8f50-bc66d62b9d63",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36c070a1-c15f-471b-a9ab-aa05523d8abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63415a1-89ed-40b6-bcb2-e75e01347303",
        "cursor": {
          "ref": "221b2119-c1dc-4468-a2da-b59fe9153a59",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "310a1fb0-f45a-41ff-bd92-784d1717accf"
        },
        "item": {
          "id": "e63415a1-89ed-40b6-bcb2-e75e01347303",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "53a87120-2848-40c1-964e-dcdbe4d9e058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0861b464-e4e9-4195-b18c-a02b64147b90",
        "cursor": {
          "ref": "7079ce2c-b4dc-4646-9568-f3d829e248c4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4dc844e5-bb96-4f16-983f-76fc07fefab0"
        },
        "item": {
          "id": "0861b464-e4e9-4195-b18c-a02b64147b90",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "89072074-a84f-4383-939b-e1a230d47225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a258de-4255-4551-93d7-f455fe6fd31b",
        "cursor": {
          "ref": "64ad1a58-a71d-44f9-b275-f189ce9d4492",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a8a0233f-9c0e-4a7d-a656-7bc491b23076"
        },
        "item": {
          "id": "b4a258de-4255-4551-93d7-f455fe6fd31b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b03a5219-7eda-4951-8d12-ae3acc0681fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad305b5-d22c-4d43-8efd-384e1247f8b0",
        "cursor": {
          "ref": "3d9c93c5-b4c8-4916-b3cf-4161c269387f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3a7b4547-1446-4999-92ca-708b046f3c74"
        },
        "item": {
          "id": "aad305b5-d22c-4d43-8efd-384e1247f8b0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d5a78e1f-5e60-44cb-b832-e21297209fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee8fab3-f83b-44e9-997d-256a14f5340a",
        "cursor": {
          "ref": "83db5dc4-151f-4f3b-ac24-1b029d5ff6aa",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "735911e8-0bc2-42d9-8304-09267b6bd049"
        },
        "item": {
          "id": "aee8fab3-f83b-44e9-997d-256a14f5340a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ba50225-988d-4a89-b78c-0ae6d5b35c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0da600-a387-4ca5-9737-bf386231e44a",
        "cursor": {
          "ref": "2acc58a1-c945-41dc-bc1a-90c979ef0fc7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d570d0a-4f50-4588-ba49-0e9ca1f677f1"
        },
        "item": {
          "id": "1f0da600-a387-4ca5-9737-bf386231e44a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ae0035c-43cc-43a5-a6a8-9a8c6aa722bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fda556a-6039-4697-8a26-9c544370a8d7",
        "cursor": {
          "ref": "d782e5e7-fdf9-439c-a3ae-7323f5655f87",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c6dd169-2714-43d6-a341-5dd6bddd1383"
        },
        "item": {
          "id": "4fda556a-6039-4697-8a26-9c544370a8d7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9b972c36-8126-4623-ab0b-4fe29d5eb4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f0c814-bbed-4319-9d7c-58fd3b9642ba",
        "cursor": {
          "ref": "ab9bef23-b5ec-4aab-af95-044ba1032cfa",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1b71333e-fd0c-433f-8fa5-e2d10b8a28e7"
        },
        "item": {
          "id": "21f0c814-bbed-4319-9d7c-58fd3b9642ba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0a891ff6-7940-4385-909c-f42c1726cb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d265d7a-8afe-4e93-88b4-d5112c23de77",
        "cursor": {
          "ref": "262b3583-c53e-40f9-84aa-97acb9a662ee",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "150c72af-0514-4c6d-86a6-2ef4c1c2c2b0"
        },
        "item": {
          "id": "6d265d7a-8afe-4e93-88b4-d5112c23de77",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3071276f-4090-46a5-9079-b9a319f8f347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c76ace-c4a0-4318-8fa7-1082e55190c2",
        "cursor": {
          "ref": "3ee7e3cc-b817-4f71-9771-e0f3ad975202",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "afc288cb-274c-420b-9708-201f414c2986"
        },
        "item": {
          "id": "f5c76ace-c4a0-4318-8fa7-1082e55190c2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9df1b82f-3d98-4b84-bf79-62515d06aca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1a37a3-01a2-45b6-9786-b875989fc12a",
        "cursor": {
          "ref": "b3487510-5b47-4e9f-ae09-f7d51f5dd35c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7e7cd419-2c5e-4d01-a348-25efe5e396b1"
        },
        "item": {
          "id": "5a1a37a3-01a2-45b6-9786-b875989fc12a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "18921d6c-6b23-4237-b31f-44f3989e1ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3817a131-0628-4cde-aaff-5cea055b145c",
        "cursor": {
          "ref": "08a05e77-557e-4e63-9f3a-50cb172fb396",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db15ad5c-2fd7-4372-9600-83552eb4cf01"
        },
        "item": {
          "id": "3817a131-0628-4cde-aaff-5cea055b145c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f13f71da-6d52-48b9-8317-6ed013f9b447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968aa66e-cdb0-42db-bf3f-dc178ac1da64",
        "cursor": {
          "ref": "f6daa896-e98a-4441-86df-f36982597acd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "301ec267-faf1-4dad-863d-650a67c851a6"
        },
        "item": {
          "id": "968aa66e-cdb0-42db-bf3f-dc178ac1da64",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e2cd5c8a-56fc-4c03-bf2b-c7efcbed5008",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448cc2c-665b-49f0-bad0-15c0056d04c8",
        "cursor": {
          "ref": "f53c70bd-9ab8-4c0b-b120-2b29b24779d0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f8e10b08-804c-4f82-9715-70e240ed8a70"
        },
        "item": {
          "id": "1448cc2c-665b-49f0-bad0-15c0056d04c8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bc16b257-ae34-4506-ab33-b32e695a50d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "43a479db-b399-469d-b4c2-24b1e9a0ede2",
        "cursor": {
          "ref": "a9fbfd7f-393a-4b32-9e7d-5cf6c33e6ad6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3e0deeb-e759-4580-b61d-56813071c7d9"
        },
        "item": {
          "id": "43a479db-b399-469d-b4c2-24b1e9a0ede2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f86cbe4c-26fa-45c5-bac9-4bf732287a46",
          "status": "Created",
          "code": 201,
          "responseTime": 2827,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "327b7fda-e518-4e73-a9ee-99ea231a4b60",
        "cursor": {
          "ref": "2af06b03-f0b6-428b-aa7c-d051e9f0da09",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bd58d9fa-0992-4670-87e8-2f044e4df0c7"
        },
        "item": {
          "id": "327b7fda-e518-4e73-a9ee-99ea231a4b60",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d498f3b-f337-46e5-8c74-b13ca417fbbe",
          "status": "Created",
          "code": 201,
          "responseTime": 2580,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2993021-7cdb-4415-ad07-1e9cb835e559",
        "cursor": {
          "ref": "415d30fd-a0f1-4c6d-ba68-315306dcde79",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a77d65e-4c25-4b07-8971-73629108898c"
        },
        "item": {
          "id": "d2993021-7cdb-4415-ad07-1e9cb835e559",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "158b686b-5611-4965-8ebf-db03a1855739",
          "status": "Created",
          "code": 201,
          "responseTime": 1947,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d856e368-63e0-48f0-9523-b8d7614e965d",
        "cursor": {
          "ref": "12e9cd21-30e9-4634-a442-03ec3dd85c27",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "24db6480-9549-4ed7-a8de-0fa14dddb90b"
        },
        "item": {
          "id": "d856e368-63e0-48f0-9523-b8d7614e965d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22f3ecf3-212e-4f83-b9fa-07d94337f470",
          "status": "Created",
          "code": 201,
          "responseTime": 1993,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f959c6a6-84a9-48fa-b55d-57e4ada3498d",
        "cursor": {
          "ref": "c86bce68-fbd8-4b92-b184-aaea92b36931",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5e11e829-d7fb-4561-8cdf-1794c38a98a9"
        },
        "item": {
          "id": "f959c6a6-84a9-48fa-b55d-57e4ada3498d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47df0d66-7605-46de-8e00-492d4391eb49",
          "status": "Created",
          "code": 201,
          "responseTime": 2133,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "18020871-beae-438f-9a0d-def3d4417033",
        "cursor": {
          "ref": "5136534a-e64c-4756-b623-1125f9291010",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1bd07b72-313a-4485-8c4c-c7557457f079"
        },
        "item": {
          "id": "18020871-beae-438f-9a0d-def3d4417033",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aae61a45-84d0-4ea2-acf7-95973c506ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e2b2ce1f-044a-45b3-847b-e8c4ca5690d6",
        "cursor": {
          "ref": "4de6cb30-015c-4d73-9e17-1618b5aa233f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "297b3131-9a2c-49aa-af5c-515c3bb606a4"
        },
        "item": {
          "id": "e2b2ce1f-044a-45b3-847b-e8c4ca5690d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc1428c4-8247-4732-b52d-5e1518b7fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161b95ee-6794-4d41-8ce0-c3c7c9750ac3",
        "cursor": {
          "ref": "173eba4a-aeb4-464e-a1e9-fa439b40f4f7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4065b209-fe3a-42e2-9046-e50ff2662b88"
        },
        "item": {
          "id": "161b95ee-6794-4d41-8ce0-c3c7c9750ac3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cde3f260-d28d-44cc-aa9a-c498da910000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f9c3b8-9f1e-4dbc-9666-2c19f6748804",
        "cursor": {
          "ref": "bd401e4a-79bc-4e26-8023-4b950ccf15b2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "de7f9019-f533-4e3d-98ea-3e04729d3d75"
        },
        "item": {
          "id": "62f9c3b8-9f1e-4dbc-9666-2c19f6748804",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf46367a-4665-4856-9471-5e1a2a08efba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3c465-2ec8-41b5-9245-cf3722b17c92",
        "cursor": {
          "ref": "05b0f3b2-f502-43a3-b6d7-93e95c3fc976",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ba700338-3bf2-4e26-84e9-cdcf1fdf394c"
        },
        "item": {
          "id": "2dc3c465-2ec8-41b5-9245-cf3722b17c92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dba33056-4224-4071-a7fc-fcd5d68364b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58e59e2-4fd7-4a29-8544-acb187ea9d31",
        "cursor": {
          "ref": "af3aec9a-752a-4c78-9336-e261ca9e061d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "75eb0fcc-4031-4f27-92c2-57c1db4dc071"
        },
        "item": {
          "id": "a58e59e2-4fd7-4a29-8544-acb187ea9d31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "369604f1-75fe-45af-a95a-e85706fe1c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be2dc6-426e-4489-a9af-3ced864d5a2e",
        "cursor": {
          "ref": "e886eedc-a83c-4bac-9163-3664522f8276",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c61feb9c-95a2-4290-ab0a-fe3240f3e887"
        },
        "item": {
          "id": "b1be2dc6-426e-4489-a9af-3ced864d5a2e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55614a19-d5e1-4d1e-a17f-fcbbe58d5325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcb343c-0bba-4ebd-b919-a7d05024c445",
        "cursor": {
          "ref": "0b5f28a3-538f-4b74-ba95-be7283f2e114",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7b569e97-e5b7-4ebf-a9f9-6ca124bca06b"
        },
        "item": {
          "id": "5dcb343c-0bba-4ebd-b919-a7d05024c445",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "87a0a4de-f476-4de9-b531-7d6308a09b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be866fe3-5514-401f-bdcd-324cf7e0696f",
        "cursor": {
          "ref": "6e1461f9-a828-4050-9a8d-eca9bc4997d5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9e7e7108-3024-482d-9643-702c220af2b2"
        },
        "item": {
          "id": "be866fe3-5514-401f-bdcd-324cf7e0696f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "76c5f430-b66d-4bd4-a31f-1d6fca80365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e2fe07-4a28-4667-a843-9d36febae16d",
        "cursor": {
          "ref": "3e892beb-c3f4-4aff-9127-36e8174c8806",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "779e3e9b-138c-4214-b171-c57f49408321"
        },
        "item": {
          "id": "69e2fe07-4a28-4667-a843-9d36febae16d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4ce842ec-0535-4899-9db3-07f7396e7edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17906dd0-d78d-4baa-a7c6-ed9b69760a82",
        "cursor": {
          "ref": "f1cc6aa3-ce70-4d6e-a5c0-e2633113451e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b82239c5-7acb-4ce2-91eb-3b5f1345e22c"
        },
        "item": {
          "id": "17906dd0-d78d-4baa-a7c6-ed9b69760a82",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3e50ec37-bb85-4ad6-96a8-b3769080959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7efaf-ca70-4d33-b838-4c0ec993c03f",
        "cursor": {
          "ref": "aefd80d5-64be-4931-951f-a5f716ab0b6e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5d4055d5-905d-4a87-a4b8-3a9ad2e78320"
        },
        "item": {
          "id": "4be7efaf-ca70-4d33-b838-4c0ec993c03f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d25cbb0d-3c1c-4078-8431-19a557017cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8129c8c3-7f35-4b5d-8115-bbbd0092da77",
        "cursor": {
          "ref": "5106c2fb-12b3-4d16-91d6-2ddf94a3090b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9f3e8d41-a4ea-4d57-8be1-48cd4b81ef44"
        },
        "item": {
          "id": "8129c8c3-7f35-4b5d-8115-bbbd0092da77",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d86e5bb3-c19c-4ff9-a5b2-8ece31470623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353a9f3c-798e-4a87-ae94-c43d38719b5d",
        "cursor": {
          "ref": "9a1973aa-24b4-4789-aa48-478a1f972e78",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0c07916-0a3f-4d67-85c4-34b41fe756fa"
        },
        "item": {
          "id": "353a9f3c-798e-4a87-ae94-c43d38719b5d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec672154-a5ff-4d2b-b805-54a0c1d3363c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e460b3ea-437d-4ada-a3dc-4f7f4a65ade7",
        "cursor": {
          "ref": "cd3eea40-9f81-4d9e-ae23-7b67c3328140",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f9581467-1afd-49e4-b445-a523544b0c3f"
        },
        "item": {
          "id": "e460b3ea-437d-4ada-a3dc-4f7f4a65ade7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f1073039-0acc-493c-8c68-a12eb232fd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828aeac1-141e-434a-b331-720f5ee39246",
        "cursor": {
          "ref": "4049cc2e-cf38-4e26-ab33-e6c96d5b5e3f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f273012e-c911-4231-8cdc-94e3e760fbf4"
        },
        "item": {
          "id": "828aeac1-141e-434a-b331-720f5ee39246",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b88a7660-4206-45f2-a77d-8ee7d9efde73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ad6da-6132-4682-aa6d-fab89d7917e5",
        "cursor": {
          "ref": "273717df-af95-4d49-b829-047399d7f4c9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a8e6dec-44f2-4b66-bb08-3859b9136371"
        },
        "item": {
          "id": "f51ad6da-6132-4682-aa6d-fab89d7917e5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3a0508c8-d9b3-40f1-8cea-357b4462a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f731752c-377c-493a-bb9a-aa10b4ea383e",
        "cursor": {
          "ref": "688e0c90-1802-4b8e-9c12-3b1a8dea0ffa",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e6187afd-631d-4163-8470-dbcb85b045d9"
        },
        "item": {
          "id": "f731752c-377c-493a-bb9a-aa10b4ea383e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9e643b4-e5dd-4361-a64d-f910943aefd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0267e295-9a68-4e9e-94ee-cb2c9ea47323",
        "cursor": {
          "ref": "ffdb00de-4b21-41ff-85fd-b81b66015f45",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a9e92f75-eb2d-4ae1-83ad-a1f73a02a19a"
        },
        "item": {
          "id": "0267e295-9a68-4e9e-94ee-cb2c9ea47323",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65d1f9c5-8811-4be5-b0ab-336fb942809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4ed605-dd60-47de-ad44-543b22076c1f",
        "cursor": {
          "ref": "8e4ce006-285e-4317-9ada-fd4e21e35fff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b8e00e82-854d-4449-9064-6784072e8f55"
        },
        "item": {
          "id": "eb4ed605-dd60-47de-ad44-543b22076c1f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b63cc5b9-3246-4c4c-8680-8e542499b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc18145-bad5-48d8-b565-85d12d5f77d2",
        "cursor": {
          "ref": "7d4cc2ce-225d-4c1a-ba17-69cbea59c8e6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16ead35d-a815-4018-b4d9-fbd0f0c960b8"
        },
        "item": {
          "id": "adc18145-bad5-48d8-b565-85d12d5f77d2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1d075391-6415-4c97-b11b-64bf8e337f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fcb95b-2328-49ae-8dba-188cd3debbfd",
        "cursor": {
          "ref": "98b36bf5-be1c-441b-9c9b-eefff21dd246",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c90f4afa-bc78-45e4-a197-e74402e5d41c"
        },
        "item": {
          "id": "97fcb95b-2328-49ae-8dba-188cd3debbfd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7b459754-46a9-4fa8-b693-c4b38edb3de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff283e5a-9805-4bf1-95e0-1a70d87dbcfe",
        "cursor": {
          "ref": "9bd8b8cc-03d8-429c-ba91-7ec0e2a3c6ed",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3e278b3f-8367-4623-b22f-ec618015a539"
        },
        "item": {
          "id": "ff283e5a-9805-4bf1-95e0-1a70d87dbcfe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8cf5079-2f5f-493b-aae9-3128ec1049d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6789c7a0-1669-4fd3-9465-b29acdb90687",
        "cursor": {
          "ref": "68e69b0e-22e7-4e08-9bf8-d94f13cc57dd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1f63426b-6b7a-4b2d-83e6-dd80cbb76d8d"
        },
        "item": {
          "id": "6789c7a0-1669-4fd3-9465-b29acdb90687",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "200158f3-2cf2-4933-9826-c4a9a2b509f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e1dad0-63fd-42ed-b7d3-4cb56cd4e6ce",
        "cursor": {
          "ref": "bd3657d9-e64b-47c2-9906-5e21ee6d2722",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eafbd5f8-2f28-4332-a966-495b6587ac01"
        },
        "item": {
          "id": "f2e1dad0-63fd-42ed-b7d3-4cb56cd4e6ce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "63a32811-7649-4548-a52f-e0ab85e75128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32227bfc-fb1e-4235-970d-703b9b77a95f",
        "cursor": {
          "ref": "8ba50193-3ddd-4406-8cff-fede09e19a57",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "174beeb2-32e4-483c-9980-59b565200d7e"
        },
        "item": {
          "id": "32227bfc-fb1e-4235-970d-703b9b77a95f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "333450b1-5ec7-44e5-a4dc-0cedef0a8e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b40985-51b3-4df4-9403-6eef5ad8b291",
        "cursor": {
          "ref": "28b31835-458c-4389-89c5-777b7e242cdc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c491e6b1-77f0-415c-9876-e192a5d602b4"
        },
        "item": {
          "id": "73b40985-51b3-4df4-9403-6eef5ad8b291",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "19d61905-b23a-41a1-83a6-c0b970208721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869605a1-42a9-4f04-8885-b452b11b88ff",
        "cursor": {
          "ref": "13ea0030-65fb-4dd3-8492-99454a5fe43a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3306b66e-ba7d-46c3-b8bf-48f77053cdfc"
        },
        "item": {
          "id": "869605a1-42a9-4f04-8885-b452b11b88ff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ccf3d695-f0a9-4219-960f-4b2015cb50ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80911532-ef25-452f-aa71-9f212909ada0",
        "cursor": {
          "ref": "8a38acb4-c317-40a8-962e-39c16c587a77",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "03df16d8-dd22-4288-ba4c-0ce4413a39ac"
        },
        "item": {
          "id": "80911532-ef25-452f-aa71-9f212909ada0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "992a72b1-1dab-4cb2-9ebd-99281a33bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b05de9d-ddb9-46eb-a2c3-1cc82171d418",
        "cursor": {
          "ref": "4565e384-e9e1-4319-b39b-f08a472be921",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4967b51e-665e-4b0b-99ad-5e898f22a3d4"
        },
        "item": {
          "id": "6b05de9d-ddb9-46eb-a2c3-1cc82171d418",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3b085b7-fc7f-49dd-a28d-44b1d79451c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43efc05-efed-4a7a-a091-f2b759daa385",
        "cursor": {
          "ref": "f6f37619-921a-49dd-a815-c2b24e8c43eb",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "db42ce71-33e8-49e8-bbb2-cb511904e7bc"
        },
        "item": {
          "id": "a43efc05-efed-4a7a-a091-f2b759daa385",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a82e7600-1e48-4c74-8da4-bee722c10553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539b92d-8d45-4c84-8a33-08930c4d745e",
        "cursor": {
          "ref": "5843030b-af0b-4bfa-b1a5-6ac094edb781",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7d6cc28e-be49-4cb9-9746-4dc3d96b305b"
        },
        "item": {
          "id": "8539b92d-8d45-4c84-8a33-08930c4d745e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ccbaadc6-84aa-4897-ab00-cd71df09eaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6822428-c6c9-420f-a685-89f69b3c982c",
        "cursor": {
          "ref": "11349045-26e2-4d98-8c04-afbe32e849e0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a0b224fc-51d4-49cf-a0f4-5ac490befdcd"
        },
        "item": {
          "id": "b6822428-c6c9-420f-a685-89f69b3c982c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "23acc0d0-6ec5-4444-b393-4c1677ae30d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c2cc91-d186-4174-94da-184fb5c1fbfa",
        "cursor": {
          "ref": "161c10a1-7aaa-4371-a69c-5f0ddf32fe08",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1cba1a84-205e-4ed2-aada-350fb7a3fef3"
        },
        "item": {
          "id": "d2c2cc91-d186-4174-94da-184fb5c1fbfa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "359032d2-db34-4da3-a89e-9ca7f6c7a2cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf54b1-fa5d-4245-b0fa-edad943fc65c",
        "cursor": {
          "ref": "06f1c3b7-c258-45c6-98d0-df7c96b2c833",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9a9a6414-2ace-4b6f-98f3-291d86efb47c"
        },
        "item": {
          "id": "bccf54b1-fa5d-4245-b0fa-edad943fc65c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f11b638-2627-4ed9-952c-58e57e114456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0e3d52-da9d-4503-b707-18080475faaf",
        "cursor": {
          "ref": "92f152b1-5381-4760-b20b-e068d791b65d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15464f01-3f6d-4d61-82d7-101c04bd0334"
        },
        "item": {
          "id": "1b0e3d52-da9d-4503-b707-18080475faaf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68b7d58a-991f-4096-86c5-fd68aa1a44ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b58c9c-601a-42b6-ac38-a1d06f9acd31",
        "cursor": {
          "ref": "78dc6255-70b9-4cf6-b5be-e1cb9ee6559e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "94f66276-768b-4d11-b6b0-81324d5a0559"
        },
        "item": {
          "id": "f7b58c9c-601a-42b6-ac38-a1d06f9acd31",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f691cf2-5869-4c89-a1bf-1dcc8b6f7005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb46d41-d823-4335-bd1a-38c6521fbe2b",
        "cursor": {
          "ref": "0c41e5aa-0918-45a1-ad98-924623da8636",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3dee8215-d8c0-4d2e-8bdb-d2f6ca028574"
        },
        "item": {
          "id": "4fb46d41-d823-4335-bd1a-38c6521fbe2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa60875b-e46a-4feb-8d01-2503f5173e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef146c7-ee1d-4719-a3d8-3c248af08a2e",
        "cursor": {
          "ref": "9e7422b0-911e-4bd4-9489-ce9f8f03257c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ebf7c95-26e7-4067-bfb0-336ea6750668"
        },
        "item": {
          "id": "7ef146c7-ee1d-4719-a3d8-3c248af08a2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f880f96c-9369-4c78-ae6c-d2e21e2d34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ab6c04-32c7-4447-ba0d-853353796f9a",
        "cursor": {
          "ref": "b9ce08e1-ae3a-4ed7-b24d-5a6dec92e34a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f778061c-3a30-4011-9105-9c06d2954fb1"
        },
        "item": {
          "id": "27ab6c04-32c7-4447-ba0d-853353796f9a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2f69e317-beea-4fa2-be5a-c6aaceecbef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae1c3db-4c60-4c3e-9688-13e6c1ba55ac",
        "cursor": {
          "ref": "a51b8587-fd15-4481-bc0f-54f7caa29d0f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "20c20923-0f7d-4ac1-a174-1d2fdc343644"
        },
        "item": {
          "id": "aae1c3db-4c60-4c3e-9688-13e6c1ba55ac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1346068c-4013-45e7-afd7-00403213a8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c3c7f7-d766-41a7-b8c5-322cb8213457",
        "cursor": {
          "ref": "aa061035-c3ec-4112-bbc2-df095f25d17e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "46f66358-7505-4bb3-8ff1-a4395d281c08"
        },
        "item": {
          "id": "55c3c7f7-d766-41a7-b8c5-322cb8213457",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6860c8e-cadb-47ee-bd32-abc289187fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c9e235-a60f-4f06-ba24-2584b56b840f",
        "cursor": {
          "ref": "71581230-e4bc-4ed7-a696-537e7320d4fe",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee8a1bac-7e47-4704-92e0-8dcbfbdcda91"
        },
        "item": {
          "id": "86c9e235-a60f-4f06-ba24-2584b56b840f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48baf5f7-1afe-4d58-b54e-e567f1446750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7c10dc-569b-4dcb-bc5b-b8a1e184fa78",
        "cursor": {
          "ref": "6b5248a4-d9ce-4da4-80da-7e8196f0b0fb",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "48b8a7a0-810d-4c2c-8baf-d0d4ec8dfb9b"
        },
        "item": {
          "id": "de7c10dc-569b-4dcb-bc5b-b8a1e184fa78",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fecdd47-21f0-4f33-abcb-473d41e8549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ec8e5-5c9b-45b2-ba8d-c637ab85a6ec",
        "cursor": {
          "ref": "14e5fe45-c2e7-497f-b3e2-aa6bb3723a18",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7936701a-0261-4b5b-9638-073e2d9ff136"
        },
        "item": {
          "id": "ef1ec8e5-5c9b-45b2-ba8d-c637ab85a6ec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "076506e0-5d49-489d-96fb-f9a2cfdce7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163e599e-fec1-4c0e-9a1f-ff5e5a56c314",
        "cursor": {
          "ref": "d96a4c96-b576-4d61-8229-52c6992dc156",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "baf0600d-57e2-4b2f-984e-a36228d9c022"
        },
        "item": {
          "id": "163e599e-fec1-4c0e-9a1f-ff5e5a56c314",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "254478d4-a843-4a3b-8b62-278b98a95184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239962bf-9ed2-48db-a28d-d8c8dd8270e6",
        "cursor": {
          "ref": "2d13cac0-2cbc-4e3a-9bbe-21150ab040e3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8fd8570c-d1ae-465e-9002-5ecba1750037"
        },
        "item": {
          "id": "239962bf-9ed2-48db-a28d-d8c8dd8270e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "452d4ff6-3fe7-4b59-9271-48fb239efaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee0078e-9b12-464e-9661-a911db4337c2",
        "cursor": {
          "ref": "a5bb0ac2-f436-4b15-a3bd-bda513231507",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "848a0b0d-f3b7-49ea-8375-4b5b16c67041"
        },
        "item": {
          "id": "1ee0078e-9b12-464e-9661-a911db4337c2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f29451dc-74ef-479a-8061-69fa0871a71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709869b5-ed00-4f8e-a047-5a3ecb1c6ef1",
        "cursor": {
          "ref": "80df2962-f838-4c36-ba5c-1dcbb6aa81b2",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cc86865b-ecb6-46c9-897e-33bed2e113e3"
        },
        "item": {
          "id": "709869b5-ed00-4f8e-a047-5a3ecb1c6ef1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "804cf03b-7cf5-4364-be79-e69735ed1691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af1ba9-a67e-4640-aa15-2507fb6c2f67",
        "cursor": {
          "ref": "52b29159-729f-445a-98b5-578f67ed9529",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "33a12c1a-fbb8-424d-810f-56528eda020a"
        },
        "item": {
          "id": "e6af1ba9-a67e-4640-aa15-2507fb6c2f67",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e2ca2deb-5ed4-41d3-8269-cd5ee0ed2165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c745d94c-b84f-4960-b3f9-7558eb8ee542",
        "cursor": {
          "ref": "b358bfda-466c-4be6-aa86-cd4c77a4c596",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aa4b764b-54dd-471e-8863-bacc9ed30fb5"
        },
        "item": {
          "id": "c745d94c-b84f-4960-b3f9-7558eb8ee542",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "00952938-bc14-46f0-87fd-e2a3350cb7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8686f491-02e9-4a0b-ba09-055fb25713d2",
        "cursor": {
          "ref": "c457adf1-66e7-4829-9e4c-cda7fb530067",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7833573c-00ff-4382-8bc3-25145b8ee326"
        },
        "item": {
          "id": "8686f491-02e9-4a0b-ba09-055fb25713d2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a6b7638d-1f68-49a6-b515-7bf51b2f297a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b025746-fd02-46ca-a90a-8e91ef0257f2",
        "cursor": {
          "ref": "ba5ac07c-04f0-40c5-baf6-f8dbd6088554",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "638cbe3d-65da-4dac-8e4c-2da42f885458"
        },
        "item": {
          "id": "2b025746-fd02-46ca-a90a-8e91ef0257f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "03c4bbc2-c12b-49bd-925b-e841b086f498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4583aaeb-7dbb-4aa7-93a9-129ba362a988",
        "cursor": {
          "ref": "7312a378-6feb-41f0-8590-63b42e739662",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be9f5e9f-1a37-492e-a4a9-230440610429"
        },
        "item": {
          "id": "4583aaeb-7dbb-4aa7-93a9-129ba362a988",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2f186ae-2303-40af-bac5-fbd84954586c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab37676-a8e2-4908-8937-2e271c216c73",
        "cursor": {
          "ref": "771e5bc5-1ccb-4ad5-919f-2c476064138a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a32b5660-54c3-422b-9c9a-bd28144123a2"
        },
        "item": {
          "id": "aab37676-a8e2-4908-8937-2e271c216c73",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27d3778b-789c-4401-80ca-b06902705fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aec057-ed39-4af3-92af-6ac2c409ab70",
        "cursor": {
          "ref": "2c3c4117-a723-4fa7-919b-5472ad4c3a01",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a343c871-d49b-4720-b8aa-58a8dcd72379"
        },
        "item": {
          "id": "f5aec057-ed39-4af3-92af-6ac2c409ab70",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff976c17-f17e-4983-a7e4-82e1ea2c08f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a607cd1f-9575-4282-b32c-11be7fbbcd0e",
        "cursor": {
          "ref": "6d7b4d84-4795-4b60-9ab4-a34bf8c38e8d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "af78e616-5a75-403c-80a1-63000b99247a"
        },
        "item": {
          "id": "a607cd1f-9575-4282-b32c-11be7fbbcd0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7225f0d-bfbf-4c59-a930-4320eef932f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a959bb6-14ce-4bb6-bc1e-5f65023986a5",
        "cursor": {
          "ref": "1bebea56-37e2-4398-becf-bf9da57e337c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a23ce579-d3e3-4728-9d23-a4ecf722dcf1"
        },
        "item": {
          "id": "7a959bb6-14ce-4bb6-bc1e-5f65023986a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c82ce464-fc36-4fb8-9322-fc0a9e81fd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0722ec5-f93e-4717-a484-a7d99a57bfeb",
        "cursor": {
          "ref": "4d0a8358-b074-46d4-be9b-0edc8cda888a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2c712e0-7e12-4921-a2a7-d6c106c342da"
        },
        "item": {
          "id": "d0722ec5-f93e-4717-a484-a7d99a57bfeb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71fe4494-7735-4c0b-a7cd-fbef1149ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752aa841-5a18-40bd-9173-12533e04cb1d",
        "cursor": {
          "ref": "9933434f-21b1-49fa-a789-c72f1e5fd07d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8200f0da-aeea-445d-bf9d-afcaa684a9f5"
        },
        "item": {
          "id": "752aa841-5a18-40bd-9173-12533e04cb1d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16dac16f-a0f5-46c1-acae-f26ba91adb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac8eb4d-a0d7-42f9-b234-35fa94ab115f",
        "cursor": {
          "ref": "139c09ba-49df-43bc-b2b0-246bc9d8244e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b22bae38-8f9c-4a91-9333-e0cfe4803862"
        },
        "item": {
          "id": "cac8eb4d-a0d7-42f9-b234-35fa94ab115f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "64a16538-02f1-441e-80aa-834570c82bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b23b3-3960-417d-8939-2f8c7f030edc",
        "cursor": {
          "ref": "f1558a67-5d7b-486b-b468-b843887ce7ce",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a99d83e0-c9d1-4809-8157-e7cf754ac462"
        },
        "item": {
          "id": "bb4b23b3-3960-417d-8939-2f8c7f030edc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef47e8de-8d8d-4902-b10f-76ae730eaeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999344f-79f7-47f0-b22f-96fa45a47ebb",
        "cursor": {
          "ref": "25cc41ec-7c54-4ee1-8b4d-afd7dbda9f2f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2bb036be-28cf-482a-81e3-bbe4f39de961"
        },
        "item": {
          "id": "d999344f-79f7-47f0-b22f-96fa45a47ebb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b47dd168-895a-4e90-b1f0-71a158dd5539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30136d53-a530-4928-ba7e-338168cb83e4",
        "cursor": {
          "ref": "9772b855-eeae-41ed-b1c7-cb318316d5b5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "213bfbac-7bcb-436c-a239-c8bbb664fe20"
        },
        "item": {
          "id": "30136d53-a530-4928-ba7e-338168cb83e4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2d4fb80-d5b7-4952-b87b-b6e2ee31e620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724b2b51-9dea-456b-9072-b6aa401f0a07",
        "cursor": {
          "ref": "ad63c9f8-d16d-4ce5-b3c5-561cc58be5a4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d2e27e0e-4acc-410d-8aaf-e0ec5d42f8ff"
        },
        "item": {
          "id": "724b2b51-9dea-456b-9072-b6aa401f0a07",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "47f4ee99-8ffc-45de-b23c-94f7cbb89a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36683a21-af9b-44af-9477-f2264fea9169",
        "cursor": {
          "ref": "92d7e293-8a53-47a3-b7e2-80860660ed03",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ece00cef-4896-439c-800a-43a076e6c860"
        },
        "item": {
          "id": "36683a21-af9b-44af-9477-f2264fea9169",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8a04d576-62f6-4d26-93f8-ec0995ea5d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38221170-1336-4c48-9d90-812d626ab239",
        "cursor": {
          "ref": "07776026-c698-42df-a557-747c9ede1cbd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b8347fab-ca23-4005-9b59-a3afefc3cf2d"
        },
        "item": {
          "id": "38221170-1336-4c48-9d90-812d626ab239",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "498fb547-100d-4df6-ace1-804f59aeda89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317ec036-e3e0-4566-81f4-b9e09aebdca6",
        "cursor": {
          "ref": "8324f0ae-5ed7-43af-b3f4-b22cbf0c4a1e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "38c5d998-1e3e-43ca-8ac4-cf0b2ee70568"
        },
        "item": {
          "id": "317ec036-e3e0-4566-81f4-b9e09aebdca6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "576e379f-39ec-4290-a6a2-5ab3636d8d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0bd89b-8d96-47b7-bfd4-9cece73d10f4",
        "cursor": {
          "ref": "a090829a-48e0-4d3c-926f-c563d9289f25",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7757759d-3553-4a9b-a574-33611e1a20bd"
        },
        "item": {
          "id": "1c0bd89b-8d96-47b7-bfd4-9cece73d10f4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c3da00d0-6abd-48be-955c-8e66b299f9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f79d3d-df28-4e1b-b5c0-d623ff0f4439",
        "cursor": {
          "ref": "3ad95b5d-0d8d-487b-b24c-59ebc9108594",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0aaaa2aa-f6d3-4562-b045-62da9202175f"
        },
        "item": {
          "id": "68f79d3d-df28-4e1b-b5c0-d623ff0f4439",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ddaedfa8-8c44-40d6-84b3-dc431e011556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed86199-408e-44ba-81c9-9770e8f37295",
        "cursor": {
          "ref": "030663a4-eec3-4785-ba41-6ac25beaa276",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "acf7be7d-1dde-4291-b139-9e4603d3f49c"
        },
        "item": {
          "id": "fed86199-408e-44ba-81c9-9770e8f37295",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0839e995-9107-45a5-8043-9f00ecb315de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb106b3-7370-4dd8-83cb-9da55088692e",
        "cursor": {
          "ref": "1cebc86a-205b-4e66-b573-198bc2a2834e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d50b72c7-6da8-48b7-9da8-73f0e278d138"
        },
        "item": {
          "id": "cbb106b3-7370-4dd8-83cb-9da55088692e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "94cd3c85-a011-48db-8f8e-796f10cf49fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc927fc2-0673-44fa-8547-6e14809fab01",
        "cursor": {
          "ref": "7c3aa9d9-48ee-4a33-b084-dec9d8ca336f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67dc6e0f-5c5e-4606-b176-78ccbcc4de50"
        },
        "item": {
          "id": "bc927fc2-0673-44fa-8547-6e14809fab01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d74dc012-ec7d-4dc9-a607-c478a9030383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3113a16a-c939-40f5-8132-8d43a15e69f9",
        "cursor": {
          "ref": "4be90628-af9c-4625-8912-b7d86c12d0ae",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3d776449-66bc-47e0-97c1-99a7db1c07d3"
        },
        "item": {
          "id": "3113a16a-c939-40f5-8132-8d43a15e69f9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "064d831a-fb2d-4eed-a57a-55b81ab29904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4554fe84-f546-4a3b-bcff-489eda9aeca7",
        "cursor": {
          "ref": "c0a5206f-8a1c-49c8-90de-7645bdc2d3f6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50323268-cc1e-4f11-8ac5-bef265dcabd0"
        },
        "item": {
          "id": "4554fe84-f546-4a3b-bcff-489eda9aeca7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f5f3e4bc-000c-4353-bb2f-9005bca77f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a078df1-db6f-432b-a498-6bdab3185820",
        "cursor": {
          "ref": "c73b5727-0642-49cc-8bfd-4f848ea10cee",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5547fa47-4e6c-4a11-92a7-4853bf2e34ac"
        },
        "item": {
          "id": "3a078df1-db6f-432b-a498-6bdab3185820",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "35387941-44f2-48a2-a279-26682a42e5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d0a92-c4fb-47cf-b92f-5ad863e4096b",
        "cursor": {
          "ref": "929d9a63-d519-4c2d-bff3-887c9954861f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "effed6f5-a3af-4937-9ed0-d03fdca852fd"
        },
        "item": {
          "id": "8d3d0a92-c4fb-47cf-b92f-5ad863e4096b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a5b942d-6f3a-4761-92d6-c07f3f869e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9990defa-4029-4b52-8dcc-098570252b98",
        "cursor": {
          "ref": "3a794393-df90-4f6d-aa81-853584a87f5f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bdb1171f-4917-4305-a23e-050a3905cac7"
        },
        "item": {
          "id": "9990defa-4029-4b52-8dcc-098570252b98",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "00d16c6e-edd1-4a0c-bcc0-3da0894a561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf94cf2-b316-4aea-8840-8b0839271cf0",
        "cursor": {
          "ref": "35222a5a-a9c0-4b37-9a12-3edd9d81d1b0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c2348a1a-fe11-432a-887e-fe9384061945"
        },
        "item": {
          "id": "fcf94cf2-b316-4aea-8840-8b0839271cf0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "64896f37-4190-4e9a-a170-2d27f8b49bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5de242-9ef9-4d40-9950-25719e0e732d",
        "cursor": {
          "ref": "3fcdcde5-10fa-4025-aa08-ce45118f4923",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d674f322-a6c7-4ece-a9c8-9bd13ad59f5c"
        },
        "item": {
          "id": "ad5de242-9ef9-4d40-9950-25719e0e732d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b8eada6b-e3de-4e8e-9e2b-520f60d5f0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36856455-18b3-4ab0-aad5-d483d5a84518",
        "cursor": {
          "ref": "f1b1a9bf-3add-49ee-ba29-b4d1726c9b66",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "75f2734b-b1b9-470a-a6c6-9a45b3110ec7"
        },
        "item": {
          "id": "36856455-18b3-4ab0-aad5-d483d5a84518",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2e2afc5-08e3-45a4-ac6f-be1eed6ed7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af9a1ff-e147-4076-91bb-b15b1212f531",
        "cursor": {
          "ref": "06a83a04-126d-465b-802d-a09687f9b889",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "88738012-9f3f-4b0f-914f-8e129ed7c28e"
        },
        "item": {
          "id": "0af9a1ff-e147-4076-91bb-b15b1212f531",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "871d019a-5c1f-4fe2-bbe7-35f0a0d9149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7d0ea0-2883-47e9-a8c8-8207ff42f023",
        "cursor": {
          "ref": "98bebf3f-349f-4022-a619-30152dd65873",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3710546b-32f0-461a-84d1-a67c0d3532d9"
        },
        "item": {
          "id": "5c7d0ea0-2883-47e9-a8c8-8207ff42f023",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "850d168a-37ee-4822-ac90-f2f5bb103b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad6dc46-9cf4-4fc5-b628-f194d030b087",
        "cursor": {
          "ref": "fa479b65-189b-49b7-8f51-6a37776f37ed",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "af10be0c-441d-4b1a-8bf3-410412ea8dbf"
        },
        "item": {
          "id": "7ad6dc46-9cf4-4fc5-b628-f194d030b087",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5c80e3d8-cd89-4d1b-960c-1334c6cafb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed4ef88-3c9b-402e-b710-edfe8b27c83c",
        "cursor": {
          "ref": "2076f89d-9e60-4caa-a65c-3161c333b724",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "42675312-d5c7-413f-a859-9224d333087a"
        },
        "item": {
          "id": "0ed4ef88-3c9b-402e-b710-edfe8b27c83c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "26a2d405-5247-4874-84ef-57c8e0a401d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777232c4-947e-459a-8267-298bcf95c94f",
        "cursor": {
          "ref": "5dfb4c12-0b21-40cb-8a22-044f940232e4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff355da1-976f-4a84-b488-d1962fbe0b4a"
        },
        "item": {
          "id": "777232c4-947e-459a-8267-298bcf95c94f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2be429fe-b06b-4a17-8133-6fee91b83f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42c91b9-98f0-4da5-abf9-7b18f6b897bd",
        "cursor": {
          "ref": "75377045-e506-467a-9249-6b30cf312827",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3fa63253-7443-484c-b005-06c079b0403f"
        },
        "item": {
          "id": "b42c91b9-98f0-4da5-abf9-7b18f6b897bd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b57fdd4a-26d3-422b-9e56-f34ab39e3425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609ae985-df61-4032-92bb-4c5576212b41",
        "cursor": {
          "ref": "fbd7b54f-ec75-4863-b9a3-9c91888f9225",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "809b5af6-07e9-43eb-9a16-447766dc840a"
        },
        "item": {
          "id": "609ae985-df61-4032-92bb-4c5576212b41",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1bea353f-335b-41e1-a44f-5ef618558706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421e69e6-9c36-4a17-b699-1a50dc2a29a6",
        "cursor": {
          "ref": "6b12cb7d-e6e2-4b43-9a17-7df773273880",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d9477e95-5214-4f88-bf3e-9eca09f89d28"
        },
        "item": {
          "id": "421e69e6-9c36-4a17-b699-1a50dc2a29a6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ba0568c3-08f9-4336-9e40-bc4e3f5d9d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c92fdbd-1397-4ebd-9f1f-671070c178e2",
        "cursor": {
          "ref": "81295189-bda6-4f57-a0f7-5a020bb33627",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "047d8a62-3a91-4a0f-9136-581d9dcab4b4"
        },
        "item": {
          "id": "9c92fdbd-1397-4ebd-9f1f-671070c178e2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8d9cd2e8-11b4-4e68-bce9-0e93c00d42e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfc468-7b0f-4bf1-97db-6dc3274242ae",
        "cursor": {
          "ref": "a47f44ab-977c-4978-8d4b-f3516d245cff",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "58e5933b-b4c7-40f6-863b-a652517530d2"
        },
        "item": {
          "id": "56dfc468-7b0f-4bf1-97db-6dc3274242ae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "471bb1c4-89ff-4ca2-a4fb-73bb6467ce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2976a0c-9472-4f8a-a48c-f07f39c61b1d",
        "cursor": {
          "ref": "e567670c-fea1-4cda-bda4-b559d50e2158",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "794425c9-74cb-420f-b104-ce0abe8eedb6"
        },
        "item": {
          "id": "b2976a0c-9472-4f8a-a48c-f07f39c61b1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "031b9338-c73e-4236-8b50-cd74d43b720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070570f4-6ff9-4724-ac7b-03f190d341c5",
        "cursor": {
          "ref": "20e7ea9b-6209-4041-8f3c-5ae87143de2a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4d57ff43-ce08-4af3-867a-6ca461956efb"
        },
        "item": {
          "id": "070570f4-6ff9-4724-ac7b-03f190d341c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "534df980-0a5c-4c6e-8dd1-a958d0318fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769382d-92c5-4d9e-82a3-8e424aa874f8",
        "cursor": {
          "ref": "2a986864-bad8-4cb2-b7a0-11f32df5233c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "de63e2f0-d710-4c19-beab-8b2223d323db"
        },
        "item": {
          "id": "6769382d-92c5-4d9e-82a3-8e424aa874f8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5aaabcb9-84ea-4184-9c4b-dc39c2829dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006bad5b-2f53-45ab-a165-f94bc9f513aa",
        "cursor": {
          "ref": "7673e917-e37c-4a20-bfd4-695bdc07d5c7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7309931c-7883-4af8-9360-0af7b7dde95f"
        },
        "item": {
          "id": "006bad5b-2f53-45ab-a165-f94bc9f513aa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb8ffc45-14fd-4391-b04c-5e93fe806e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae77a03-750f-4915-ac56-e9b27a2cbec4",
        "cursor": {
          "ref": "bc905917-d0f1-45f7-ba9e-59a977fa2e20",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "49c079ba-5bb1-42ff-974e-7da6b76e265d"
        },
        "item": {
          "id": "aae77a03-750f-4915-ac56-e9b27a2cbec4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5d272cd9-87cc-496a-90b2-bd078a92b0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494cada7-a8e1-4aee-84ad-2c3501bfab66",
        "cursor": {
          "ref": "4ff6d908-92c2-4c7c-9bbd-6fd3df3ed0f9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e0b11a06-bc96-4caf-92ac-7147d3d8d172"
        },
        "item": {
          "id": "494cada7-a8e1-4aee-84ad-2c3501bfab66",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c5abe537-9101-4e38-bdba-cee2d56f4141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8472bff0-051e-4905-a2b7-57a94457b92b",
        "cursor": {
          "ref": "01cd9d60-5c4e-4650-8488-b3e63088a06c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87a87e39-fd01-43f1-a1b1-1fe3c5ec3041"
        },
        "item": {
          "id": "8472bff0-051e-4905-a2b7-57a94457b92b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1aa04f39-abe2-4310-8399-12406b1de665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4660585e-29f5-4180-b210-425b9186ef34",
        "cursor": {
          "ref": "e6caf416-b378-4090-ae83-ed823e02ba73",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "41d95cf8-f0b1-43c3-8f59-47e8882e7ae7"
        },
        "item": {
          "id": "4660585e-29f5-4180-b210-425b9186ef34",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1d00a7ba-8c90-4b43-a0de-9768760eff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f615d231-b8d4-4c16-b2fa-f04cf00161ca",
        "cursor": {
          "ref": "7cd358dd-91bb-4563-ae3c-43dc71972012",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "190d6ba1-feb7-4565-8ea0-e1be7263bd88"
        },
        "item": {
          "id": "f615d231-b8d4-4c16-b2fa-f04cf00161ca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "06b37079-4c9a-403f-8113-50309d10970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bfbf70-1400-4438-98b8-6e3bb73d6057",
        "cursor": {
          "ref": "2faed290-bca0-4199-8aba-a0286c9b7b2b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78b8eb5f-3c8a-4053-be60-2c4e2e657c2e"
        },
        "item": {
          "id": "14bfbf70-1400-4438-98b8-6e3bb73d6057",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "545970da-ae34-45e2-8557-d86f03297b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a7c71c-1609-43c5-a191-cc954b9c2eb4",
        "cursor": {
          "ref": "6853d7c6-c50f-49ae-862f-faa2e41c033b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2fa824cd-e7bd-484d-afde-dd1721987556"
        },
        "item": {
          "id": "38a7c71c-1609-43c5-a191-cc954b9c2eb4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5537c776-9f03-42d8-a39f-d370023d0c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763005f8-604d-4177-97d2-3d8fdaf522fc",
        "cursor": {
          "ref": "20405d2b-835a-440e-a547-65efd3bf4d1f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "237f38ce-afdd-42ee-a784-744ec549b577"
        },
        "item": {
          "id": "763005f8-604d-4177-97d2-3d8fdaf522fc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7daf34fc-f363-4fde-af71-5c29c4dfaa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71298882-a04c-478f-8572-e4e9024eb15a",
        "cursor": {
          "ref": "f36a94ad-9b63-4dd1-8f65-8678d6f63455",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "05508b7b-fe0c-43bb-b64d-5a63ae63cb66"
        },
        "item": {
          "id": "71298882-a04c-478f-8572-e4e9024eb15a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "257fe001-7154-4c08-83d9-70046d82eca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a6a7a8-8cd8-4787-bcef-11e99f751cca",
        "cursor": {
          "ref": "0342724d-a99e-445c-b6be-f1a419e9e2f1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3de090b8-b0e0-4c7a-a980-dca7b2c82fcf"
        },
        "item": {
          "id": "32a6a7a8-8cd8-4787-bcef-11e99f751cca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7c5a231-927a-446f-b51c-df645c93ac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6995cf-ba21-4bc0-b6c9-024889254c81",
        "cursor": {
          "ref": "490cd99d-2bcf-4702-988d-1377aa4af95c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "04021e20-5f24-479b-8f60-394b5c78c1db"
        },
        "item": {
          "id": "0d6995cf-ba21-4bc0-b6c9-024889254c81",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9e58e2ba-a08b-4dd2-9322-b6a0a5da3802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd214f29-b4c2-4562-a79f-7f6bd435812f",
        "cursor": {
          "ref": "6c1d128e-e4e3-40b3-88e8-37db4cfd2029",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e0390497-e64e-4a7b-8cc7-3e786ecf3392"
        },
        "item": {
          "id": "cd214f29-b4c2-4562-a79f-7f6bd435812f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5060bcfa-0064-41e2-b122-627bd9b7604d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da1bf1-0056-4916-893d-d938d315e655",
        "cursor": {
          "ref": "a69c9e78-0e86-4ac2-9947-448baf36990e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5779c7c-05d5-4808-ba53-c17c5e51c13a"
        },
        "item": {
          "id": "67da1bf1-0056-4916-893d-d938d315e655",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "886ba082-476c-4269-baa5-34f18b59c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0988cfb-46af-438b-84a8-887b78484012",
        "cursor": {
          "ref": "d065dcb4-61c6-4ec5-9f5b-2b172b11b41a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "23d1e0d1-cdf6-4ad7-90d5-b5051124bbc2"
        },
        "item": {
          "id": "d0988cfb-46af-438b-84a8-887b78484012",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ca59d48-37d2-4575-b95a-902c18aee283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43015897-656d-4b5d-b43a-7eced3cdea5c",
        "cursor": {
          "ref": "1420e84c-8037-47fb-9410-2401f585c22d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dbade997-b34a-44e0-9aac-98ca8d6eefc0"
        },
        "item": {
          "id": "43015897-656d-4b5d-b43a-7eced3cdea5c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f7fc1811-5125-440d-a1c1-5cf9f53a7474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3600ab83-29f6-46b6-8cef-cd7a004c878c",
        "cursor": {
          "ref": "2e21d56e-68c1-4ddc-928e-4ad6850c880f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98d59c5a-e52d-4488-a28a-270b87c4ed2a"
        },
        "item": {
          "id": "3600ab83-29f6-46b6-8cef-cd7a004c878c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6702fcdd-7dd7-47b2-827e-896fa0d82a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a2de59-0f78-41dc-9cd7-e287de5a45ab",
        "cursor": {
          "ref": "13cedabe-43f1-4e7b-9547-4ba7aed965f6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d1935dd8-a280-4f69-920a-4b49ec0649cc"
        },
        "item": {
          "id": "39a2de59-0f78-41dc-9cd7-e287de5a45ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "38e7c0bc-cb49-49e2-b29f-4114ee1108b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa534ead-9a8d-45bf-95c0-1f2916a7dc3f",
        "cursor": {
          "ref": "ec9271fb-447f-4d75-afc6-7c7a510e25ab",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3c25e59-3e0a-402d-8a1f-66a62b84fec2"
        },
        "item": {
          "id": "fa534ead-9a8d-45bf-95c0-1f2916a7dc3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6a7621e-c8e6-48bf-a2fc-fb30fe3ec90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9926bb5b-11b8-44db-94a3-83e8e807ee52",
        "cursor": {
          "ref": "3cfb5a85-edf1-40d8-972a-bb3421355ee0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8ac3169-fce8-4357-a17c-5c2567dd0640"
        },
        "item": {
          "id": "9926bb5b-11b8-44db-94a3-83e8e807ee52",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6c321a70-d35d-4209-8ec2-e7012633205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d75516-cb04-4541-abe9-700fe33ce730",
        "cursor": {
          "ref": "ceeec6af-8cbc-41f1-a336-5d7524311226",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0657e692-0402-41a5-b184-aa0f96c8ffe5"
        },
        "item": {
          "id": "01d75516-cb04-4541-abe9-700fe33ce730",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9bee5d85-46d4-488c-9a2e-84559cfe13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b956de-8051-43c8-8965-a4f4faa54fae",
        "cursor": {
          "ref": "2d47783b-a508-435d-b480-9e00c10a159e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "447f7f1e-4e32-43ed-a48f-79e226dfa49d"
        },
        "item": {
          "id": "80b956de-8051-43c8-8965-a4f4faa54fae",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42d7155e-34a7-4327-90c2-4026637529da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156ffe65-fec1-4c09-b1bd-4a8e235cf5df",
        "cursor": {
          "ref": "5c4f1470-c5ea-43d9-b943-ff5271903abd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "53684f45-6d32-44ca-a7ef-33991b0bc1c3"
        },
        "item": {
          "id": "156ffe65-fec1-4c09-b1bd-4a8e235cf5df",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "376585dc-378b-456e-9739-bd702e38aa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8133e20b-0edd-4d48-baf8-68803bc80078",
        "cursor": {
          "ref": "22803e5d-6021-4e2d-b06b-ae77bc1ce335",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "59550989-6abd-4b2a-9224-4245943ed818"
        },
        "item": {
          "id": "8133e20b-0edd-4d48-baf8-68803bc80078",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fdc38b6b-cf13-4934-9bf9-fda6ec2f1ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03641bbe-6f2f-452e-84d2-2675bb2c8e79",
        "cursor": {
          "ref": "68cbcb7f-e3b9-498a-8ee6-5d41b0c15949",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbff12ce-360f-4c21-bb10-8fc88471fabf"
        },
        "item": {
          "id": "03641bbe-6f2f-452e-84d2-2675bb2c8e79",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2cd003c4-0865-4ff8-ad3a-3c9271a34e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d09f92-cdfa-4fc3-b5e3-eda9f3fd4c84",
        "cursor": {
          "ref": "517c6342-80e5-48d9-a336-dfa281c94460",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b6dd3f95-d7cb-4a1d-a2ef-05bee84ce588"
        },
        "item": {
          "id": "99d09f92-cdfa-4fc3-b5e3-eda9f3fd4c84",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8fd8d2b5-6b8f-4d39-b53a-9a779bd1adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa9a9b0-d30d-4fe5-965f-efbe4fa7e663",
        "cursor": {
          "ref": "6c734a4d-107f-49a9-9a0c-2a79dd55e079",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a06db1bc-d7e7-45c0-976d-3dcbca94f3a9"
        },
        "item": {
          "id": "4aa9a9b0-d30d-4fe5-965f-efbe4fa7e663",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ae005307-4448-48d6-85d2-f5faa8ae2140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edba574-dc60-4d5c-a257-796548c57761",
        "cursor": {
          "ref": "901aaa20-5952-4b7b-9c5f-51284ef313ce",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "26ecaa1a-b15a-4477-b718-38ccd7b94c33"
        },
        "item": {
          "id": "2edba574-dc60-4d5c-a257-796548c57761",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c177a305-c36f-4242-8894-c17772faaf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b32ca3-caae-46c1-80e4-399cf8d3a47f",
        "cursor": {
          "ref": "debdcb7f-1847-40c2-bf4c-9e3c92361765",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4c42efe8-4a2b-42ec-96fd-6f55f5e6a75a"
        },
        "item": {
          "id": "21b32ca3-caae-46c1-80e4-399cf8d3a47f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b16eaeb1-dc92-4233-aae1-94b84b874b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf018ba7-2e86-43dc-8b9c-db88bced5c2a",
        "cursor": {
          "ref": "97c826ad-7df3-426f-b2d0-cf048f270855",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e2f9ae3-0c5b-4a8f-8304-7f43a6ba1a71"
        },
        "item": {
          "id": "cf018ba7-2e86-43dc-8b9c-db88bced5c2a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3de03fd3-6662-4974-b8e1-94f5c09345cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad2609-53a3-4a81-8a5f-8accac064ec0",
        "cursor": {
          "ref": "c5a6d7b6-1e56-46e3-bcb7-f168735da785",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d49409a8-b8fc-4372-a7d3-64bdd91a5245"
        },
        "item": {
          "id": "c8ad2609-53a3-4a81-8a5f-8accac064ec0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "698421c2-3c67-4ddc-915e-01532c000ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965674da-7177-4348-86f7-3f399a3d11fe",
        "cursor": {
          "ref": "07332561-ab47-418b-87dc-7d1185ba9b89",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ce694cda-2988-4d15-a0b1-08fd65f0e331"
        },
        "item": {
          "id": "965674da-7177-4348-86f7-3f399a3d11fe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47491dfd-00b0-4d22-8727-c8873333d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78084929-2bbe-40a5-a7e7-1e979fde754a",
        "cursor": {
          "ref": "b9c35194-ff8f-474e-bb70-570ee06ecca0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91461048-759f-475f-b098-a55bde64f179"
        },
        "item": {
          "id": "78084929-2bbe-40a5-a7e7-1e979fde754a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "576bea49-65a6-4f29-a441-bf80f65872c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84a1c24-f305-4999-ba39-cb354afd8672",
        "cursor": {
          "ref": "caff0feb-d700-4937-afdd-fe7828af8a58",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "55ca8519-db3c-486e-9a47-f011d7358ae7"
        },
        "item": {
          "id": "f84a1c24-f305-4999-ba39-cb354afd8672",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f58fc44e-b076-4c2b-965e-1fc4ef91a256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fb0bda-eba3-4fca-b734-3f71471138a1",
        "cursor": {
          "ref": "66015e12-4919-4985-8a87-b9d0b75a79f8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "132a5a3f-a711-4622-9969-7ab545d76584"
        },
        "item": {
          "id": "76fb0bda-eba3-4fca-b734-3f71471138a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ef954597-676d-49eb-9482-7419fd64db43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96116de-7e06-4f22-b345-08aeeee7bab7",
        "cursor": {
          "ref": "cbb2f75f-b00c-4c39-a7b1-f4b1e5eb2954",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1a6aeec2-6306-4b38-9399-d363b1f7c732"
        },
        "item": {
          "id": "f96116de-7e06-4f22-b345-08aeeee7bab7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "75f01a3a-c1fe-4c63-926a-1550498f5e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b98768b-3ad3-40a7-a2cd-3b04ae1d8b63",
        "cursor": {
          "ref": "e365f291-8bf1-4d18-a069-45808fb9f30e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "af544096-b5f3-4d1a-87b5-8d334b517b4b"
        },
        "item": {
          "id": "7b98768b-3ad3-40a7-a2cd-3b04ae1d8b63",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "13e5f609-8e44-4c87-8d41-1d59451b3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebdd06a-b09a-4225-a4c6-56d57403250b",
        "cursor": {
          "ref": "83f863a1-47f0-4bfd-bec6-cd371f1ac924",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6cf5bbdd-8a9a-48e0-ae70-0765cfa4c3f6"
        },
        "item": {
          "id": "3ebdd06a-b09a-4225-a4c6-56d57403250b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b36fee26-9360-43b5-9162-d3b4dec95b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1236118-4279-44e2-b951-641b833a8161",
        "cursor": {
          "ref": "b2d5f8e6-4177-4c27-ab12-def864f113ce",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2a9581c4-1bbb-430e-9825-66f2478fd9cd"
        },
        "item": {
          "id": "c1236118-4279-44e2-b951-641b833a8161",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ecdf5642-65fc-4360-9b8d-e413cebe85c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383caee0-3116-49de-9c3e-6889ae801be1",
        "cursor": {
          "ref": "46c2a9b9-12b6-4da4-bf3d-feeb976ee142",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9d3d290-6d31-4fcd-a4ba-1a7d04b4bb81"
        },
        "item": {
          "id": "383caee0-3116-49de-9c3e-6889ae801be1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f41209b7-da4c-4b50-b05a-027601e9d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757f4c9b-5308-48a2-8f98-2b67367da2c8",
        "cursor": {
          "ref": "8ee4de28-1144-4ab1-a8e9-bb07508028d1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "10d99deb-4ecf-42f8-82c0-58e0ee7c2460"
        },
        "item": {
          "id": "757f4c9b-5308-48a2-8f98-2b67367da2c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4a2da0b-23db-4bfd-8e91-7a4364bf5620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c304369-fd50-425b-8e48-d8fdfe7868f6",
        "cursor": {
          "ref": "f8c8b06c-8324-49c3-9a6a-784ebd7c900d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3d3b394b-012a-454d-9672-921f3d782e63"
        },
        "item": {
          "id": "5c304369-fd50-425b-8e48-d8fdfe7868f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df6ee0e5-9295-4c84-8f89-a7d7591a6662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba9b0b2-6ad9-4ae3-be62-7f1fd1a2d7d2",
        "cursor": {
          "ref": "60142f4b-3ef1-4101-bb6c-cdce2b6e4216",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f20c607-bbb6-4b62-8d0e-ae0abd1ede4c"
        },
        "item": {
          "id": "7ba9b0b2-6ad9-4ae3-be62-7f1fd1a2d7d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7e3a6263-d967-4b03-8868-a2395f5ea039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cbab1f-9d45-401c-9e08-964f419c6c4e",
        "cursor": {
          "ref": "270606b5-a454-42c6-9681-23f7ad0b730d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "031fbd26-6fd0-41e2-990e-c6443a0e81a9"
        },
        "item": {
          "id": "58cbab1f-9d45-401c-9e08-964f419c6c4e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eab85758-198d-4a10-ab6d-a5f407eaadd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572008c-56de-4231-b001-174b6e1ecd39",
        "cursor": {
          "ref": "739f1ea8-00f9-476f-a629-04a8ef8477e2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "82896171-8446-4e36-a0cd-3ae70d31b160"
        },
        "item": {
          "id": "3572008c-56de-4231-b001-174b6e1ecd39",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2f43bf03-f956-4af7-842d-ddcf7084abb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d5c721-d0c6-4ee8-8518-5225d19c9c3c",
        "cursor": {
          "ref": "5b215deb-d443-41c5-9928-2f8de7cef5ba",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7d58d17a-cde0-42b4-854c-6d93b9a0d1c4"
        },
        "item": {
          "id": "f6d5c721-d0c6-4ee8-8518-5225d19c9c3c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "589908a8-30bf-4cff-b669-90cf60e6602d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dd170e-137c-4c49-9d92-e6dfb75ce867",
        "cursor": {
          "ref": "3c97ef02-5e02-4d99-889e-c749267f98d5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a43368ce-5945-482f-bc76-8550588b88b1"
        },
        "item": {
          "id": "31dd170e-137c-4c49-9d92-e6dfb75ce867",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca1f8b29-5bd3-44d1-a606-2e41aa0fc691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d438147c-76ed-4905-8ac9-95fad90e4f58",
        "cursor": {
          "ref": "2e7f9520-516e-4ec1-ad62-c8abffd440b9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "07ff14c4-1dc7-4ea9-9ec5-3cdbc357f54f"
        },
        "item": {
          "id": "d438147c-76ed-4905-8ac9-95fad90e4f58",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d091add2-dcf2-482c-8cbd-40705abe4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146169f1-f216-4853-9d74-7417fa94a236",
        "cursor": {
          "ref": "6bbbb0a8-0764-4edd-9ef8-6a6b09a181fb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3126ff4-5052-4d44-9474-59f14081f991"
        },
        "item": {
          "id": "146169f1-f216-4853-9d74-7417fa94a236",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "89215f42-2806-4e0f-ade4-f63fd8a00177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cb5b32-f254-4be5-916e-c086441dd51e",
        "cursor": {
          "ref": "013a3ad4-d41d-4ac5-b3bd-a60a35897260",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "79d6e0ee-247e-4b04-aedf-a079ad0be50c"
        },
        "item": {
          "id": "83cb5b32-f254-4be5-916e-c086441dd51e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9291e701-f1cd-4b0c-a648-3cb5cee0be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f992012-c747-4a42-894f-ddad19f61e5c",
        "cursor": {
          "ref": "cc7ad5bd-aefe-45e3-8cbe-02ac825662ae",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6122c171-3516-4fc9-9d05-73ea145b53d0"
        },
        "item": {
          "id": "4f992012-c747-4a42-894f-ddad19f61e5c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "63c560bb-bce0-4c6e-acf4-6f5352ca3e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8522249a-28e3-4fd4-a151-fbb7d110ff9e",
        "cursor": {
          "ref": "8405b48a-0324-49f3-b22e-8a91bcd2e9be",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "92c3d084-1519-4622-99c7-d3e683b00d85"
        },
        "item": {
          "id": "8522249a-28e3-4fd4-a151-fbb7d110ff9e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bba58808-e57b-48bb-a02e-3a0f4e260cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b93d28-b784-48ad-90a5-f81d0abe163b",
        "cursor": {
          "ref": "edd87270-1b07-4baa-ac46-536e98f61279",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bf8f7c01-8f6f-4bfa-8e74-f52b41ccb9b9"
        },
        "item": {
          "id": "52b93d28-b784-48ad-90a5-f81d0abe163b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "649ce97e-c346-4336-8d7c-a120c5903047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6c4d0a-eb4a-4287-bf80-1074cefc3728",
        "cursor": {
          "ref": "ce01c17f-f657-4512-9420-e04c383e03d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4f5013b0-1000-4b4a-b8c5-96d2c292be08"
        },
        "item": {
          "id": "ac6c4d0a-eb4a-4287-bf80-1074cefc3728",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f9850657-5b67-4756-8579-3761822db260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473e522a-362c-4fdf-8440-160ce1179091",
        "cursor": {
          "ref": "071f6bf8-82d9-4af5-b673-bd35ac04cf44",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d70cfba1-dfeb-437e-9e99-d1a48d01c104"
        },
        "item": {
          "id": "473e522a-362c-4fdf-8440-160ce1179091",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90c517ca-f2bb-4db4-9361-8b3f86acbde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b1b9e6-d9bd-475d-86e8-da656cdb22e5",
        "cursor": {
          "ref": "3c58fef1-8ef8-4011-92a6-875573dc09b8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2461d950-2e3d-4c6a-8cde-61dd1a7ad10b"
        },
        "item": {
          "id": "51b1b9e6-d9bd-475d-86e8-da656cdb22e5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "835d7941-589e-49c9-a6eb-1ad044917ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc81a02-09f2-4e18-aeda-7c7ebab7649e",
        "cursor": {
          "ref": "8220a2d7-0fed-4b22-8699-881b4bafaa02",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "64c3d165-4bfb-4d95-964d-e86ae3779e7e"
        },
        "item": {
          "id": "8fc81a02-09f2-4e18-aeda-7c7ebab7649e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "adf1ffe6-84e4-45e3-a43b-953f89b9fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f1ff0-6bd4-465f-b19c-40e9ba8aa585",
        "cursor": {
          "ref": "d55c0586-0394-4936-8b67-3909483159fc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c2ecc59a-edcf-425f-a1aa-96200b04c292"
        },
        "item": {
          "id": "8f0f1ff0-6bd4-465f-b19c-40e9ba8aa585",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "37261c86-39b4-4935-86e2-2e85bc35c1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a5ff5b-460b-4f22-9fa2-90879074e428",
        "cursor": {
          "ref": "00f5dbe8-6ae0-4a8a-82c7-d2667069a90d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8d05294e-9314-430f-82bf-7e7bacf8f875"
        },
        "item": {
          "id": "40a5ff5b-460b-4f22-9fa2-90879074e428",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "af6f53a3-674f-490b-8f61-ec93bec36ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637caa00-325d-43c3-842d-313bba7c117f",
        "cursor": {
          "ref": "7a959516-fcaf-44c4-8395-3697d0239331",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0ae68d68-14a9-4788-b9e0-849116cfb703"
        },
        "item": {
          "id": "637caa00-325d-43c3-842d-313bba7c117f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e3b7193-c9fc-4b97-b970-e8d22f7f28c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c4e186-a7f1-43ff-8711-658509132e8c",
        "cursor": {
          "ref": "05d0ba64-1068-47b8-b36d-ed9d441eb39a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "65091d24-44ed-41cc-9274-78ee84df18cf"
        },
        "item": {
          "id": "30c4e186-a7f1-43ff-8711-658509132e8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "23c28765-bd55-4d2c-bf71-640eb743e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da7cbdb-cf98-4336-ab65-fb4ba4e5ba9c",
        "cursor": {
          "ref": "c3eb8d77-414f-4279-8e4c-9d1d2fea7752",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3a866ac4-4343-4ce7-a43a-d1d57fbd1b75"
        },
        "item": {
          "id": "3da7cbdb-cf98-4336-ab65-fb4ba4e5ba9c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cb76d06a-c599-4413-9319-68904212b1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a6295d-7ea2-4bea-b431-35c51a296b4c",
        "cursor": {
          "ref": "f248c28b-bac3-4827-b59d-857a4c6850ab",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4d7b6483-1187-4d86-8f9a-ba90a6d3d735"
        },
        "item": {
          "id": "f1a6295d-7ea2-4bea-b431-35c51a296b4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8d6434c3-7812-4ac0-8a67-7fc9469ee55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623d8afd-d349-42ce-b2e7-9bba9667104b",
        "cursor": {
          "ref": "707d7dbd-34c1-4507-811e-04a8fb2b5f58",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "82fb4f97-f5f5-4e03-822e-cfa05bb86892"
        },
        "item": {
          "id": "623d8afd-d349-42ce-b2e7-9bba9667104b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bb339a38-4d2a-41d9-bd04-825713584562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c599c7-58eb-4f2a-9182-9e2f79651867",
        "cursor": {
          "ref": "6fbd538d-1caf-4944-a93e-fc16776249fc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b32b72ec-f440-4e2f-8a0c-d5a89403fd1a"
        },
        "item": {
          "id": "17c599c7-58eb-4f2a-9182-9e2f79651867",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "adf67094-1618-44b6-905d-e91e9d67cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e2be44-9e6b-4bc8-a6d0-8c9af1202050",
        "cursor": {
          "ref": "9e4d3bbc-32f9-4731-bb0f-d6eda6ec5dac",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "61d6d794-3dff-4334-a13f-c5a6dd992fd4"
        },
        "item": {
          "id": "50e2be44-9e6b-4bc8-a6d0-8c9af1202050",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "db78908b-8ecc-442a-b938-4e323b9209b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637a9cb6-74d0-48b0-86c1-5dd818f384e0",
        "cursor": {
          "ref": "eeb10591-afc1-4493-9ed7-226261df771b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6968b998-ae86-4d05-844b-d352cb16d828"
        },
        "item": {
          "id": "637a9cb6-74d0-48b0-86c1-5dd818f384e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a66dcbf-ae1e-4f4f-b6c3-2578afb2f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c04211-d4f4-48b4-b010-5632cd1190d7",
        "cursor": {
          "ref": "2268c9b1-2c84-4185-8225-97ca1ea7ae96",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "acba2324-566c-4fc5-8b97-d03a1a07c3db"
        },
        "item": {
          "id": "b0c04211-d4f4-48b4-b010-5632cd1190d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "415ccd3e-4a1f-4370-aad8-17393ef95cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf592292-d3cd-447d-ba75-eb480b06c3e9",
        "cursor": {
          "ref": "0aea8d63-959b-4e83-9fe0-2e5f856a910f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ef5f1780-d659-42e5-87f2-cc94c54af0f1"
        },
        "item": {
          "id": "cf592292-d3cd-447d-ba75-eb480b06c3e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "07329aea-3029-4087-a868-30a5643f39f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5ad2c4-88a0-481d-a199-20d0922561f2",
        "cursor": {
          "ref": "1dcb4886-7408-4be4-8572-21a0705c398a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ce534e1c-f733-4536-a2ad-e16016ae9b7b"
        },
        "item": {
          "id": "3e5ad2c4-88a0-481d-a199-20d0922561f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f21cd483-4ab3-4340-8af8-661ae1d9d200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00de2da6-c80c-404a-80eb-8b38e13a5b1e",
        "cursor": {
          "ref": "d861770c-04dd-4946-b689-433681a8a069",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "05691871-ed1e-451b-a4c6-243293d21e94"
        },
        "item": {
          "id": "00de2da6-c80c-404a-80eb-8b38e13a5b1e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1f3719b9-4cdc-43a2-b045-81b2d22039b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb0b185-eb81-4ec5-8ed9-132ec178796b",
        "cursor": {
          "ref": "08ae932d-a52a-4f61-adb6-a4df8b418025",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "edbe1c83-0c11-434f-b250-cfa149219ca2"
        },
        "item": {
          "id": "9eb0b185-eb81-4ec5-8ed9-132ec178796b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "70d1ae36-204c-45f6-9543-c1cb4b3c0236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391893b-4366-4f15-9075-5ddebf0d6d05",
        "cursor": {
          "ref": "0a33f799-ec8e-461f-9cfa-a8dd04875bf3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e2c6fa1f-b006-4cfb-9a55-cb686d6ad740"
        },
        "item": {
          "id": "c391893b-4366-4f15-9075-5ddebf0d6d05",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7159bda3-a72e-4ba1-bb0b-9abb74cff543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f46ebf-7203-45ef-a495-b87a92ac0360",
        "cursor": {
          "ref": "e2f8e624-6606-4fe2-b880-a5f7593310ca",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "11f6e47b-786e-4315-9282-6561378f7b4a"
        },
        "item": {
          "id": "25f46ebf-7203-45ef-a495-b87a92ac0360",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e95a5c42-9711-455d-80e7-8f39113a61d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f169d314-5538-4400-b28a-9ff7e421136e",
        "cursor": {
          "ref": "cc69c44b-17dc-4912-93f9-6b13cde3c0ff",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "23472c7f-8cde-4a05-b3f8-6f9abb587bfa"
        },
        "item": {
          "id": "f169d314-5538-4400-b28a-9ff7e421136e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "388b18c8-36a7-4227-93af-4ec7f8592dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135c9f5-059a-407b-a312-74ba79af0359",
        "cursor": {
          "ref": "1022e381-a1dc-4f0e-8cd1-ff0c3cbece43",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5b698dd4-d742-4855-8d58-5ec65ac507c7"
        },
        "item": {
          "id": "3135c9f5-059a-407b-a312-74ba79af0359",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "44d94195-c6c2-4e5d-bc56-bf059c844e6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50699d1-f72b-4f73-beb1-34a6645c46f6",
        "cursor": {
          "ref": "d587e598-bd84-435e-a24a-58798f66c93d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0d68d83b-4d71-45c4-9a2b-4734013aff46"
        },
        "item": {
          "id": "a50699d1-f72b-4f73-beb1-34a6645c46f6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e8e728d4-08c2-4cc8-90f9-440e9bd62d09",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "889247a6-a23b-420f-a09a-3ce5f79fc9b3",
        "cursor": {
          "ref": "c7a5ceb6-c30b-4058-b368-20d6ad699c9c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b7bd4ea2-f2c2-4535-ba0c-4e003e1e858a"
        },
        "item": {
          "id": "889247a6-a23b-420f-a09a-3ce5f79fc9b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0e406708-30c4-4ee0-ad0c-f13b782de9ef",
          "status": "OK",
          "code": 200,
          "responseTime": 1307,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "badb5e9a-56f1-4108-a593-7544e2bfdcbd",
        "cursor": {
          "ref": "6c27d21c-f550-4656-afe0-cbe28a7b6406",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb5947cb-d913-4e9e-a596-d90bb34c52cd"
        },
        "item": {
          "id": "badb5e9a-56f1-4108-a593-7544e2bfdcbd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1ff089f2-265a-48ec-8f31-79ac3b94898d",
          "status": "OK",
          "code": 200,
          "responseTime": 1342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a1384-a0fc-4d4c-90b5-ce3997548cd0",
        "cursor": {
          "ref": "c729402b-e5fb-4879-84ae-90590ebcb10d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "932bd55c-512e-4a81-8bd0-18183f6964b3"
        },
        "item": {
          "id": "a33a1384-a0fc-4d4c-90b5-ce3997548cd0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52e38a05-09fc-4f8f-b400-1654a6143d71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a1384-a0fc-4d4c-90b5-ce3997548cd0",
        "cursor": {
          "ref": "c729402b-e5fb-4879-84ae-90590ebcb10d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "932bd55c-512e-4a81-8bd0-18183f6964b3"
        },
        "item": {
          "id": "a33a1384-a0fc-4d4c-90b5-ce3997548cd0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52e38a05-09fc-4f8f-b400-1654a6143d71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7396bee0-8230-4d27-aa79-1a86c7e77c76",
        "cursor": {
          "ref": "8dea6dc8-a380-4f57-9e72-94e66c877e5f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b49d7a18-1eb9-4fcf-af21-d7421cfe5cae"
        },
        "item": {
          "id": "7396bee0-8230-4d27-aa79-1a86c7e77c76",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dc2537f0-950a-4744-8ea4-8a079c146091",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4b74f4-80c1-4717-ac97-72473ae6d52e",
        "cursor": {
          "ref": "0bdaf413-8559-4ecc-833a-c481f30a5bad",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3060f4d5-023e-42ed-920c-036c1a125d49"
        },
        "item": {
          "id": "fe4b74f4-80c1-4717-ac97-72473ae6d52e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fa550938-1d5d-435e-9239-3bbae705ad55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}