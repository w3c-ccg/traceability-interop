{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f5979e29-176b-48e5-bc55-815e649d745d",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8c7687e5-eb1b-4031-86b9-4e4f1b412881",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "0d6a7956-0514-4ba3-b7a1-814f46e8facd"
            }
          }
        ]
      },
      {
        "id": "04995d30-1b89-4d1e-8645-b1a2d2426a4f",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": {\n        \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e77d01c-6273-430c-a019-3b94db28bde3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "563262b8-16fd-4e5a-b820-6fe2f9a27c41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b5c3506-fe38-42bf-9ea5-bb37f5e8ebb1",
              "type": "text/javascript",
              "exec": [
                "const {verifiableCredential} = pm.response.json();",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "8ad5b2ba-4a6e-4970-935b-a15bb4f3f143"
            }
          }
        ]
      },
      {
        "id": "2970670c-d726-487d-9f19-a943eadc11eb",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "78c8d2bd-ac9a-49ea-848e-2ef525857be1",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "1dda1be3-56b3-403f-922b-7f43f2fc9bd6"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 1
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 4,
        "pending": 0,
        "failed": 1
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2355.3333333333335,
      "responseMin": 247,
      "responseMax": 5558,
      "responseSd": 2302.1517953620887,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675300255073,
      "completed": 1675300262252
    },
    "executions": [
      {
        "id": "f5979e29-176b-48e5-bc55-815e649d745d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e605dd51-7a3f-45f6-8656-ceb2ac76e5d3",
          "httpRequestId": "163ea83d-5418-46cb-9494-bd4819473ab3"
        },
        "item": {
          "id": "f5979e29-176b-48e5-bc55-815e649d745d",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "d11f5957-af00-4668-9b09-ea54ed45b5d5",
          "status": "OK",
          "code": 200,
          "responseTime": 5558,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "04995d30-1b89-4d1e-8645-b1a2d2426a4f",
        "cursor": {
          "ref": "c1fd0ff7-5b81-4572-a2aa-d64a2edb6340",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0ff46501-17cb-4ae7-ab9c-bff6eb7d4932"
        },
        "item": {
          "id": "04995d30-1b89-4d1e-8645-b1a2d2426a4f",
          "name": "Issue Credential"
        },
        "response": {
          "id": "e69e4596-fbfb-4828-994b-10cf178d64d9",
          "status": "Created",
          "code": 201,
          "responseTime": 1261,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 0,
              "test": "The Verifiable Credential MUST have a 'proof'",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "id": "2970670c-d726-487d-9f19-a943eadc11eb",
        "cursor": {
          "ref": "423d26cb-9c8e-4068-b528-ea5c05f3e837",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d8c0e37-e903-412b-8f5d-94428e846cd4"
        },
        "item": {
          "id": "2970670c-d726-487d-9f19-a943eadc11eb",
          "name": "Verify Credential"
        },
        "response": {
          "id": "620d987c-f84a-4c6c-9d69-e5504c2ffe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 12
        }
      }
    ]
  }
}