{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "547846d7-7c7c-4f89-a9a7-4b1bc3004b76",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a36455c4-ec1a-4d5c-aa9b-8f82180ffa3b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe7d21d5-0d6e-4553-863b-36cbb4cc3b66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15a6f4e7-8f22-4907-9a35-2ebfce900529"
                }
              }
            ]
          },
          {
            "id": "d07608bd-2cb5-409d-990e-4b3755c31d99",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6629e7dd-bb81-4028-b548-890042cee55c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdffc62e-2c21-45d1-9bfc-42608a0103eb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a36b14da-9bd1-4e0c-8c57-d4f2d1acd600",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a3be050d-9eb9-4397-ba23-6bd1aabb3e3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e99cf668-8845-4970-ae2a-73a3ad135958",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6f535c6-0969-4780-aedd-f23670c9bfe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a0e3f19-987d-4aaa-8e1e-cd95f536c3b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb1b6351-0531-4cd2-9c56-4c19408da654",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd1288ff-0c45-404c-8da8-6bd3fae0d380"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78b6a6c7-7bbd-4344-8cfd-60963199d299",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "190ec701-2b13-46b9-a562-fb167dc58753"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9255cbb6-781e-4bff-bc51-4d669caf9fbe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "908cc0d8-4491-43bc-ad2e-a02a131c6a45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85e16b3a-1d2b-4275-8405-e08cb8da6646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34c7e522-95fa-4515-af7f-7322657c566e"
            }
          }
        ]
      },
      {
        "id": "c6333af9-6491-4880-924b-10a618551207",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "17409d72-acf5-4a0d-a7e5-cfdbc19d9604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb87c637-b3a8-4635-9e80-6a0cf45d399b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "662f0200-0cad-49f3-988b-05e518a5873f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3422d6bb-c370-438b-b1c1-389f02be0e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f9cc26f-b8f6-4866-90ca-417afbf6db43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96434ec3-2788-4f30-8be3-c8c4af16bc63",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c486235f-bb63-4497-9e5f-9037bd2e5ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cc3c875-4023-448e-8e9c-5ef104868c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d3aa1a-eec6-4f34-b068-7319a3a7e444",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f550ec-b810-47cf-ba2e-5d7bce5f464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7848ff06-259d-4701-8a49-9662436dcb44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6edab24e-b9d2-47f8-b861-7ff0c5659922",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3855c9d8-f5d0-49ad-9fb2-ba4ee59183c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0357ced4-3e36-4497-9f57-f5e328a89560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf336968-5fb7-42a2-b95e-9d009edafce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943baa6-8cae-424b-bfdb-8e3a8bb0dd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6968db0-30b2-435a-8b42-d76ef84fbdf4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e96cfe53-6dc3-4cb4-835c-6fd5360c8a95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f510bcce-fbac-4724-9df2-5fda9be96168",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a4c15bb-8484-41f7-93d2-3fcf9582c733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d222d486-06b2-44e3-9c09-d6d31cc6c4aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbc8f008-aef8-4aae-8485-0a67924bd873",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe58748e-b65c-4507-bc39-fabec87d8e28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01fa92dd-0719-40f5-8571-a6e625bc8720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "806a4fd1-8652-4357-9e62-fc591373fc2c"
            }
          }
        ]
      },
      {
        "id": "9edc9e69-4e8e-4808-996d-e1ac1527ecf1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de73c309-67a0-428c-bfd5-1bd25923bd38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74656184-c318-4e58-a157-d7252ef37dfc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3e37b25b-08ad-42e1-aadb-0ca79e913185",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a731ebd1-fa78-4091-be52-98e3f71ecf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0758fffd-30d3-48d2-a998-598497139121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa16f242-a653-4dc2-a404-97e03e64e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df54b957-8ea5-49c7-8fe0-cc0f3a369c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0229ea6a-2fb1-421e-9df9-69a11cde2555",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee85683b-fae7-456e-8187-15d6d8c1cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9c7077-f3dc-4af4-8a0e-da4bfe27232f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed44c37-443d-48d2-ac8d-0f7cd9c2a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b21c21-6064-4876-880a-88f398004a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bd632f-fc6c-41f6-9c46-ccad5034449b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fe38f9-8faa-4f32-aa66-e8c48b4429f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf8071d-ac8d-4dce-9c4d-8a36b3a1e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e403489f-22cf-46ec-95bc-a43683b8ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd425882-bdf5-49a3-b86d-7c6519161de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b353156f-adc5-42cf-8151-7293e62a8e25",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4e71f0-a362-45d6-91c8-a2593a054e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5297d21d-e8f9-4f14-af53-04ebe825856d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba37b69d-9b3f-4600-8503-541273a5a809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e10b8b4-f9cd-4542-94b1-419555d7ff9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07773be-8010-4ab3-b479-6178de8e4b1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9109be-9a61-4b7f-8fcf-c5f624745094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05406ff-04c2-409d-979d-3c6943e2c2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf6355-aa29-4646-8513-7812c5bdbeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b76f55c3-d6f6-452b-b6e4-4a58748b4dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e6acb4-db50-44f2-b55f-35aa58dcc24b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226aa31-ca51-41fc-97c9-e1ad2b8fe35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce69f64-e95c-4adc-a070-6b3ff2448bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f5208-1fe3-48f3-8c53-681438e930a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90695ee9-78c4-49f8-a2d6-99aea7683f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50390b15-6362-4de3-96c1-9e774fbcfb5e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c5b1e0-93d9-4ff4-82f1-e51cd64dba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2db6aa-5be3-41b0-9b46-72405bd1d815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86af8d92-2200-4fd0-9b96-cbf220490f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3623f84f-6f12-4622-b57e-c6afb6caaeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002c2c1f-4f7a-46e6-8e57-bef2c160d07d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e550a7-8275-429f-8a45-767abe7399a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d359ae5d-3fdb-41d1-a9ab-a20fa960fd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779dbd58-054d-4193-b17a-08473aa40b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2924d1b-ce61-411c-981c-ef663135a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46c4660-05d9-4b7f-824c-da45ca40d169",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f10faa-4801-4d82-823d-01f77a6ba117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53baebf4-8301-459d-993c-1a21a55c2404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9ce9fe-7d86-44b7-aff7-2e33bc6e33e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dee05a6-33c7-4b5f-bc0c-fc67f25c156b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b028a6-4498-4fba-919d-979e528f171f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde69207-c110-44f5-aad4-07da17ad9e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02fa4d4-cce9-4541-9767-1a1d8d0ed588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf88be60-4f9d-4255-bf56-fea75901219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960e2957-a41c-4e94-9ecd-26867bc64e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f72028-8d32-4001-9f35-0e8e7cb49185",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80185a60-e466-448c-99b3-137a83066894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec01bfb-517c-43a8-ab11-2394dc3626be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f8f7f1-67b6-43ea-905c-fbeac10151b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf7615e-a21b-438d-99c2-a43bf741d5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e255a3e-5080-4668-af6e-10a2a5af8f85",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb0ec43-1d06-425c-b7a9-489a69472c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d77e67-38f8-46e3-aeb8-6bdfff515f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027244a5-cc39-45e7-875e-1a3bf4324fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c6080ee-8cc7-4905-9325-fd2a1c0f84f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb669e-3a49-4b15-8e8b-8349307b9e5e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10851255-4fd0-40d5-a0ea-8ff6b3d68547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1888d28-1dff-426c-bf78-699aa89fb7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b579d6b0-1706-4832-88fe-5de2284a21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7f3e644-6114-4439-bfbd-0a2ebd36d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d102de-55fd-4329-aa45-86e27c015d6a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7901b344-672e-418f-873a-7dce02b655df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aeee5eb-449f-4410-a416-7341c933a69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb13eb3-7fcb-47f3-afa0-a5da91a0694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d393365f-2f84-4fce-ad87-a3facb0ed107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4c141d-8b57-43fe-84ba-f8c7ae197a99",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c901c3e-3de7-4dc2-b121-b0e8ba1eb11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4479cca2-b197-440f-b3eb-aa2ea77f2692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e444a5-f38b-455a-99b2-1dcacfdb43d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7ed8123-689c-4ac4-854c-0b0f78d6d899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e5de74-6151-4379-a34e-fc3667ef554e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ceb3f-2f19-49e8-8e6a-8fa7f690ef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf3632f-d076-46b9-a4a5-af2f88462681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce1bfcf-5eba-4f46-89e4-b76c51e9e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8872c007-602b-46f3-b5d1-23b5379cad17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f056d25-f554-459f-ad2f-d8b1cf3d81e5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8f27c-1d13-4599-bde9-cd3dcb083b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add4d438-1af0-491d-86ac-4ea015c945ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c29b60-6631-4657-ae98-1dabedaf8de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf5a0bd-9902-42b5-9e96-41fd0c91d8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3988c6bc-25fc-4407-b607-a99e220a0ba1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69997484-f281-42b6-ae62-60f713adb488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abfdbaa-6d80-4b1a-96c8-af792805f0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07480d8b-6772-476a-ae0e-cc6a805bc50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ae836b-f113-4afb-bb4a-dde7692fb336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2568570-62c5-486e-914a-e53950f3c089",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e880e343-3cab-4acd-8607-5c0e8b2f4da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87506edf-83b8-4dcc-ba3c-045185b5367b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce967c-ae01-4c8b-9ea5-bd0d91e80541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "680b9454-c649-4b6c-bb1d-816a91424057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358f51fc-35e1-470a-9ec7-f77077a4e629",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a60439c-dd7f-4687-9428-d597123ef39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0894b5b-4dbf-46f9-96ae-0b8488f2407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261a5448-a178-4d6d-ac31-5a0913a96dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5a513f-1737-4b84-a3ed-f7ca3a44c816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07896c3f-e2cb-4cc8-bb14-b8fb6743273d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583ebbc-d870-4342-8e8c-87582206a55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc162e77-6bef-4e0e-adbe-e9b0a53a81ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a43a31-cf4c-4df6-af0f-d87c0837fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fce3757-8ca1-4631-b66d-03c07d7a07d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b2f81-7873-4a98-bab7-f3356fcee6ed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea0cf15-8ab3-4267-9ab8-e6d51c6194d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa756e5f-5806-4924-8017-11e3b8158124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c0fa2-8b25-43e8-93f2-63afbfc57b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3a21ff-dd88-4801-b70d-27ec5e5d2640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0027762-9907-4e82-aaaf-2bf0508c2d3d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa144ff-07c9-4aee-bccb-be9799154c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a349614-5783-4cf6-b70e-c31ee58124ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c469960d-cd6e-4152-acd1-1cf9285a6662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fa7a96-f9ad-4654-9f56-c7a470c9083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7fc6b5-76a2-4b5d-b36e-d43e206ebad3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b8b59-4223-49a6-8de4-73fe0012f850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60426cc-2de2-402d-8571-a6b531e61dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ffaa3-2867-4741-a54d-cd4cb08c645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8393bf31-0bfc-4c7f-994d-cf928f2ee29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59569d2a-5f9b-4881-84de-2e87bee8f8c2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e228c-cf59-4b26-9587-3dc277e162d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cb3851-fcb1-429f-975e-8e51778a5e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c5414-ea96-4174-b315-7e8a7347fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06ba930-2192-438d-8549-26d5a254e835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b17868-48ba-4684-8f32-e537f2e9e55b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c59a27b-8681-4a5b-a329-b449b6047729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c254b94-bdbc-421f-92a5-b506e2d89275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6146414f-4ac6-46f3-927a-1a2bd7bbedd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cceaa5d-ae13-4011-beae-6051c45b7a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dba802-963d-4dc9-b8cb-1c1dcddc1650",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18425d59-aa2c-4328-bf46-3ec2cc18033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afcbce0-490a-45bb-8478-09a54ccc80e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d858eb3e-fd43-4017-85fe-1c8b260cdc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6d023b-354d-4e95-af5e-983da472f3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b66b0a-35b1-420d-b2f3-9ef27f96d587",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b4df25-f812-4521-b257-6d8c6aa03f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ff8248-1ad2-4f2f-aa6c-4619d947349b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80492ee-af31-4cfb-a6d9-ee1a884fe2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbf65b5-30ad-450c-bf40-0bbcfae45e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2738ad63-d5e8-46d7-ba74-695f19f965ee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ecca6-00a2-4f09-bd43-2797a89cc8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f89ad-4b57-42e1-9056-4a906b4bd861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc69c67-7a7f-4c0e-8ea6-cccebb90f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b2cd55-8e7d-4244-9317-02a2033760ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36b07ed-dd18-4472-b1f5-b26c0847eee8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f7f6f8-1339-4f94-aad3-69642879e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1c59dc-f53d-4c25-8706-988945470893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cfcc77-7c75-4f4e-90a2-9e5359db5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "48748122-7d42-4f94-9e76-45e0be543469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d7414-bb48-4043-9728-9abe6df0f58d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b7f480-04e2-43fc-bfc4-116b85ef68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37387244-ae1a-41df-acf4-45e9898b2192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f179d6b9-c678-434e-8ade-1cd76b35a896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6af157-dc02-449a-abba-54aff0888752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbdce9d-c48a-4714-83be-cc8bd2bfce42",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e93cb9-c470-49f8-8f0b-ec392936f300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0600a9-fde9-4e15-9390-2a3f5d84c679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84310f49-dac6-47d3-acb7-e47bf3ce6421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5cae14-3f26-4642-a203-928140e94e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57798f9-52fd-425f-bd84-a21c9131b6eb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c00732-d0a8-425a-90ad-504717442f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca8051a-0c12-4f65-bc2a-fe2b2aa2a1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474d2dbf-2512-40fe-9c55-aa3697b01ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7f4972-e401-4912-9192-7eacf2489de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce38a82-d367-4ca1-a44a-e3e33c01a12b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a05b54-573b-4b9b-b5f7-9fb919ad21eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e5085f-68d1-467f-84d6-549744b60f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52842e84-897b-44d3-b945-fc8e3866673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2977a72-21e7-412d-b220-6cac8dacc3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2607b6-7332-433b-879a-3b7a57bd38a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b216b9-ba2a-470c-9e11-a2d83c0bd098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f89c52-f6c7-43cf-a89f-13d92b9914c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3ec92e-b12b-4327-bcd8-1949fbc39931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1b61d13f-6914-427d-9e4b-0419012b1501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ccc65b-54b8-402d-805f-50514a4f7c92",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b8532-6519-4cc7-a2aa-63b42c627d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e1435af-6f85-46ca-bb63-7ca8630dce36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f404d0-694e-48aa-9af9-caa6269718e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd756aaf-75bd-421b-9ed5-b9ee9a3e4171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a75cfa9-ba04-4531-8c81-24b98e60ed78",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37318397-6c53-47ec-8b9f-0387d44ae8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d849610-765b-4d77-bf39-47fcb0dd231a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9cb0bf-1aed-4a44-a0b4-8a8f5bdea5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28f0414e-a7ea-4898-a212-a2ccc1f77d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3249186d-6fab-48d9-bf4d-3e91f206631e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff5d47-9b11-4be6-8501-dc5911c5e24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944a882a-5fe1-4c2a-a9cb-4a1d92778cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1787e7f-66b2-434b-81b2-ac95e1a2344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "78f41cd3-e0d8-4138-bed0-7eb198362d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802397b7-308d-42c1-9d8c-f2520dfc6ba1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9520d54-42cf-4f84-88aa-b0a68f5d77c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24200fab-4ead-433d-8096-1cc4fe98d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1f2df-83e6-4ab1-ac27-af0e16cc8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd834f42-9fcf-4f50-8909-3e1899ed68ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e759294-00fa-4dbd-9d74-9f79f64cac80",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd68035b-0e4d-443c-a16f-c2a4d7da34c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44be99d9-f62e-4c75-8c25-61974667e513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bb28bd-dc03-41cb-b6ee-1547a0809783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f20b70-208a-4ebc-ab0e-2c4677852c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28c5f26-3c80-4308-b0c7-6aeb95b820c6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd7adc4-9f4f-4861-bdc3-b411b477c887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53924df-631a-46de-a829-71dde8e93322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538306b9-3148-43da-b7d0-562461c9b777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c125ce2f-56fa-46dc-98e4-eab5b5111da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3145a747-29c1-47fa-8261-640c88e7b476",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d911d5b6-e969-4e26-be6a-3eedeed68ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bd3358-517d-4023-aa85-746e81a3cf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5923e469-3b54-47b9-b6db-d762ac627c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4f89cb98-c288-4129-ab93-45359eb0d5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c8feb6-db2b-482a-8ccb-c521c33dd74d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba30053-ba08-4511-b3c5-a831f555aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4803c42d-0398-4aa6-bf5a-4be9b1c54353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f96dd2-d0fa-4beb-add2-d8a53119b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9709c2e2-9163-4d45-b2eb-1a933b44f37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f16c0ba-03c8-40a6-aa2e-8e0bfd29b509",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b4fe1b-00f5-4056-b795-c7475a09ee85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1bbd5e-d3fd-46df-ab6c-37932bd06424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62155dd4-372e-4444-ad3b-6eded4e6b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b85d66-4d1f-4bd1-9fdb-6f2049aeae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f4e80f-f55c-4df3-bb16-24a8f7659b5f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ed763-eed3-4edf-8041-b98bda3344cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2d0d0d-d016-4e8f-979c-9a5fa11c740d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8325d9-b145-4151-8b8c-743b1fbb605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54e574a-e069-498f-8282-17f75fd5cae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545dfa5a-e319-4298-beeb-c447bc25f47d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c03f10a-8d9d-4d43-ad3e-f86b8b6d41e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecd357d-c596-4c70-a7f1-88f17e268e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8144a2f6-5c99-4e80-970c-2ffd79ec34d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecc2518-1cad-44d5-9bdb-1062f1627552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f6ec6-496d-4abd-82eb-653057c58976",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80a17c1-4b18-4c84-8dc8-8a66328ee35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f688c7a-9e0f-44b8-888c-ccb8936d34a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35751c1-8ca9-42da-9f92-3b650de7a3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a127c35c-7e91-4f14-9b21-4ebe14b4cb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f94630-cb51-4483-8ea6-ce49ecdbaeef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621d0d95-be60-4f68-879f-7d97e946cd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c28569-108e-449f-a328-01c4c4834900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791160f3-68dd-426b-8604-27ca93e75e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28dcd24d-d542-4973-910a-cab75cfe0beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ffa50-901d-4cb1-a51b-e0383ad6a3e2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774021b1-09a1-4cf7-ae9b-f820a5db0501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59997ef1-9f86-4dd0-80ac-f4aae513154f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d485e72a-d50e-40b3-94a1-a3bd1e4139ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7308d85-3b7d-4dba-ac5c-b0f94fe2495d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6994cf05-c8e2-415d-b5e6-8a8fe9958131",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a42550-dd04-48ab-9a8c-0df14407daa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b80b531-ad0b-49a7-9cb5-59ad633eaafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8a42d8-ff97-4d65-a56c-ea7f911d4851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81ed554e-189e-4a1a-937a-ed3e58d014e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576b5acc-746e-4866-a9a7-7a65977c66e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0539cc-0cda-4ae1-a2eb-a3960eed39bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb6b7e8-56b6-4848-8e29-e7fd8dc7a246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4040957-339a-4304-914f-62169cb4f544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3adb570a-74c9-4864-a3de-5b8627f6a3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4831be79-da20-49a9-ae67-129d3834794f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32df96a2-c4e6-4d98-9361-17f0a7a02a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3155263a-1434-485e-8c46-6395c5e55582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaa1324-f504-4991-a293-33f71e6cea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7cf350-2d88-4f41-9829-52e75bbd8945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b8b4a3-8df2-4694-be1d-fd465393704d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a197f58a-454a-41f1-abf0-af326e775011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91ead55-a624-4ec5-b894-27ea9a7ae3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf4190-caf0-4583-8c98-75cd89018607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8918e887-3836-4d96-b3da-4ef63a265dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2072be-ab8a-48d6-9cf3-a99c9d952c40",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045a3c7-a110-4ccf-9a9a-bdc0ebb04991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdef7e9-a01a-4176-a6a3-76dce17ffa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b0c18b-0be0-431d-a38f-affe5663c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "debf7d13-590d-4902-ae3f-c06b66173c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cd4421-5e75-4dbe-afaf-158495f50350",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e05733-5b48-41b6-b05f-0f436342cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68936955-96df-4323-ab16-c6258703bdb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a2c3a8-a8ee-46c1-a514-cfe475ec0d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd9125f-04c4-474a-98db-edb064c78f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2352204f-ce08-4d99-b00d-a6bbe3650cea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb656d-c63c-4c81-ba1c-feaab20a28b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83200b3-348a-47b3-85b5-534e85d160fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c7ec6-bcc7-434f-a1dd-929e272bea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "de3fde37-378d-453b-85b1-4570022bda3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40152dcf-aeac-40e0-9dfe-a55679b98d70",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18caf30b-26f0-47fd-bc0b-eff759ac8865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f06dca3-b7bf-40e0-8d5e-7c24e4d6eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7d50e7-69e8-4e00-add4-af7665cf2ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f4cee3-e326-448d-af42-1e5039b4d98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4923b-4161-440d-93a2-ce772f598fbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e8d2f7-c81d-445e-a0a8-128e7d32ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6097136f-2962-468b-8545-6fcfbe30f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ef2f3a-1689-44d6-a1dc-6ce4b00abb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7975ae-c0a9-494e-80ef-1b9e1747b21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852ce418-c377-43dc-bc80-2c63d29a8041",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dc9f67-e9d1-403e-8e42-50ed1a2e13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91771d8-f9c6-461c-942c-683faad5a876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe99f77-bd19-480b-9360-147a332942d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9c8d0f-6b9f-4afb-b01c-4c78c81b610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93293ce-3f30-48cf-b3b1-b301ff0cd268",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd7148b-39cb-4608-b71b-d8953a810b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdd233b-8a98-4e35-a06e-585b778b8d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edba0296-89d9-4eda-8485-5e7983633076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b41375e1-d418-47cd-9a7a-904b49470f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cf7839-18bb-433c-8763-1cf0f9931837",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246ba9a1-065f-4a0d-84f6-d26a7f52a6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae16b07-df36-4dde-a7e4-78c960ccfa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521152d2-768d-42e3-abd1-14a116667d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dff72a-6842-4eb5-b281-495ddd48ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f92bd74-0c2e-48a0-923e-9a85c699f67a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cd3123-5bdd-475c-9c28-6f25bef1a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542f8e5d-57e2-48cc-91bf-c94db4e9fac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c6b643-ea23-427a-902c-7392dac7c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5072ae0-e03a-4553-842e-e070d8105cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b98dd8a-cc0f-4141-b549-bce8d3dffd85",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f878006a-1d9f-4562-8f8f-63258275b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a778628-55db-4a46-a46b-e572912a5d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb3d395-60d2-4cde-9319-e2ecdcd6cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e016dff7-e50b-47ac-8a0a-aff04429434f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cef3db-2123-4d1a-a5ab-09c54dab6db3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962e79c7-b7ee-411f-9993-bf14cabae24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf314e7f-28fd-4bc0-8123-aa3edfe30c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a02db9-e963-4b7e-8d73-8bf3f7f527db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a3ab03-c019-4bb8-93e6-5108f3dc638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636c2d22-1f97-4c51-a0e1-4ca473b92b09",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f93274-e30f-4344-a59e-e1e28441bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ffbc71-1cce-4b05-aa53-50979248baf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d412d763-0875-4572-8443-902ea812ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e29f7c-64e8-49a4-b2b2-70e493f1f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a2bd5-5ccb-410c-940c-df174d4a23ba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4cf46c-c253-4532-acbc-ec08460909e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53649bd2-d76f-4d8b-959c-96c1955baf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad333c7e-314a-4844-8f18-eb2d136685c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7fff22-61b5-464d-8509-7ed126f49b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881673dc-323c-442d-86f7-f298fef4177c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce2b9d1-651a-419d-ab17-f50c12ffb0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef027ce7-9f47-4ac3-a5be-e7a07c54fbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1452674-c089-4b7a-90a7-d9bfedfdb1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00582859-f9a6-486f-868d-df0227af9ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd1864d-3af0-4f5a-bfee-a46aec72d446",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbe6b8e-b088-4875-a124-832be7e8063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4680eef-fc85-467a-9e22-c4fd4431e760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d9fce3-946b-4b27-86d8-b6b38c80bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2092d6-105d-4b2f-b1aa-470a31e7ceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2f4b68-7d0c-4fea-9265-ae0ef914c6e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea2701-ddc5-48ab-811b-80fc380a9317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f06678-445c-4823-a415-b1e0e00d20a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41465b8-f02e-4744-b18b-41a13c2b4e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddab8e2a-f50f-4027-9960-1e73bc1fe9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fc3a21-f60b-4d49-a83e-8a38afb9eaff",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a504e1d9-0e39-4b36-bbc4-e0314fb8ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d511ab7a-96b4-468b-b7d9-9844e3b3ce4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a903b162-fad1-47db-9279-b2d828d39c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e796e0b9-9cad-49b0-8ea7-116dea88ac56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb57f332-275a-41e9-82c2-4ed80f613993",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbeb7f1-dedc-4d4c-9c22-b01dc6b52453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418f01df-b4f0-49cb-9090-d499b5b484ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92da85-a51a-42d6-9a9c-831502a666d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2fe687-a0f4-48a3-95a0-d88b0ce6517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89da092f-d235-413c-a926-d867594053f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a592b-4663-4f8f-b0de-0ddc523a5607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dd64c3-a62e-4ce2-ba2a-feccb7ffce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd551e4-c666-4549-932e-e0d9c75af727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb06be22-d80e-46ae-80b3-9edb09db3862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cff035-2ef6-4b07-8975-a47abaa08561",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c459b477-3751-41f6-bcfb-f3ca060aeaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c19748b-62e3-46dc-b007-28e0ee73d5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccad1e5-0699-4fb1-a972-99b73a51a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "170bf19a-9a62-4607-a56a-655cedb9d5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeaeb45-4c74-497e-b2ee-96bb8b8b68ad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e98469-c0f0-436f-888e-b7fbbe8e785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470f936d-3400-4620-a59d-b50af914f381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8681eaec-ea86-4c6f-8e04-3a836c774810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe02e20-c0e2-4a8d-84e8-1a4bf238c8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa561a5f-c266-4323-8857-ba19bb2ccf1b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae586b88-eadf-41f0-aa2f-e7e017ed329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b64a6bf-33df-4e7c-a25f-9382dcac4277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1373d2e3-dae6-4947-9a76-af6cfc0ae436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3717f58b-c1d3-4f70-b831-bbc998c6bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd7b86-dd32-4395-a728-159901abea6d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577eec7-7181-4285-99d4-367155187752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9588b3b-f3c9-4844-a710-dc5fa5b11fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c720b9bb-d6d3-44c2-8e04-c7db4b02b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc839a0b-0050-4f8e-b0df-02f74afb57c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be601b-84f7-4ea8-b851-820c084328c6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38674f8a-d5d4-4af2-ae5a-60a0d76b9a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ed3d85-131a-4616-aafa-6b34d02d7c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5978b223-4735-44d1-94b4-b4f59a4db3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2480a3-8ea7-4199-8b7f-1fb5309d44fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c6b318-5260-4153-8f98-03d8b0d67526",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb202f29-80b3-43ac-bdd5-f14c855dbc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71538a2c-fe93-4f4a-ab03-e37ab7d4e85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b63712-c12f-4ffb-82d9-ad75344954f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4198eff1-21a5-4a3c-9b7b-38101dbc795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679325df-fc91-45fa-bca9-7f1c35242485",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7708261f-f425-43ea-9687-503ff6940b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa766bf9-ed41-43a0-8201-e174e02c5d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397d50a4-2307-4948-ad7d-1d47c38d7604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c48eae1c-6199-406c-aa3f-d9c24780f988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c842f5-dced-49ee-9abe-b95550516a12",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be65fe92-a1ab-4bfe-ad0d-0f4de7e0b4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9690c829-ea25-4bbb-84b8-647e15a23e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3ac1c2-8f4a-4a33-bd5d-ee31820d96cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb56d97-0a88-4eae-9ce8-449092166b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ad2a38-103d-4ffe-babc-22e48dea9fcc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e1ee84-e626-4204-a823-c4732772b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96885ac5-db36-41a5-9516-2be4e82ee19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686d7264-17f9-4bb3-a303-b83294d1c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e155c3c3-dcdb-4a4d-a3c1-49c0834e77c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da132876-1e91-49fc-a008-23efcd63f537",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf9fdc5-464e-4b17-a048-076f49571228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c2d131-a930-4d35-a024-3683aeca47ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae6aa53-5c40-4909-bb84-08aca5d91939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "102e7ff3-b536-41cd-b17b-d06010005567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1a7c90-d3c2-47b7-8177-6de68e5c621d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb42e7ee-b87b-42f2-a289-8d0a210f51c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d884d1e-7fc4-4859-8efc-593284bdeecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0784feff-1040-40df-8018-664403c26685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73899603-e6c2-4b2f-b828-15a386983ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f7ff68-2cec-439c-87dd-f86622639c19",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c8433f-223d-4c79-9549-be1fcb36d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f45435-4ca6-47a2-ad09-6a31968a908c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d4caca-28be-475b-8d77-31e632cd133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d338122e-832b-4eea-9b52-3cd81e7d4538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e31a52d-4690-4a85-a253-9b366f840487",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d4cc97-f7ad-4278-b80e-64709724b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747b8855-4f10-4a92-9a12-1257c9ba54a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d1260f-0d9e-4b6f-97bb-a90060d591f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55a4e7cc-02c5-4b81-acd0-7c4c5d868c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e7328a-b365-4409-8fdf-142b3190a54e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5e5fd-f3ec-478a-a04c-8062e3387bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d787da2-e300-4bc7-b00f-13c021e529c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a15331d-d42e-4b10-a55c-848ad56ff824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abfef847-e8ac-4192-9607-9f2e68e91456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f9aee2-cb3c-4200-9904-bdfa7433ffd6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecec0de-0659-4e91-8542-623aec091908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33da0bb-14ba-4e18-873b-0a5d7476b176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9fad10-3d55-422b-8038-9152f7ccaed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b505e7-7876-45bf-81ca-6668cb83aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b487462-6ef9-4711-9695-393bdab8ec75",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c771bc93-f903-45d0-850f-f9f8e565ef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4eb708-115f-4082-a3cb-2d9f3a0a590a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6c2750-6be4-4c22-a201-9403dae2ff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d79b693b-ca67-4f4a-b55b-83c472f6b100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c542816-c4d9-4b2b-ab8a-216fe1a30442",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e3062b-cf41-4c74-896c-310bfce2706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc77e5-de44-4d14-8f34-6b2f3f358bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e005120-079c-4110-89ff-12b0068f55b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d97fb5-bdb8-444f-ba69-d3e97035f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d5199c-3e60-4d1e-bde2-8b2d41719900",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f455d1-b41b-4e8f-a658-6344bd1cba17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b768228-9e11-421b-8726-b3e4594776be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7137d7f4-fa94-4b12-8bc9-d220f80d0890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3129f3-3287-461f-a954-01fa26efdc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adaaf24-7d04-43ac-97d8-d95f66274fb2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a004941e-8fbc-4149-9578-b51fd8e9562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce908084-15aa-4d34-b54e-f9a229e03264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4daf0-53a9-4f90-b42e-85fa91b43e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f544b9f1-fe3f-49f4-ab79-6c91bbfaf6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127abbb3-bd90-4f60-b2d5-5e7751875a6e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ed6ff-484e-4ab4-b7cf-470eeaed4dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "36496924-a215-43f7-9c7d-ea60901df9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db962f8e-84f0-4658-a5f5-a84981c2974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a823b38e-cb55-4c24-afe5-6e9bafb38e96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4ae7e51-3507-4dbd-a6d8-6bf868405534",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f30fb750-400d-4cb2-b837-73c6f67f3b56",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7878577b-8e4a-487e-b9d2-d87e4e3d19e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39d745e6-7560-4e65-aa9b-ff4292afeba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2994a4-68f3-428f-a95a-df6027679e48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1357922a-10c3-4c9a-bdff-12f703ed00c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c004b9-e5ac-4d32-955c-0f91634d6251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f732e9f7-6d40-488c-9092-0ef724df08f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01ca5061-42d7-457f-b46d-65fc990d167a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d930323a-a25b-4bb2-90dd-f3a55b295695"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1135add-d90e-42d9-9d3a-581715be40bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20922f97-6ebf-47f2-b03d-5e01ef2b67fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3cbe03b-7966-42a7-b01b-559ba1c60498",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e696d1d0-ec3f-4d81-9960-321c30e61d05"
                }
              }
            ]
          },
          {
            "id": "61d7fd60-cabc-413a-9efb-63fcb2c037ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8218f4c6-1263-42aa-bef7-17bf15b827b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e8f90b-6471-4487-9cf4-5cad745bf84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77f758a6-58d0-4184-99d5-194722e9e3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25b26931-888f-4355-9f0a-c0552625ddec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24b1afe4-dc43-4252-a4fc-9fe9ce1324a6"
                    }
                  }
                ]
              },
              {
                "id": "9dc75c01-cbe8-4a63-9ab4-bcdb093787ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9221c522-fd92-4ceb-bece-0d15dbdb5611",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65369bb1-1349-41a2-8013-6e7e386b6647"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03a66297-42f8-4142-a284-e48254756cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6013dfaf-d161-42c6-9546-35c94380aae7"
                    }
                  }
                ]
              },
              {
                "id": "50302f3e-b104-4ddf-bc7b-82107266a9fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9aca674-862a-4f57-ad45-96ddd23749bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "705b556c-8f2e-4426-af9e-cdb828e0ed9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3bd6cd3-869e-4ee3-bbf1-3bd1536ed149",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "215ea816-bd99-447b-84ce-01a086a8554d"
                    }
                  }
                ]
              },
              {
                "id": "b96c987e-033e-4d60-b108-5ed84577bb36",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0760a186-046d-4deb-a89b-a99ae2a25319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d785b280-dc23-4cc1-a7fe-830c231cd86d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf86cfcf-1fcf-4746-adbf-7e1ee675dac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43d57d61-8790-4509-850f-db48e0ec5ea0"
                    }
                  }
                ]
              },
              {
                "id": "81de7eeb-6385-43bc-b617-fafc8990208a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "802d78b9-7151-4386-a5a6-13278efa3f5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "563d37bf-1153-4f75-ae59-b8dc607d5dd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08bdfbc3-019e-4f6c-af49-4ea7cba03d7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d03b5ea6-88e1-48ed-9b12-45fdbfb3bd11"
                    }
                  }
                ]
              },
              {
                "id": "106204d3-bfdd-49a4-a62d-a92d6e270722",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ce5419-37ee-4ea0-825a-1d16d0a8397f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6873c7a2-0b79-420a-8cc8-52d9e882158c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4d29b19-ff32-4c49-8fc0-2fbb71fe723f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff80a9ab-513e-4df8-93dc-ff1cc14fda43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09249a0b-10db-4200-aaed-27c457387efd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25899ceb-2984-4734-ae60-8088a1cdf3a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6802628-19dd-46c8-923f-5d5ecc11dd95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3780f180-8abf-4897-944e-1846aa178865"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6041aee-a8a3-4882-be65-670fdf890b22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4e814c4-c2cb-4539-b48e-4c03ba3eac77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "599c478c-0422-45e1-9382-7bbe8dbecdbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "781c43bb-e7b0-4ef3-ae53-2e75b19dc848"
            }
          }
        ]
      },
      {
        "id": "d356ee87-833b-47b6-90cc-ea094295785b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f827ab5c-39e7-4245-b105-452efcdddca1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "283fe67d-673f-453f-8eb4-b8a05e213b0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b329a523-6178-4b7b-9d49-47e6f301c040",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a4b62f-48cd-4dd4-8de1-7213fcb92d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83f547a-70a3-4f75-a106-c854a4fe4f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a915cef7-aafc-4b55-b767-b9454f36d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51d5816-3b2e-42cf-9ce0-cd5a541325e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4781095-d3e9-41fb-adda-9b782dcfbad5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e641d-d710-4bf9-880f-07a440f95f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0528087f-4881-40fa-9224-99311c8256e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da539d9-7bee-4044-a712-c081a7692656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b683b94-deed-4eaa-aebb-cb65308a581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6700624-0401-4601-a941-d7bc8f6eb103",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254a2b99-044b-4f93-a0e2-76a122ca3f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9792116-8a82-4490-8a3b-fc6cc1f25a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7992300-15c2-4a64-b145-cf5eb5a52bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ead907a-6629-4cc1-95d0-f8755b71c971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c13da7-bdaf-4f2e-b904-669e5e1fb0b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b6f54a-932d-4c68-975f-d7c36df5b6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf65d6e-23dc-45d2-b643-a08c515cc9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c717dee-e74d-40f7-8ff9-2823b78b979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e94c54-ccc2-4022-996b-a8066da4b92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad5e833-c7b9-437f-a0fe-83cc16e21294",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0752ea88-6755-40e3-94f3-2f4c081f7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8eed11-528f-4e4a-b669-45845b1835d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e89155-231e-4bdd-9eda-2cc02804b995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f551f966-ec53-41cb-9bf3-d6629dc6a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c5b9c2-d1e8-4361-890b-f3291fa93a8c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffe1dc3-7661-45d3-90a3-10774c0b9603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfd27e5-e6e1-48dc-85be-139c1d97724e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575392c7-c342-42c4-a24a-ccfaa803a8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ed3f92-e904-49c3-93bc-a5a82ed054b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dba8f9-227a-43e6-bcc7-a8784ceba66b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65709f53-8983-4ece-ab79-6fbbe270f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7895ad78-7185-4458-a136-95ccadde7967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbde625f-29ca-40f7-8e78-81053237f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "928a0e3c-d9bf-4af6-95cd-04145895f8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa08e6e-144c-4fa7-8ab3-fc46f304e06b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36404e8f-2b2e-467f-bbdc-f326fd10fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d9e7b3-d306-4c86-8a10-579122222bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d5a2f0-28a8-4dd8-9d01-a7704285f34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b095430e-0b4a-454a-aa03-41c08781f083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b526b150-4321-4264-aa44-e70f0edcdbf2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c956a823-0996-4d44-82fa-3dfaad376d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d1c099-044b-499f-b8a0-eefd3fa5f2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2815e-8f7a-4f63-958b-cd3aeee11a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97dbf51-7a86-4b0f-a2d1-17e69d8f987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d04515-0069-4adf-8f05-ae90abcc63f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2244e1c6-b00e-4a9b-8364-b480838e3746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f686ccce-7a33-43d9-8daa-df9eb19b79e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9244d42-4f98-42b8-b9cb-9cea6ac8a19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f44e6d6-20ae-40b7-93e4-12ec984bae7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c6477e-370e-406f-8c89-cf97e2769f2c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291a051-5584-4cde-b253-7df9f72bea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023bfff5-b9bc-4338-ab77-1947e423bbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6912741-6dfa-4765-aecb-7e8a1b546a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c900b-0606-402b-947d-280031e58c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f76be-2642-4629-b542-d3d34e23528c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc04617-0607-4495-808d-d8a7f497f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bce4e26-3cb2-49db-b873-1ef1c08fd48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe6f158-7134-4a87-a943-088845631533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd2a001-904d-4cd4-b3e5-4aac60e5179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eceffd22-4e53-4c8d-bf45-1c15db4ab1c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a8875-4484-419a-8079-0510ff1024c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf818f1-c66d-4dc3-b4cc-b441f294eb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0ce14-b36c-4125-a8b7-9e79c4271b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6ab50f-6073-4ce3-ba29-223aa9e73828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf52275-af89-4873-9d2d-5ba0a68bad2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966f1a5d-edef-48da-b444-a9c3c20d4cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488edb36-0784-4961-816e-24eb7011f9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f54f98d-e131-4844-833a-366a36da476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2fbbd7-b180-4edc-a397-d1007788d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca800050-5457-4298-9c8d-2a4035d0a03b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7ca7c2-6ed1-4ee2-a3da-73cda5179623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8252a586-a3de-43a1-b74c-f05c01bc3f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed353ac2-d06b-4fe8-859d-1804246cbe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79507bb0-eed5-4f75-bf8b-29442f6a3e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a9e6e8-ae0d-4ad6-aacc-695d953917f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ffb3fb-0931-4de4-9540-9dc37add8c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a0fc5b-986a-4503-8539-61a84e0fa29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc4d4cf-fd2f-4d56-92d5-c14fe53ee4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56ba0a2-f304-46c0-91d9-c2ef72f13b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ad8bec-9521-4c42-95a7-e8be0cf8d027",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe85ab-3359-496d-ae32-93ff0a999543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cb32bd-3214-4467-a683-49ee348ead61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75804a1-9670-4bc0-a036-ba3b8ef52012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b74a99b-4e34-4ad6-ae09-a4c3a4723fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717acfbd-b674-48fc-b69d-f6400b80b0fe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff305bc-45ca-4a0c-9e40-3df2c390cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bc9c0f-ddb2-406a-871e-6a4f1ad30248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aae048-dd4e-4fe6-bd7e-bc5a6ba44da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f429a5-4044-4623-af81-4c56d7135593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e575f29b-dcc6-463a-8cab-fa67e2242369",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34c0f6a-fa24-4f42-9115-01693c3c206e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d4ef46-778b-4950-ae91-28ad6cb7f851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37312742-c75a-4758-b427-2ad6d1053741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6863dcd5-27bb-40b4-b25d-5928d7c5110e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd422b8-2b6e-4aa7-8857-548ba1960d34",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b863b39f-559e-430d-8b4c-7f20436395d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cf0fa8-321f-4b6a-8a81-45878d5d4666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a23e3e-f038-4530-9f92-2ecaa02878ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0103c336-9565-4dae-8e67-917ffe81e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c52e76-db42-4bae-9be3-092712231083",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa6320-9c3b-4b91-8b2f-07d2e0f5f802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a5f16f-1e34-4a24-9dcd-4218d54894c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60b4a9-f15a-4cd4-82df-a2443c65e17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea3f149-e287-4b23-84c3-c4ac9a1f72e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88790975-98ba-4c1c-8826-ce8edf5884e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64166114-8d6b-4e79-bd57-57f71f52bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab0c27e-ba0d-475d-adc9-7cdc5f597072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2413ddcf-96eb-47e6-899f-bd7883e3a1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc17d25d-558f-4bb9-8228-8cf17474e7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d256f377-4644-44ff-abf1-da34e233dac2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d6d70a-4ab6-46f5-b3f6-db4f7dd746f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5240ea05-073e-4a5c-964d-ebd0615d6f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d0117d-6098-4fe3-9a67-ea352594c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7025ff-d3f4-4053-9eb6-5166b8c7cb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a68dc-fbb0-43b3-9811-8c768230865f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9203e04c-6888-49f5-b2f1-c523eabcf13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088b4adf-e6df-4447-8816-1fa3c199f89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f309112-7a5b-43e7-93da-607738b374e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c30b0a-be51-4051-addd-21c518bb695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04db5a-8109-41ba-8a70-28f6c30cc81e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b13ff50-cd03-4ab1-937c-41ecf9b0ac46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f191f1ae-a21a-4ad9-9e37-2feb18b57017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b39635-c03e-42b5-b378-197b6d6badec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8e7fc5-655d-42fc-9d46-846856c919e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e393aa-f2bc-406d-9a82-deab95069a59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9a052f-50d3-4184-a103-0274d9035d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe76c38a-e36e-4aad-a0d5-962ce67241e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb905100-368f-4eb0-bfe5-9040c4f662ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d539bd4-e93d-4ba5-b197-80482075b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22a5e97-c7e7-4813-800e-696ae8f04da8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285e0fc2-01df-4279-bc7b-f9279a297124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc3b681-8ec6-4265-9ba2-0c1c42b67da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330ca49-907d-4321-b7e0-8168e2f599b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a33183-b1b8-4fa7-bc95-a93a6302da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac0f4c-704c-4565-9fbc-8a5ee56a5dd8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e974c531-2ee7-4f47-9f17-c7354c6681b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3a47b9-7958-46db-90cd-40317acaf7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89dac8a-3edf-4bc1-b38a-a753717f9ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8ed918-5b4c-4196-909f-f2af8416c93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7b5e4f-5caf-46da-b160-f60591d94b52",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fd226b-7a32-45dc-a029-5bc747c35db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab802cfb-0d77-45a1-8234-f0b5bfe461d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f7ae82-ae71-4072-84cf-20814ebb1d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8fc20b-15cf-4258-a9fb-c600bd35a471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95d237a-491d-45e7-9e74-9d439575c331",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11c1b28-b9b9-4476-9e72-474977b0ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8aee34-076e-476f-b81c-9520f2b7a62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f40efb-f807-40b2-8802-bd0d43f02515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0898ac-0db5-457c-9543-81e86d2962e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dde3cb5-a77c-4e18-8a45-05135c7b3bac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b69474-b108-492e-943c-89acb07bf719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db71ab2-069c-43db-b4c2-f598a0ce248b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee1247-dca5-4c65-99c5-3dc26439263d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5988ef47-cf36-4d9a-a5f7-0e9e7c5e6f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1f7e9b-2e01-45b4-a60e-e1b537263c2f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d26386-17e2-42d9-b6f5-3ac454baad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05567088-a58f-4e00-8435-0b698434590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61178be0-2da0-4416-add5-95a831c123f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6369f7e-1506-417f-8197-13a21cd318af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db224d4c-09f8-4f79-a219-5ec8e0f6a5f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5296cc35-d72d-4175-ba1c-1a492d0ec60d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a827bec-0090-4299-8f10-cc6bab8c210a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbcf82b-32ac-444f-8b15-8f3ed72cd83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4bb664-9958-4dd6-a8fb-e48c49cfda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca031c7-5627-4807-98a6-7fed30794f21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24446abb-b227-423d-889a-41a981603d42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f19c8c9-ceaf-46df-a936-21de86c3bd17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89affa15-feca-470e-9552-b80fc376fadb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b7d923f-31bc-42b0-a4e6-53c136a29e7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82892cbb-a3cc-429a-b404-641d1233aca2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "faa36cb4-56c8-43e2-9e99-a8e1a7108860"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b06272e1-162b-4ef1-a1f5-324b0bf10d18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f2ab3e-4b4c-439a-96a3-2f7e33d1b946"
            }
          }
        ]
      },
      {
        "id": "25bbe4f1-e8be-4071-97a1-a054d38abd01",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "76d9b321-548b-46d0-b120-272c62c12ac0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1213619-e47f-41be-8d83-97db41c20e71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9f2d34b-e12e-4efe-8071-3d61046b7503",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67826c9-94e3-4bfc-ae06-fcdf749d9d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7841b16d-8dbf-45fd-92c9-638afd0f62c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc6cdd7-3012-4a3e-b21b-6be3c5cc0e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9377868e-84b4-46e1-8f8b-80a2c37ce42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2066734-4bf3-4fe6-8047-08f3bb3b4316",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e693124e-2691-42b3-833c-b115f8a274d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c112ca50-7d2f-4927-ae09-0e3c54692c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51129be-168a-4e88-9fc1-bddf37b99fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02be902-1d6f-43ff-8c4e-bcac1daea473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d086c653-7116-426a-af7a-02c16750cf8a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543a22cf-e490-4aec-8208-1beee360992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c30c98c-6c0f-42b2-b165-18605f0f7408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73176e3-cfbf-45f5-a9c3-683f4133b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c54c9207-5047-452a-b2dd-257d4af872f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6308b2-c9ab-4ef7-8a88-6263e42c71ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216c9799-1db6-4e40-bb63-53f63e636805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635183f5-3c75-4c72-bffc-3499df060e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a4c28a-2f1e-4301-9fc1-b192fa6a33d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "531be074-3b03-449a-b3a0-a6c6eb0d6f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6006c2b-81cd-4ec5-84d3-19c07d87afa1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc39b2d-80d4-457f-b270-f1cd892d2724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce26fae-5e9c-42e4-8a1a-3d2d23ed88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530a6d70-d6d7-42c6-9015-75f8d87f5417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e53196-9a04-457f-bd74-e19b049f8156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcebffa-ee73-4898-934f-7d98806261b2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f29c690-5850-4287-9fb9-01a673745099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a69b72-f77b-483c-9c2f-6ee8c462c966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1666892-534a-409e-af0f-803db7a4cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba80e46d-ec49-4793-8775-ebfd4c0fb268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d71df-adcc-4470-8e9a-9afe0d1eb36e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553119ba-b43f-4131-85c3-9e7aea9ad476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa41a15c-3f4d-4312-8355-106b6b32d741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e77a248-aab3-4139-819f-f12f5a5de5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69216658-de23-452f-9744-2d34797e9f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d624ecd7-2b3a-4559-b95e-9f1b7499ddd9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ebc5b5-bc01-4042-bbd5-0a0a8618cd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6ecc65-95ea-4695-ae2d-bb18d036f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602f7a3f-f763-4c1a-b771-b471c0c130fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1043c0-c2f3-4e4d-b0c0-aef928138187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed77b60-25ce-4635-9d0d-801b3d525857",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ba2a2-d59c-4035-b61c-8b6cb2f89804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38386336-51e5-44d0-b5c9-43f5c795838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0356db-7bbc-4451-957f-a6179e551e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "072aeb5b-634a-4025-9c03-6dd2ffa6d30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defde0e0-226b-4cde-9714-2383755b3097",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95360810-a2db-4cb5-8ec6-fbae18517a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c83b567-3df0-43d7-b400-8615465d7c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d80b6c1-c5af-4bf6-83b2-715b0deb3fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61bf40f-6e75-41ba-9750-b5bf9102f327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693f383-d3e4-478b-a882-d52087f78e00",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42e07dd-9774-4417-b748-3703fd1f745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e5401-b4da-4d96-bd69-24ef1b271f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f754fe0f-d93c-4cb1-9823-30356eec7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "130dec13-3ed7-4f83-adb5-d9882f04a513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bac3127-e42d-4b85-beba-122e3ca631d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8364691f-0e86-40dc-aca3-f58e54962f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1311700b-0614-4449-ae74-223aab856f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321be03a-58de-4c66-a340-dead76e8a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9b729-7d4e-4211-8ff8-7cf18c5089fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab0b93-eb2e-423d-92ee-5bde727bc226",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cab014-fcca-4cf8-9b0f-99c95a491c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b8e00e-4157-4586-a950-0c550151231a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c60e9-3f5b-4a9e-88a8-a563788e3010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df9ed39-17ee-43bc-84ab-4efb5650caae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6caeae5-fcd9-4fc8-8d0d-2a1218def5e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fd824e-36fc-4155-a1ba-4292c95f1a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba30dff3-91a1-4bd9-991c-4a3d9d1d5a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b39dd36-e9ce-4960-98bd-cd80e9406d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bf37df-5704-420b-a7c5-7e2ecafd12c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948a93cc-dff9-413f-ac90-bb36c745cd34",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1209aeda-d386-47a6-b973-27e59b8f5855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8f2c8e-3374-406b-abce-4529b745995a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063fda5b-85c0-4663-910f-9a85d89b7963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc9f148-edd8-4529-8880-b091b038f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e69958-c6c0-4aa6-9276-365ef8ab6281",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a439cd56-c616-4988-a84b-029740f9ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac839eb-dd6b-4ddc-9c02-2082e9b8dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04bc7d5-c6b2-4373-b2eb-5fd6bedd026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b370479-2010-47a2-95ed-40fe46e3737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced47343-5d78-402b-b2bc-975f8a7d8557",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079270db-5005-4905-8477-a444be7fb6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c6ce85-2813-4d55-9aaa-93a794a01adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef5de6c-8e37-434b-a81b-2a5fdc0f91da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b57bfdf-43e8-4a19-b675-9ee96cd5edfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd4c798-854c-4b39-99b2-1ab1057d50a7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f44f138-4a6e-484a-ad01-ffa602660332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5030d6-8a2a-41af-9fe1-460e25d2b819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70873043-5e40-405d-906e-8908fa90704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "496ec116-9d93-4627-8c58-5f620482b83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad576dc0-66f3-4b0d-a379-eade6013cfdf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5c4e0-0820-4fcc-80e7-51932d56791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5e1c70-b0a2-40c4-b404-abd95a198a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dd9f38-a468-4a6b-9f31-6a6f58d88375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "650dd0a7-342d-4514-b802-ae6e72b73080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce387c94-ca4f-43b9-8bed-5607a233f921",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175043d3-4f6e-4b72-8c5b-074db7858279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0964d4a4-5d48-40bf-87e2-b199c5b62b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67d83a-8d61-4f2b-8c74-20cc25a0554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bf37d5-8b7f-4f72-9045-4119bbd202ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb444d0c-77ae-4354-aad2-6e7710b700a5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822874e9-ecd5-40eb-8272-bbbf84e371e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702bff29-e205-4871-b79b-24b4f19aa941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1863a17c-713d-4d49-b673-282d84a324de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b645d51-cd0a-40f1-a71b-b0acd163b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226d1b7-92b3-4965-ab57-be9ae4a2fb66",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff9add7-3062-47e2-9432-ef3f2415b464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5831be-6adf-488e-97b5-c46638beefda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5598bf4-9547-45b5-aff5-d88b49ec517e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff577d2-e4b3-4047-89e5-de3f712e557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bf0367-59d2-4980-8694-1f96bce53a57",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69793b2b-6571-45c4-8ba3-746579967ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0836f99-7f73-4f62-a37b-a7de856a4acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9826d09-9359-4d44-9d4c-1515f5f6c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ef7f83-d176-4ac7-a257-87081cbdd1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f607b9-6fc3-46b2-9026-5141d172e4b0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9408d7-bf7f-4e94-8389-6819a7a1f70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f6f3b7-c698-449b-8018-104abe370d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26485a9d-7c34-42af-a9ce-0d783de5c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd5befe-9d04-42f5-b244-d22ddcbd5327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ea4961-58cb-4398-a3dd-2473a429bdf9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0574e60f-6a72-4e02-8a7f-c0cecf277f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffa589b-2539-43cc-aeb1-28a87b92d2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf9597f-77ea-4a27-8ca3-4f478abbdff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79edf6a-2bc4-4647-8def-6adb37379c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c10cc8-baff-4eae-a6cb-ccdfd8059238",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635a034d-3616-4670-8dab-ed096cce0cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12695c00-2986-451c-a583-62e31fda314d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0ec271-5de0-40be-a457-b7f07f0da2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f608ad-fe61-4bb4-bfee-07a716a5c42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c66f4eb-3b13-4a9c-8639-15fce7cf3775",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7685621d-dd3f-4829-9691-f2d280ef0a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9687f89-b8ac-48e5-9fb0-07f2642d0760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d828bf4-9c37-4ad1-afd3-7e95856a40a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fedec093-4e42-4387-ac12-0b909ffe4fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d286b1d-fecf-49c9-93b7-658c783a8df3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f46d889-948e-4f55-8300-1423cb99f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563cfe50-2744-4158-b915-7c9c9ca16ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce10e8b-dd6c-4b29-8da5-f86e2bf9aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "774092ba-0acc-4cb1-a0c7-7a30886d4871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70ae332-88e6-4a6f-81e8-268aed7fd583",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1cf9a4-305e-40e6-a683-b10462d4550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa3e1b8-31f7-4b6c-be42-391ca8e16cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f03d63-b823-4428-9732-a5e4cd644e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d3159d-996c-4dd1-87c1-316cf921adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6bcd4d-5aee-4e2a-8ff4-a734f5d3f56f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24754f6-a378-49c6-8526-e8defb126cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b6eaac-253c-4b2e-a96a-f1f11f6868f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab62bff-9cbe-4336-a72c-3dfcda93393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d726e82-333d-4174-a3c3-17cea44c60e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c03b5-0c72-469d-a210-b718ade2044c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789724c4-9753-4a93-8075-601a9dd15147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b3b9bd-ae42-48e2-b1d0-f55c589bdd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba717170-2bc2-4405-af58-cd9a61c36f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2163457-df26-4b39-ac5f-579d4c308cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978232a7-a57f-4ed5-8cc7-81b18f69f309",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a0b48c-9769-475d-9f28-6c74ab850e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2529261-c9a1-4714-87da-ae5b214a7d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657dca2b-b2c0-4d17-ae33-b0b3f84838e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e01a7fe-20be-42ea-90ed-42c6257e30a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154f54fe-483f-4bbf-bd62-80b5f08ca1f8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d9e4ec-9a61-4833-a319-2ba626f07a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003b7ffa-1c43-4d37-9396-2dffa4c50728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25440e68-c342-4a98-87f2-852238fdcaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab076694-ddae-478c-9884-c9311471070d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770e8576-ac1e-4f31-8f18-0123f85cd0bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f9669e-8400-4ce9-9e23-5117611571cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6004f86d-c4d7-41a2-b1ec-aaac29f2b5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46731536-305d-4ab5-9553-12e329230389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f182691-77cc-486b-a9b1-aea3a67e7d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adeb9bb-aa1e-4f4f-9e5f-eeac391faa5e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de130fd-5d13-423d-b4e1-959c2fdf7b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d12cb1f-c691-48bb-824c-0197eba8e63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272aeb9a-a3c9-4c4a-9314-8a7a2c41f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b3948f-8ff6-4209-8584-fb71117facd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e038c93b-c17b-4f74-95bf-b5adcbe0fd5e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b71eaec-2cbe-4e93-b769-1bdf481c959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9bc437-21ef-42c2-a5eb-430c02b56a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b91f9-0095-45d2-beb1-cfe0c9cd2e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88583d8f-1075-4449-978e-d200b46da17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df5c24-5deb-464d-a7ca-5bec4f003fb4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b692f67-a604-4fbc-b4fd-e694dc067f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf0c811-f8e0-4cdd-9c13-dfea5049815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a967cf-9575-45d6-b626-5cc968631fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c73158-4bc9-4883-a900-4a6d1155a2dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0475e578-b0da-43aa-bfe6-993cb2882534",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "258e29c4-b746-4d4d-bd61-f94cc1c411b6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae41d67a-562f-47e7-b477-9a340c17b955",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dfefa2-25b2-4f53-9164-8e3aa2c29914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b37364-2e49-485d-af3d-80b0f9e2ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42241722-f210-4b73-8290-4ba484ce0d58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de5ec83a-a328-400c-a126-1773e008292b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a86c931c-e762-4ab4-ac74-6bb85cd9f382"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85eeb5b6-6bf4-4604-bfd1-462bbe22614c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658f212f-9659-4b48-aada-e941dbde4603"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3e44f21-a821-45db-9894-afbe3a3f4b37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66ee6b64-4b07-4685-8557-64ed5f386466"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02384e26-e29d-4d01-a012-1c494cae58c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0389d9bd-9f8c-48bf-97f4-094d615d72ed"
            }
          }
        ]
      },
      {
        "id": "05ac2fe1-ac36-49e3-9a43-834f12c94497",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "51817639-6278-4c30-a1cc-4f18aa03746f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "101e28da-0e20-4f64-a7f0-c03b40d85834",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "284ca4b6-5093-425a-ada6-89d12410a88d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ed4e9-516c-4e30-954c-eb0a9daf6955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdf7e47-1357-4810-b870-eee77a003d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af1c567-9a54-4552-ba99-001321e76e6d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa12e456-8b0e-489d-9993-51ea557544bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f0498b-9a01-433e-a846-1ec02c68c4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7291c8ae-ab63-44fc-b84a-6802a0603d9d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1479357-9f45-447e-b320-c9e1cc14ac2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7a327e-b667-4f48-8970-c57a56aa817b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de22f696-1113-4dbe-b2a7-85b6949be6e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ae99e9-870b-420a-b3cc-014776cf4499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f6275f-f89a-4eef-bc9d-cf18f5c1c25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0590a58b-523d-4ca9-b64e-821b8cbfd4e1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ed38a9-d41a-4c50-b098-3e782ada7a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e43352-f61b-46e2-9857-4a4f0b6a784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374f3355-a0f3-47de-bc8e-edeca2c1ce9d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9956cd6d-245b-4c72-ae6e-64a0af38d943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7d7ce0-73ec-43ab-a429-2b5e88520c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9332b737-e220-4c01-a572-3eac6c69b532",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f926d6-1ca6-47e5-a343-0eefed4e792f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdee233-71ce-4e3c-a150-e890c4100b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce07bec-9046-4de2-ac64-9e8cf83db457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05424f00-9437-4734-88bb-a721d9518ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da329b6-1977-448c-989d-39c6634ad171",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8540c5fd-d39a-454b-81ac-fd4ec455dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396bba8f-9a0d-438a-9a22-ac89fc0f6f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f76570-fe46-45da-8408-19e1d82817a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6793bff1-5821-482f-bf32-f53cfaabd0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b2e9f1-f18b-4398-bb59-5d6c67887df0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e37af-a535-4982-9e95-fa2351d3aac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d665fc2c-8e2b-4f94-ab88-4fbac9cd6227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c4d20-1de2-4545-8aca-9a120d81139e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d176ae-aa21-4261-a0b2-31c79fcf52a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b111636-45e4-49cf-9601-1b1fa553e547",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c66c5-d5f4-4ddc-82d5-57901a5b5a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebea09e-c883-477c-9bce-7caa0dd3d6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a0da35-9fca-47fd-96b0-870bfd7812aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a649df3e-1b0e-4724-bebe-3d57e6d9dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce57dfe-b1b9-40b0-9038-5b167d35d7d5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af10633-31fc-411a-8a6d-a2c2746ddc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cda877-b21d-47e9-8a25-29fab7d4b39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d625e2-bc30-4937-b1be-60b0c54dcb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48be241b-32aa-42b7-9e72-4b394c6a9db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ae8f2b-3baf-4892-b683-b69f7884ae02",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c3586f-6636-425b-ad6d-08f2bc67a26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a662759-c4af-453a-ac7a-c3888a0d3f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1089425e-b4ec-4802-be3a-38e6d1022ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c3da28-ab6a-486a-8e5b-5d77203135d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26097c0-42c4-45e1-8ea5-0b2a39d2fc20",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77954b75-928a-464b-b0d1-940e3ffea705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4f560e-35ba-40e3-98d9-a25e62085a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff40e24-9f1b-4614-9977-6fecb51688f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cb93e9-e5f6-45b6-b99a-92e234ab33f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18e8e1b-0f71-4bd5-a86f-25ef293240a3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c757644f-3afb-4181-b3c8-ab01ca4301bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0536dea3-34db-48e1-893e-0c8452127722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e0c3b-b94b-4033-88f1-f4898d54423f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38090e91-eaae-4eb3-863e-3dfddc7bd805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dec30a-1f03-499d-98d0-3df8b18b896f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4880324-8da6-47b6-9d5b-bbf036ec1343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0dc448-9d4f-419d-bce2-4d4ff99d7664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de41b94a-f545-47f2-9d40-02be9dc4d81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67e3eb6-1e2d-477f-a551-5fff41872436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99677cc-2067-4a38-ac2c-59254edac3af",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2eae9d-1c58-4e8e-aba0-a0abd843c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2d0a01-4b2e-45a0-bc4a-d8f85e66006f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4fcfb9-da21-4435-8f32-a00a180baeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae104fb0-e30e-47b9-bc21-3d84bc4fb41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d020ffb-c30f-4a00-bde9-908e6547f02f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff687e4f-0273-439c-82e6-778c132d36d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd59026-98ef-4016-9215-e2a2afb95cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab29a72-5b4d-406b-9f6e-7bff604435e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638c2537-35a3-49e5-938c-14c2e7665af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2173b3-d33b-4562-b1f0-9ed123684fe7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c90ddf-b4ed-4f5b-b8ef-bbdbd08f5a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbf2656-8014-495a-a934-ddc34d93aeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886b6df5-d69b-454a-9680-1d9ce84d34ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299464ac-8a78-4e4c-ba4e-e2839e302419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea55e06-3a4d-40e8-a2e9-2ca199db405c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9947ca1d-2686-4689-915b-7cf7a19e9a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3860e2ec-cd07-412f-899a-5408e3f14643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3421731-85f9-4d18-a187-2a3011b5f4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d33d8a-a305-4cdc-8802-2ddc7103b65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3412a44-3724-4b34-8dd4-60f39c4236e0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f10240-1873-48d4-b65f-b384699b1607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d44adfc-1a85-411d-b46a-a81889d22a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b11448d-3bec-438a-bab4-fb66a91697ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a70cff2-f17e-401c-9cc8-a8324eceb23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a231c508-2544-49fb-8dab-8891650b165d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00df6088-ccf9-47db-8375-d2d47f35c831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9edacec-02dc-47e0-9a5b-985aa366c95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7862d01-01ff-4f7b-9e28-e96c16deb5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c042f78-b55d-4268-8a34-fc95362cc95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fc15bc-1220-4e04-8220-78646b00b8cc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717be57d-5800-43d8-bb0f-9f7817bf0368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343391e2-7e7d-4d38-a43e-1f5db050ba44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43879143-35c7-46b4-aada-03a8a6420639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608e508c-c8da-4b85-ae69-c0339d378de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1d245-1a23-47d9-9abb-2e25f027469b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d072eda-941b-47ce-986c-a77adb07ed23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e090d0-51a5-4839-bd90-462d3d12168f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de73a31-8827-4e76-bfa0-d8b7548351aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78eafb-bc76-446d-8220-563c2b3cf769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cef32de-a495-4a83-9657-2187117cacc2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75c2a0f-7ed8-494c-a8c1-0f886ddf89da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87117938-306d-4c7a-8cff-dd772d13f28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195b0329-6113-4e08-813f-2255f9e9a82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5421fe-4c6a-4702-be75-a2d804269e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81f5a35-8a93-4501-8675-1b659efa0997",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276a88f-a720-4ab4-8892-51138d4ec645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d73a4f1-0d3e-4029-bb73-2dcbb97f6a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a13543-116a-4546-bad1-9417160f4cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1493b6-b9de-46a6-8d1f-83aa678e128e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08413378-ba0e-4835-ac1d-746ba2bcadb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e71922-296b-4b6b-a1a7-76232bd93f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d074004-33a8-4e5a-8af4-cb82d1ca2143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc18e758-9e35-49e6-b34a-698f660e9c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c9e5da-d3d2-46e1-9ca2-8cd8f8ce4e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33e1807-2150-4d58-b539-7e9c3226249e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6b5c04-d9d1-41ac-a037-583807a09e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab81bf93-8fc9-4a47-9ff5-8279e1753927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcad064-970d-44ec-bd6a-b907759baacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4b2249-2049-4269-9b69-fb6afdf90c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1773bf-af28-4b15-a8e9-fa7fe4f8347e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06260a2-fc83-40b8-a479-b815c2d15990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc413b3-1f7c-4ba1-aae0-d9cb7434122f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4d53ed-1d76-4e49-b028-edcaa3c6436c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b627a1f6-3b64-48de-b5fb-c27a801eed9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8879068b-8f89-4eed-8b69-3706994ababc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940c0c22-f80e-43a6-90af-9e1c989c2f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec0c1da-13cb-4cb9-a73c-29b5cc6a9725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7615f3-1efa-45cb-8348-13d2093555cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833fc22-f873-4a1b-9998-bfbee0c89c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae6d030-1498-4192-ab7a-e7387ca6a03f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c96d060-6a3c-490b-bb14-78ae39320fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f024fc9-550c-4aec-888b-4a754e278b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4665d44-0f8f-4337-be69-3ee5e3c11404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c73e4c-4901-41db-b36b-d61623736031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc82872-0682-4716-b082-1e33163c69f0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5aa6f-50cd-4f75-9ded-51dcc516ab20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e77fa1-8308-47eb-8cea-f4bfa14346d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74514c92-7da4-44e8-bc49-f24f32c16761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28545b8d-799f-4ea9-970c-dc2e5644f18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5845adf5-53a4-4c42-8f8b-8179a1808ac1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b352c4-8aea-40d7-80a5-9c0728f5d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55859588-02a5-45c6-af4c-a37025b99872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26baf3bb-ce61-47d5-83bc-ea27b2828ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b4e648-642e-4ede-a1cf-ef3210530aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1536e29-be2b-47ab-a9ac-b71051cbdfd6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb2bfe-57d0-42f8-86ff-7200cdc2eb60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd19679d-0165-4775-9fe8-c7ef3a814cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205a0547-dd45-4e0b-984a-ec426ed72b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5799d91-ac27-4e75-a12f-11f0dd5e18be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ddc42b-33dd-4d7c-a7aa-ccb850d23e5b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71465ab-2375-4c3f-a3e2-a293767a78c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27f1d0c-283b-499e-9bdf-bb4ee767a119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7fb4ea-b573-49e8-850e-ca8dec203eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce24a120-a550-4c10-90be-8f4698c64ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32f90e2-f3bc-4d1b-b33a-abc8330cdeab",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad059d9e-9498-40f1-9bcd-1c6a0b2903ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d54683-a657-4e79-abae-dc159064f033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244c6f11-ed2b-4ead-a721-e1cd4805f640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb09aa2-a69d-4bef-abb4-100f7b7dee8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17a1b4c-7256-4a9a-8f43-8c2ad695b4b6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bb4cf1-0eb6-4a4e-8301-e8fcd147470f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7648b228-bb90-458c-94e9-fc56c0586d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519cc097-c5d6-4669-b8f6-a979365c5482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc081b2-694d-4d37-8770-58ddb0bdac70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0210d5d6-b55d-4135-9137-5dd1e2151497",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2795a9bc-286b-42aa-8d84-818f3deadacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc99748-1988-42f9-b030-1f423c980de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3f453-c274-4fed-93a3-d2e6889fc073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7996021f-b28f-45c6-926e-08f85864d937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd909575-a10a-4246-8948-424f79c9aeca",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6cddcc-e90b-4f83-9118-27affca410ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af762bc0-fc16-48b5-8712-b67d65e37354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1c0084-9df6-45f3-a9fc-014ce348d7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4093e738-7152-4a7b-84f9-06e90e15e6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c027b218-0a0d-4889-8496-b9f5704f715b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa39f27-2ecd-436e-832d-b16cfd1bd386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f69191a-0b6a-4e77-ada0-94108facfd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a802d33-2383-4c83-931c-88f68b19f8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6068a32-7832-4027-b287-c57c319b58c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b0701-d0cd-404a-b40b-53f1647bae4e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43130856-98c7-49b3-8d6d-7eed318f95d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c86b6b5-38bf-488d-ad7e-e230bbdcb00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0f773-915d-4d12-9fe5-83fb2b3b70d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605195ad-4ed6-436d-b555-774d2a7bc6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4cb424-99fc-452d-b5e8-a46a923df690",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60be5e5-82c9-4f49-9bf0-e49b6e71c7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92533a73-49b4-496f-9973-39c15d8d4f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5438bff4-bc4a-4c66-af7a-c2c0f7c8d07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996f722f-9c2d-4b69-b2bb-64d3098487d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ddb30-2043-427a-999e-ec47c9156460",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7788f192-c2af-426e-8106-827ef2804619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa2522b-6276-4409-9ac8-b77d149ad371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1296fa7e-7083-4f95-8fdc-fb0beb7e7843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ce0220-a3a4-4f11-aa99-979f1dc0dfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d17c95-5fec-461f-b955-b97b3bb4f6c0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266482e4-30a8-41fd-8aed-1082e6a1b4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d0a938-9baa-4de8-858d-f044632f7ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbe768-2ac7-4708-a52f-cc5424a53cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9308f51b-5300-49fb-9a9f-ebd1a0084fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fa8dd0-707b-4601-9309-da41acc6522d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f2de0e-3b58-42d9-ae8c-92f8c802b84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8017eeca-9076-477f-aadc-02682e526755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee74e4b-eb2b-4b89-9220-22cc5596af8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6ae88b-2f8e-4578-b924-bc3e1990511b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbe20b1-9f37-4776-9af0-a619e30df505",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bbc18f-e427-400a-9ee0-37a751a96c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0354138-379a-477e-8c31-5b0c21221239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29329885-d34b-42e9-8848-d3aca0219f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feba5b8e-1db5-41e9-b4d2-14cd80a14f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc205e-adec-41ea-82ce-c42e3c3b3b6c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177a0a4-4e30-4512-abe8-bd32930e0cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d787eece-0e62-48a3-9371-926d48c53707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7322a79b-3979-4ef2-9cca-e1e216d37cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4a0185-da62-47f1-ac0e-b3dcaf6171c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54391ae7-106f-40a9-a5c4-718419e54143",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7727f1b6-59b1-438e-bf1d-816472570792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8f51ae-961a-4b3d-ac13-6c41d8c11fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9496e4-cbcd-484f-be48-b8cf6d9bd429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f644fd0-86a9-4339-8940-d84838a7e2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5583cd-06b7-44de-a42b-0507af63b20d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cda8f95-1ccc-4c59-ab13-b40c18c408c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7740f9-d3df-4582-bacd-cd065b2842f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c5dcea-8383-4a5f-8789-83df2e030c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311907cd-da2a-47d0-82d9-03cdbb1f3762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b65bc7-b8fc-4715-ae28-322f2848aff7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8de4800-df3e-474a-b117-f7e9b209c559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253cd33c-fe4d-479d-9c9b-7f93c6edeb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff90c08-770e-41ab-80ff-22ab209cbd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3af680e-6aa6-482d-821e-28778e10f722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7471adc3-f96a-47ec-bdbf-6ec4ab52cfe1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d941324d-caba-424b-bb36-9dd665ef83a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee447154-6c6c-4c47-9dc6-bccedd4fbba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cdb9de-92d2-40f3-b7f3-51dc38fa1474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966c0318-fce5-486d-a7a1-e391d6d1f2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31089380-d2f1-489d-b27a-95a0dbc75a96",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5165b409-b40d-4d92-bed6-5ef0214a52ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f0d4fd-7ef8-4ffa-bf72-fccd2a74aea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a02697-3e06-4242-8ae9-d343cbdc21cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69d95b7-ca17-44ec-8796-dfed8b2bb224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1780d1c-8caa-401f-a251-fe67b1fcd100",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9345a95-48e9-45c3-9e07-f1f686dccf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7153eb60-a230-4ed4-875a-0be1feff0514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf37c42-b31c-479f-af7b-c26b0e1353e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb9e61a-d255-4c11-b924-53b53fc54890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d38499-932d-4f0b-8623-71e91a870542",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab83c77-b082-4820-aab0-2841c426b33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc72268-5ec6-4eba-93d5-e03abeb42d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4069497-b5c4-41f9-977a-e078a6f9d43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce4ee85-8ef2-4c43-8e6c-2c0e3bc89302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cfbd8f-aaa3-428b-9a10-ecbb7653ce98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8c019d-86f3-4f25-8486-63c081f28b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f004135-33b2-473e-a70a-564c5d096dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c047bce-ad36-45ab-9ec6-29aa0f7828a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b2df1f-013d-4d8f-94c5-6f3721ba9176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892a0b17-2bd6-46e9-8a07-3a74d104546e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970060dc-edec-4c50-8ec8-c5de51916c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0220785c-b595-4157-a085-2dfd07cf7815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abcda66-2db3-4e86-afaf-4822bd009881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4f8743-d8e7-4d59-b04d-0faba194636d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8e9b43-7303-45ee-97e1-c54b0cc8c318",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff733636-0505-4b63-8a7b-67018ed2d083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce2df40-a2dc-42a0-ba88-25ad108e7577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81b373c-5d84-4dc0-b19b-eedc50c5cdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a991d8f-2435-442c-8fff-0d42bb9a0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49211e97-f7aa-47bf-87e8-d70dd91a3036",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61d326b-d715-4551-95a3-1320b38eaac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbce1f58-f036-4386-b03f-ed858b6ec84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965d5c2e-19e4-4a09-b1fb-bf12f921077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165ac8e8-c757-458e-8c7b-1791a653fa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af8e29-e551-48d1-9974-a52073d374e6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d0e47c-92e2-4786-99b1-01071fbbc428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dc5206-18ea-4db7-9ebe-206dedef27a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5c7b9-cd56-42a6-a8f1-5c3eaff372a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a63cec3-6b9c-47b7-9d6c-9e4e4d11197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253af8b7-efe6-44bd-b016-06b7e3c71133",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c398e5a-ec21-4f5b-89c5-daa4d9babe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c73f93-7a74-4596-b692-c481edbbb289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f68373-a85b-4941-9c34-4cbb1b72fdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be3ee65-ce1b-43df-9823-df9bf8976a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febc01b2-5790-4f2a-a25d-06819f8c8b67",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a319d89-5e85-423d-ba98-1ad86bee9a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695cae3c-2ee5-4701-a405-353bda38c172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7898a161-2ac0-4144-84a0-bea4dccca555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8ce557-aad0-4f07-8986-d2c838398348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838004e2-9379-4b00-9de4-f00bbcd066be",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac7c806-1c67-41fe-88db-6c53e81dd615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bee2bac-faa6-49dc-a676-3b3cc4238dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a6550-88f6-4e3b-bcd4-856530c32596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c730d5-070f-48dd-8778-95d8553b976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8a433a-6145-4955-9bfa-4ea06517835c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead7b9b-574d-48df-8f3d-648b4fe9f65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c454c86-0364-4921-bac7-4a615b0f32d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb1b188-5867-4eeb-aa23-d72ee46d2bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d88218-cb30-4dea-89b9-243bd532f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16778785-207b-4d7a-8deb-abd9be753a8a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfc18da-88f2-4836-a7ea-20313802b762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0789c842-0dcc-4ae9-afc8-1c5af9079c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daef55e0-d196-4821-9065-2e82da09d2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084f7ca1-96df-4dcd-bd01-b3c23c6351cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf4c5d7-428c-44ec-b119-f907a3def8b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e8e320-0ec6-4ee1-bd6a-74cca20d191d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d531eb-eaa0-4533-9c8d-d8b2a4aeaecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fad144-b2b0-4cec-9b80-50a2ebce7c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695d74b1-6d06-44d0-bf54-9386f15828a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908e2300-5734-409c-9bb4-c22b1a10772c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1562f5a-e8ac-4883-ad99-9eb5bc9a6269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba7c043-4ca8-44fc-aaa7-9d5a94722406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f41c34-a02c-44ce-ac72-5ef44eddb9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c835100-b6d6-4dde-893b-e9332f0d8d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d18c5bf-a571-4311-b291-bfb1500b98e2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f540a4b-e83f-4123-b68b-386db52a9620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3caa9445-e932-43c0-9ead-52d8abdb812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2d63ac-c1f1-4358-8801-565303a09671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5f6cb7-f55f-4494-8edf-51c5d352e893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2801764-560b-4ae1-a436-f45d038a325e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46dd2a3-bd1d-4e3e-bf23-8022744d5735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a03a377-8cc4-41f0-a120-14ead7752ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f58353c-642a-47db-98b0-97fc1bb80862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2673df0d-7ae4-427f-ae98-3741a3abc75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca17f5-7323-455b-a282-2885c98b8c4a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138fb6eb-bcdc-4628-aa79-67ad1f7b6dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664b110f-7754-4b50-84eb-ac3fd14310b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41acaf2d-2dc5-4fe5-899a-bc72df618456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024e5180-7b92-4546-abda-474a676621d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a22b7-b030-4f21-9e34-9156ee0a9874",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf7a9af-6549-46c4-88a4-99808ec6bde2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9284109f-3ffc-46a0-a824-cadb4933b06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29888725-856d-4ccd-861f-474d21f22cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825c2914-cd6f-4eb8-ad34-7bdacd5ca8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2154baf6-28bc-4562-9dc9-ce3dca1dcf0b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11a4c57-4d37-4853-9234-e98eb193328d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11cb5762-aae9-4d42-8a2c-f00b610e884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328b1ec7-a579-4bef-b430-a6f0893d71b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f3e459-9adc-4b58-bac7-6c2b5ac83949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda5f98-38ef-4eee-81bf-7e6b37e6a105",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad43186d-4936-438a-a24d-d0a3e755caf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2defd77-9c57-4d71-ad58-49080410dc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88227470-4559-4a95-829b-dccf80594ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4de4712-09d6-4854-aae1-5788e3cabf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ae603-2ed7-45c3-b35d-ed21a7a153b5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da36783-3ff6-4935-9082-ce3780a8aa9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b399ef27-9918-4a94-a73d-94dab92677cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d3a337-50b4-4197-82ee-c8cdba287191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb788d5-f53a-48a2-bcd6-8fec7038319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f947e8c8-a0c6-4136-acac-1e79bb3fc1a3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e1c8d9-61cd-48bb-9295-19c915193737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76a073e-c1c6-4c3d-8065-050391445c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a19109-7a1d-4e64-a7fe-a845939b4728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0785b74-a432-4202-a0dd-8b911eb54fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d05dc-050d-4c18-9cad-cd1429197532",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db122f04-e498-43c6-8a99-c34025592231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180fd77e-fa6e-497f-b624-cde6a247e6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c21227-fd4b-4c24-a1e3-ce40a3c17e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b2d407-2cd4-4ea6-b25b-2b70f035e8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b406e95e-488e-4886-8c0d-ead54fbe3f41",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c69389-59d0-4e3e-85de-9e47eb4ff4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07132e1e-9cd3-4ba7-8f34-57c9edd36fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a339d8-7a27-4c61-8b77-bc5437d28302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8454cf1b-575f-425d-8c80-8522808b94ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3dd787-e594-4789-9039-3570e9a35f20",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775682e3-7104-491e-b6d5-cc3003f579bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9b39eb-405e-40e2-b1d6-c786a0abd825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04513a-5642-4f07-9772-c8df57533ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b779ec4-9f5c-42fe-b352-f33ca01bfddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc7aedf-f167-4a1f-adce-c8e82408a31c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0670a4e2-2e9b-47dd-a1a5-83083fc70bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c6ffbd-76eb-4b08-9043-af386bebada2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f898954-d1b3-4e87-8d78-be8679529cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe3ec22-e439-47ea-ba07-b507a3e5a143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd22771-9023-4ced-a706-7a8ce338c5bd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad43bcba-47a9-45b5-b7c8-8ddacc03e68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d527ad6c-aac1-4891-8f3b-fe3942b2db1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b82b3d5-463e-425d-b7d2-d063b4c86fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06dbbc37-1799-480d-aa27-a9ccfe6b5426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae12d646-183e-4ff9-b5ae-ed704f759df3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc87c47-e899-45d5-9109-f82dd18cbde9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e87c05e-df7f-44e4-b53c-b38117959a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d228884-2985-4f52-833a-68a46a84833d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a311e95d-1ecb-4fc0-9232-111ddad5eff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b2d867-b44c-4f8f-be9d-aa31fe142997",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e3997e-ed18-4230-8604-7a3c0531c957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b14bf5-daf6-46de-ab97-2c969c15cce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9110808f-1dd5-4060-b2b7-f51407167260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fc3401-6416-4f96-bbd9-91a0f7d73372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f2845-10e3-4f23-b03e-4d02f46422fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac87a7-9953-4513-9012-e85392fda3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4563f62-8bd2-45be-bbf8-7bbca89b9de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc17b4d-2d5d-409c-b34d-3240b59c2457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866c71c4-4591-49b2-bf03-1714bf9250fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9d9457-b680-4cd2-8c12-2757386d6e9d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e156af89-8d57-4f39-ac59-2a18b3236868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cdf75c-26cc-42df-97eb-2e65620db741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846a6730-f6ce-48cd-ba5f-7953b43fba1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5c92c2-34ab-4965-a1b5-7e16b7713799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74040b80-bb63-46e3-adc1-dc7519d4f518",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4689d9c-5ede-47d6-8fb3-3bac8c79158d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4665999-c6da-4e41-a9f6-53039935ba34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea7d09-7dd1-4b67-a7e2-e19e11ebc0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6d6b86-c0af-4c78-b488-ba94598c2d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f9c867-593f-4f86-aa8a-c0feb6a2209b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821507d7-f2e7-4048-b470-b5c435b0698d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1cfbc4-2e07-4904-87df-5169e797e614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8e130e-8cd2-431a-adfc-925ca0fdfee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1ec575-a5bf-496e-84ad-f94dbbe5ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba13428-b61e-4562-bba2-12e8d79aeffa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dffd1c2-4761-47d3-ac04-d8945a712ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4e8a38-47dd-4183-ae45-da480a55c2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e77dd-6048-4c22-82b1-6547074b358a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235e0add-1890-4ef2-85f0-913b3a53759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7240cf4-dd69-49b3-aec9-90728635813f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff32fa95-4483-42a2-ad13-9c34c1f3d236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c262c08a-6dde-4dc6-b59b-2f430d0f13dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf3a653-2f19-4d64-80ed-8a94462f97ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20444d5b-ba0a-4e4d-bec0-1c49b85bd5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b8fc92-685f-47e6-a57d-d5f644fd5c66",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28233e02-0508-4271-9a89-c8a4a9a97270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f172c752-b57e-4849-bcc4-e5a89c721652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c19eaa-0777-4f6a-8a7f-ae535482a093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdad2e5-5d56-4651-a18f-58009da53be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1a7b6f-28fc-4075-9adf-f10c5b72f0de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc31652-e73e-4131-aa65-35f22ed84261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4866d6a6-77f6-41a4-964f-8aee196aca7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa65b396-9b79-45eb-8a4b-9dada5903a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf671c9-07d2-4362-b4df-a1683b300604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d5c4cf-b60a-4dea-ace0-f47f33d99ed4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262e9eb8-998a-48cf-8730-b6c2e3d8f00a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036ab78a-93a7-4b00-979f-5d4f5251d403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1359576-0236-474a-b019-46356faa7449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a804a94-f12f-4819-a380-49b47ef0fbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa37768f-8601-4a48-a759-fd05ee60588b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca1a291-1b11-4f5a-add2-b1b81716f726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fb8e7c-f535-4787-9552-420b16552782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8d3df9-6795-424d-8b65-a3c077020776",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169587bf-e2bb-4fb9-9794-f4e8dcd84344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb61a9d-a21b-48dd-8160-23d832002ac6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82122cda-b877-410f-aff3-0754c475edec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93ff93a-2a4d-48d8-ba00-9453fa2a9060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c62e66-6390-431b-8502-3be2adf5f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f34d715-1060-4822-8776-80c2aec2f468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70695d2-3b9d-4c54-acaf-c35ededaed43",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe3d87-57fc-4f64-bb82-cc93e5dcd51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ce5166-2178-4922-8d06-2c75471a5695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6cc71d-8818-405d-bf3e-1e5d18ca9f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81ed69b-01a7-4ef4-aa28-2a94a426ac1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb951b5-5451-4601-be69-b472e5a2ba7f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4821c2-1656-4308-97b2-c25781c635b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79952d4-92cc-4451-9259-96770f1217d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32e9a7a-26a0-4d18-9679-d089c0bbdf28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6996a7-a2a0-4392-95b2-84c5a9ea064f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb367ea8-42b2-423c-afbb-a3a127a66401",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c33ff1-9a4e-440b-a3c1-039ccccad721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd71acd-bf39-4349-aeab-f3b20ea7a726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e96d79e-eff2-4dd2-b0d0-7f6dbba873e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5954b687-670e-47a0-838c-0d185bbd3f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aed0821-fecc-48f5-8f5d-60c2e2cae208",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa82e5ee-2721-4b4a-919d-0530b3f706c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d3c86c-4be0-42f2-950d-af3c901ac0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103b4bda-d8d5-4ca1-981e-bf032dadec6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2653c764-ebdb-4c75-94f1-0fde8c43a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e2030d-5014-42a8-b80e-e11451a381b8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2da2d65-2a13-4703-9ce4-549d8e15ead8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3028e342-dbdc-40c7-83ee-450985378027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023f276a-429c-4548-8369-992a4b65e143",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67d9002-9cae-41bd-97eb-d04ec2ff05fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745caee-1d2c-416b-bad1-5d7109c53863",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f7bf6f-98ee-4c64-88ea-9304084390b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f5bb57-90fd-4d6d-b11e-1a0163c328d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e944996-09c3-4255-84c0-410d2c45c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99afcad0-b521-44cb-a9af-65c0e050839a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7a95c70-b3a6-4d33-98a9-758de51d9735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da15d5d2-d0ef-4813-9def-f853d865784c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "302d5c48-44c8-4e55-b52f-249c24be69ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0f9a3e3-7e96-4ef9-b5b6-5d3c2383368b"
                    }
                  }
                ]
              },
              {
                "id": "1ccd8965-17ca-4071-8d6c-ae0ad8e28bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c352c04-5be5-407d-89f2-305731a1ab2a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c9add2-b240-4ce2-87b4-07fd11842e7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "801f5284-ffd3-4916-8ef5-1a028bb60166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2fb904-d5f2-4cf0-847b-ca98a205575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d90374c3-efdb-42f5-9a66-1e5d5f3d8f23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e2199db-6fa9-41cd-a06a-9806fe690f2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a02cf0f-1f9a-47bf-96fc-e565ae3df423"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "225e7d9f-9df1-459b-b07e-04aa2f38ee17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca2432e-e1eb-4fe6-9b0a-ecef4b63af30"
                    }
                  }
                ]
              },
              {
                "id": "3847b19b-b488-4750-9cf4-776b1f2097fc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e923bf9f-08ef-4b66-bb6f-74f368d67805",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad5635c-426d-4264-ae6d-14934a70f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "988a27ac-4d27-40ce-ad48-3bcadc6fbd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85117d-fe0b-4d62-99b8-dab3e1d104c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2af309d-864f-49f5-821f-8c2db269c861"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da910140-c3a8-4fc9-a52e-0ea98972c5a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca078b8c-6649-4afc-9478-6b0cc3c74f01",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e1acfb-3e3c-4448-a88d-cf7f8eff2e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9642c9ad-f6f7-492f-9b61-40f9d89fbf89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f2955b-9952-4cce-a7c9-952ebe2f4429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e0f06e5-ee78-4e1d-8a90-bcc1e6b83bbd"
                    }
                  }
                ]
              },
              {
                "id": "65aaba88-c1d6-463d-ad0f-08c776019f4a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb6e7c08-5512-4b56-b546-36cd9f0e8478",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f29a394f-5df3-4cf2-b915-abb3178e8e1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "993f20af-2b37-4f68-a9ed-0378f3368466",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7bf0c2-ff57-49b2-8e6e-b190801be4ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da2673f9-f537-4aee-886e-c831d8ec511c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93a392ea-2cf1-4295-bc05-7f914d1a91e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f4828f2-0e87-4df3-ad00-250edb2bfb45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "296ea4dd-8c18-4d6b-9df0-87ddfafccb97"
            }
          }
        ]
      },
      {
        "id": "fab8a040-4cb2-442a-bbee-ed4835c6805a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c154747-dfff-408b-b39e-b4e764f76657",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0039bdb0-c2e3-4c6d-b065-6d447e686f7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dd08eb0-eea2-4f15-b01d-152dd44ca4d7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd446fbe-212c-452d-bd81-a27590e5999d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a2db8a29-be8c-4fc7-83ed-90c2761d1997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4e6eb-afe7-4cbb-9a81-f1ada8381990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7e69c1a-5622-4f4b-b792-9344da671a73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24f03f6a-630d-447a-863c-9e8ac23d57b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b19a35-9873-4cc5-9a55-d0a8d1ec737e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff21e97d-7e7f-4c5a-80d5-7bef2c919976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11f1c2ee-ecf4-4aa5-b2a4-ed40f2e1eeda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a4306d8-fc49-436f-959f-e7c1888e483b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f77555d-ac78-4d9a-87b8-2fad01006f34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbe6817c-69bf-4fef-94a5-9a60fc47a938",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cfef527-c5bd-4990-958d-087077200258"
            }
          }
        ]
      },
      {
        "id": "f25756da-5252-4c59-8d17-cd90ab0a02e4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "010b3dcb-24f3-4d99-a322-263eaec16984",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fca6dfb9-4442-401d-99b0-9f708669638d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "671e8de5-7e2d-4f28-9d8c-7866e3af93b2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde38022-7471-402e-8bd4-45677e1635eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61967ef1-9401-457a-94a8-0ff0cc30c18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bcf0cc-c5ec-409a-8ccd-854b29513f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "343ce3fc-2386-434f-8d18-d988c75cb28a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7def6e0-88b0-4320-b25b-24891874f9e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab623d33-ed3a-4443-b04c-f3f819cc91da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9908bdf-bbfa-4c28-a751-c2c5aa5ad8d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "716ff180-08d7-4aa1-a90d-04134b5b37a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d7e273-8832-4d57-9975-de17f7fe80b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9f59d24-5b22-4c0e-842a-e50dac042488"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "850ab220-9d24-48da-ac0a-0fd9fc7422d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a932d727-00e1-43c8-81ff-2336fbc663fa"
            }
          }
        ]
      },
      {
        "id": "750368e4-4d26-420e-abe9-f631d4a7f24a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a200f81c-d066-4076-b42a-61e5cb66f510",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d47b51b2-aaf4-4757-8001-fa6472a6b81a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d709c9da-c8b8-48a2-8b7e-0f530e16f6d6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63c4b66-2567-4b9d-9945-ddbe91aabeeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef8b97f5-3a40-45cd-8b66-196e41bcaaf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f3a485-64dd-43d7-86da-3b40c008e8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23c1f231-0bdd-4ab2-b8c4-c00dab13fe0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a117effd-f4c7-456c-b96e-ed3eba82b205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f7eb6b-ed0d-410c-8d6a-bbf00a9beed4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f3cb11-374a-4c4f-b6d7-e7eee6673528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92a86cf1-9ba7-453b-a84c-e01765847edd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a49998e2-2208-49ee-baad-981f9f6b1f32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1af1c026-f1df-4e5b-bbca-cddf64f2fbf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df37458b-1717-4da4-92c4-d14505b4c02e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a86bfba-2b61-4b5f-baeb-cb2a08935491"
            }
          }
        ]
      },
      {
        "id": "289c958e-19c1-4269-9375-45350291267b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e9eeda4-192c-4945-9329-8fce6836f1c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ea29ba4-7ca1-4aba-aa49-6cfd05e7ba59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cfa5e7cf-bb46-4ddb-9fdb-361ffb6e3d57",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6a28fd3-fe13-4731-9939-8743fb83834f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84835a39-12e6-4844-962e-f7dd968c29f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.05985915492948,
      "responseMin": 7,
      "responseMax": 6436,
      "responseSd": 412.3794402669824,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689036121687,
      "completed": 1689036206301
    },
    "executions": [
      {
        "id": "a36455c4-ec1a-4d5c-aa9b-8f82180ffa3b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bb2b0e93-bf13-48d0-90ef-15fa8c647e0a",
          "httpRequestId": "0defe0da-300c-4a1f-bc91-b110d4f2fbff"
        },
        "item": {
          "id": "a36455c4-ec1a-4d5c-aa9b-8f82180ffa3b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ca82dae8-ea69-4a46-b791-7ec69748a757",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "d07608bd-2cb5-409d-990e-4b3755c31d99",
        "cursor": {
          "ref": "df1cc30c-c57e-4207-8d3c-647b64a78d57",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9fcead7e-2319-45f4-b65d-ac7efc6f7127"
        },
        "item": {
          "id": "d07608bd-2cb5-409d-990e-4b3755c31d99",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3c48cd58-c599-404b-a4d3-444bca143591",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e99cf668-8845-4970-ae2a-73a3ad135958",
        "cursor": {
          "ref": "d30fe2f0-3c7d-4f70-bc11-b13250aadf52",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "95452567-4ab4-46d8-a330-2bf9c516b4a6"
        },
        "item": {
          "id": "e99cf668-8845-4970-ae2a-73a3ad135958",
          "name": "did_json"
        },
        "response": {
          "id": "aea05d12-07eb-4218-ace2-9a25edf28f43",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662f0200-0cad-49f3-988b-05e518a5873f",
        "cursor": {
          "ref": "577fc097-e779-4851-aa48-106d0613efcf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0db6ef4-8957-465f-81e4-f4892109e9c4"
        },
        "item": {
          "id": "662f0200-0cad-49f3-988b-05e518a5873f",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f9c6433-a2e7-4419-998f-2986a99375b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662f0200-0cad-49f3-988b-05e518a5873f",
        "cursor": {
          "ref": "577fc097-e779-4851-aa48-106d0613efcf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0db6ef4-8957-465f-81e4-f4892109e9c4"
        },
        "item": {
          "id": "662f0200-0cad-49f3-988b-05e518a5873f",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f9c6433-a2e7-4419-998f-2986a99375b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96434ec3-2788-4f30-8be3-c8c4af16bc63",
        "cursor": {
          "ref": "26909ccd-47e6-469e-a7ff-c2cce045e5c7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "633f5fac-697e-4588-84d5-a46261377243"
        },
        "item": {
          "id": "96434ec3-2788-4f30-8be3-c8c4af16bc63",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c741615-54b1-49a8-b56f-3d825f6fb8de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d3aa1a-eec6-4f34-b068-7319a3a7e444",
        "cursor": {
          "ref": "c021fe1f-fa5d-40b2-9542-7cd2da353bc7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "609a750b-61fc-4729-95d1-f5f3a3b7aca2"
        },
        "item": {
          "id": "81d3aa1a-eec6-4f34-b068-7319a3a7e444",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "22c7c8ce-2349-4264-96b9-ef13b338c36b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 376,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3855c9d8-f5d0-49ad-9fb2-ba4ee59183c1",
        "cursor": {
          "ref": "8abd069e-8c8f-4ed5-a35d-2d7a298aa168",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "07e53eb8-1055-4e35-ad4c-00e50a077a3b"
        },
        "item": {
          "id": "3855c9d8-f5d0-49ad-9fb2-ba4ee59183c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f070e569-7611-4fc6-9036-ebbc1f5951d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f510bcce-fbac-4724-9df2-5fda9be96168",
        "cursor": {
          "ref": "d0d5a8fd-31fb-4b7c-b199-cf58db8d0823",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ce3a1b02-0c25-4df1-bc3b-278697fbdda1"
        },
        "item": {
          "id": "f510bcce-fbac-4724-9df2-5fda9be96168",
          "name": "identifiers"
        },
        "response": {
          "id": "290e3c0f-9703-4f2e-8083-a8e88873755a",
          "status": "OK",
          "code": 200,
          "responseTime": 1400,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e37b25b-08ad-42e1-aadb-0ca79e913185",
        "cursor": {
          "ref": "2e01965f-ca36-4bb4-bcfd-78852913a1da",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fda75dd6-afad-409b-93ed-065baf10f48b"
        },
        "item": {
          "id": "3e37b25b-08ad-42e1-aadb-0ca79e913185",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b1aff197-2e36-46ae-8fc1-d06970b047ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0229ea6a-2fb1-421e-9df9-69a11cde2555",
        "cursor": {
          "ref": "dc58965f-de68-45b8-8416-e23ae3680d26",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a76e935-6416-4e50-8fd3-3d11a7e84e59"
        },
        "item": {
          "id": "0229ea6a-2fb1-421e-9df9-69a11cde2555",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d85d1419-b3a7-4ff0-991d-6bd4e5fb4437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bd632f-fc6c-41f6-9c46-ccad5034449b",
        "cursor": {
          "ref": "fd07d542-2521-4900-a693-0e66f1c07e1c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2982754f-e034-41f7-8851-8473c9de33f5"
        },
        "item": {
          "id": "68bd632f-fc6c-41f6-9c46-ccad5034449b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "62c260b8-49ad-424e-9d98-0988a6e3ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b353156f-adc5-42cf-8151-7293e62a8e25",
        "cursor": {
          "ref": "893b1ff7-8a7b-4367-a6ff-d3df3479bcc5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "355a8a21-183a-42ad-b728-b3a9d6ed86e7"
        },
        "item": {
          "id": "b353156f-adc5-42cf-8151-7293e62a8e25",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aee38cb4-c506-4032-ad8d-da0eee76afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07773be-8010-4ab3-b479-6178de8e4b1f",
        "cursor": {
          "ref": "77e313ff-5607-4550-8b80-34e224bbecbe",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51a19175-ff47-47c3-8813-46943e1bdedf"
        },
        "item": {
          "id": "a07773be-8010-4ab3-b479-6178de8e4b1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "545ec28d-2918-41a4-b5b1-88af3a776f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e6acb4-db50-44f2-b55f-35aa58dcc24b",
        "cursor": {
          "ref": "035421cf-bf46-4359-8642-3f2a5d93a7fd",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a1af9057-6e0d-402a-87e3-44b8eb3e4a54"
        },
        "item": {
          "id": "51e6acb4-db50-44f2-b55f-35aa58dcc24b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f4669a72-f32b-45ab-9c75-7d2240c0ce07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50390b15-6362-4de3-96c1-9e774fbcfb5e",
        "cursor": {
          "ref": "b25dc282-ba1b-4900-81a0-49b581eb343b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "24980046-85aa-47a8-a278-56452c6c51e5"
        },
        "item": {
          "id": "50390b15-6362-4de3-96c1-9e774fbcfb5e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "510521d4-f80d-4460-945c-1f764b1c6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002c2c1f-4f7a-46e6-8e57-bef2c160d07d",
        "cursor": {
          "ref": "934c16f0-9b6b-4aac-b615-50a8a49c8305",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "de25d462-09d2-48d4-ba28-125a11d39a73"
        },
        "item": {
          "id": "002c2c1f-4f7a-46e6-8e57-bef2c160d07d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5b8869b6-7778-4359-9088-18464e5fadc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46c4660-05d9-4b7f-824c-da45ca40d169",
        "cursor": {
          "ref": "77d660fb-bca4-4bef-9f98-74689d302bba",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a76aae60-119b-4811-ba60-1156a4cf1694"
        },
        "item": {
          "id": "b46c4660-05d9-4b7f-824c-da45ca40d169",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ceeb914-fd40-4232-87b1-3521e46405a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b028a6-4498-4fba-919d-979e528f171f",
        "cursor": {
          "ref": "4f031ea0-8c1e-4602-b4d5-ec59ac5eab63",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "15fc0806-a7ec-4bbc-be81-375df7cadb3a"
        },
        "item": {
          "id": "30b028a6-4498-4fba-919d-979e528f171f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "533e60b8-8b5a-4399-afc3-b8fe42b1283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f72028-8d32-4001-9f35-0e8e7cb49185",
        "cursor": {
          "ref": "9082e5aa-42f8-4381-b8cc-fd2b7c9ced03",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "07455558-cd12-4542-8493-a5466d7c8fe7"
        },
        "item": {
          "id": "c1f72028-8d32-4001-9f35-0e8e7cb49185",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "138b9c14-fe61-4f66-bd81-052e9a351718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e255a3e-5080-4668-af6e-10a2a5af8f85",
        "cursor": {
          "ref": "73c9627a-14ce-4e67-b11e-6a10cfbb8b75",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "219cdccf-e240-4c52-ba96-ede87b795af1"
        },
        "item": {
          "id": "5e255a3e-5080-4668-af6e-10a2a5af8f85",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fff8b085-9af7-4b7e-bf53-708621ef4e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb669e-3a49-4b15-8e8b-8349307b9e5e",
        "cursor": {
          "ref": "f09b6a8c-838f-4a31-8ed5-c01987eecd6a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "da1b65bf-0b0d-470c-ab14-a89d22511096"
        },
        "item": {
          "id": "4abb669e-3a49-4b15-8e8b-8349307b9e5e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06eb6f21-8975-445c-ad1c-faf93b027e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d102de-55fd-4329-aa45-86e27c015d6a",
        "cursor": {
          "ref": "45453fff-ec8c-4cd3-b5af-c381d3d299e2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8be4bcdc-6562-4d06-bd28-fec7e2718e57"
        },
        "item": {
          "id": "b7d102de-55fd-4329-aa45-86e27c015d6a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "46757b93-550e-4b38-9a75-76140092d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4c141d-8b57-43fe-84ba-f8c7ae197a99",
        "cursor": {
          "ref": "ec69476d-b803-44be-84db-5327eca90a32",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "452cdd8a-de5f-49bb-94da-5b97b735ec4a"
        },
        "item": {
          "id": "4f4c141d-8b57-43fe-84ba-f8c7ae197a99",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "89d19409-99c9-4e89-8835-67411309b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e5de74-6151-4379-a34e-fc3667ef554e",
        "cursor": {
          "ref": "0668c33c-3ddc-44c7-a2cd-82b631e445e0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "355b2a85-b467-4808-90ff-e452c0a82e05"
        },
        "item": {
          "id": "64e5de74-6151-4379-a34e-fc3667ef554e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "287614e9-0022-4f85-b826-27458f5e5fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f056d25-f554-459f-ad2f-d8b1cf3d81e5",
        "cursor": {
          "ref": "a1f8b389-f666-4521-bdd7-ef5b98d7bea3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "328e50cc-2859-4448-b0ca-74f418679e31"
        },
        "item": {
          "id": "8f056d25-f554-459f-ad2f-d8b1cf3d81e5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4152f770-96a1-4c7b-a138-750a433fa8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3988c6bc-25fc-4407-b607-a99e220a0ba1",
        "cursor": {
          "ref": "8f38e519-a3b1-41de-8f97-9c0d30e53114",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e169f35-0335-4a1b-9ce0-b1ee6a2d974f"
        },
        "item": {
          "id": "3988c6bc-25fc-4407-b607-a99e220a0ba1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "edf76ce9-c355-4824-873a-2c57646fa0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2568570-62c5-486e-914a-e53950f3c089",
        "cursor": {
          "ref": "9fd00a04-f360-408f-a2cb-805caf57a463",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2a8124bb-dc8d-4fdd-93a4-587d2198945d"
        },
        "item": {
          "id": "d2568570-62c5-486e-914a-e53950f3c089",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f22e4370-ac3e-4346-972f-59744f0e8ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f51fc-35e1-470a-9ec7-f77077a4e629",
        "cursor": {
          "ref": "23f6a0cc-2d43-4b13-a1c0-a2ae142c5c3b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1f01d96e-6781-4aae-b21e-bc2e0dcfed6e"
        },
        "item": {
          "id": "358f51fc-35e1-470a-9ec7-f77077a4e629",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cbd4378e-8222-4b94-8c62-39356072c99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07896c3f-e2cb-4cc8-bb14-b8fb6743273d",
        "cursor": {
          "ref": "2810ccd3-592e-4e1f-ab04-400c18ea5827",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "06d69a9f-0134-4fce-8493-9a6764d708b8"
        },
        "item": {
          "id": "07896c3f-e2cb-4cc8-bb14-b8fb6743273d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "129237d4-af30-4740-82b2-d43b8570231a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b2f81-7873-4a98-bab7-f3356fcee6ed",
        "cursor": {
          "ref": "ad522c0d-0031-4df1-a8b3-7b13b5219f0b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "08ae4486-bd74-4639-82a1-1a6e60789418"
        },
        "item": {
          "id": "263b2f81-7873-4a98-bab7-f3356fcee6ed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "df7a5ef7-da5f-448d-b8a8-111f46c1d5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0027762-9907-4e82-aaaf-2bf0508c2d3d",
        "cursor": {
          "ref": "539d3e0a-f12f-4632-8c13-c6cd13b4ddbf",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "48556e60-b035-473f-9631-7306378d126d"
        },
        "item": {
          "id": "e0027762-9907-4e82-aaaf-2bf0508c2d3d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "692f06ee-454d-4b2a-8313-6a06ee07911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7fc6b5-76a2-4b5d-b36e-d43e206ebad3",
        "cursor": {
          "ref": "4c108f18-afcd-4364-b051-6f00060e1a50",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8679f525-6a20-41c3-b76f-45d90b71c759"
        },
        "item": {
          "id": "8a7fc6b5-76a2-4b5d-b36e-d43e206ebad3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09b92ebf-8742-4123-b70d-59c02e4497d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59569d2a-5f9b-4881-84de-2e87bee8f8c2",
        "cursor": {
          "ref": "35c0415f-faee-4e13-a26a-49fa4a7baa1a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "03af7142-26ac-4bac-8e9d-0fa44e4a0784"
        },
        "item": {
          "id": "59569d2a-5f9b-4881-84de-2e87bee8f8c2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21e78cbb-af28-473e-9f1d-8b671a393b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b17868-48ba-4684-8f32-e537f2e9e55b",
        "cursor": {
          "ref": "7e5054ca-4229-47eb-b4d4-5c440b1fb46e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "47f2cb07-6658-4072-b3e9-755b5e6ee376"
        },
        "item": {
          "id": "b9b17868-48ba-4684-8f32-e537f2e9e55b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "12afd7dc-54b5-4f67-8e29-c3f68c9150d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dba802-963d-4dc9-b8cb-1c1dcddc1650",
        "cursor": {
          "ref": "f6dac1eb-8e0a-41dd-b342-4f77307f0032",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58eb1624-2ad2-4098-8610-0e734f60c492"
        },
        "item": {
          "id": "c7dba802-963d-4dc9-b8cb-1c1dcddc1650",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b5520f32-016f-477f-a3e5-ad8064e470ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b66b0a-35b1-420d-b2f3-9ef27f96d587",
        "cursor": {
          "ref": "7a634b2b-77b0-4713-a4af-5e6097d2f769",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c8c0c7ab-e80b-416c-b334-94ac2c1edf51"
        },
        "item": {
          "id": "b9b66b0a-35b1-420d-b2f3-9ef27f96d587",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b08cc996-91e7-4b11-9224-dfbe109810bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2738ad63-d5e8-46d7-ba74-695f19f965ee",
        "cursor": {
          "ref": "2dd76322-4cd9-4a50-b443-a69ab30453f7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e52e5131-e5ab-4ee4-81f1-61a0d20b8850"
        },
        "item": {
          "id": "2738ad63-d5e8-46d7-ba74-695f19f965ee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a0d0142e-3a37-4153-8941-54205e88732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36b07ed-dd18-4472-b1f5-b26c0847eee8",
        "cursor": {
          "ref": "905e3d84-b8ed-4c69-bae8-25547b50ac6e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "54847c4b-f37c-4b72-8908-e0cd0ffc506b"
        },
        "item": {
          "id": "b36b07ed-dd18-4472-b1f5-b26c0847eee8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "22ab2a63-e68d-4a70-bb5e-e93c2c625549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d7414-bb48-4043-9728-9abe6df0f58d",
        "cursor": {
          "ref": "ffbeec9f-b970-4bc4-8bca-8a30b22cf820",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9a0f15d8-1b74-4b70-bdef-df3298a9abdb"
        },
        "item": {
          "id": "c79d7414-bb48-4043-9728-9abe6df0f58d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cd534ae0-9042-46e5-a371-2e2e8d9c5bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbdce9d-c48a-4714-83be-cc8bd2bfce42",
        "cursor": {
          "ref": "6815e37b-05bc-48a1-902e-29460bb3252f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8cacb906-84b0-41e4-8de4-dee5b3e62fa0"
        },
        "item": {
          "id": "bcbdce9d-c48a-4714-83be-cc8bd2bfce42",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "674316d2-cdf0-4204-a5fc-3e1241b5d1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57798f9-52fd-425f-bd84-a21c9131b6eb",
        "cursor": {
          "ref": "b8979817-2754-420c-b381-6728637285b2",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aac935c4-a418-478d-aafb-234b8bf13a51"
        },
        "item": {
          "id": "a57798f9-52fd-425f-bd84-a21c9131b6eb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "832e6e75-434d-4ee5-a1e0-605bcf661154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce38a82-d367-4ca1-a44a-e3e33c01a12b",
        "cursor": {
          "ref": "87b490e6-8b38-4e5d-b659-46f8e0d43fc6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "db5ea18e-12d5-40ee-9743-7c6f392c12fc"
        },
        "item": {
          "id": "2ce38a82-d367-4ca1-a44a-e3e33c01a12b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fad8c035-852a-4bca-a8b2-61fbd5006a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2607b6-7332-433b-879a-3b7a57bd38a2",
        "cursor": {
          "ref": "8161e58a-425d-4788-957b-0501521a9df2",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2a160017-0cf9-461d-bfa2-7dc8f14bfa70"
        },
        "item": {
          "id": "0c2607b6-7332-433b-879a-3b7a57bd38a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7e7c7b8e-569b-4529-ba0c-b035d2aa2901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ccc65b-54b8-402d-805f-50514a4f7c92",
        "cursor": {
          "ref": "8cb0698f-c500-4ea8-aa30-13fb7f63b47f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ee8785ad-2bba-4a83-b47b-e9f2e5991e86"
        },
        "item": {
          "id": "03ccc65b-54b8-402d-805f-50514a4f7c92",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "059b66b0-fbb2-43e0-a844-7afb41ab63e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "4a75cfa9-ba04-4531-8c81-24b98e60ed78",
        "cursor": {
          "ref": "415a45b7-398c-46f1-9666-383f5e0f8ade",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b7d96379-2f02-4790-8291-b9ed419bea30"
        },
        "item": {
          "id": "4a75cfa9-ba04-4531-8c81-24b98e60ed78",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "428f3166-9685-4c33-8ba3-3aa38de1ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3249186d-6fab-48d9-bf4d-3e91f206631e",
        "cursor": {
          "ref": "19ef2e3c-f1e0-4425-adef-c1f658120c2a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "02fdd095-9d35-4560-b285-e8844deb5ae6"
        },
        "item": {
          "id": "3249186d-6fab-48d9-bf4d-3e91f206631e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "68c7e36d-9565-4187-ad00-79ac3314e93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802397b7-308d-42c1-9d8c-f2520dfc6ba1",
        "cursor": {
          "ref": "edf556f6-90a4-4386-acad-7549a364013c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "58d6355e-a849-4fc8-91d7-225df3ca4646"
        },
        "item": {
          "id": "802397b7-308d-42c1-9d8c-f2520dfc6ba1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aedc1a57-a935-441c-9e0b-6a74a6ca5e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e759294-00fa-4dbd-9d74-9f79f64cac80",
        "cursor": {
          "ref": "8c8e2ffc-dc50-425c-b31f-53f8941cedd5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d471440c-befd-4be4-b882-84b50e9dac21"
        },
        "item": {
          "id": "8e759294-00fa-4dbd-9d74-9f79f64cac80",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a9453ff5-311b-4e2b-ba2f-1e4d02ab9147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28c5f26-3c80-4308-b0c7-6aeb95b820c6",
        "cursor": {
          "ref": "437a746c-f78f-4610-b578-5fc559494ca2",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "eebcfbb1-20dc-4aac-b80e-04aabaeb0d28"
        },
        "item": {
          "id": "f28c5f26-3c80-4308-b0c7-6aeb95b820c6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0bbfa3ef-87fa-4ce5-bb65-476ae2725f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145a747-29c1-47fa-8261-640c88e7b476",
        "cursor": {
          "ref": "23274453-337c-4b2c-a2dd-f00abe5ddb85",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ac3a59cb-7dc0-431a-8eee-644301db4a0e"
        },
        "item": {
          "id": "3145a747-29c1-47fa-8261-640c88e7b476",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c64f6d2-439e-4304-8a9a-2f465ab981fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8feb6-db2b-482a-8ccb-c521c33dd74d",
        "cursor": {
          "ref": "82248646-4424-47ed-bd4c-12af7ec3fe58",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3019141f-4f08-4e01-b231-706aa56066ec"
        },
        "item": {
          "id": "b9c8feb6-db2b-482a-8ccb-c521c33dd74d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1236b001-399d-4383-b287-b87df87f18d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "4f16c0ba-03c8-40a6-aa2e-8e0bfd29b509",
        "cursor": {
          "ref": "05020865-6449-4433-b2ef-b09cd2b430b4",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "57fbce22-1782-491e-a0b5-2f4f99a3ddca"
        },
        "item": {
          "id": "4f16c0ba-03c8-40a6-aa2e-8e0bfd29b509",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "370bf7b3-d063-4d40-a8dd-336e7c7069fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f4e80f-f55c-4df3-bb16-24a8f7659b5f",
        "cursor": {
          "ref": "ea25e959-c51c-49a2-98ec-4fb80de154ef",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1427149b-e04b-40bd-bdfa-ee4ad638c7aa"
        },
        "item": {
          "id": "89f4e80f-f55c-4df3-bb16-24a8f7659b5f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d710654c-8926-4c0b-83a0-e700ea4314fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545dfa5a-e319-4298-beeb-c447bc25f47d",
        "cursor": {
          "ref": "0fc6664f-a9d1-4e36-8790-9b6536c5869c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "70adfdec-e213-4ddd-86a4-42ffb6be857d"
        },
        "item": {
          "id": "545dfa5a-e319-4298-beeb-c447bc25f47d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e30da248-a693-49e5-826b-c1438d5e52a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f6ec6-496d-4abd-82eb-653057c58976",
        "cursor": {
          "ref": "235ed995-18f7-4f02-8fbf-69724be01194",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "23021515-b905-4520-81ed-45105602e7c8"
        },
        "item": {
          "id": "b07f6ec6-496d-4abd-82eb-653057c58976",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f2f97372-add2-44c0-aa23-7c4a2e986d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f94630-cb51-4483-8ea6-ce49ecdbaeef",
        "cursor": {
          "ref": "c92372c8-53f8-4c28-ac24-1b6fb48672ad",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c9bf9dc6-1223-437d-bd2f-7dee11fd4351"
        },
        "item": {
          "id": "85f94630-cb51-4483-8ea6-ce49ecdbaeef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "78ba6e7a-284c-4486-be4c-2f33fa4d237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ffa50-901d-4cb1-a51b-e0383ad6a3e2",
        "cursor": {
          "ref": "02285785-b81a-4e8e-8936-2c26b5ede45f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bd5b0559-5ee9-4159-876c-b842ae2c0dc5"
        },
        "item": {
          "id": "404ffa50-901d-4cb1-a51b-e0383ad6a3e2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5e10d4a3-6c1a-4bff-b8e6-a01c1df35cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6994cf05-c8e2-415d-b5e6-8a8fe9958131",
        "cursor": {
          "ref": "a64ee1f9-e3d8-40d1-b0d7-ac176ab6f459",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6ad86b10-5f24-4e55-8c70-084a30b17638"
        },
        "item": {
          "id": "6994cf05-c8e2-415d-b5e6-8a8fe9958131",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "53a287ba-c62e-4c71-91ff-0a203de5c832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576b5acc-746e-4866-a9a7-7a65977c66e9",
        "cursor": {
          "ref": "ec7a241b-64d8-4e5c-96a3-75a82697b358",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cd9f8ceb-1027-4805-90c6-55848225169e"
        },
        "item": {
          "id": "576b5acc-746e-4866-a9a7-7a65977c66e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8456ac68-f5a2-4b13-aa65-3918472c97a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4831be79-da20-49a9-ae67-129d3834794f",
        "cursor": {
          "ref": "f3c2954d-dcd4-458b-a23f-5a543e1cf639",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a8514222-c63b-46de-9727-1f8db0358ff8"
        },
        "item": {
          "id": "4831be79-da20-49a9-ae67-129d3834794f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2e72b6b3-cb81-41d3-b972-7757e7c4b780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b8b4a3-8df2-4694-be1d-fd465393704d",
        "cursor": {
          "ref": "240cbaa1-bf05-4730-9a3e-f72c01c657d2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9eb13be9-be27-495f-9467-845e11f15580"
        },
        "item": {
          "id": "59b8b4a3-8df2-4694-be1d-fd465393704d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "19abf10e-df44-4eb6-9872-8aa32b2079bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2072be-ab8a-48d6-9cf3-a99c9d952c40",
        "cursor": {
          "ref": "526f8a15-b476-4344-9963-40fb24289748",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "50fc2b2f-2584-4572-94de-cad6a2bcf017"
        },
        "item": {
          "id": "3b2072be-ab8a-48d6-9cf3-a99c9d952c40",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "058878b2-9dff-487f-b650-afec5d879961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cd4421-5e75-4dbe-afaf-158495f50350",
        "cursor": {
          "ref": "61f58376-2989-4982-90a9-aced6255ca39",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a8a09d01-d478-4f87-be31-c7e296ddc269"
        },
        "item": {
          "id": "89cd4421-5e75-4dbe-afaf-158495f50350",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e5748cf7-60c1-45a0-a08c-abdd5f294653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2352204f-ce08-4d99-b00d-a6bbe3650cea",
        "cursor": {
          "ref": "a863cdcf-06fd-4082-a882-241a90ef8f23",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d47ffa64-b478-482e-a85c-5cb79bbe5d6e"
        },
        "item": {
          "id": "2352204f-ce08-4d99-b00d-a6bbe3650cea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9574014-1ef3-4a2e-bf26-88182d160f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40152dcf-aeac-40e0-9dfe-a55679b98d70",
        "cursor": {
          "ref": "53fce0c1-2e7a-4897-8433-bb2fee7c9fca",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "453fac2c-0e03-4e8e-b6bf-dfa8ee8d6c65"
        },
        "item": {
          "id": "40152dcf-aeac-40e0-9dfe-a55679b98d70",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ea1fa679-e6c0-41c8-b023-0ae5755728d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4923b-4161-440d-93a2-ce772f598fbd",
        "cursor": {
          "ref": "f9e740e3-f683-4f89-b548-e0a9059b060d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f7c2f4f0-606b-4255-887d-581cae7d0654"
        },
        "item": {
          "id": "75f4923b-4161-440d-93a2-ce772f598fbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5443e89d-9c78-4e7b-a8b5-9a671d79326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852ce418-c377-43dc-bc80-2c63d29a8041",
        "cursor": {
          "ref": "b9b89f2b-24ef-4c50-910c-d6b08b785044",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4cab18ce-5dc9-4164-89de-efe7ea5373f2"
        },
        "item": {
          "id": "852ce418-c377-43dc-bc80-2c63d29a8041",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "89aa66d6-1fa7-40c1-9390-cd59395668b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93293ce-3f30-48cf-b3b1-b301ff0cd268",
        "cursor": {
          "ref": "10d32005-16ef-4641-9132-ec97523f829c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "733abd41-a429-4764-8278-4bacc5986f61"
        },
        "item": {
          "id": "d93293ce-3f30-48cf-b3b1-b301ff0cd268",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b59410c1-b0ae-4e9f-85d4-334504d9c16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cf7839-18bb-433c-8763-1cf0f9931837",
        "cursor": {
          "ref": "6238c86f-5e01-4744-8eb4-10b5cca1f9d0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "636be58d-2145-4b50-952e-598528bfa178"
        },
        "item": {
          "id": "64cf7839-18bb-433c-8763-1cf0f9931837",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3677182d-52a3-4e8b-ac58-18e01085e31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92bd74-0c2e-48a0-923e-9a85c699f67a",
        "cursor": {
          "ref": "9882d946-176e-406b-9a7e-54460f9973f0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "01bb5614-e519-4a53-ab15-603293bb56b1"
        },
        "item": {
          "id": "3f92bd74-0c2e-48a0-923e-9a85c699f67a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a10d1b5-1fc8-4996-8d6f-25d0d09767e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b98dd8a-cc0f-4141-b549-bce8d3dffd85",
        "cursor": {
          "ref": "4d35ee2e-3df7-4810-81eb-fcfb4db9a577",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2397855e-de9f-468a-9bce-8c1e137ee377"
        },
        "item": {
          "id": "1b98dd8a-cc0f-4141-b549-bce8d3dffd85",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da09ebda-f7c3-45b9-895d-feffecd57819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cef3db-2123-4d1a-a5ab-09c54dab6db3",
        "cursor": {
          "ref": "c5a698ac-cf14-4ec3-b234-71d7f9a455c7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c9a9fb53-81da-4114-a548-911007753e1e"
        },
        "item": {
          "id": "17cef3db-2123-4d1a-a5ab-09c54dab6db3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "98c7a7b0-3788-411c-930e-ba8129bbc5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636c2d22-1f97-4c51-a0e1-4ca473b92b09",
        "cursor": {
          "ref": "24a819b1-e89e-40ff-8238-1254f89aad42",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "38158170-fefd-47e7-b03d-445ca95bc1a5"
        },
        "item": {
          "id": "636c2d22-1f97-4c51-a0e1-4ca473b92b09",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "383996fa-ccc4-4444-b85b-c4383cd37010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a2bd5-5ccb-410c-940c-df174d4a23ba",
        "cursor": {
          "ref": "f60c8f88-fcf0-4f65-8590-e5492390f76e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d953347c-2a57-4093-bfaf-2cc7e6dcf5cc"
        },
        "item": {
          "id": "709a2bd5-5ccb-410c-940c-df174d4a23ba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2016ee2-03ab-43de-847e-6159ea3855f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881673dc-323c-442d-86f7-f298fef4177c",
        "cursor": {
          "ref": "fd5f7fd5-ffed-47f2-ba49-20373d110496",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95c45444-645e-4e55-b4e9-978ffc924f6d"
        },
        "item": {
          "id": "881673dc-323c-442d-86f7-f298fef4177c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73a30de5-327a-4c08-ad80-1a52ad3a5e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd1864d-3af0-4f5a-bfee-a46aec72d446",
        "cursor": {
          "ref": "f0fbf23a-f676-446c-9b86-6e3b37a571c1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3dbc17cc-2ee2-4d03-ae29-4c661963c85f"
        },
        "item": {
          "id": "dcd1864d-3af0-4f5a-bfee-a46aec72d446",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "307d5383-24e7-4e82-b119-47df666c5043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2f4b68-7d0c-4fea-9265-ae0ef914c6e9",
        "cursor": {
          "ref": "41c896f3-8f30-497a-a0bf-bf93160c5442",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "75667ffa-153c-4fc5-b680-3bf8472588cc"
        },
        "item": {
          "id": "de2f4b68-7d0c-4fea-9265-ae0ef914c6e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f3674829-096a-489a-bd53-23c1658b2750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fc3a21-f60b-4d49-a83e-8a38afb9eaff",
        "cursor": {
          "ref": "9818cd8a-1406-4364-bc81-032805c94830",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "afad4c26-d4a0-4504-90ba-2676666488c7"
        },
        "item": {
          "id": "46fc3a21-f60b-4d49-a83e-8a38afb9eaff",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "07b03b55-ad0b-4ad9-83ac-fb24944c3ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb57f332-275a-41e9-82c2-4ed80f613993",
        "cursor": {
          "ref": "8dd55ea4-45ed-43cf-bb78-3a5823e6db77",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "14f9445f-4d05-4e88-80a5-e2e948f62cb7"
        },
        "item": {
          "id": "fb57f332-275a-41e9-82c2-4ed80f613993",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "37ba1404-bc50-4207-bbad-8afe1a756305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da092f-d235-413c-a926-d867594053f6",
        "cursor": {
          "ref": "0f20e617-5995-4264-98ba-6ade0e323c15",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7e88a28f-d9bc-4d47-bf28-0e004e64bc56"
        },
        "item": {
          "id": "89da092f-d235-413c-a926-d867594053f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2fbd9f39-4fd0-4665-a893-b1532bc7639d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cff035-2ef6-4b07-8975-a47abaa08561",
        "cursor": {
          "ref": "24fb41c6-8f55-49c6-980b-0efb429c3ce1",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dd924de3-9e42-4b98-8281-538b4e5e285d"
        },
        "item": {
          "id": "e4cff035-2ef6-4b07-8975-a47abaa08561",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7688a194-b405-4e28-9f1d-316b8e1b327f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeaeb45-4c74-497e-b2ee-96bb8b8b68ad",
        "cursor": {
          "ref": "f85152da-6a06-418d-bd15-6311f6414960",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0c654ce8-dcd3-4c8a-b7e9-8f7d6445dd76"
        },
        "item": {
          "id": "abeaeb45-4c74-497e-b2ee-96bb8b8b68ad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9438f01b-9267-4992-89b3-af1d88dcef6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa561a5f-c266-4323-8857-ba19bb2ccf1b",
        "cursor": {
          "ref": "b7e0eeb1-c079-47c5-a291-426a8f0f065c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a52f088c-709c-40fc-8b8f-398d30c43d08"
        },
        "item": {
          "id": "aa561a5f-c266-4323-8857-ba19bb2ccf1b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "01a8d8c0-71e3-4d1a-8cb7-c31ae91cd75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccd7b86-dd32-4395-a728-159901abea6d",
        "cursor": {
          "ref": "d505e219-cdc9-4398-ba4c-45d146130e11",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "142aeac4-852f-476e-a997-f1b8b475f33c"
        },
        "item": {
          "id": "9ccd7b86-dd32-4395-a728-159901abea6d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "938e1450-2d21-4b97-aff5-9dd5bfd3a74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be601b-84f7-4ea8-b851-820c084328c6",
        "cursor": {
          "ref": "19faa01f-cc2e-4725-ab71-78ebe1bb2689",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2ca4c5d6-1b2a-4a9e-9fb5-10e7d942c6a7"
        },
        "item": {
          "id": "e0be601b-84f7-4ea8-b851-820c084328c6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80e1a67f-f7f8-4389-8411-fda65d3444b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c6b318-5260-4153-8f98-03d8b0d67526",
        "cursor": {
          "ref": "d92579e7-07aa-4658-89c9-167164089e28",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7ecf3b2b-0b15-4bfd-bc5d-ec4a2c55959b"
        },
        "item": {
          "id": "68c6b318-5260-4153-8f98-03d8b0d67526",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "090d35c6-8604-4af1-8c1e-b0082aa21ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679325df-fc91-45fa-bca9-7f1c35242485",
        "cursor": {
          "ref": "2db9f377-d761-4d9e-ae4c-17c1c5be6d98",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f04ce70c-ab75-4b59-901d-d26238bbdf24"
        },
        "item": {
          "id": "679325df-fc91-45fa-bca9-7f1c35242485",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "347d6f0c-3712-420a-a932-9ebce827d9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c842f5-dced-49ee-9abe-b95550516a12",
        "cursor": {
          "ref": "a26d7c77-80fa-45b7-acfc-54f984a5c563",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4614715e-1454-4803-9328-a471b21b606b"
        },
        "item": {
          "id": "e8c842f5-dced-49ee-9abe-b95550516a12",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3a094991-e2e0-42ab-97b6-d8b80a78f3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ad2a38-103d-4ffe-babc-22e48dea9fcc",
        "cursor": {
          "ref": "e8304b11-0746-4405-ba12-3bf83be69299",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a1bd5aa9-5392-448f-bd20-8f6ef6627c4a"
        },
        "item": {
          "id": "b8ad2a38-103d-4ffe-babc-22e48dea9fcc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "08edbc33-c23e-4870-9007-46c7eb263055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da132876-1e91-49fc-a008-23efcd63f537",
        "cursor": {
          "ref": "80b297c6-2fe6-4239-9fa4-1c23efd46730",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "035c1985-1ec6-49ad-9299-a2bada8d0292"
        },
        "item": {
          "id": "da132876-1e91-49fc-a008-23efcd63f537",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dcd86329-0c79-4955-8079-590c8da262ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1a7c90-d3c2-47b7-8177-6de68e5c621d",
        "cursor": {
          "ref": "5976c3fb-91f9-41ac-8b43-ab9954d61a10",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d4451308-c55e-4884-861f-80a96d267cb1"
        },
        "item": {
          "id": "7e1a7c90-d3c2-47b7-8177-6de68e5c621d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eee4c75a-bb96-4088-be4b-059f14fcb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f7ff68-2cec-439c-87dd-f86622639c19",
        "cursor": {
          "ref": "ac66c2ee-2842-4b5a-83be-e3b0eb9c2aac",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88ec5ea2-7673-4413-94aa-51e638efdd8b"
        },
        "item": {
          "id": "82f7ff68-2cec-439c-87dd-f86622639c19",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "028db4f2-2dea-4c43-b078-848c952542f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e31a52d-4690-4a85-a253-9b366f840487",
        "cursor": {
          "ref": "6c11a67e-a24b-4dda-a02e-e11402048c55",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "46f7e4de-f87e-4724-a2e7-57b4331d53f4"
        },
        "item": {
          "id": "2e31a52d-4690-4a85-a253-9b366f840487",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eefa8296-4ca9-47b6-bff4-ea75991d6484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e7328a-b365-4409-8fdf-142b3190a54e",
        "cursor": {
          "ref": "765ac6c7-b632-43f4-acb2-4cab651a1119",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8a7c0c65-fb5f-4b5e-88a0-6c6a37f4e5be"
        },
        "item": {
          "id": "23e7328a-b365-4409-8fdf-142b3190a54e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea9d9144-4421-4aa5-92ce-6196c7445eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f9aee2-cb3c-4200-9904-bdfa7433ffd6",
        "cursor": {
          "ref": "f3bd137e-ab7e-44b1-aa70-c0528a607065",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d3b2fc28-7a54-4e2c-83ef-f481b32e782b"
        },
        "item": {
          "id": "c6f9aee2-cb3c-4200-9904-bdfa7433ffd6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dafd1230-d9f9-490e-96fb-fd5ad116fb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b487462-6ef9-4711-9695-393bdab8ec75",
        "cursor": {
          "ref": "aefc139c-d054-41df-9bc4-aa5bcc85e93d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d35a039-01d4-4316-9cad-3df5bd195127"
        },
        "item": {
          "id": "6b487462-6ef9-4711-9695-393bdab8ec75",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "78f2439e-f16e-4607-a912-8327ad805b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c542816-c4d9-4b2b-ab8a-216fe1a30442",
        "cursor": {
          "ref": "6567ecc7-ba46-4ae8-af22-6305394de6b4",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6f1b0c0f-8dc4-4a67-8e40-2d59a478eb46"
        },
        "item": {
          "id": "8c542816-c4d9-4b2b-ab8a-216fe1a30442",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f353ba6c-3688-4cec-a562-436180505812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d5199c-3e60-4d1e-bde2-8b2d41719900",
        "cursor": {
          "ref": "09c67462-3964-49a0-8da9-e9b3c3067b54",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a018e49e-a5d3-460d-9abe-6723e61a9a82"
        },
        "item": {
          "id": "e3d5199c-3e60-4d1e-bde2-8b2d41719900",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e5392eff-97f9-48f1-b6bc-c2ac3d01a3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adaaf24-7d04-43ac-97d8-d95f66274fb2",
        "cursor": {
          "ref": "2293abf5-7d1e-4d78-8ae3-bac37aa91be5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7913e76-65f4-435e-910e-0e46cfa6e1bb"
        },
        "item": {
          "id": "6adaaf24-7d04-43ac-97d8-d95f66274fb2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "86aed0a0-d48d-4a7c-a84b-bed3ff002ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127abbb3-bd90-4f60-b2d5-5e7751875a6e",
        "cursor": {
          "ref": "7365fb40-db02-4e0f-9469-e9e088f3ed41",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a957ae03-fcf1-4191-bb13-4896bd74af06"
        },
        "item": {
          "id": "127abbb3-bd90-4f60-b2d5-5e7751875a6e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "63c8ae0f-60dc-456b-aecb-16d378c75777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30fb750-400d-4cb2-b837-73c6f67f3b56",
        "cursor": {
          "ref": "3294cb1b-f46c-4ade-9ac1-506439ad8547",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "73ca4168-0f88-47e2-99c7-2ade41107118"
        },
        "item": {
          "id": "f30fb750-400d-4cb2-b837-73c6f67f3b56",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "853740e2-87b9-4692-b8cd-31d0416771a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8218f4c6-1263-42aa-bef7-17bf15b827b6",
        "cursor": {
          "ref": "19b4f27d-4e3e-436f-bb25-dc54b499a009",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5b600cb6-3fc3-45d2-815b-7cb1008aa95e"
        },
        "item": {
          "id": "8218f4c6-1263-42aa-bef7-17bf15b827b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d97fbf0b-b9d1-4b4d-acd6-a656781fd63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "9dc75c01-cbe8-4a63-9ab4-bcdb093787ba",
        "cursor": {
          "ref": "6a07a753-b45f-45d6-9164-e9e8ffc505bf",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f7d810e3-aee8-4304-98e3-d007546b1f96"
        },
        "item": {
          "id": "9dc75c01-cbe8-4a63-9ab4-bcdb093787ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "43eef2e0-b5f5-4022-906c-594e013ad758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "50302f3e-b104-4ddf-bc7b-82107266a9fd",
        "cursor": {
          "ref": "581a0445-307c-4526-aa2c-36bdcc32c59c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5eaab052-9f61-4926-963b-6ad8cf948764"
        },
        "item": {
          "id": "50302f3e-b104-4ddf-bc7b-82107266a9fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a19e997d-ec07-4573-9d94-b374bea401ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b96c987e-033e-4d60-b108-5ed84577bb36",
        "cursor": {
          "ref": "57abe98e-d69b-4205-bcd2-6f94fb5391b1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "939f96a6-22af-468e-8cd5-f37fd1dc326b"
        },
        "item": {
          "id": "b96c987e-033e-4d60-b108-5ed84577bb36",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "928a24e4-8d3a-4d6f-8ce5-f4325c983db5",
          "status": "Created",
          "code": 201,
          "responseTime": 6436,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81de7eeb-6385-43bc-b617-fafc8990208a",
        "cursor": {
          "ref": "cb4f7e97-1f8b-4e3c-a2a9-4be5ed1f6f5a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ed4bba27-2bb6-4b2d-873c-be3a53a22572"
        },
        "item": {
          "id": "81de7eeb-6385-43bc-b617-fafc8990208a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3c538dc4-dc86-43a3-b74f-34eed4fd4caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "106204d3-bfdd-49a4-a62d-a92d6e270722",
        "cursor": {
          "ref": "43ff0bc6-5240-4219-a178-2a446977dbc0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b3d7b962-fae0-4d2c-a550-3b9630c18199"
        },
        "item": {
          "id": "106204d3-bfdd-49a4-a62d-a92d6e270722",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "422bae0a-942b-45f9-86ca-d55bbf03daf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b329a523-6178-4b7b-9d49-47e6f301c040",
        "cursor": {
          "ref": "d0954557-17e6-4f47-9be7-993cd376048b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8c201aa0-dea2-472d-9376-a2783bdbb73e"
        },
        "item": {
          "id": "b329a523-6178-4b7b-9d49-47e6f301c040",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dbc3576c-739f-4c93-8bdf-1fe7bca6d22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4781095-d3e9-41fb-adda-9b782dcfbad5",
        "cursor": {
          "ref": "eecb7fc2-77e6-48c8-99b7-f50fc65783ee",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04161460-e147-4c7b-a95f-ea5e421ac476"
        },
        "item": {
          "id": "a4781095-d3e9-41fb-adda-9b782dcfbad5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "882e5394-1ba8-4190-9f72-06e0f679ba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6700624-0401-4601-a941-d7bc8f6eb103",
        "cursor": {
          "ref": "b1b32254-8cf6-4898-8a56-0d01ffba900a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1e7635c7-74a3-49c1-9eef-a3f7b70d876d"
        },
        "item": {
          "id": "b6700624-0401-4601-a941-d7bc8f6eb103",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1ac94d6a-255e-4fde-b937-b8fe4061a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c13da7-bdaf-4f2e-b904-669e5e1fb0b6",
        "cursor": {
          "ref": "71c1564d-0968-4c6a-bdc2-d36a3abf0246",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04a331cc-7cad-464a-8c70-2c760283dde6"
        },
        "item": {
          "id": "60c13da7-bdaf-4f2e-b904-669e5e1fb0b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0c43f893-bf9f-437e-b918-7226db7fe40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad5e833-c7b9-437f-a0fe-83cc16e21294",
        "cursor": {
          "ref": "172a6f91-4c67-41f9-89b9-5510f409020b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2c7f906c-885d-4bc8-be57-f6f0c8ceb521"
        },
        "item": {
          "id": "5ad5e833-c7b9-437f-a0fe-83cc16e21294",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1bc698fa-dcc9-4be4-b984-58fbf307f263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c5b9c2-d1e8-4361-890b-f3291fa93a8c",
        "cursor": {
          "ref": "9593ccc8-a915-453d-bec9-d7927a3e2de9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "169c34f6-97b3-48fa-8832-6d26dabf24fa"
        },
        "item": {
          "id": "25c5b9c2-d1e8-4361-890b-f3291fa93a8c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "19b6adac-5819-44ec-ba2e-5f1e8e7ba35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dba8f9-227a-43e6-bcc7-a8784ceba66b",
        "cursor": {
          "ref": "8bc2c7ad-f2f8-4956-b91f-8b1d8c058f24",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b7d40ca4-691b-4985-b907-d265375c7457"
        },
        "item": {
          "id": "48dba8f9-227a-43e6-bcc7-a8784ceba66b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "daea65ca-24aa-4719-8d96-f8c422a30908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa08e6e-144c-4fa7-8ab3-fc46f304e06b",
        "cursor": {
          "ref": "5937bde2-af07-4784-b67a-e3029f39e820",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c6055f8d-3f6a-48e8-8c36-e8676f570847"
        },
        "item": {
          "id": "daa08e6e-144c-4fa7-8ab3-fc46f304e06b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3446fa8-cff4-4706-848c-9a5fc5384be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b526b150-4321-4264-aa44-e70f0edcdbf2",
        "cursor": {
          "ref": "3eadea3a-ab80-4625-9041-0a07c52d1ed8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "793cb3cc-5974-4435-a626-7aeec165cb0e"
        },
        "item": {
          "id": "b526b150-4321-4264-aa44-e70f0edcdbf2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e29cca77-7a92-4635-ab97-f5624cd21dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d04515-0069-4adf-8f05-ae90abcc63f7",
        "cursor": {
          "ref": "bb2cf44f-6545-4730-a941-2616a327bc1a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "93037578-9fc3-4a5f-885a-4ecfb3897bcc"
        },
        "item": {
          "id": "63d04515-0069-4adf-8f05-ae90abcc63f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b9bd14b3-e91c-4220-8f64-306c03a5a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c6477e-370e-406f-8c89-cf97e2769f2c",
        "cursor": {
          "ref": "ab9af2e7-2259-4ad5-9a47-78d083e04c0b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7faef5ff-fa77-4df8-9439-4602d0bec3e5"
        },
        "item": {
          "id": "b5c6477e-370e-406f-8c89-cf97e2769f2c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "731c5e0a-ccea-4ed0-850e-e748d8c75701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f76be-2642-4629-b542-d3d34e23528c",
        "cursor": {
          "ref": "d3030987-562b-4e17-82b9-f9c639183e3c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "293f57fa-db24-4200-a2fe-e5266dc9dd6f"
        },
        "item": {
          "id": "c65f76be-2642-4629-b542-d3d34e23528c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "649b8390-c146-4672-9ede-d08604288341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceffd22-4e53-4c8d-bf45-1c15db4ab1c1",
        "cursor": {
          "ref": "f41c9ffd-f321-42ed-bd2f-0e1f145ade1f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7214f810-243c-4d04-aa26-4c11ed7b94d7"
        },
        "item": {
          "id": "eceffd22-4e53-4c8d-bf45-1c15db4ab1c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5491f977-9998-4e8d-8677-328a98f1623f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf52275-af89-4873-9d2d-5ba0a68bad2c",
        "cursor": {
          "ref": "fe400bca-4703-408c-96af-2bbf68966d38",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6723fe32-468e-46c7-9a60-cd5c15bc6bf5"
        },
        "item": {
          "id": "bbf52275-af89-4873-9d2d-5ba0a68bad2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8aaadcd0-e90d-46f8-ac0b-8a3152340aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca800050-5457-4298-9c8d-2a4035d0a03b",
        "cursor": {
          "ref": "a3801a3e-0018-472e-8656-b2d86a994404",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "104d31a8-74be-4944-91c0-55ac96f20457"
        },
        "item": {
          "id": "ca800050-5457-4298-9c8d-2a4035d0a03b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3402c6e8-efb1-476d-ac59-82eae148c535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a9e6e8-ae0d-4ad6-aacc-695d953917f1",
        "cursor": {
          "ref": "f055ef12-67e1-4c98-af52-a8b1e2ec1baa",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e8860e89-6fdd-43b2-adbe-2edb22b7ed40"
        },
        "item": {
          "id": "a4a9e6e8-ae0d-4ad6-aacc-695d953917f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0fe6cbbd-77cd-4f12-b081-b7e537ce8ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad8bec-9521-4c42-95a7-e8be0cf8d027",
        "cursor": {
          "ref": "6e76b1d4-fc74-4028-aa77-1889d4991f45",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4103fbcc-90e3-46d2-b841-027af909fd48"
        },
        "item": {
          "id": "58ad8bec-9521-4c42-95a7-e8be0cf8d027",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7cde4d0-1b11-4e0e-bf82-919de493bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717acfbd-b674-48fc-b69d-f6400b80b0fe",
        "cursor": {
          "ref": "be08d600-31b4-4a3e-958f-e600da29fd48",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0fdcaff2-e497-461e-a3f3-c1eb36517baa"
        },
        "item": {
          "id": "717acfbd-b674-48fc-b69d-f6400b80b0fe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "adac35cf-3857-43cf-84b4-37a0229a746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e575f29b-dcc6-463a-8cab-fa67e2242369",
        "cursor": {
          "ref": "7954c148-f891-4b45-9fb3-5dddd9921ad7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dbdf0c2c-8675-4356-8afd-9ed98a938156"
        },
        "item": {
          "id": "e575f29b-dcc6-463a-8cab-fa67e2242369",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a9fa03e4-7c79-460b-aa7b-32f21dbb5e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd422b8-2b6e-4aa7-8857-548ba1960d34",
        "cursor": {
          "ref": "db46406a-d288-419e-910f-d4142c1026a1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dd1cab9d-d1b3-4b89-bc9b-590770ed2c9a"
        },
        "item": {
          "id": "2dd422b8-2b6e-4aa7-8857-548ba1960d34",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59edb84a-9536-473f-9917-db0c9203fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c52e76-db42-4bae-9be3-092712231083",
        "cursor": {
          "ref": "ae83fea7-d19a-49bd-8e58-9e6366797f22",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9ade76e3-3e76-42b7-8f88-56ccd8a1dfcf"
        },
        "item": {
          "id": "84c52e76-db42-4bae-9be3-092712231083",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2ff360a-f70a-4c9a-a28e-406ad5efde5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88790975-98ba-4c1c-8826-ce8edf5884e0",
        "cursor": {
          "ref": "ea06ac68-0f6a-4e6e-bd61-5dc208f31b96",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1ef52357-7007-4210-bc5d-51e46142df0c"
        },
        "item": {
          "id": "88790975-98ba-4c1c-8826-ce8edf5884e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4421737a-2b49-4027-868b-ca449689ba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d256f377-4644-44ff-abf1-da34e233dac2",
        "cursor": {
          "ref": "ab0d05e3-6c13-4854-9fd6-41311477543b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f0d984ff-6839-4a38-828e-e19e3e625aa6"
        },
        "item": {
          "id": "d256f377-4644-44ff-abf1-da34e233dac2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96669dd0-f4d2-4b58-a1a3-e6d14eb2e223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a68dc-fbb0-43b3-9811-8c768230865f",
        "cursor": {
          "ref": "302fc85a-8da7-4027-b233-4d7b5a25ad0d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d91dcc2-3678-4c63-afec-6e3e772f624e"
        },
        "item": {
          "id": "156a68dc-fbb0-43b3-9811-8c768230865f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b225399-4d9b-431e-881a-6a489e4777bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04db5a-8109-41ba-8a70-28f6c30cc81e",
        "cursor": {
          "ref": "851e523d-2a44-4718-8d06-8201cbb47d65",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "da28c694-46d9-4903-8cd6-11e4dbeb4dfb"
        },
        "item": {
          "id": "8c04db5a-8109-41ba-8a70-28f6c30cc81e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "087dd514-cc08-4e8c-82fc-ab68754fab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e393aa-f2bc-406d-9a82-deab95069a59",
        "cursor": {
          "ref": "a113850a-794e-4cd9-8bcd-c782b51ad9a6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1fc118af-fd63-4e48-b81b-e7cc7dbf9549"
        },
        "item": {
          "id": "75e393aa-f2bc-406d-9a82-deab95069a59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e988ba8-e7df-42e7-932f-5ab39f738001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a5e97-c7e7-4813-800e-696ae8f04da8",
        "cursor": {
          "ref": "01c5ee30-db41-44cf-bbdf-f73c79d1f080",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2daaaf67-4568-46cc-959c-39fd3566f16b"
        },
        "item": {
          "id": "d22a5e97-c7e7-4813-800e-696ae8f04da8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99e711e8-1831-4b2a-815b-419dc8a09019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac0f4c-704c-4565-9fbc-8a5ee56a5dd8",
        "cursor": {
          "ref": "9443fe69-5868-4341-a2ae-c75b0e61aa3f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "581ecaf2-3523-42ba-88d6-76fd25aea8e7"
        },
        "item": {
          "id": "93ac0f4c-704c-4565-9fbc-8a5ee56a5dd8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7bc65fbc-b370-46dd-8109-0eaf9bce7b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7b5e4f-5caf-46da-b160-f60591d94b52",
        "cursor": {
          "ref": "df7a551e-74ed-4610-b29c-81d2fc8bd641",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f3946a2-850f-405d-8098-12cb5173d846"
        },
        "item": {
          "id": "bf7b5e4f-5caf-46da-b160-f60591d94b52",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69df2b30-b83f-45f1-b683-3e4e7562365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95d237a-491d-45e7-9e74-9d439575c331",
        "cursor": {
          "ref": "11950e70-0411-4678-9e65-9c054b160c18",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5c785424-19a2-47e1-8612-0636c3c9b429"
        },
        "item": {
          "id": "f95d237a-491d-45e7-9e74-9d439575c331",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "173eaf9e-719d-4399-ac23-b0d3ac606ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dde3cb5-a77c-4e18-8a45-05135c7b3bac",
        "cursor": {
          "ref": "225eeac5-3dc5-4b32-ad03-75214bfe4c38",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2fca4f75-990a-4705-82c0-c4050d193faa"
        },
        "item": {
          "id": "1dde3cb5-a77c-4e18-8a45-05135c7b3bac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72a5662d-fee0-4a3b-aed8-0c2e917d0e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1f7e9b-2e01-45b4-a60e-e1b537263c2f",
        "cursor": {
          "ref": "bbec90d6-8eb1-4fd4-89c7-2e89a06214b9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b8c042d8-abd1-4f24-bd53-762b3529d81e"
        },
        "item": {
          "id": "6b1f7e9b-2e01-45b4-a60e-e1b537263c2f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "769ae1ae-7082-4295-ba7d-9df2b4753d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5296cc35-d72d-4175-ba1c-1a492d0ec60d",
        "cursor": {
          "ref": "bef1aa22-1bf4-412b-ba1b-c064afd9c029",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "480546f9-118e-48a1-9fc4-e8a3a1e33ea7"
        },
        "item": {
          "id": "5296cc35-d72d-4175-ba1c-1a492d0ec60d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8f551487-62e2-43cc-81a0-807fee212b73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f2d34b-e12e-4efe-8071-3d61046b7503",
        "cursor": {
          "ref": "29cc605d-dc6e-446f-b007-532c2e9d0c7a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "99cc5c6a-faf7-4368-a938-7b369e07b066"
        },
        "item": {
          "id": "f9f2d34b-e12e-4efe-8071-3d61046b7503",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "813b80ee-f41f-43d3-8734-9daca6feb5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2066734-4bf3-4fe6-8047-08f3bb3b4316",
        "cursor": {
          "ref": "c92d31f1-50f0-4cbe-89f5-5376cab63ac2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "25ef0a92-6302-4d34-82a6-98164ccfee60"
        },
        "item": {
          "id": "e2066734-4bf3-4fe6-8047-08f3bb3b4316",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7cb8002f-a0bd-4de6-81e8-35def3cf5908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d086c653-7116-426a-af7a-02c16750cf8a",
        "cursor": {
          "ref": "0806762c-ed30-4fa7-baf3-ed8d4b5b3248",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "af55ecd4-9c5a-402d-8a0a-573c60bf30ef"
        },
        "item": {
          "id": "d086c653-7116-426a-af7a-02c16750cf8a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2159c7e0-f01e-41c8-b534-f12921608e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6308b2-c9ab-4ef7-8a88-6263e42c71ab",
        "cursor": {
          "ref": "f0caf9c3-be2c-4791-b816-60246f29a810",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "835be82c-821d-4eb6-b3ab-81f1c95c9bca"
        },
        "item": {
          "id": "0a6308b2-c9ab-4ef7-8a88-6263e42c71ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6a47d756-4f24-4c28-a03f-90aaf3166280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6006c2b-81cd-4ec5-84d3-19c07d87afa1",
        "cursor": {
          "ref": "cc7b01ae-a871-4e4f-bc71-027cd24616be",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1904cdb6-a75b-46b4-81d4-23dbd1a64f2c"
        },
        "item": {
          "id": "d6006c2b-81cd-4ec5-84d3-19c07d87afa1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85f677aa-6617-4fb8-8c11-384adf79b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcebffa-ee73-4898-934f-7d98806261b2",
        "cursor": {
          "ref": "23ac1226-6b2d-44c4-910f-c14cd1dab360",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7b3b9f88-5801-4688-b3c3-d2abc0e68dd1"
        },
        "item": {
          "id": "2bcebffa-ee73-4898-934f-7d98806261b2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69f75d4d-553b-4865-9b81-6627b9fa87fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d71df-adcc-4470-8e9a-9afe0d1eb36e",
        "cursor": {
          "ref": "7b905083-cdf0-4a1c-b655-79b25c8cd401",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d26931f0-8cce-4802-a456-daf65957cf94"
        },
        "item": {
          "id": "dc1d71df-adcc-4470-8e9a-9afe0d1eb36e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd61ab8b-0ab9-4897-a3ee-6594da33ddf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624ecd7-2b3a-4559-b95e-9f1b7499ddd9",
        "cursor": {
          "ref": "c337484b-f5fb-4906-94d1-18b95a168213",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "383beddb-974a-4dca-b7a1-40051ff541e5"
        },
        "item": {
          "id": "d624ecd7-2b3a-4559-b95e-9f1b7499ddd9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de48a205-d8ec-46e4-8cc6-b37bc6e4aab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed77b60-25ce-4635-9d0d-801b3d525857",
        "cursor": {
          "ref": "f63ae3bd-dfcc-45fe-ba30-c8420d709322",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f4ccc363-0952-454d-8dfa-1b4ab0f22d7c"
        },
        "item": {
          "id": "0ed77b60-25ce-4635-9d0d-801b3d525857",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d33ecbfc-a59e-4639-82f6-6978d7f5ca50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defde0e0-226b-4cde-9714-2383755b3097",
        "cursor": {
          "ref": "325ac20e-fb81-4dd9-a0a9-daf7f8d39f1b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dd25860e-dc53-41d5-a0a5-a755fd4836c6"
        },
        "item": {
          "id": "defde0e0-226b-4cde-9714-2383755b3097",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f8e9d7b-701c-4a14-8741-a1b251450ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693f383-d3e4-478b-a882-d52087f78e00",
        "cursor": {
          "ref": "8ea1ad05-48d5-4768-81cb-f799a2122b12",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "68e63eac-e7c1-4a46-902d-a168f8bbc70c"
        },
        "item": {
          "id": "b693f383-d3e4-478b-a882-d52087f78e00",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7cd8d17-af8a-4c53-9e78-87bbb80ebc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bac3127-e42d-4b85-beba-122e3ca631d9",
        "cursor": {
          "ref": "d85c49e4-9318-49e9-8387-01d51f3e4eb9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "134998e9-f337-4fb7-b80d-cf33a77e8066"
        },
        "item": {
          "id": "0bac3127-e42d-4b85-beba-122e3ca631d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0b38736d-5f82-4b0e-ba1b-5287468c73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab0b93-eb2e-423d-92ee-5bde727bc226",
        "cursor": {
          "ref": "5456dc6f-c0bd-4edf-a5cc-c90359cc4176",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "39c6fc93-451e-489e-b7aa-f2cefae0e39f"
        },
        "item": {
          "id": "8aab0b93-eb2e-423d-92ee-5bde727bc226",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "990080b3-2ec3-4c50-a6e5-5d913e389117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6caeae5-fcd9-4fc8-8d0d-2a1218def5e6",
        "cursor": {
          "ref": "dd82cee7-91e4-4bd4-9726-7c6c0b084bd3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7d33ec43-7496-43f1-b2cf-82aa7fdb1ae5"
        },
        "item": {
          "id": "d6caeae5-fcd9-4fc8-8d0d-2a1218def5e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc7cfa88-d82e-44f5-a13b-33d18e885745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948a93cc-dff9-413f-ac90-bb36c745cd34",
        "cursor": {
          "ref": "86b3c68c-90de-4937-bc01-6f314161e66f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1aad22c7-14ee-46a7-9da4-92954dfa6304"
        },
        "item": {
          "id": "948a93cc-dff9-413f-ac90-bb36c745cd34",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2eafbc98-ab35-4679-8a88-64e41e407335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e69958-c6c0-4aa6-9276-365ef8ab6281",
        "cursor": {
          "ref": "74ab83a2-971a-47b9-b547-e86491da5cc5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4bc51de4-f75d-40a2-b706-4af9d5956b22"
        },
        "item": {
          "id": "19e69958-c6c0-4aa6-9276-365ef8ab6281",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0796801f-b784-4987-9ee0-3df413d0102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced47343-5d78-402b-b2bc-975f8a7d8557",
        "cursor": {
          "ref": "20bad4c5-6b52-49f1-a343-d1688b086666",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f6ddcd60-6710-4130-af67-8f07a53f200b"
        },
        "item": {
          "id": "ced47343-5d78-402b-b2bc-975f8a7d8557",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0f0459e6-d319-4ce6-b81e-2d18de46f5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd4c798-854c-4b39-99b2-1ab1057d50a7",
        "cursor": {
          "ref": "a581f7ea-2bdb-47c3-899c-147c8c77d675",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8efe8d65-9440-4c4b-b724-ad21cc1af9b2"
        },
        "item": {
          "id": "1cd4c798-854c-4b39-99b2-1ab1057d50a7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ef732bc-b818-4b78-9fdc-008a6e59d820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad576dc0-66f3-4b0d-a379-eade6013cfdf",
        "cursor": {
          "ref": "2dbfab00-e602-4dbf-b4f4-dbb29b8c1bd3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13f984dc-515c-449d-9c53-f2f68fd4c99a"
        },
        "item": {
          "id": "ad576dc0-66f3-4b0d-a379-eade6013cfdf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8bf87b41-b3c8-4b03-aaf3-3eaecdd8091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce387c94-ca4f-43b9-8bed-5607a233f921",
        "cursor": {
          "ref": "89f95c0e-0dbd-4307-bb6c-5c4d3122219b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f3a3cb4-b003-4c1e-bcad-0e75dd45daa4"
        },
        "item": {
          "id": "ce387c94-ca4f-43b9-8bed-5607a233f921",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "22f51a3b-36cb-4bf9-a4bd-85af19ead146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb444d0c-77ae-4354-aad2-6e7710b700a5",
        "cursor": {
          "ref": "9c3d758d-99ba-4a28-9833-439ccc5a663a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4a14237-5253-453a-af02-b72edec855a1"
        },
        "item": {
          "id": "eb444d0c-77ae-4354-aad2-6e7710b700a5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "821443fb-46b3-4aef-b17b-aba310db707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226d1b7-92b3-4965-ab57-be9ae4a2fb66",
        "cursor": {
          "ref": "d4d522a1-9aad-4bcd-88ef-bc58926f0b14",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0c6b1173-e774-4d70-8995-a431093362db"
        },
        "item": {
          "id": "e226d1b7-92b3-4965-ab57-be9ae4a2fb66",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1b89f04b-4fac-43a5-8582-21ed306d0475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bf0367-59d2-4980-8694-1f96bce53a57",
        "cursor": {
          "ref": "52cbb7ef-0453-411c-87b3-ccad7672467a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "46043f0e-c381-4a70-b92f-1336c8bc898f"
        },
        "item": {
          "id": "80bf0367-59d2-4980-8694-1f96bce53a57",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ee051c6-555b-42b0-9193-8a022b6cd569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f607b9-6fc3-46b2-9026-5141d172e4b0",
        "cursor": {
          "ref": "75ec59b7-bb89-4f59-bea8-4138c9cc0784",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "537bb7fc-8a01-4a8b-9936-d8cf060e2ba1"
        },
        "item": {
          "id": "94f607b9-6fc3-46b2-9026-5141d172e4b0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a6ec258-c74e-4d30-9832-5c23797645c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ea4961-58cb-4398-a3dd-2473a429bdf9",
        "cursor": {
          "ref": "dced32a7-19fb-47b6-a962-09a0e00fbd76",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5ed5344-d672-4eed-87a6-58f81de23cca"
        },
        "item": {
          "id": "87ea4961-58cb-4398-a3dd-2473a429bdf9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91e49463-5dc2-487a-baed-aa60ed91e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c10cc8-baff-4eae-a6cb-ccdfd8059238",
        "cursor": {
          "ref": "bb0e32f5-3f59-49d6-81a5-34024809ed7d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "01e94fcb-6f0e-4053-a674-6484f986410a"
        },
        "item": {
          "id": "d7c10cc8-baff-4eae-a6cb-ccdfd8059238",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "90e7e03d-8d1f-46bc-88a4-9b5638693579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c66f4eb-3b13-4a9c-8639-15fce7cf3775",
        "cursor": {
          "ref": "d59c8018-9c42-4be5-ae46-129e63154120",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fb16975b-9ce0-44a2-b650-db6547ed01f2"
        },
        "item": {
          "id": "9c66f4eb-3b13-4a9c-8639-15fce7cf3775",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "02fb685a-f266-4814-aa6d-968144e3849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d286b1d-fecf-49c9-93b7-658c783a8df3",
        "cursor": {
          "ref": "beda703e-fbba-4a90-921d-abfba590f656",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b2dd8100-5f88-4055-ae17-f803446908ef"
        },
        "item": {
          "id": "3d286b1d-fecf-49c9-93b7-658c783a8df3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d72e3e70-eb13-41a2-b612-09a05cee1ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70ae332-88e6-4a6f-81e8-268aed7fd583",
        "cursor": {
          "ref": "c94a2866-7058-4be7-afaf-2cee59676dc6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1fce49da-9e55-44b8-b632-bb13ae07f46f"
        },
        "item": {
          "id": "e70ae332-88e6-4a6f-81e8-268aed7fd583",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc166128-f7b3-49f9-8816-7346b5c94bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6bcd4d-5aee-4e2a-8ff4-a734f5d3f56f",
        "cursor": {
          "ref": "b18cc6f6-b7d8-4306-a51f-17433d8f2e00",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "073ecbe9-842c-48cc-8e71-81efcc9326ec"
        },
        "item": {
          "id": "ae6bcd4d-5aee-4e2a-8ff4-a734f5d3f56f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ba20a78-da27-4ea4-af2d-181146371e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c03b5-0c72-469d-a210-b718ade2044c",
        "cursor": {
          "ref": "bbd2dd28-b64e-477a-8b68-d6f6512ee5af",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bceffcca-e893-4f41-a1d7-57efbdd00be7"
        },
        "item": {
          "id": "8c1c03b5-0c72-469d-a210-b718ade2044c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f70eb5fe-ebad-462c-ba1b-7c537d34dc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978232a7-a57f-4ed5-8cc7-81b18f69f309",
        "cursor": {
          "ref": "d0a3f7c0-b649-4b2e-8540-9f59fa889165",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bc2b89c9-8407-4e3d-a944-159543fa3582"
        },
        "item": {
          "id": "978232a7-a57f-4ed5-8cc7-81b18f69f309",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dca9824c-755c-4103-91aa-bbdf0a289939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154f54fe-483f-4bbf-bd62-80b5f08ca1f8",
        "cursor": {
          "ref": "2f0ef831-4069-444f-b6b4-919edd3e3734",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "facaeef8-b174-472b-9729-bd7de49098f6"
        },
        "item": {
          "id": "154f54fe-483f-4bbf-bd62-80b5f08ca1f8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4102f216-5b5f-47fb-b6d4-e42849a87218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770e8576-ac1e-4f31-8f18-0123f85cd0bb",
        "cursor": {
          "ref": "a0c243ce-5255-4ce9-ba4d-a3a1990230b9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e1294cca-42dc-4e0b-b55b-f21bb65be05d"
        },
        "item": {
          "id": "770e8576-ac1e-4f31-8f18-0123f85cd0bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "de4aada9-4b00-4973-af83-4b61308ccb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adeb9bb-aa1e-4f4f-9e5f-eeac391faa5e",
        "cursor": {
          "ref": "cec6674a-ddf6-41b1-8db8-6d69df292612",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "59184fe5-4c5b-45e8-b746-58053be03d26"
        },
        "item": {
          "id": "0adeb9bb-aa1e-4f4f-9e5f-eeac391faa5e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cda79288-9fb4-4137-9d5c-730ea3c43e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038c93b-c17b-4f74-95bf-b5adcbe0fd5e",
        "cursor": {
          "ref": "a59a274a-2bcf-4bd4-b92f-5ef5344a44f3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fc041b78-1f64-4a25-a884-3c6f7145ce22"
        },
        "item": {
          "id": "e038c93b-c17b-4f74-95bf-b5adcbe0fd5e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad034394-2a1b-4757-8555-aa78d31fc2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df5c24-5deb-464d-a7ca-5bec4f003fb4",
        "cursor": {
          "ref": "28cfd84e-27ee-4d05-a388-d2691eb27345",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3771475b-fb93-45ec-a5b2-22d3e842f1a8"
        },
        "item": {
          "id": "23df5c24-5deb-464d-a7ca-5bec4f003fb4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b481f00c-b28a-42be-8e84-2cfb04f68fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e29c4-b746-4d4d-bd61-f94cc1c411b6",
        "cursor": {
          "ref": "4a20ba42-2be9-4b4f-b45b-64b75b32e71a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8e8ee35-5845-4eb3-884e-8f879634d2e4"
        },
        "item": {
          "id": "258e29c4-b746-4d4d-bd61-f94cc1c411b6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4e3fea4b-9564-443c-aaa5-297f967752dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ca4b6-5093-425a-ada6-89d12410a88d",
        "cursor": {
          "ref": "50b408f2-de8f-41b6-8e21-177198f5a40c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c91c213-4e1f-4087-9e97-e3be56fae748"
        },
        "item": {
          "id": "284ca4b6-5093-425a-ada6-89d12410a88d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2608e919-4109-478c-ab84-d8d699e93883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af1c567-9a54-4552-ba99-001321e76e6d",
        "cursor": {
          "ref": "14f62b3a-1732-4e3d-864f-f2c59468b4ce",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "540b3107-e429-44b4-bf4a-43b2a2a140c2"
        },
        "item": {
          "id": "2af1c567-9a54-4552-ba99-001321e76e6d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e2bd4314-8e46-4be9-b215-154a829c9e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7291c8ae-ab63-44fc-b84a-6802a0603d9d",
        "cursor": {
          "ref": "2173c791-bd94-4396-a818-fcd0e2f30da3",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "085cf3df-60de-41b2-8e24-f78e15f4ee6b"
        },
        "item": {
          "id": "7291c8ae-ab63-44fc-b84a-6802a0603d9d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3063087c-1e80-4324-b454-057300ab52ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22f696-1113-4dbe-b2a7-85b6949be6e2",
        "cursor": {
          "ref": "53d5a6f6-b08b-4645-a191-904a07bb3363",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ff10f429-9114-4550-b393-5e66c037f503"
        },
        "item": {
          "id": "de22f696-1113-4dbe-b2a7-85b6949be6e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1eb23c60-4c53-432b-b5e5-4b98421f5b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590a58b-523d-4ca9-b64e-821b8cbfd4e1",
        "cursor": {
          "ref": "d2591018-e370-4f07-8e7f-060d07872fd0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c353edf9-2072-4ca3-b97b-e90ff6d161fa"
        },
        "item": {
          "id": "0590a58b-523d-4ca9-b64e-821b8cbfd4e1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ab0de89-68b9-46af-a4f3-4bfc77eb0ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374f3355-a0f3-47de-bc8e-edeca2c1ce9d",
        "cursor": {
          "ref": "c724aa85-68fd-4256-b22f-c1edee973db1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6fcb9ed8-f477-4b8d-ab2c-6d4b9eb63b74"
        },
        "item": {
          "id": "374f3355-a0f3-47de-bc8e-edeca2c1ce9d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d607987b-1540-40fe-903a-7d690016d695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9332b737-e220-4c01-a572-3eac6c69b532",
        "cursor": {
          "ref": "5b2d8233-e10c-4283-8440-f0635bf208f2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4bcbce6b-f70e-4b2d-aec8-8a964180b92e"
        },
        "item": {
          "id": "9332b737-e220-4c01-a572-3eac6c69b532",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "74de62c0-f8e1-4a54-ae5c-4829e82b3ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da329b6-1977-448c-989d-39c6634ad171",
        "cursor": {
          "ref": "400756d3-9899-492b-abb3-956012968932",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95a9f3fd-2b34-419f-a2cf-6ebf4728cfac"
        },
        "item": {
          "id": "9da329b6-1977-448c-989d-39c6634ad171",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7a85c7e2-bee0-4757-8afd-010c030bfc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b2e9f1-f18b-4398-bb59-5d6c67887df0",
        "cursor": {
          "ref": "5d898819-319e-4afd-bb7a-9fa31bba8ba1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "805ee86a-e165-4e66-8337-ef1d6a8709d2"
        },
        "item": {
          "id": "53b2e9f1-f18b-4398-bb59-5d6c67887df0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d79c3f96-dc27-4ca2-8a26-e0a400fca31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b111636-45e4-49cf-9601-1b1fa553e547",
        "cursor": {
          "ref": "ef7aee77-acaa-4290-8107-e9537b06c254",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ba4e8dc1-aabc-40e9-a2b2-7e0a8857688f"
        },
        "item": {
          "id": "6b111636-45e4-49cf-9601-1b1fa553e547",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0ea2104e-2608-42e3-8c09-eb656f318286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce57dfe-b1b9-40b0-9038-5b167d35d7d5",
        "cursor": {
          "ref": "415eff14-6a77-45dc-92c0-f15f1c41e648",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5c9c66bc-00c4-4ef0-ac89-5f60affc7a9a"
        },
        "item": {
          "id": "cce57dfe-b1b9-40b0-9038-5b167d35d7d5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e6ce9d82-a606-4a6e-9f25-7f6dbeb35341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ae8f2b-3baf-4892-b683-b69f7884ae02",
        "cursor": {
          "ref": "ea06506b-c044-43ba-9bf0-8f70047dd4d0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6c93d3b-9cca-4f80-a6a1-04f1763b2ba5"
        },
        "item": {
          "id": "a4ae8f2b-3baf-4892-b683-b69f7884ae02",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6349b109-c92b-4ae6-ab53-d7f8ccab14fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26097c0-42c4-45e1-8ea5-0b2a39d2fc20",
        "cursor": {
          "ref": "3fea86b0-0478-4e56-9895-14c5886d5379",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5aa294bb-9223-43bd-a090-25a438ded75a"
        },
        "item": {
          "id": "f26097c0-42c4-45e1-8ea5-0b2a39d2fc20",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "612908f4-e3dc-4f8c-988a-7afb828cfb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18e8e1b-0f71-4bd5-a86f-25ef293240a3",
        "cursor": {
          "ref": "13e54882-1d6d-4ea7-b98b-3eafdbe5685c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1dadcc52-c50c-41e8-a267-161fe2b1bc9d"
        },
        "item": {
          "id": "b18e8e1b-0f71-4bd5-a86f-25ef293240a3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a89e0ca-8bb0-48bf-a71b-368077dec276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dec30a-1f03-499d-98d0-3df8b18b896f",
        "cursor": {
          "ref": "7695726c-6c4f-4744-9e47-902289c58166",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ed97319-97ab-43f5-bc51-6c27061e006d"
        },
        "item": {
          "id": "10dec30a-1f03-499d-98d0-3df8b18b896f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "76096fc5-c2d4-4bba-884a-5d7f9d6413ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99677cc-2067-4a38-ac2c-59254edac3af",
        "cursor": {
          "ref": "79e7befb-7447-46a4-91d8-34b2c7931165",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6e7ff51c-eb2b-40d9-9573-9a8a8a04b690"
        },
        "item": {
          "id": "f99677cc-2067-4a38-ac2c-59254edac3af",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e3d5c903-c8a9-496d-961d-a46a6a335f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d020ffb-c30f-4a00-bde9-908e6547f02f",
        "cursor": {
          "ref": "fcddc0fb-c9ee-40ab-81f8-390f86f4dea8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2fdd9d18-14fe-46cb-b3b5-365cd35c0aa4"
        },
        "item": {
          "id": "5d020ffb-c30f-4a00-bde9-908e6547f02f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4867b2be-f76b-4871-a658-bceb684cbe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2173b3-d33b-4562-b1f0-9ed123684fe7",
        "cursor": {
          "ref": "f978f828-89a7-41c9-ae6c-c1d2d04462db",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "21b8609c-f70d-4f3e-996b-ec6fa825c723"
        },
        "item": {
          "id": "2b2173b3-d33b-4562-b1f0-9ed123684fe7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e019512-1a23-4b33-aa80-b19e3490c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea55e06-3a4d-40e8-a2e9-2ca199db405c",
        "cursor": {
          "ref": "feb0a2d1-c828-4b16-82ab-57384042219d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce4902b4-d92b-47b2-aab3-84fa768c363e"
        },
        "item": {
          "id": "eea55e06-3a4d-40e8-a2e9-2ca199db405c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "02be0c7e-0084-46fe-a994-e4e9a7b2b199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3412a44-3724-4b34-8dd4-60f39c4236e0",
        "cursor": {
          "ref": "e70d8512-c719-4642-8c09-1424130eb611",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3393c6d-9fd2-444f-841f-2112ac69e0ed"
        },
        "item": {
          "id": "c3412a44-3724-4b34-8dd4-60f39c4236e0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "75683723-49f0-4185-b82b-a8b3cfad4c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a231c508-2544-49fb-8dab-8891650b165d",
        "cursor": {
          "ref": "4f189e2f-8207-41af-ad4c-8b30c222b0ae",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c0f4f6ff-2e38-42ee-8d14-408404c8a492"
        },
        "item": {
          "id": "a231c508-2544-49fb-8dab-8891650b165d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19fc63d2-8533-4666-b12f-a7284df424ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fc15bc-1220-4e04-8220-78646b00b8cc",
        "cursor": {
          "ref": "e8362998-cbd6-457c-90de-1c82de770086",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c1ad8261-70cd-483f-a62b-391763957655"
        },
        "item": {
          "id": "b4fc15bc-1220-4e04-8220-78646b00b8cc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "da2c3c5a-0fa9-4476-8ac8-7f3179e41589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1d245-1a23-47d9-9abb-2e25f027469b",
        "cursor": {
          "ref": "7c356ffc-bbbb-4a4f-a7bb-6afd5fd8db9e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "79c9b0ae-97e0-4359-96df-16419a81beda"
        },
        "item": {
          "id": "e8a1d245-1a23-47d9-9abb-2e25f027469b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a4ce2371-8b3b-4aed-a524-e1b9c1bbb550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cef32de-a495-4a83-9657-2187117cacc2",
        "cursor": {
          "ref": "f7d4aa2c-2432-4489-8d92-ef1a9d1654c9",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8dfbeda7-19c3-46fb-952f-8870fbcbd808"
        },
        "item": {
          "id": "9cef32de-a495-4a83-9657-2187117cacc2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "afccc8df-4cfe-4713-a129-fa32cbcfe7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81f5a35-8a93-4501-8675-1b659efa0997",
        "cursor": {
          "ref": "32a296d1-32f8-416d-9ec6-66369f29c59c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "42c16668-0a9d-4654-8c47-84ad6dd4fd7e"
        },
        "item": {
          "id": "f81f5a35-8a93-4501-8675-1b659efa0997",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8350c3b4-39b6-405d-91de-409f73bdb378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08413378-ba0e-4835-ac1d-746ba2bcadb6",
        "cursor": {
          "ref": "b6cd52b8-09df-41e3-8bb8-27c39bb7332c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b1ae2537-ca28-49c5-83b3-12032ada971d"
        },
        "item": {
          "id": "08413378-ba0e-4835-ac1d-746ba2bcadb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "994c3cd3-de35-4814-a9be-dba4313f99c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e1807-2150-4d58-b539-7e9c3226249e",
        "cursor": {
          "ref": "ba78ade8-b1f8-476e-8c20-46b624b529c5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e01e82d0-b648-416e-bba2-0cc110fd29bc"
        },
        "item": {
          "id": "c33e1807-2150-4d58-b539-7e9c3226249e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05f71509-8a97-4006-95a2-16dc4e2fbc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1773bf-af28-4b15-a8e9-fa7fe4f8347e",
        "cursor": {
          "ref": "949c2ee3-61f3-47be-8323-c77be2410ef1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b8ed5b2c-f7fd-4831-9341-5048381dbf3f"
        },
        "item": {
          "id": "2e1773bf-af28-4b15-a8e9-fa7fe4f8347e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d32a29f2-228c-4cab-aae6-d0588ec5b63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8879068b-8f89-4eed-8b69-3706994ababc",
        "cursor": {
          "ref": "06b32ebd-79ca-4a02-b23e-76f2805cbc46",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b5ec3593-d504-4165-96de-201728b6509d"
        },
        "item": {
          "id": "8879068b-8f89-4eed-8b69-3706994ababc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a09ea5df-e9c4-4e12-96bf-cf46550bb258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6d030-1498-4192-ab7a-e7387ca6a03f",
        "cursor": {
          "ref": "38d6a67a-4ac5-4606-82d6-073394df4240",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c95dc5b0-20b8-4f90-aeef-7a4902b98e44"
        },
        "item": {
          "id": "8ae6d030-1498-4192-ab7a-e7387ca6a03f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f1bc10ef-8dce-4d2c-835f-feda558ddff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc82872-0682-4716-b082-1e33163c69f0",
        "cursor": {
          "ref": "f6c32522-5557-4c9a-9fd9-99d085342896",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "93617d22-5a01-4923-ab09-e0414b2f49ce"
        },
        "item": {
          "id": "9cc82872-0682-4716-b082-1e33163c69f0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9a9c845a-71ba-470d-90c3-0fa26af1f876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5845adf5-53a4-4c42-8f8b-8179a1808ac1",
        "cursor": {
          "ref": "7dc3476f-b2b6-446a-91e1-f43630d36613",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2950db2c-37ff-4762-b795-7444bb7196e6"
        },
        "item": {
          "id": "5845adf5-53a4-4c42-8f8b-8179a1808ac1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4290cd5f-e7fd-4f77-b52c-6915a4f4395c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1536e29-be2b-47ab-a9ac-b71051cbdfd6",
        "cursor": {
          "ref": "45b1bc86-f114-4f38-bd35-1b82c1164d96",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "70879130-abe6-4cdf-9f8e-2a294a360e0b"
        },
        "item": {
          "id": "c1536e29-be2b-47ab-a9ac-b71051cbdfd6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9d8c6455-d605-4633-b916-5b437fbf6c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ddc42b-33dd-4d7c-a7aa-ccb850d23e5b",
        "cursor": {
          "ref": "2b52ab30-f0a2-4eb9-bf0c-aa884ad38540",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "30ba3d3d-6289-449a-b6d8-3d49ec37b741"
        },
        "item": {
          "id": "96ddc42b-33dd-4d7c-a7aa-ccb850d23e5b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "de2b56a1-4f2a-46a1-91c0-fa6e30ebb665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32f90e2-f3bc-4d1b-b33a-abc8330cdeab",
        "cursor": {
          "ref": "b999e98b-7bb4-4f09-8ca5-a27a3ce96f2c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b67610b7-a39a-490c-92ea-6c2e8ac79265"
        },
        "item": {
          "id": "a32f90e2-f3bc-4d1b-b33a-abc8330cdeab",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d2b1a983-18ed-4a4f-b215-277d8ccb6d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17a1b4c-7256-4a9a-8f43-8c2ad695b4b6",
        "cursor": {
          "ref": "5c1799d1-c209-40d6-b1af-eef25f73c336",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5ccb5663-b981-49f7-8f23-90cc5c17b7c6"
        },
        "item": {
          "id": "b17a1b4c-7256-4a9a-8f43-8c2ad695b4b6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e48412d2-b347-4fd5-bc5d-bda217470547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0210d5d6-b55d-4135-9137-5dd1e2151497",
        "cursor": {
          "ref": "ec81f6cf-4d07-45f4-8f3e-5c621731308b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9a93c8c3-a6be-44b6-b24c-9f060ee85235"
        },
        "item": {
          "id": "0210d5d6-b55d-4135-9137-5dd1e2151497",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "43bb1aa4-1800-45b0-a2a3-f3899363e71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd909575-a10a-4246-8948-424f79c9aeca",
        "cursor": {
          "ref": "be07cd98-8d36-4207-a925-5574b971cd69",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "03a84533-2790-4c3e-a886-29fdcd3e76c7"
        },
        "item": {
          "id": "fd909575-a10a-4246-8948-424f79c9aeca",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fecec5e0-93ad-41eb-884c-acdee0a1ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c027b218-0a0d-4889-8496-b9f5704f715b",
        "cursor": {
          "ref": "001e8acc-9c18-4b99-a89a-e609d6ac4dac",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8cd7855-a78f-4a86-aa69-68d48e2cdca3"
        },
        "item": {
          "id": "c027b218-0a0d-4889-8496-b9f5704f715b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "edc346a8-ec1c-41db-abe7-1e590a030e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b0701-d0cd-404a-b40b-53f1647bae4e",
        "cursor": {
          "ref": "0cead46d-d6e4-4ccd-86da-17f19bca7c37",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "21fc5323-e1c6-4c00-a48d-0d1eac42e4d8"
        },
        "item": {
          "id": "6a9b0701-d0cd-404a-b40b-53f1647bae4e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2ba41054-61af-4afd-9ec8-e4b5c21f0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4cb424-99fc-452d-b5e8-a46a923df690",
        "cursor": {
          "ref": "6700365c-3f51-4454-aa2a-0b6b11c18fed",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7339bad2-80ba-4e65-93e2-28ea128864ff"
        },
        "item": {
          "id": "6a4cb424-99fc-452d-b5e8-a46a923df690",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d206c3f3-6cce-41e6-8aff-0b097107abc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ddb30-2043-427a-999e-ec47c9156460",
        "cursor": {
          "ref": "06ff0f25-88c2-4363-b309-d9ae74170586",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "668f8861-8052-40d5-8fab-0b1c4f7e902c"
        },
        "item": {
          "id": "263ddb30-2043-427a-999e-ec47c9156460",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "725e5f3f-6298-4229-be3b-85b3bc07990b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d17c95-5fec-461f-b955-b97b3bb4f6c0",
        "cursor": {
          "ref": "5979f7ce-585b-43a9-9e7c-542e744a6d89",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6c3d73c6-11fc-488a-be09-07b58489435d"
        },
        "item": {
          "id": "21d17c95-5fec-461f-b955-b97b3bb4f6c0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1cfc19a3-e5a9-48c2-99c4-f72e9787fa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fa8dd0-707b-4601-9309-da41acc6522d",
        "cursor": {
          "ref": "dcf35935-dcae-464f-84d7-9efa096c369e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ec4121ac-c4c3-4146-9dfc-937df6252064"
        },
        "item": {
          "id": "d1fa8dd0-707b-4601-9309-da41acc6522d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a23ac246-3f1a-46e1-90b6-34ee21558ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbe20b1-9f37-4776-9af0-a619e30df505",
        "cursor": {
          "ref": "b69b624b-a7c5-4c8d-bb33-209cced8745a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f1e6de53-0cc7-47af-aac2-4ea232fc8aee"
        },
        "item": {
          "id": "dcbe20b1-9f37-4776-9af0-a619e30df505",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d79a7c6d-9b19-4a3b-8931-005909102cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc205e-adec-41ea-82ce-c42e3c3b3b6c",
        "cursor": {
          "ref": "2fb4a9cf-963f-4f18-bfcc-6073e81ae9a7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d03f78df-d9f4-4f03-b338-1116a71a2a3f"
        },
        "item": {
          "id": "19dc205e-adec-41ea-82ce-c42e3c3b3b6c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "89e314e8-eae5-47dd-9276-b0ae80fe3b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54391ae7-106f-40a9-a5c4-718419e54143",
        "cursor": {
          "ref": "e01369c7-e8b8-449a-baf5-8a26f3dd38b1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89d5cec0-c07d-4f13-acf2-190912372510"
        },
        "item": {
          "id": "54391ae7-106f-40a9-a5c4-718419e54143",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "43adc761-68e9-4762-b179-7d8510bcaf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5583cd-06b7-44de-a42b-0507af63b20d",
        "cursor": {
          "ref": "656109c1-1cab-47ab-995f-f55f898ac4c2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "918ccbf3-53bb-4e69-ac30-867375f04141"
        },
        "item": {
          "id": "5d5583cd-06b7-44de-a42b-0507af63b20d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f96bb1d1-79d6-42da-be39-02552150b389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b65bc7-b8fc-4715-ae28-322f2848aff7",
        "cursor": {
          "ref": "e382ce19-e9be-42e5-83a5-657723c018e4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8eee67c8-8573-4ff9-8024-9a2599f6a277"
        },
        "item": {
          "id": "d6b65bc7-b8fc-4715-ae28-322f2848aff7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "aa72ab66-01c9-40b7-a833-4de220593a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7471adc3-f96a-47ec-bdbf-6ec4ab52cfe1",
        "cursor": {
          "ref": "458d6987-54bf-4736-8d69-954298855912",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "15f100d9-16f9-4eac-b469-19e4f917643f"
        },
        "item": {
          "id": "7471adc3-f96a-47ec-bdbf-6ec4ab52cfe1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "36e83d96-8c0b-4bf9-b395-019f7ca5d3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31089380-d2f1-489d-b27a-95a0dbc75a96",
        "cursor": {
          "ref": "499aea26-d358-42c1-84fe-570daeeceab1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1937ae5e-29d1-4df8-87d1-1bda1388c489"
        },
        "item": {
          "id": "31089380-d2f1-489d-b27a-95a0dbc75a96",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "209c3309-0d95-4c7b-81b5-859a6f2699ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1780d1c-8caa-401f-a251-fe67b1fcd100",
        "cursor": {
          "ref": "bd55cb7a-6064-4e2e-b4e9-c76366b9eb65",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6ffaa3ca-4ff0-42fc-a754-730fecfc5f56"
        },
        "item": {
          "id": "f1780d1c-8caa-401f-a251-fe67b1fcd100",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "97fb4d92-9cb1-41f3-bbe5-8d01d4edba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d38499-932d-4f0b-8623-71e91a870542",
        "cursor": {
          "ref": "b81e37b7-6d3a-458d-8149-aef85ab3bdb2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4d1bf380-c442-470b-830a-ca4046f6c18d"
        },
        "item": {
          "id": "c3d38499-932d-4f0b-8623-71e91a870542",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4822ae83-6f52-4a75-8aa6-fd49fab0b772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cfbd8f-aaa3-428b-9a10-ecbb7653ce98",
        "cursor": {
          "ref": "1d7b0ab3-21ab-405b-abb7-4865e047c3ea",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3ec2865a-fb2a-45f0-9f93-930085109563"
        },
        "item": {
          "id": "31cfbd8f-aaa3-428b-9a10-ecbb7653ce98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2305e4dc-027e-492f-83d6-76056b695d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a0b17-2bd6-46e9-8a07-3a74d104546e",
        "cursor": {
          "ref": "290efb86-f52f-44db-b175-6eecfb4a9d2a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff595074-44e5-49b7-8e8d-ba455a37a494"
        },
        "item": {
          "id": "892a0b17-2bd6-46e9-8a07-3a74d104546e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4d65f013-5916-417b-b8e9-46bb9bee982c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8e9b43-7303-45ee-97e1-c54b0cc8c318",
        "cursor": {
          "ref": "9484b4a9-3b34-43dc-9cdc-e99f0fe2638b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a8449569-a260-4ddb-885b-ce5124994835"
        },
        "item": {
          "id": "1d8e9b43-7303-45ee-97e1-c54b0cc8c318",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eca9f16f-84aa-43fe-9ecc-15723a5feaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49211e97-f7aa-47bf-87e8-d70dd91a3036",
        "cursor": {
          "ref": "6d31ff35-6a86-4935-ac2e-908e74db7cb5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6654c97d-d4b6-4986-a925-99595e6038fd"
        },
        "item": {
          "id": "49211e97-f7aa-47bf-87e8-d70dd91a3036",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1c0c8450-b2d7-41c6-bd63-6da6df70b683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af8e29-e551-48d1-9974-a52073d374e6",
        "cursor": {
          "ref": "8baf38c8-0f1c-4bf2-9554-544e915a843e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cde4d7e3-1ba0-4408-93c4-5cd2a8677c2b"
        },
        "item": {
          "id": "13af8e29-e551-48d1-9974-a52073d374e6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9cefa437-9d10-4ec5-bd1a-4340ef0219fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253af8b7-efe6-44bd-b016-06b7e3c71133",
        "cursor": {
          "ref": "f301432b-3940-41c4-872a-17f62bd308e2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1a04fab7-b3a7-4525-be40-7c446c70623b"
        },
        "item": {
          "id": "253af8b7-efe6-44bd-b016-06b7e3c71133",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "815aa0b1-a46f-430b-8bba-9b5d878e87eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febc01b2-5790-4f2a-a25d-06819f8c8b67",
        "cursor": {
          "ref": "f4d5f883-3d04-43e3-870b-b15332c23c99",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a59010d6-0e41-4efb-98d5-187bd8591425"
        },
        "item": {
          "id": "febc01b2-5790-4f2a-a25d-06819f8c8b67",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "952719ac-dcf2-402b-81c6-018091f8aaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838004e2-9379-4b00-9de4-f00bbcd066be",
        "cursor": {
          "ref": "660975a1-d76b-4db3-8b3f-e2be0c31e96c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "36e93868-8562-4541-b7ca-c605a0f1db89"
        },
        "item": {
          "id": "838004e2-9379-4b00-9de4-f00bbcd066be",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "38bc338f-b164-458d-a626-0044e0e272e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a433a-6145-4955-9bfa-4ea06517835c",
        "cursor": {
          "ref": "96f6df27-b34c-45c7-964d-22fbeff9ef3a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3dd92df-c0a7-4e31-9157-4ee729ad4257"
        },
        "item": {
          "id": "7f8a433a-6145-4955-9bfa-4ea06517835c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a424fcc4-10f8-48e7-95b8-720715382e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16778785-207b-4d7a-8deb-abd9be753a8a",
        "cursor": {
          "ref": "35cc6a43-abdc-4ded-8695-f582fb1acd34",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "07f44f6e-22e0-42b4-af8e-439250536c09"
        },
        "item": {
          "id": "16778785-207b-4d7a-8deb-abd9be753a8a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b757100e-aecf-47eb-b6e0-6f08165ba894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4c5d7-428c-44ec-b119-f907a3def8b1",
        "cursor": {
          "ref": "a3c2df4e-506d-4b91-9111-ce0ac2d06617",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0124935f-d0eb-4e0a-b893-f963b53d7ad1"
        },
        "item": {
          "id": "edf4c5d7-428c-44ec-b119-f907a3def8b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "906ddfe9-2087-4394-9aac-6bc77a901f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908e2300-5734-409c-9bb4-c22b1a10772c",
        "cursor": {
          "ref": "84157722-9750-4e81-9f69-68dcca16473b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3204032b-564b-4be0-a06a-2d8c09c4aecc"
        },
        "item": {
          "id": "908e2300-5734-409c-9bb4-c22b1a10772c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bd2984f1-65b0-4c97-a8cd-59bd46326989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d18c5bf-a571-4311-b291-bfb1500b98e2",
        "cursor": {
          "ref": "ace4cde1-f85f-4064-94ec-088a7d27116a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "74fc053a-a7dc-427e-879f-859af7487bdf"
        },
        "item": {
          "id": "4d18c5bf-a571-4311-b291-bfb1500b98e2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1f21e391-64b1-48a8-9280-52cac6258d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2801764-560b-4ae1-a436-f45d038a325e",
        "cursor": {
          "ref": "b5eff406-5f3e-45f7-acab-4d6ec02fa840",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfdb3a09-50b4-4488-8e9b-cc9b61b2b1e7"
        },
        "item": {
          "id": "e2801764-560b-4ae1-a436-f45d038a325e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "794dbcad-01cc-450e-9854-c7664413ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca17f5-7323-455b-a282-2885c98b8c4a",
        "cursor": {
          "ref": "d761181d-e9f2-4d70-a408-19bf53f6413c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d3dabaa-8935-4018-98ef-a465b3279cee"
        },
        "item": {
          "id": "a1ca17f5-7323-455b-a282-2885c98b8c4a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "296337b8-c78d-4507-be42-cc4bd12651e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a22b7-b030-4f21-9e34-9156ee0a9874",
        "cursor": {
          "ref": "a084e481-6b4b-4e68-9230-b701643a6a6c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b682ebe8-b8f9-43b1-a088-ca2a647a6c98"
        },
        "item": {
          "id": "1e6a22b7-b030-4f21-9e34-9156ee0a9874",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5103116d-c1bf-42a0-887d-5bdbd110d335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2154baf6-28bc-4562-9dc9-ce3dca1dcf0b",
        "cursor": {
          "ref": "dc03c938-0dc6-479d-aa2a-1b8e3cce36b6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "18123c6c-c5c3-4175-bb0c-bb5905565183"
        },
        "item": {
          "id": "2154baf6-28bc-4562-9dc9-ce3dca1dcf0b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "906b99bf-5623-420a-98cd-35e97f6cd53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda5f98-38ef-4eee-81bf-7e6b37e6a105",
        "cursor": {
          "ref": "6032e10d-7d03-4426-bd6f-3c614c31e4fa",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ed5457ac-4745-462d-bf4d-5ba5163de4da"
        },
        "item": {
          "id": "7dda5f98-38ef-4eee-81bf-7e6b37e6a105",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "86d8c4fc-7719-4822-ac80-67004bfe6141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ae603-2ed7-45c3-b35d-ed21a7a153b5",
        "cursor": {
          "ref": "baa016fd-a95e-4fda-8462-16e40e1d8d14",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fbf633c-9d0d-4df4-8082-cba750a99c10"
        },
        "item": {
          "id": "5b6ae603-2ed7-45c3-b35d-ed21a7a153b5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "33db8692-0407-40b6-83d8-bad1a66f514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f947e8c8-a0c6-4136-acac-1e79bb3fc1a3",
        "cursor": {
          "ref": "13658142-9043-4358-b16b-411503ccd252",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "90a8930a-e5e3-422e-a81d-e7b3adee2988"
        },
        "item": {
          "id": "f947e8c8-a0c6-4136-acac-1e79bb3fc1a3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0f0cdfa2-8b0a-4ca1-8760-cbec535a754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d05dc-050d-4c18-9cad-cd1429197532",
        "cursor": {
          "ref": "81474969-53dc-4666-bd02-89fea6d847f0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c9cf0e72-5d49-4027-9b9a-359b1fc49102"
        },
        "item": {
          "id": "1c8d05dc-050d-4c18-9cad-cd1429197532",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d6b0d07e-c9e8-40b0-aa6b-09b8d1e19475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b406e95e-488e-4886-8c0d-ead54fbe3f41",
        "cursor": {
          "ref": "b3dc0e7e-d2d1-48bc-8eec-750a145a39e3",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c7f941d6-4a12-4096-a14b-4ddbc4e2f618"
        },
        "item": {
          "id": "b406e95e-488e-4886-8c0d-ead54fbe3f41",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "780c7cb1-5aca-471b-9d03-d43bcaeb5334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3dd787-e594-4789-9039-3570e9a35f20",
        "cursor": {
          "ref": "757a05c2-a1c7-4341-95a7-27d3899e19b6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "de346b47-59be-489d-afdd-e6082df36781"
        },
        "item": {
          "id": "3a3dd787-e594-4789-9039-3570e9a35f20",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "20fd2cd5-d9e6-41ed-a4f9-e8607c024b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc7aedf-f167-4a1f-adce-c8e82408a31c",
        "cursor": {
          "ref": "935e65ac-7773-4cee-92c5-14f8e5fbbea4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5773ef15-58ae-4857-9317-b3af2d82d45e"
        },
        "item": {
          "id": "1cc7aedf-f167-4a1f-adce-c8e82408a31c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c1fbc8b-d55c-4a35-bd45-948c03c6c13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd22771-9023-4ced-a706-7a8ce338c5bd",
        "cursor": {
          "ref": "468d171b-0dc5-4931-9fd2-fad0728b67e6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "940cb0cf-5aab-4805-9c87-d001ec84a264"
        },
        "item": {
          "id": "acd22771-9023-4ced-a706-7a8ce338c5bd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "534a8791-797a-4c22-8a0e-5789827474cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae12d646-183e-4ff9-b5ae-ed704f759df3",
        "cursor": {
          "ref": "b114319a-6f53-4252-8faa-4325e61e07e3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bc39cfdd-1dd0-4e3d-84b5-02879e749a47"
        },
        "item": {
          "id": "ae12d646-183e-4ff9-b5ae-ed704f759df3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22f62ab7-ab99-4b2f-b4fa-c2a25e382f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2d867-b44c-4f8f-be9d-aa31fe142997",
        "cursor": {
          "ref": "a035e561-2644-4cfa-bb51-759fa1041f76",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e60392a8-3dd4-4243-bb7f-85f8a07babdd"
        },
        "item": {
          "id": "76b2d867-b44c-4f8f-be9d-aa31fe142997",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9d516db-977b-473f-afa3-f292810aa231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f2845-10e3-4f23-b03e-4d02f46422fa",
        "cursor": {
          "ref": "584dfc3b-d294-4923-9842-049d0489a55e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d8354c43-8b76-467f-90ce-14d0fbb816a6"
        },
        "item": {
          "id": "4d4f2845-10e3-4f23-b03e-4d02f46422fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "642c3758-1b4a-4bf5-95af-ca12035853fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9d9457-b680-4cd2-8c12-2757386d6e9d",
        "cursor": {
          "ref": "97417720-6bdb-424d-8768-c433a7ac3a68",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d0aa3a0d-a102-4f30-93fd-4a328f7ca8c0"
        },
        "item": {
          "id": "6f9d9457-b680-4cd2-8c12-2757386d6e9d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e9c8d5a-e0fa-43fe-aee2-cbd833010877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74040b80-bb63-46e3-adc1-dc7519d4f518",
        "cursor": {
          "ref": "4bf95e13-d087-4d41-bf1d-cd0870e94388",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "19d03d76-2252-4bd8-97d1-b5a3f626faf8"
        },
        "item": {
          "id": "74040b80-bb63-46e3-adc1-dc7519d4f518",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0b07fa1f-4206-4063-bd54-b2dfc566cc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f9c867-593f-4f86-aa8a-c0feb6a2209b",
        "cursor": {
          "ref": "f3fcb279-ca9c-4ffb-845f-2d6711390343",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ee38c6b2-1851-45cb-bb9b-2420f1fa937d"
        },
        "item": {
          "id": "41f9c867-593f-4f86-aa8a-c0feb6a2209b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "36b91158-34a5-4e49-a711-09b7993dbb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba13428-b61e-4562-bba2-12e8d79aeffa",
        "cursor": {
          "ref": "77dca740-e3da-479f-a03e-bd841aed5dc8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "02d094a0-bdf1-4ba5-9cc7-4b58c643f3d2"
        },
        "item": {
          "id": "2ba13428-b61e-4562-bba2-12e8d79aeffa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fa7c33f5-ba74-4274-a19b-8fb835bff338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7240cf4-dd69-49b3-aec9-90728635813f",
        "cursor": {
          "ref": "1143f362-80d6-4761-8bc9-4f4acd592ef0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f576583a-4a71-4270-98a4-8d6c6cbe9567"
        },
        "item": {
          "id": "d7240cf4-dd69-49b3-aec9-90728635813f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e43cc8e5-a534-4663-bc76-68531eb79aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b8fc92-685f-47e6-a57d-d5f644fd5c66",
        "cursor": {
          "ref": "fbaf248d-c9fe-461e-ab82-d8a382fbeb19",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b73ff87c-7452-4ea5-9321-9e567ebedfbf"
        },
        "item": {
          "id": "86b8fc92-685f-47e6-a57d-d5f644fd5c66",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8673e9ca-2c7f-4b36-9a4d-4ac913e1e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1a7b6f-28fc-4075-9adf-f10c5b72f0de",
        "cursor": {
          "ref": "6b2c2bbf-1cd8-48bc-ae3f-cbce0a189765",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "20b87457-2ce8-456c-9aac-5da9c493e754"
        },
        "item": {
          "id": "4b1a7b6f-28fc-4075-9adf-f10c5b72f0de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9ec300eb-095c-489a-9482-4bcfa4cba16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d5c4cf-b60a-4dea-ace0-f47f33d99ed4",
        "cursor": {
          "ref": "3a3fa1a1-3891-4f68-ab53-e518c557ecfb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "22fec24b-5306-4799-9c76-8b5f159353a3"
        },
        "item": {
          "id": "c5d5c4cf-b60a-4dea-ace0-f47f33d99ed4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "acdc256c-f4b8-48b9-93d8-b297a5740050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa37768f-8601-4a48-a759-fd05ee60588b",
        "cursor": {
          "ref": "88cf9d16-68dd-4d0c-bb43-67b169dde9a5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "681960f8-942a-4998-90c0-17a2a4351104"
        },
        "item": {
          "id": "aa37768f-8601-4a48-a759-fd05ee60588b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c99e0c9e-f019-458b-a5b2-927f956d518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb61a9d-a21b-48dd-8160-23d832002ac6",
        "cursor": {
          "ref": "e4e9c2df-95b4-4194-9433-aba50d482078",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8a972a2d-c199-4d65-84a3-bac39e13b304"
        },
        "item": {
          "id": "ddb61a9d-a21b-48dd-8160-23d832002ac6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7b506d9c-c14f-46ef-af8f-d7eba872573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70695d2-3b9d-4c54-acaf-c35ededaed43",
        "cursor": {
          "ref": "03112943-c51f-406f-aa39-cbafa50cb030",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6f355aaa-f875-4c8a-be38-f2664e09c727"
        },
        "item": {
          "id": "f70695d2-3b9d-4c54-acaf-c35ededaed43",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c1c93c9a-462d-42c2-afe4-50b79a1f5805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb951b5-5451-4601-be69-b472e5a2ba7f",
        "cursor": {
          "ref": "6878a222-dc29-43e7-a9d9-17b96dbf7678",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1f4bc1c6-45e6-4613-9547-33abcdb1c33b"
        },
        "item": {
          "id": "ffb951b5-5451-4601-be69-b472e5a2ba7f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "58cb495d-3d9f-4801-9abc-0000f393f15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb367ea8-42b2-423c-afbb-a3a127a66401",
        "cursor": {
          "ref": "2021aebf-4ef0-43ee-add5-d8bc0ecf88bc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5a86fb15-7b94-4590-9e98-a7d84c86914f"
        },
        "item": {
          "id": "fb367ea8-42b2-423c-afbb-a3a127a66401",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f69f45ca-709b-47d8-bbfd-ea6163c6ade1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aed0821-fecc-48f5-8f5d-60c2e2cae208",
        "cursor": {
          "ref": "f2ce43a9-9ee2-4682-b776-b7a217d087b5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bc544092-4c8d-4bdd-b27d-208dbbeb1d6c"
        },
        "item": {
          "id": "1aed0821-fecc-48f5-8f5d-60c2e2cae208",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c5f074f9-f079-435b-b7ec-ead87ba27059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e2030d-5014-42a8-b80e-e11451a381b8",
        "cursor": {
          "ref": "0771d394-2307-4060-9d2e-ff01ebbf22a0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2221ba8b-2ddc-4301-9cbf-0590a3ca066d"
        },
        "item": {
          "id": "51e2030d-5014-42a8-b80e-e11451a381b8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b8c92ec6-8386-4a46-a869-6f41c6530b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745caee-1d2c-416b-bad1-5d7109c53863",
        "cursor": {
          "ref": "48eb6517-0842-494c-a196-7c85df7275f1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "77de2ac1-c612-4e14-aa5f-70ca4f919341"
        },
        "item": {
          "id": "2745caee-1d2c-416b-bad1-5d7109c53863",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "270ce89c-8e0e-4c9e-90b9-7f27226b462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c352c04-5be5-407d-89f2-305731a1ab2a",
        "cursor": {
          "ref": "f4d254ee-a0c0-4abb-9020-1d55471df5c5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9857404-1f58-4635-8f29-16ab51cb0c13"
        },
        "item": {
          "id": "2c352c04-5be5-407d-89f2-305731a1ab2a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f414a54b-c7af-421c-9164-a99aa167edcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e923bf9f-08ef-4b66-bb6f-74f368d67805",
        "cursor": {
          "ref": "3233f1a3-a40f-4498-a248-ccb8598a600d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2a71c013-6fb2-4b8f-8ca4-ebf9928da8ea"
        },
        "item": {
          "id": "e923bf9f-08ef-4b66-bb6f-74f368d67805",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "51ffe783-7d2a-4c8c-8bf9-7a06372c9ba3",
          "status": "OK",
          "code": 200,
          "responseTime": 166,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca078b8c-6649-4afc-9478-6b0cc3c74f01",
        "cursor": {
          "ref": "528698c2-fcb8-43b9-a850-2a02aef98452",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "77ee243c-1878-4641-a0ca-1b8341306daa"
        },
        "item": {
          "id": "ca078b8c-6649-4afc-9478-6b0cc3c74f01",
          "name": "credentials_verify"
        },
        "response": {
          "id": "619b320e-ffa6-435d-908e-e46bba893078",
          "status": "OK",
          "code": 200,
          "responseTime": 1326,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aaba88-c1d6-463d-ad0f-08c776019f4a",
        "cursor": {
          "ref": "b837674c-9ae8-4c75-ba13-4ddf62ea84bc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d55f59b9-2139-4d94-b1a8-6bc80f354b46"
        },
        "item": {
          "id": "65aaba88-c1d6-463d-ad0f-08c776019f4a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "70fcd991-8b64-47c4-b0e0-715f6fbd4c4a",
          "status": "OK",
          "code": 200,
          "responseTime": 1782,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd08eb0-eea2-4f15-b01d-152dd44ca4d7",
        "cursor": {
          "ref": "959395ae-7e84-400d-ab8b-99ba602782d9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4190a093-d11d-43a3-8e93-198b10eb964d"
        },
        "item": {
          "id": "8dd08eb0-eea2-4f15-b01d-152dd44ca4d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed524655-0c51-4114-b189-09c205a26f8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd08eb0-eea2-4f15-b01d-152dd44ca4d7",
        "cursor": {
          "ref": "959395ae-7e84-400d-ab8b-99ba602782d9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4190a093-d11d-43a3-8e93-198b10eb964d"
        },
        "item": {
          "id": "8dd08eb0-eea2-4f15-b01d-152dd44ca4d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed524655-0c51-4114-b189-09c205a26f8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e8de5-7e2d-4f28-9d8c-7866e3af93b2",
        "cursor": {
          "ref": "22fc6ca4-4b09-4198-9469-6a19f2ab4717",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5630cfe0-993e-4360-81a6-a59602760c70"
        },
        "item": {
          "id": "671e8de5-7e2d-4f28-9d8c-7866e3af93b2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0be16a10-51b7-4260-b3da-601a1e6ca1b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d709c9da-c8b8-48a2-8b7e-0f530e16f6d6",
        "cursor": {
          "ref": "499b460b-6603-436e-b420-b141f38c564f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fe94d5f0-a153-43f3-bed7-332acc6cf769"
        },
        "item": {
          "id": "d709c9da-c8b8-48a2-8b7e-0f530e16f6d6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83de66bf-85e7-40ee-b45b-db770d97d6d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}