{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "39a42a25-f697-41f2-a84d-9f77810bafea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "47f064cd-089c-4cfc-b9fb-23441a903e9a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "102154f1-32b0-4a31-b983-9f5639c37503",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "674d2b86-7212-4bd4-9c7f-a3f510ad0a8b"
                }
              }
            ]
          },
          {
            "id": "9ffb7bcc-14c4-4507-a1a9-a61a5d8a5fcf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b48ea450-dfa0-4fd7-be30-d339e220f78a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "82dc5f30-a846-40c7-8654-f8099cb1a3c4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f87c14f-530b-4f80-b3f9-537f73251a89",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9e94bfed-3d44-497c-a30d-b98294426ebb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e4eb620-0cce-4a31-8165-7dcc18c1cc4a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54e15824-3b4f-4e82-8c8b-b6d6e7e4c591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db2ce303-ffba-407e-af20-59f68dd81132"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "451c2fa1-c397-4573-b238-d775c35f5061",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6739f74-3cc7-4607-bb0f-144a91c13f92"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15be46dc-05af-4ca0-9a3c-b38008c1a9a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5994e2e4-baf7-46c9-b4ad-c82ae48761b4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b35249f5-f8ce-441a-9670-255a67cba29b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ad2d77f9-e9c6-4800-a2d4-4bb5d612702e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "804a7254-3bdb-4fef-81aa-c8aa755e3613",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fca1da2c-0017-46b5-8152-cc499448c750"
            }
          }
        ]
      },
      {
        "id": "9c70f719-a400-4d01-9624-48a2f2baf751",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "679bf718-1ca6-4e5c-8afc-034f6372d6fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2a1d0f9-7271-4f1a-8fd9-389a25d516c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13f4c4b8-1eb6-481c-96ef-39e762d27c2c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b6806a-e064-4eea-ab42-453946668ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae12cb5c-88ff-455e-96ee-eb18bd3aed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea6d8b3-2446-4c17-84e2-4d34604facd5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998528f8-3a7e-4025-9d12-8c754dcf3213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fb14e5f-c085-4cd7-b6cb-af0ae111c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7791ef6-98f8-451e-a589-c509cc9221aa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86201fec-ed43-4c31-8d1f-6553bf8094d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a12f361-81ef-4d9e-aa5a-a7796f777f47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fc1f9fa-8833-434a-8ebb-502f8ad44bce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32f12adf-4379-464c-979f-da5484d6358c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a1229d-2ef5-47cb-b610-f310ea29f000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5d0d462-5465-4482-937a-d6606956ce3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688187f5-f413-4bce-bac4-797a64904ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9e59da-c3c7-4c2c-bb82-a12957c0abf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a5f4ef-8024-4de4-b132-2054d36be919",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27626405-b7b8-4fce-9a85-1d721d65b607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5207a253-5f45-4b7f-a097-015a12c9e650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf6f47b-e9e3-4567-8435-c5a64ec27c14",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c39f6986-cac4-4669-b92d-d32f9b1dac35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0a5ab091-5b7a-43fd-a9d6-872fed9925fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c757754-fcde-4813-ae1c-7d3b3702fe13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cc4a271-4e82-4fb1-8481-b387a7a58abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c6e321d5-90d8-416f-94b7-195606d1c213"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48fb8658-9964-431a-8664-10ba4e26acf9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cfadd0dc-81ec-4df9-8668-5ea7ffa2e4ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5848b780-a982-4a7c-8052-137d7857151a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ee70214-be9d-4da3-a8f3-f53bfbd758d1"
            }
          }
        ]
      },
      {
        "id": "665ef028-d730-4523-861a-3cb8e7a23301",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5be8437c-b3d7-4afc-b6dc-a9b53e070f8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc7b7f15-3069-4680-b249-49297fb7f123",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b3ab471-4074-41fa-8dd4-0a1f9613e68d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3f714a-9f2b-472b-b139-b31bd62bd297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc295365-2573-491c-b1e3-5fd589fc84ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0949c641-5d15-447d-bb9c-9e49657ba5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e7d847d-bd3b-4d9b-b84c-d41370390b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdb78d1-e61b-4879-ba35-94bc6c5c5b08",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b903a3e0-3379-414e-beb6-1ec3c68ae6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9dd0bb-3c40-4601-bf4a-3753c635317a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35058ed-0667-44ab-a16b-136cbecff396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9a87746-5e3f-4ba7-90c6-8a404f2a7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c085035-5e87-4f8b-9d32-ed2cae256c68",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e5bd3-6546-46ed-af35-76b26b08ccb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851f865f-ae3d-4a04-84fa-a3b69795ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f54cf8b-4333-4060-a25e-403982f7ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21dc99a9-6e2c-454d-9f57-f61fcb327854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76da75a-567c-4604-92f0-d32ec7642189",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6a35df-4fb6-4873-922a-e51e35572746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb48721-685e-47aa-9593-ead7cabad100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ee6510-89f1-4f40-9a4c-5a6a04b7429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f10b8776-def8-4ffd-831a-f385dc5ee7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d2ac0b-635c-4a32-b36e-4eee63316ea7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc8fedf-75bf-485d-ba86-2b0865af7fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8303036b-f9a7-4e65-8a58-bb6e7beabe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac2c17-7fe0-4f2f-b207-6d2c08c9a2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da87adae-7fd3-4f08-942a-9fa4d781b4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af7dbc-8c11-4a6d-a1a1-67f3bc0d5550",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20e601f-fcc2-4c26-ad61-07176f727028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82708ec2-da7f-494d-9218-731b5484283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad51f8fa-eb8a-4a79-afc9-f4c08d51e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff777ce0-f917-448c-abbd-694fea656723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b333a9f7-969a-4e16-8782-7a7938e253de",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa102949-2b50-41e0-a053-03b79d13d288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484554af-63ca-4fe9-9f2f-2a20a4b971ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40b22c-131e-40fa-af94-dc0a414233df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c5590f0-0416-4ab8-9c8f-e53a2b84a551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3239f5de-c397-4e36-933a-c9dd43de2a26",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b4d181-d5b0-4bae-8260-5e77212af753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a425828-2979-43e1-bb79-500b13f5cb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabafb54-1484-4438-9693-6f506261020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62711fd2-9bc3-42c0-ae3f-287fa7401235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06dd56-1d5e-4535-ba43-5a97fa405219",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc3ab98-ca91-4924-8cdf-8fbe82d9507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d4884-6ba8-49e8-ba68-20ca9ca3fa88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891ece3-329d-4dce-850b-808aecb7e0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35ab5fe-97d8-4da0-bc8c-87655fe562cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374ec301-e7b2-4603-ab35-0f73e5271504",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc55c6-4489-49fe-a6c0-635dac66a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cf5861-1203-4fa9-8fb0-606f3c8d9dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4488a76-0467-4790-b038-6a102c3868e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aeab61a-a2e9-4269-b958-6df3149c243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f40aae-bb8b-45b4-afc6-0ff5fed75efb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a816a1-20e6-4c56-9664-d6db16249151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47275e0b-5ed5-432f-a800-1c64b9e1eb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c53b90d-7c0a-4a20-8b00-15f0e9d7a412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5b16784-206d-45e0-a121-7b8a71f0a7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76104c68-ef62-4156-b98d-c7ee6c93b9cc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab69d1-b9af-4202-b909-d6e1c9d57100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f89a9c0-a54d-46b1-be2e-88f32cd7c81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe77138-9351-49dc-9b87-b9d2ea881170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09328a26-7f9b-4b6d-a536-e03f09a78a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f69629-72bc-407b-8b37-2eb426d4c042",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf96ef-0332-48cc-8502-d1d06a125141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a6a5f2-a429-4926-b29f-3a65d81e11c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef66e59-060c-4dd8-b57b-4dc34ee60bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b32f12f5-7c6e-4846-9a2b-d59d38276797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c5c005-f7e2-47f5-bad4-e72c63f3de51",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5d147d-01ee-410e-9378-27894f54b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c532477f-9d27-476d-aa9a-aeae7d9c0473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf93efb-5105-4a3c-9336-70e18e24c254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3a1da12-7303-45df-bb8a-81c45a4110e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9785b2d3-c821-4b0f-a821-b9ecf01b4538",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0419e55-9ffd-44bc-8d5c-39fbc75b60d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf56c74-92a9-42fb-826b-06a120dc8b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b99438-baf4-4add-83d2-92b5849806d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67358c0e-d6cc-40cc-b86c-1beb6bd30b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e824755-ee13-4211-a367-813741ce0e80",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a876929-b727-4772-88d5-b6213aaf16fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd512ee4-e48f-44f6-9387-4f54bc7db41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08c627a-da0d-40f3-aa43-ec2ab16fdcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1d5fa7a-ad19-4a66-9a47-47cc47f075dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a860b98e-0fa9-4654-afe7-52e798102e7c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f77118f-7fbf-41ce-b814-d989203af186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e15ded2-7285-4b5e-a2b9-f6816d9ed3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894fc6f6-16ff-4237-86db-05c3648b537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d5ba64-4ee1-41b6-b474-47bd090332aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d140bc5-e50d-4a65-a6f3-632ab7db17b6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493b879a-a780-429c-b046-77bce2050cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5524ceef-b061-4111-9698-f98d724fe522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f385acc6-26c9-44e9-b776-241300f8ea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c0f3d0-cfaa-41aa-b89c-01fdeed5e873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1bf43b-abef-4d18-9809-b585c3cc7ec3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb5e1f4-edf9-4268-b01b-fcd3bf5e39f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4a55f8-f0a0-4f56-bb45-cf01362dfb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4b52a-54ef-4297-9277-56c917a53a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16275df2-3e90-4b65-8455-34cc2d3924ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a227a9-9544-45b7-a985-0c2219d01407",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff0b7b0-e2be-4480-97e4-a3da1063da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7026c0-8f35-4d1b-be09-8d728f744281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fee5602-cf87-45fe-b54c-39927fad4fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca93b7b-807f-4fa4-a568-7c6b7c5bbbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7028edab-50cd-40d9-817c-354dfe300d12",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de2cebd-ea77-447f-8b05-5719529c3682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7a4605-5f5c-4767-a4a4-54f5c5607268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5dfe0e-2746-4a16-bdf8-776fafa4092b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24aff8e-6681-4c65-85f9-6592b79cdb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28427af-f158-4fae-b3a9-8fd5cec39185",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a87d1-7607-44df-a58e-9e0881c68943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a686e7-23c4-4320-adb8-ce8798d2f104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5642adbb-af77-4263-bf94-dcccc9b5d04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d93d3a-a36d-42d3-acb1-5dcd3f1d57bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2c9fea-44fb-4f4c-b9ac-6eb1d1479c86",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1976ea-0b47-49e9-b973-d04ee5a64258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3020b0fd-46b6-4ed2-9c69-4989a2e09bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cd25a8-ae7e-4a93-b5d2-b0375eb9a477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9f60a1-3b52-49a1-b14f-de87cb7f521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6ea5f-c827-42f9-96bb-5fecb12b1d24",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e36abe-e962-4786-8d09-8935c22d9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d2ac9f-6669-4761-8b3f-7f3eeeb6ffb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f76c4d-2499-49b3-ac8d-5ef7a95b1e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14df654-b692-4af9-9367-dd3173a6bcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2430ab9-7e70-4450-80ba-ebf67107720e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005545e3-ff00-415a-a511-8913878029bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f4730-41b4-46a5-90cb-1f9123bcf6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df42d549-f60c-4d05-bf52-228959670b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdef4cbc-f62f-4657-b22c-4e278d7c41eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405e0b93-d4b9-4aa2-b25c-13c8fe564ef3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad250e68-506c-4cdf-b481-8428cee35dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5e8c58-0735-44ee-a213-8571d6647bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92882028-fe92-44b2-abff-b57d901145ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaf7cb5-9a29-47db-8431-126d447e5e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01564e72-4c8c-4e35-b3aa-c27950deac2c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893edf41-2d9f-47ef-a006-1b68da15ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e16aad4-7de3-4b2a-adde-113656c46a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d3b4e2-1607-4bac-80e9-f264924e102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04494fc3-19de-4c75-8578-1d2db6ec021a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c61712-f44f-4088-97c9-c00c27993e51",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad5b6e0-ec74-4da5-a22b-ad4e6f32e5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5c48d1-1b82-49f5-ac22-aef2b535605a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9d3307-f403-44b5-b085-301ed0df29b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d11797-cb25-4a20-83b4-0cab3bdfcc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca8349-eee0-4d9a-9a1f-d25a3451b788",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c09df-87bc-4e17-86c6-e097e8b4fc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71033be6-3227-452a-bdba-6c8128a7a4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d801cd-f932-4994-92c4-1b5f67de4b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de985faa-9df6-4063-8c2b-5e88a5980608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff954417-2dea-46c9-b52a-fe9015edceed",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1e320b-30b3-470e-8a99-850618968928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ce63f8-1c04-4d06-b676-6722e0723724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf860c1-81fb-41fc-b371-9119ddfcd50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7381df9-c4b6-4025-b602-5f520f245bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd17325-c7d9-4620-a1b3-cb4b11b48c60",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7baa44-b47a-43bd-9315-261978c5e151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e3c444-3a20-475c-ae83-9b93ee750258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7778494-e8c3-4d99-8cda-f6faaca38952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "837e545a-7dd4-4142-8cad-2cdf4d0bd96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619e50a5-7d0d-4120-966c-ad4c9ddb1f7d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95db742-dbf9-4680-b98a-5f188d2ca83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0f84a1-6b5d-43d9-87d7-28f01b60d94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b244ef-00a6-4949-b0bd-36ee8c5d28b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d11d04d-926a-4745-92af-f1d06592f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd51b9b7-9436-4c35-b170-8c6bdd52a557",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee3c81c-3d18-4846-aefa-cf2e2117741b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8fd99b-981b-4e47-9b5b-5c452d4b3264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2837eb4f-11f2-44c4-95a4-8ed71cd68346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1241b9c7-27c4-484c-9543-b23fc608c618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fb407b-ba98-4d24-88af-15cb7623e5a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0083beab-30bb-443a-b189-c8a358bc872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edac14e9-d412-4179-86eb-9cc6c0eef4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc5f21a-fcbb-4cf9-97f3-8ab9972629f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cc666c-fe97-4462-8fd9-7a82b04c9dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548a40a3-5237-45f5-80e5-831c9ee07a94",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109f626f-5035-48fe-a1a2-16d7bc5652fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4392b3a0-64e2-4e6a-bbf7-142355ca28d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae049086-dc23-442c-bb8e-5652d95f7807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad92a8c-6c53-4b24-94c5-23afce3054b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51018014-fd38-4ee6-96d4-76cbfab19c2e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6830580-1009-4863-8d39-6e7e6066936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69d2fc99-9280-46b4-ada9-927eff13a615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c966dd8-76f9-453d-aca6-ad6a9196ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b75c8e4-710c-48e5-9122-e8cce7aed605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a648fc-42c9-4e95-beb2-dcc49217f4b1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a6e529-cafd-41f4-8a47-5a83a781c926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc55b73e-76bb-4795-ba35-c11af963e66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add0021c-2312-486b-a834-f013371a85a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7098669-f973-4a08-b44c-665ad354049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59696a8b-3321-4b66-aa8a-c7789bcfa761",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c49c1-d100-465d-b393-dc6689aaa6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfc733e-d873-48d0-8068-eb8490cd5618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23591c14-d89b-47f1-ba11-07c630bd0eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d98986ed-a2ef-4e08-9cbb-cf935b296bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfab3ab9-8168-4e21-b239-136c04af3a60",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fe5ea4-a6e6-47f0-8e0b-d26108939788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eb0372-8c2b-4e9b-8deb-6501b807b7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfd5146-c400-4805-bfc2-7203895623a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbceac3e-f732-4e15-b46d-7f0d96e31673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d3b96-95c0-4f0d-adfd-ea275f799543",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80314919-1d76-4381-8e98-33629657e79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952a226a-afab-4b48-a9cf-f41b9593ddd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ef8de3-db6e-4d07-8376-932d2bc56afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "870c78d9-6bf6-44cc-804d-bc7af11b4bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9509f3e9-cf78-4391-944b-99f076e83442",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7746ac0-67fd-446b-8ca0-a98bd21fc59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c69745e-57d8-4692-a285-78d16b98feed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7fb061-b3f2-4fd5-8f91-a2870407fe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04262763-2f0a-4697-91bf-d831b6d0e75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d3e4e-7bc8-4193-8e62-49b3db252e28",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06629d1-0840-4538-abfe-7cf93a0da263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfec3b8-ec5a-4c63-a6e6-8a3030083a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27765911-af6b-4d63-ad15-10980bc0c969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7855d4-30a2-4955-8872-357d8c651fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602162a2-ad4c-44e0-98f3-2ba721d5418b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9615a555-978b-4e58-b737-15b3b6a34625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb1bed8-0fcf-4d03-a841-24ce66b65d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8157e12-2703-48df-a28f-07eded9fa59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d0e9c7-79bd-4b8f-b16b-0228541debb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706ddc10-4448-4237-b9dc-5d4bd5f68c78",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320ede93-3d9a-4fc1-b7c5-04d551e78626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8e7f39-8c13-451a-98b9-c90c50cf0ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838e210-5fb7-4399-80b9-2c69083af945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c70106eb-e9b5-448b-8d56-603c180e7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a549fc0d-fa08-407a-9e3c-78170b341d22",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9645eea2-a797-4478-8d62-eacb85a1c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d712ca-3e97-49fa-a1eb-72632f1d712f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2028d7-f6ee-4daf-a4bb-fe0805182340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f864dd3d-5bd0-4727-9ec7-515f90a5bccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8a6753-038b-4e23-9f3d-2261a817d4cf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4a1aa9-a7d3-4dc0-90db-ad2f0a9abaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8368ad-104d-4cf5-b673-f962e9227573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95be0526-388a-4f4b-a52b-5137463f89f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b20cdf-8e30-4a5a-a428-1ab502482bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c55e16e-033f-4de9-8d5c-c82d144b4411",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710d5974-3fcc-4335-a142-52e1c310a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53b91c6-1f24-4335-841c-ed9d420cab63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0884440-dc9a-43e7-ad7c-f9f0fd3be5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9473e034-0782-41c0-8d55-95f962d4a30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0d177c-ba6b-4f88-9f38-e8192a3afe7f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8ca2fa-d7ba-4006-883e-5b4929a69a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15cc9a0-3f41-4c08-94a1-e06c066a254c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95e690-dc1a-449f-b1a9-da1bb6852264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31998cb7-b95a-48f9-899b-3d51727f6e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaf4dc4-c78f-43ef-b70c-72dfbdc90be0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f79eca-6577-49f6-b1c6-0c6d266c9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258707c3-1e88-4b2a-905e-3c47c68343f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8972d0-2bce-40c1-8525-909aafbe6cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ca0867-aa17-4f1a-802a-b28396712f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88db55e3-b22d-4cc8-9e38-4e10d8a0c303",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5595738-a73b-4afe-b67d-7d1d7d91a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf5333c-0e6b-43c7-aefc-042b53bf3bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22041c92-2964-4895-8162-df1c542b5cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a31988d6-b5a7-4ac7-87f8-f977e67f2172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b1b65b-7e8d-4608-a0ee-85a39704697e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78ccb4f-be46-4bfe-9290-c8a6a842fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b465ea67-0f1f-4c21-aebc-c92081af4f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ceedc3-94ae-429d-b7f7-4cf8edf0b35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e4bda3-411c-4f34-afaa-9ef5c43dc12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e9bdc6-95f2-4764-8b78-5c16d821e494",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec01a48-91a5-4821-b11d-98671e89c28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7d7530-7eb8-4489-ab67-4fc3850ae690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcdf1d3-b49a-4e05-ac29-def803b5fd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0023cd-f340-4ee3-b266-04be1b31653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c7cf7-7af3-4815-91ab-fed7c5f39e04",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28db539-e73a-4a8c-b011-c45161966aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf94623-9044-4354-8a3f-316137e3b6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4afa408-c677-4a58-a5ac-eb1d9da8c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6249c722-a86b-49e5-bfb0-29b47b2bd3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de808e22-f34c-44dd-ab51-53715d1bb572",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b73bdb-370c-4829-8ef5-2bf739853661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f363cb2f-d7fe-485b-9b73-511a3ae5bddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f01433-b99c-44f5-9893-c6242cb8ba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "635a43ff-05b5-4ad2-bbfc-15c680dfc9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff4a628-8a8e-482d-aadc-94d1ea2b4245",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1096662b-9030-4417-8bd1-06abb44116ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a968b890-1544-42c7-a916-efac79b9560b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da498c14-983c-4204-b6a4-39ed98ff5757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1bbfba-4a95-4c98-92b1-2354a2c71c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5249ac85-58a8-498a-b6d1-a71f343e6741",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84d8404-86ed-43ce-b7b3-1cc90f54a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c59341f-7438-40e4-bbf5-f7bad0d305cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093ca708-6b9e-478e-b32c-4928ab5eab60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bed81fbc-fdc8-405f-a21a-6b02afdbeace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6281b654-9872-43e2-99fa-05511fc8d7cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063c926f-2cad-41ce-a901-ed7cd967273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def916d3-9146-4c7a-9008-def1c79fd91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a5dcb-f113-44cf-be94-eb2ad68fc338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb9e556-9c26-4f83-94ae-1be272bf0aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9d0c37-bce1-4b77-bdcf-aeece182079d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16cd072-aa93-41ea-bf49-fae6928494c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0c6c8f-cf2a-4f69-b899-517128d532c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c942cf-17f9-458a-9dc8-e27e692b876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "862841b6-6cef-47af-8901-b1b3a186114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb114f4-be44-477f-8f43-cc3f4e407ea8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4724e760-c6e5-484d-880e-4d473e7b0908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d941943-61bd-4054-a157-2bf4bcaf292b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185b1891-fb2d-424a-af54-626467a9729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39a3cb9-b6a5-48cf-b03c-f5a8cf8b8049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a728756f-8909-406a-bc3c-ce8b5dcb2bff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794fc22a-4699-42fc-92de-5ae0527d2a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7b9eec-c77e-4b11-a224-0df9f8234748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080cd8d-5675-461f-a345-88e3bec5f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c256f0bc-436f-44ab-a58c-0dfe015dd394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a937e5-d918-4c66-b9cf-f31557da6fc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f77d88e-6228-4853-a04a-d5e9daac4ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7318a6d5-535b-4e60-ac67-2509bc8141d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea450ae-d4e8-4e24-8a39-28eaf84a09dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc765d8-d500-4018-975c-d6496ed56b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b23b43-84d2-4975-b141-168534471794",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af94789-ca06-43b3-8ac3-ba6b682aee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613a635a-754e-4c32-b732-8f003a31f26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c440790-20c1-481e-bbbb-fbdc991b650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1564fee9-2cb1-4c61-9d9b-e3c1110b3cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a77b83-55d8-448d-bc5a-d25a27dff025",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e143aa6e-676b-4090-8496-ff5c7794a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb04972c-db6d-4f21-b00a-73dc95010930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7085aff-e996-4a69-bb64-59b921aa9275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72370509-1a19-4433-96c8-34c6d388ed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55437cd5-b3ca-4d07-b5ea-1e3ffed81f45",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748e5db9-8fc8-4f2a-8160-66299f38f411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4659e37c-8b91-42e3-a132-63a5366ad063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94084e7-ded4-42d3-8667-d2e40f9e2784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddd158c-e1a3-459b-bde6-c019ed58438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4646bb7-2b24-48cf-87bd-a13656ae32da",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe63a45f-7fb6-4063-9fd1-f521b67ee229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b41a85d-a579-4779-97d7-312d8acbf7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55720895-8466-4979-b931-f5f693382524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca3a63-30f9-475a-b6a8-43d59f2fa385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5cc115-c5ee-4a18-bc70-22ee31300458",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fbb071-8a2c-45da-a4dc-6ff9673e55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7f7f1a-df2f-41c3-9edc-3f9d475b34e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad0516b-0d52-4db6-9135-d018c6fc88c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a16648-242a-4620-b32d-2222e39285a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fee963-f919-4837-8dca-62eeaa827b5f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc8dd5-3927-4b5b-8899-2bfbfc5be811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493d8293-a0c2-49ed-92d9-ff0fbe977815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769390da-47e2-4784-8ff7-65861716a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f956d2d4-16a5-47ba-9891-268df4500571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300774f3-abf5-427f-9cdb-c13d9f10ec9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9627fb03-e3e2-4e4d-9219-a87492936a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72306074-c94f-4d84-9bfe-54a3b2e0044a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aa1d77-8e15-4b79-85cb-f6f42a73eed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13936e8b-9b1d-4562-858e-f65040bb98d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eb9a7d-5399-4c25-9e96-ea159c00fe10",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b0b8d1-3afc-4f66-8dc1-0477f192881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba00b5ec-c3c5-4777-80dd-3e0e863106b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce589177-67c2-4bf6-9b13-153f6862d83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5b6625-267e-4c03-a637-3f2de179b8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c11af3-9b57-489c-84d9-a19c9d64c2dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2ad1f-d8b2-4dc3-adb3-9eab5b30ff30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd7c41a-5926-4287-a64c-ef4e51eb8dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d9f7df-a0e2-4f5e-b009-185df602fccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "870690dd-ccc3-414a-aef8-54d9c555be08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bc7b2-c7d9-4bc3-a509-4650c470b104",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5e2cb-a131-4801-8a54-d6a4bd00b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba42012-af33-452d-820e-6997b9e3824e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3509ec26-cd12-4b45-b1d5-60c08f4bbf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18f5969a-adc6-45cf-9aa2-6c58bd64067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b51d66-206c-4568-a655-1e637280f13f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbe5f54-12dc-4406-b5cf-f5d1ec5524ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fff876b-efc9-4018-a308-688a48360890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a7ec4d-487d-476c-98e3-d3e70f817e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5efd26a8-ca31-4465-9a39-b5696ad33ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b474d6-f7e0-4c2f-8c4f-cdcb3ae863b1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac29a50-8fc8-48af-8f7b-d7cf4dd49741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e1ebd9-0548-436f-af5d-d449cbd34f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3546fb58-4c3e-44f8-80a8-218d0603e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a05fea2-a2c7-405d-a54e-af0716ade004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701eb668-42a4-42a3-89dc-e54bc8ed72d5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c6238-c18b-42bf-9710-8bd61b2a7ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394341d-5f25-4244-afa1-0e66156b6fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c0995c-ef07-4301-b579-6729905739ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c703368-0cec-469f-ae3a-ff29c0e15b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a94fd-0dce-4b2a-99b9-504a332c7b07",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb76e82c-b78b-4f3a-acd1-f95bc08920c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f40ae-f961-4850-96e5-1f2c0f8fd0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476db042-e505-4d23-9026-91ceb1281953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19096bd6-719d-463d-bcfc-d607cc55437f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e46fb4e-9678-41d9-a528-bc6602da6065",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de38080b-564b-496b-8dec-f623d238667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47868f0-8c9f-46a3-8665-29fe03905f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5290ae-0cc5-4cf7-99f5-2de6a9dee378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75559c7e-67d5-473d-8a92-e862099a6a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb09c65-5f6d-4600-be73-d331fe143917",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b562195-9413-44ba-b552-26c9abffef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f13f6e-2b6a-4bce-8dc2-455aac5d7648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40482bd-c9f9-4f1f-a993-61cc326cc604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fa3e1b-f59f-480d-a84f-4a9ff76343a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e25bda-99f9-4bff-b638-387242f1ffce",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb54a636-2a23-4e29-94c0-b309a77f1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065bbb70-e5b6-42e2-b5cc-a63942ebc3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a48d605-2f5b-4d47-ba4f-b83a65cd3b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3751eac4-142e-4d83-9927-2f06183b8966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f73e17-152c-42b9-8029-05838a02bd8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd22853-99da-466b-98a3-b3a4e6100c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342f7961-8ca2-436a-abfa-e3c20a6c8e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a508ed-b320-40d7-b911-9c3e7bd703a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1318cd70-b572-4e15-83e5-1830a77b6589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407afa74-5d5d-4f44-8387-88fb1726c04d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b1440a-232c-4a9a-8669-820b16e63b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12b0a97-fe27-4c52-ad2e-50497bc2f6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7630679b-b395-441c-bcc1-36231e29834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "786aac50-d4d1-4980-8185-ec495829db6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d0a7d-1dd7-4c4c-994b-de678eb56f9e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e3896f-0924-4950-9cfd-2b8be9754cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c781d106-ee81-4c68-b925-de5dc503d433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0501965-de22-4990-9063-60684995ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e615aace-7b11-410b-a79d-5966c7a11971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579546f-ce7c-4066-ad90-4538494e1254",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab12ff9-76db-45d0-90f5-6d668955ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98865f53-8576-4f8b-8449-b7c2f930350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937c8fd5-b754-4f5a-852a-fbdbc37785fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d4e9a8-e5d2-42c1-b02b-b714f7ea137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9814ef-c48d-473b-ac29-98a171ccb19d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c2872f-c6ef-4559-b1a5-3673ce648370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b22f019-f860-4b6a-9c04-d783ac3ced2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da008191-c4f6-4929-9506-4f5e6b5bd1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2981e674-8ed9-4a7d-98c2-8b1f311de2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0c8b78-6e09-4eb0-b07c-1826bc0d418f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f15719-9710-42fc-bf44-532537388085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20339e7f-f576-42a7-ba8e-49abcd56153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46438119-a5a4-4a17-88ea-ab83a93236f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4405eaa7-8abc-4968-b782-a86a6cb23e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158c1816-8d12-4c8b-a150-4defc0293d5b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bab502-d9ce-4c16-8f7a-29948cd7fdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d95a6c-6807-40c5-bc8d-c1f7bc5d8937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8672606-d879-4c54-9c93-e27b70a9a1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adf9b80e-11c3-405d-b6a1-487d3395dc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb7fa4d-5c99-4937-b26a-65caeb93c74d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb5500f-ee56-4226-bcd6-9882991ca839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b5cf03-a7f6-4d12-91e2-7a1901a05e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a97033-a502-4f40-b319-84895b18e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0293c29-76f3-44e2-99d6-0b3db68296fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f76559c-a0b4-4183-a9ed-0c8eab964a1d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13a57d-f410-45c5-a8fc-ef271deffd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ed0c42-bccd-4538-ad5a-b4e71565c824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a753087-a517-4270-b7f9-c134121ca7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51e5fea7-1cda-47d9-83d5-b54bd900e2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dbda2a-362e-4b79-adf5-5545830dbf44",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3e0636-e315-41e0-9ba4-620235ed8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbb0d5e-8abd-4403-b0e7-2d090d6dd2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee66757-e4da-4b44-b59e-12dcc0710bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a838b9f2-4f0f-44dd-9e0b-7d0fcfe512d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baff537-2c4d-461f-a5e4-668ae81509df",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925bc90d-e93d-4603-9c90-87c3ef152e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe43497-f434-4afe-995b-2139b6a96e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c9a272-b7d7-4431-83d3-662d1050e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca15f358-0a1c-41cf-ab2b-b968b8097075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baba78f-2172-433e-b34a-941473a27591",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7b2c7b-cedd-400f-a278-b122d13e0f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75401c97-8f5a-4a1d-a073-d3edac567728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5892c4c-fc29-4716-bd41-f909a613e512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25b4e1f0-19a0-4be1-90da-2efbf382da68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4885b0a8-220d-4389-bb73-887cc42e979f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a977d89-59e0-49b7-9b12-de154a7d5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8066dd4e-61d7-481c-82a0-ed6c87b84430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039c09c-ee9d-44cd-8a80-796b90f559df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "77f2fb3d-38ff-4e03-821d-63e9f2761f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fc31fd-286a-4482-91a3-3034eab02e1b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733bd957-6e95-4b59-a295-cc6f012f0001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c15ea64a-22b3-4725-be85-6ff7c6824ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9e3812-9082-4f89-a171-c84621f9192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b52b3372-1ad9-4e52-a122-9e594405ed6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b0d00c0-e6aa-40b3-b1e7-20efea9d1f40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbedf9e8-7316-4e90-90e5-4ff51276cbae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ed9474-8a28-4fa7-a1c8-aa18106b8587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a97bd854-6c6f-4b0d-988a-b1dca721a613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd4dc5d-ce14-4342-9cf6-291ae4b11a5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f706a2c-74da-4f86-b390-02b39d8c38cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ce87b4-3c96-4e5b-8799-f0e715451aaf",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0544c-7671-42e1-8ad2-3fba324454f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba4bfc08-fb25-4730-9cc7-7813414deb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6b272b-8359-4e2f-a301-794e992aa336",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0718c393-b8bb-4300-a4cb-13d91aba6216"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b490a13a-895d-490d-af4e-bfbfc10a098b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cef625d-129b-4b25-aa86-1d2f4715ec33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b65f4eac-0482-4d15-a4d2-81130d15693a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15e1cd0c-7f1d-4bba-8e3f-6c24808a38dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "668a9b72-f422-44a1-93aa-ad2f8972bcbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3aa9b52-04d0-4deb-bdf4-8b8d6dfd3995"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "986bb10f-3301-40f2-a37e-3cb550f87fe2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd656818-f618-4157-8e02-26d1793a6835"
                }
              }
            ]
          },
          {
            "id": "8ed59e9c-6019-436f-b96f-33da98d28e01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88594e94-ba4e-4eef-9fa9-14d252ea7ea0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69ae424f-8cd7-4519-bc2a-76ad379b50ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c54ce3f-a075-4e8c-8001-05c50dda319a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50b7a04e-08e5-4a78-afa2-de4111325641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26151bd0-a84d-4723-9a8f-12a325253341"
                    }
                  }
                ]
              },
              {
                "id": "24d9d9cf-4686-4fca-b7a3-0fd715cf13a7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b8f2dc1-bee1-43bf-93c2-95595d519dd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69c198f3-e768-46e9-a87a-961b8596b679"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f96470fa-d52d-47ab-ba2c-cb102998b6ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "082a27b5-a57a-4d12-9d89-2f4ac213c5ea"
                    }
                  }
                ]
              },
              {
                "id": "d3e2ee0d-b8f3-4d91-bda2-f1ab2623f642",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eba46a18-5b6a-43ac-9b53-169841426db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82916d86-f24f-4156-95d4-bf5970b36e46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ae7bcde-fb4d-418a-af4c-dcbe709eef30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e23de7d0-3a78-4313-96c3-553a27e5daeb"
                    }
                  }
                ]
              },
              {
                "id": "d626129c-0fe5-4afa-9811-e701c49c03b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67ef97f1-e348-4b6e-b4e3-622242de17ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d9bb0ec-675d-4671-aa9e-65e3081d8e19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b650558-51ff-4b04-bd72-3496babf2347",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e6bdc0df-e3a3-4880-b677-6651829c1e19"
                    }
                  }
                ]
              },
              {
                "id": "46c511aa-fc49-4ef3-a6f1-117a433f5159",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3632e6cf-304f-44ff-b6ff-b167073eaaea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97024526-eb10-4ec0-ac06-3bef261b5b02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fe1421d-474d-43ce-a725-a7156d60815a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "529b785d-55b0-43c2-9f40-7e8ec78e0493"
                    }
                  }
                ]
              },
              {
                "id": "2459f0af-e309-4c25-aee1-af58d6be9127",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b81f99b-9ada-4f6d-81b5-41361f3a9802",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09e18181-665a-46dc-8e23-4f86e6ffcc74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0af71e2-b144-40ba-9123-eccb1f672ed6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "803d775a-8168-476f-9a12-e38bfd0f6cb2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4ab8a73-dfee-40f7-b5da-b8b6540fa778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5ce8cb1-21c4-42b1-96de-3120bf364276"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03f9bb90-7256-424a-895f-df13aabbf083",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac2f6b32-710d-441c-82d7-9261ec8506e4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bed27d6-f4a4-4b47-9e6b-3fd58884c50d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0f4e4ff6-76fa-426c-9d0f-d1c000d6f0dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea644088-5585-4242-af28-d7ae3dbbcec8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "390137cf-9af6-432b-81a6-382af1e35f8e"
            }
          }
        ]
      },
      {
        "id": "ec252509-5106-4410-887a-387a325d49c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "73bf0152-7917-4527-8285-d10af67a05ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb74eb02-c0b2-4c21-993b-4f5782554f25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ea0a6e8-9272-43e5-89e5-aff4e5712747",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec6c40b-5f8c-4b8f-9c95-6a1efe78a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6dda38-45f0-4a38-901e-c5c08ba668bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da30bd74-4e60-47bc-b7a8-cca518df8ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ec945b-6eaf-416e-aafb-d18eb1c0ab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7899a7-d909-49d4-ab4d-842296e4e4fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf6883a-e1c2-4149-9f82-a6edb81604ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fedb637-2385-40a0-af4f-6e737d87c5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44f231f-ebb5-4ac6-bff4-1c6db9af6f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0e2376-3f07-4ad3-bdea-f2f89a1f34ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45fdf9c-46ba-4d19-bd6b-43b7d12358b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aed9177-67c3-4414-bc75-dc3174d18404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d649b9-2cfa-4019-aeb3-5ad8e0bddc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d983c-516a-4e69-b53c-695a468de526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47601553-ea6a-4a60-9d7d-9c5af6e145a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb38a3-651f-42dd-bf2d-85363ade5dea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c697f03f-3058-44c8-82f1-b31aa8445763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bee856-76c8-458c-bcb2-c34df6be8a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caec4d7-d5b0-4f2f-adf1-2a5639a4cebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "944da522-de73-4115-8528-c3e5addc5237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adac2f16-6e31-474f-b7ab-87a274bccf02",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f58029-d293-413b-9dc6-dd20ef7fd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ca5b8a-ae99-496b-8461-c94520205d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ae9e76-97ca-42eb-9248-88707616ccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5c5d11-59da-44e3-b63d-3c07174644b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f95c24a-efbf-474f-b06a-cea50586a547",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e091d-fae7-471f-9a74-4c1092b60481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a483c6-b9b6-47b1-be73-1f7dbf4c8194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc91563-4f9c-4f1f-a772-6113ed26e7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ff7aba-0e38-4122-87f4-6ec442397c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c105e59-6380-43c1-99b2-ab05a3771149",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f80dfa2-7222-4de9-a8d3-ff395dc5d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1814e570-e4fa-4ecb-819e-57676a924e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0619ff4-40de-4c67-93a5-90b452d5636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d037c3-bde7-4d50-b0e0-7c0bf9a091ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcd5b6f-43e0-4b1c-ac1a-4e684979662e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6443050c-a443-4bdd-bfe3-a7392b711ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46b7154-63de-4019-bb27-50582c8b35e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3826082e-6525-4aeb-bb09-c79f878cba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5511d5-1d04-4b2a-a66c-8edc53c2d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f84e06-7927-41bc-9c03-a137fd7918be",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345efe7e-6eae-491d-b861-f98fc34dca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55578cbf-1cb0-445c-9941-0e851138ea71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d635d-ddd3-4c99-abc8-b5c28f11b4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6276b8a1-73d8-4c44-acb9-ef4fd89dc5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3649066f-6119-4cde-946e-de41a4bdcaf9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a828c-879e-4ad5-b80b-bf604b4d915e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3bc9f2-1a61-4201-9b0b-c56724d306b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf26cf7-c945-4626-be97-e64e61f47818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6ef91d-1ea7-4de1-8995-2c8c9a3a416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656ebc4b-abff-4e8a-9dcf-190c790ca607",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50645c97-5446-4e0f-92ae-36419c9f3fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8afec7-8906-4a72-ac65-7db3cc3f2e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561b19f8-0113-4ed5-9287-80303a3f9cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bd22af57-b943-483c-959b-0b65fe0f2103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b954c-937a-45ed-acbe-120cc7f21bbc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc0b1bc-620d-4536-b215-7b638987d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03abf90-ac95-4d49-9f6d-f0b2c6c543a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb437834-1637-45ec-9271-05bc203940ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8acad0c-1bdb-424e-b413-70ae1e8fb01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32b0d78-8fce-430c-9108-10b07b7d2d6c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f07038-e59e-4ecd-863d-525e63ddc9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b19b466-600e-4279-bccb-aa537f5e4cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5234878-85de-470c-bcae-01bda4d51dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "305ceb4e-749b-49a2-a0fb-d1295806834a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec68213-f2ec-4b28-b0f2-0588df4c8ca3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb68e8-84ff-4129-a0b9-87444b53f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacfcb1a-a04a-4067-995d-600744e9b4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2070bf91-9bce-4869-993e-ed576f8c52f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccf5133-f580-493a-af1e-7114034ea6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e153a4b-0741-41b7-b99f-910237028017",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2154ee7-7dcf-4488-ae48-e77a368264bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b348b971-9a86-4d74-8252-bfc31478c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f04e5-9373-4edc-98d3-31a855d42e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "560ff480-b042-4b13-84aa-6e7b0a61c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25275426-cb55-47dd-b65f-bd1b43c614d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d1508a-1b90-4fb0-9097-18c9528f64db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c98317-3edb-42e9-8037-aac7237b4f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bad138-fce3-4496-b1f7-14a259c1f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fcc4ca-c5c4-4dd5-b11b-d515a7e76fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a100430-7584-4c7e-9eb2-526ba8342354",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baff08be-6464-4bbf-865e-c07638112a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73180814-ad36-446d-9096-864fb2e477d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e5d7b5-6a95-45a9-9867-e09d7fa24590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ec134a-e490-43c4-9ab1-341b648a3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64415b8-76cc-4a5a-bd8b-a1c5bb121769",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb8875e-4ac1-4ca9-b267-d75cf50dfd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee66e1b-af35-4a0d-9688-1bc524d2ad98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2046eeb-ecce-4bd1-a0f8-ad8b14abe352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3832d6ec-5708-4502-b7d9-fe73928a3c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6f1391-1af5-4a99-9aec-7b070ffb1a5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f7705f-fb36-41ef-bd49-03602d7492c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d5c322-4ff4-4629-80a2-5486364df747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f20e08-5e63-4e7d-b80e-1d774476b39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06aa58c-42b1-4c61-b4bc-b2fdfe2261fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834f6c6-9687-43e9-838d-99f166cdd953",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15eb64a2-ab46-4039-8244-f7bad24e278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e08f6e-82e5-457d-bdac-ac273ccf2228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e91475-9b20-42c6-ac48-790a90089151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f004a1-66fc-4c08-baee-78e90c1cd9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcdffa8-67d3-4175-adbc-2ea6fecdf001",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e77e12-3c00-4a1b-b007-3c8350bb5af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334049a6-d4e4-4c55-98eb-5981f78c3e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e660cfbd-343b-42aa-b96c-190fa5f2c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79707c10-ca62-49a2-b975-7834b9ab7e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae860b27-8e26-41bd-a156-68aefc54fb4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0328fc67-2832-45fc-99f3-fabd538ec86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13a7803-f333-48df-a8a1-0bd4997ca93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af31e606-0781-45de-9b1e-eb38a9acea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fecd684-5c3f-4656-a898-32a5266f61b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e437b-f29a-4297-a287-9820b48972ee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd988d7-b950-4d47-bce1-cafaa4d4262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427414e1-36cd-4419-b0d7-6509620a85ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f63a8f-9b55-4579-8c50-46b70b2d95d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56900469-30bc-4849-8493-87e3a9fdaf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cbed21-8326-4f0a-ac03-928a77ccaf9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7848a75-cd97-42bd-abfc-9fe296e530b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3fb911-778e-4869-b5fb-70ba32860c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c2d378-8877-4ae3-bcb0-ef8955371212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86831b37-7355-4d39-a2a1-eae5664cd840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d76d0c-770d-4620-b824-513733fed596",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383308b2-aef6-4011-b689-d4b356da92d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa2c1fa-2e6f-418d-81c4-c96c2c497912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e085d10-b8a2-4802-82a8-38729d64ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf20a940-11ae-41af-9cf4-30745ca2e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6198ae77-f7e0-449a-9bc4-c5e8127bf9d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d80a4c-6e18-4655-a9cc-d034ba5a8f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83554190-2518-4803-9b82-e0834a9de7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083fee3c-4d8f-4fc0-abb3-5d58d193034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "272b4f66-8734-4728-b399-cbd931bcd6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7916ea-1438-4f98-8c07-95dfa0fccffd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d09af-2a9a-4171-9b5c-78bdffce946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7239801f-b00c-4e94-a5be-20eb84ae735a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b639c045-bfce-42d2-9dda-c750f02aa0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff1b6ea-7c4d-426b-b1c5-1b4f61d50624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0444bc79-d673-4830-86e1-fa2fc1a49429",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506c1655-f9d1-4866-a90d-a92bf73961e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04827014-e8f7-4057-96f4-c1c8a6a3bf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b032d8e9-2540-454a-a2d9-8975c41904f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f69b3e-30bd-4cd6-b8c2-df41a1bdb965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76ec031-f191-49f3-911e-2162636f60df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e3ef8-7de0-4c45-a50e-d4d567b8f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3611299-2ae1-4b82-af5f-f19b2588373f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19841a2f-9127-4ec7-8f14-1cc10b8bd4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283a8109-e5b0-40c7-8f40-66c83e5a617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cb8b2c-ccd7-498a-a195-e60be1c29dd1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e46af3-5888-4557-a9b7-502b21f6afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40b459a-1509-432f-a544-b3b56bb368f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73391517-1d38-41bb-bf58-856fdc3a4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b04fd4f-7714-48a0-a41e-dfc96920d2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4262403-df81-475c-9c9a-6e717e6f06d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ec861-6d23-4104-a0fa-0dcde71582b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e777d68-28b2-4dd3-8edb-b73f9e5700f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755f8969-77a8-4be2-9faa-4af5b89434f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef9f090-2ff6-44f1-8bd9-a3d6574d2fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0c42e-db58-413b-9bb8-072f3f6fbfb1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e6faf2-80e1-421a-8c53-acdc2214297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e360a8-144f-4205-a316-18dcc14db209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fceba4-b16f-44a5-9c9b-1d6a2b731f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290e72f4-8a14-4f7e-8873-60a26b5a5248"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa19b5eb-48ff-4fed-a331-47a0a236bb78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cf20027-6423-4009-8664-af243716e08a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8f7c5-3d2a-42ec-a778-c0e3046cc833",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0625a528-f79d-4c1a-9ae4-5c93027dda5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef10bd7-d459-4912-a5bc-78ad311c2805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d586372-d802-47ed-9b9d-ce807c859638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc4c928-7120-43b4-931e-ba0e145a12e9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ede8bdf-5d08-43a3-82ec-39cd2ac2750c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43445df5-383f-4167-b61e-e62cc5fcaede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78461f98-4266-49f0-83a0-15bfec8e367d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da534a41-1bad-49d1-8d37-01ceb4035769"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6402b21-d333-4269-86f2-3239e66db617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d790b96e-e251-4e69-b40c-62158b6a7675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b2b4fe4-555e-4d1e-baa6-9637ddb75204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff7c045-b2d6-4d3c-9fc2-81a994255715"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8006b91-21fd-4d54-b998-0f0b5a87e71f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d759b28e-f672-45a4-a917-bfaf6ae97d1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bfb1e39-c41b-4bb8-a16e-70cac43d211d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff675c8d-4b13-4c0d-a3b8-699de7532dbe"
            }
          }
        ]
      },
      {
        "id": "e1626e2b-4c12-464a-960b-34902921329a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95c89d7f-97d6-43b0-833f-72fd9728b2ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "795dd73f-5a6d-488c-8fa5-b6a410bbe4fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "067a2c66-e4d7-4eca-9002-ff621eb6b4fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdd73f-0d92-46e2-bac5-05bb30588d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131ac933-fc1b-417e-a72d-2b23d71c85a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c18a347-7cd2-46bb-8e28-b6c0aa89da68",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf3bb73-8c37-43b2-85b9-5fa07ec4b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754be238-1a39-4976-939b-d27a09ecf025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f011773a-5b43-4068-a92d-5b798062045d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb736f9-259a-4513-bfa6-e10ee16c9e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c7da03-8103-4e01-aea9-9d2a369b65b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af37bd2-0609-49a8-840e-18b1f29beab0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2433fbb9-cd3a-4b7d-b74f-10f5d38dfef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2c0099-4583-42c5-8d65-b46c1c5a1960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a0aa02-cb64-4be6-b4eb-48342b8bcac8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87910ff6-cf48-4068-a0f9-8d8ba2e84252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f23a11b-05c5-49b5-b28e-8e35d4920a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653dbe98-165c-47f3-ad4e-8f048668d265",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3256b417-08bb-438b-849b-abb85b4fcc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b483b1-8d71-442d-ac18-ffd9b437ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346c0c9b-0409-4b93-8130-36cf63d57364",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714bd46-d188-40c0-9599-c076c56743c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610ae45-9bb7-4db5-8143-b4724d6f684e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c48d61-5c0e-4051-b03a-7501cbd79b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3d2839-be06-4bb9-9a4a-c29135a0d37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27d1aa9-56fb-47ea-999b-f671fbdb2b61",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8bc286-5cd8-4024-898b-2bf549e48dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f151ed-d0b1-44e0-8192-83bc66d0927e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcf0e8a-ad8f-439e-9d73-9abb8fb2f75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a76edcc-4179-462e-ba42-d3ba3a2a04f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805721a2-baa2-45d9-a3ee-995f85637d8e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de9f4f9-e912-4073-8a80-e4bbde9d08e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b06d8e-7e51-4c46-9c54-f11d5b7b1858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5b74d-96a7-4a88-99ce-6843d4058ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a89b031-dd7f-47e4-bcd9-2e6c63d22f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758863d7-8236-487e-abef-78637d24e169",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14237e9-dafe-406f-b64d-5fe032cb87ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bc15a1-0ec9-4b10-85e8-bd3215b2d1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b22891-e337-4c88-b565-5e4a63941ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6090b5-5f58-41fe-90a3-371825626a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32902bb-3740-40fd-a905-53a336b97349",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab9996e-69ce-4767-9d49-433fe4dc9c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe7fd72-ae10-4bd4-8b88-0d222c8a2029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22506b9b-423c-4757-be33-e8f172d17003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3038bd01-c582-4709-aeb1-dfd986996c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f82e0f-b29f-44ef-ae0c-04d25405e75a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f56071-1bda-4c37-9aae-cc9ace2a44aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6699e76a-f652-422e-bf56-b307d6df1d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ad746-e5ca-41ba-928a-883f8266131f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca7b6ed-183e-4eff-9c03-276505465f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2479fe08-9fcb-4c83-93a9-2a67e1b03b42",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57f584-b05e-42c0-8525-965ba92861bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5e7779-b155-443a-a27e-b0583ecdc2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf42d8b-92e2-4c6b-bd03-58e2efda7feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9e0a5e-8fd6-495d-a806-9a802c6f96d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a6f01-30ec-4cb7-bbea-4890a5af1d62",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064951bb-624c-4b72-a372-aeb542efeb79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8139de-857b-418f-97b1-6e704204c9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e0123a-7b9f-4883-9661-1f42e7a7f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae26e904-9132-43c3-8a22-a238740c56e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd875994-4793-4879-acc5-d2111e66696d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e99d34-5203-4e52-92d2-c4d686507c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743698fb-9db0-439f-be60-47b87708ca14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d55a1e5-b333-4cb3-9098-f7a516f72d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f7870a-2b7f-4b31-a9a4-3753a9e8972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da688bc1-ebb0-4273-b6cd-293daff95d47",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44fa515-5105-46cf-9ead-5116af9bed74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bee6007-df13-4258-bd12-39b02d0053f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32a796-c088-489e-bd40-1efa4aef2e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720ab5f3-2a6b-4ae8-b85a-fc54a20b742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ebe57-62ad-4166-9913-175f4fe3a9f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de978f8c-774d-4bae-98e9-5b3c658b1abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c017ebae-4039-4046-943b-f33420ef10bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b220b17e-4f12-40dd-9330-cabef50090d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5177e285-7505-4ad3-90c4-d1945a2f107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511fdb81-ecde-4c12-84b8-e96368f240f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57b36a-8103-43e2-9053-cd5e3f97f850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed8cbd-667b-479a-b131-10b4287c9b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c2409c-c535-4460-86f3-f115eafb6577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ce3e04-8a2d-49fd-b5ca-9081f3e79e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be2dea1-2042-4cde-8ceb-12f517f97ec8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811c3cb-e6d2-4036-ba0d-b13328045887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6950213-0941-4b06-85b1-f86c825a447c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47738868-bf8a-4abb-a1db-ac46b2829cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cd29de-b0a6-4e8f-b2dd-a4ea76d557bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54508094-30cd-4fd4-8b6d-45280bb192a0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae74db2-1551-4b8a-86b1-49aacec15a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21c5d0e-0a6a-409e-b6d6-ff88e461db87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d65b9f7-9bab-4164-bac2-14e8e0dd6241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980205b8-2074-40fa-b7c3-e9ef115c2429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d7bd88-9b35-4cfb-b5ed-c22b550c0d35",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68987059-d54b-40d6-a550-68b0877cc61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87b199f-6f1a-4c3e-9e3b-9e9dd11ee6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c565ce-e670-47a6-9aaf-71cc40322464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bfe844-bece-476b-bcf4-18c088906253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ba4705-4280-4712-bebc-9d05bf98a94c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026f6977-04a1-4d3b-bef9-65c3b4fd6e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97370eee-b52a-40d6-b8dc-c45cff7ea04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7038b77-4f84-4ad1-8ede-ce805b551747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17d2f21-d11f-47b0-8d78-885e4aea99a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a68e8eb-dee4-4c25-853f-0d5404d68672",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2078a8c-a8af-452b-8963-b83afac4dff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a38715-539e-43f0-a4d8-8a550808110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7573e8e-d98a-4085-942f-c7d97ed4b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda8b946-3542-472a-8f91-43bcf8f4accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decd7880-7a0e-470d-b199-2f8b522916ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a9169-8f6c-4ee7-a815-478d060cf430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d2ba8c-01ab-4a93-a66f-ede7fa860fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2806a9-8495-46b9-ae5d-b4bb3758ca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e34f4bd-34d1-489f-ad9c-421b13da53c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade32981-47cd-44ec-9744-026295f31525",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8826c65-588b-4218-824c-64889719f4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08465800-e8f7-466b-af59-091af8c5db6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fbbbc6-125a-4170-9736-71821af75cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440d6514-454e-45b4-9fdd-18e302dbae2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb2e018-f848-4c42-b018-fe0b5f856c4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dce8b-25ce-40f6-afd7-0b4ffae29749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e44b39b-126c-4c10-a2e7-6c9d90763085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f19dcd-30b7-41da-9646-996f1e818e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826800e7-8f6e-47cd-a3d0-dae85b050e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46779e73-04ea-4e16-824f-2b61d684964a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c939cd-c2f5-4358-b786-a3d35b204be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d276dfe2-d5b4-4635-ba08-6e03f319b398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9fb418-cb39-4e89-9ce0-a92b57a5064b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69b3bd2-2b65-4254-8ffd-d24494425c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1215fcbd-b5f5-43df-a858-a2eb1502f4f5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5538dede-d5cc-4745-b474-e21d489b337a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7da240-fcf2-4ff1-8d77-4a54dd59e442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeefb92-609d-4e68-b9ab-016d9e81990f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70741d62-fe4f-459a-adf4-1cd4b44d2c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d3a5f1-6f74-4d9a-b8e7-61a09f545f03",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cf2549-4b32-4ea0-a835-ea6271a8b463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f28861b-cf56-43e7-bdef-9341cc1e5dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e05e04d-bd7c-4d00-b5b1-99fba3a77444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38320605-b780-4518-9744-e3731c68a50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a183446-fa04-4ed7-8cfe-22e9828b607e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4e5eb8-2c92-4d31-a105-fae71692efec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8974ddb-037e-409e-ac14-7bc018fba6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faedbce4-81c8-4e78-b9c9-e77bdb159b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb9192a-6883-4cb3-a8c1-08611ba440c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507421a5-0e56-4de4-a83a-8defce8ac165",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c3e19-d78f-4c5b-8ba5-a9f73d00cc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1052d0-aa2f-4359-9255-10f248b555b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897633a7-79e6-42d3-b6c6-8f654b3e3bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e01eb87-7a6c-4ef7-9994-22a782cfe883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92c712-5e8f-446a-98c4-d22e6f611132",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a285a35-810d-4f92-8db2-ca287250e3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f64370-c629-4b8e-9563-5a72b9d5bf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbf1926-1880-4cbf-a04c-2ed960ba7532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f69c5c-ea29-4996-964f-85192bfc0a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d896bd7-f55a-4c53-9b84-85145431389b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecdc9cb-188d-447c-83e5-4215fa9648e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8904a865-a079-4f7d-a268-b55de88f0451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6921727f-6049-4757-998d-5c324c89b43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7258c2-fcac-436b-a68b-6207d4badc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed969082-73cc-48ec-9c63-7246d0afc2d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678868b9-f26e-43f0-8b5b-91a9f45a9b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b16fd9-1307-4c8e-a3ec-658687632efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2ec2d-76dd-41dd-bde5-41c6dd3bff8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7094a405-7975-4a4b-8ac5-ddaaa0fe2c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a701c088-9c13-4aea-868f-32899f95d750",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfdd2c0-5ea6-41e5-a5da-4ac179ad114e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9775eb60-f38a-4550-8dad-a370cf734291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847fda8c-4f51-445c-9db1-c2b45c0106bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63040d0a-b599-47ef-b44c-95668fb440f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a673bc-0357-47de-99ff-0b2a91014f19",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffaad6e-8fff-479e-8b90-d793ecd8ef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943c1544-a00f-45d5-ac6f-dcac1cf6a44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac051e-870c-431d-9b73-252e157a04ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabbebcf-3957-433f-99b6-07a95eebd785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0469293c-4631-4a35-9784-7e5d9a5c7d83",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c0a710-bf44-43d6-a05d-67c9c46ff2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db65557-78a7-4067-bd27-15e38ddf07e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8842e74-9420-410f-af3d-69c20b9e1331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcf194f-d6f6-44b2-b47b-1fb8ac6e2aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95405a4b-32eb-4748-938c-43eb1c52415a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d06f08-e4e3-4051-971b-5929302b7adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643ff7a9-de44-44c4-b9bf-e454f1b2d7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421ed2a-926d-4114-bb4e-65b89d31dc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3268662c-f13a-4a2f-b2b8-9ec6ad7bfebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3018ee69-b603-4279-9f46-b2526300166a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ba75d-41c7-497b-8f62-415e59a4fba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1ba39f-9ac8-4798-bf3c-ebf33a3f350c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1745b32d-ff02-4474-a9b8-e60e098896b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f15e8a-9657-4a58-a968-1b1b2bde7dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394d09e1-1668-4fa2-8935-785246f15664",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988e05c7-31c1-4439-ab21-e33603ce6c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d466a762-c0dd-43d0-90f7-3e01ed49e8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81771d-7d75-4b98-bc8e-1a09da81cb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca821f45-d5bf-4b37-8415-5bb7a0cc2c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77645f4c-3478-46f4-889f-61b9a8ca5d12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f73e42-a223-4caa-bfa3-6cd13a7349e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33357ca-9f68-4ddd-b130-1d0a39ffb13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbfe91a-cf29-4dda-9961-32edc157e532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e8f227-e075-4b38-9dbb-f56703845fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b2e8f-ab11-4d5c-9813-678c3c871473",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c996ed5-c1ae-4e90-9a94-a675f8d0b71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e99d7e1-7e0f-4a12-a93f-bff89bf9a7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702ba2c-589f-4009-b691-b03811c0f4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e247fda-e4f4-48b5-b8ac-3f57b1058560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bf687b-4d59-4016-9c63-631c8a5e3a27",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5250f037-0510-4de0-9bf3-4820d2e246c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e74510-dd14-43d5-af49-b03c5d6ab352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31a19b-5c8c-4159-b6bb-a86f3be3b8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44134f72-be74-4e13-83d4-015164fc3511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e1a1d0-6b48-478e-b347-1e89bcfd6a54",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584af103-4573-4be3-854b-9061bed56fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ff4fee-ebd5-4557-9b3d-f19267b23e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfe417a-bc4e-442a-bb76-363bd83c0548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffaee23-6a15-49e9-a834-6c7155069d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad60dfca-98b5-486a-9377-fababe7e66e7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185f2c6c-8c8a-4859-b783-c91f94408581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34c6932-4c83-471f-87bd-a7c0086469c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfad179-4597-4cd0-9dff-5d7e6f312d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd82eff3-e038-4dde-a253-75d2a040a1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c0ec20-7c6f-401e-9810-b24b5645a7d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4935b365-e6ef-4d4a-ab5d-172b52b43e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7145a6f7-cf77-42d7-9b79-57b783b8603b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d64dad5-d8f7-49a3-ae65-6707e9d1977f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1980c1f8-0ce1-469b-92a1-85d5e7778612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04113d2c-0882-40ba-8bcf-cef3094563d3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7b7333-27b7-4f2c-a468-a637ff47f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c6aa34-bdcd-4a6c-b70f-c25e754ce66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd78c735-ad17-4e24-b337-ecc0b0ab5e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9181e9-7eea-43da-87ac-48bfa1b668e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cea793-63b7-4210-bbdd-aaa665dc2c40",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0955857-6e3f-46c7-9cf5-5e230306aafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0218da55-11d8-4aad-96cb-6a2e144451f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6e5228-47f6-488b-91a7-bec3968a82b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219167cb-b000-4130-bbba-6c3e7162e02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736465ec-2dc4-41f0-b891-1f7a0d4b2df3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e031bc6-2571-4ce7-a0f1-ae97f6fd9d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25859cd7-61d9-4e0a-a84e-87cecfdc5f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055a2973-5fa1-408a-96e7-6f03f8afd700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504ad157-aac0-474e-878c-e310db0c7a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38979bc6-f581-4799-8435-85a314ef27be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea57717e-89a7-4a44-a14a-8fa528f0ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6030f3b-6ab2-432c-91f7-0290b6676d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006f1e98-1f80-4e4d-acd8-5d6bf5e2293d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddefdc2-65cd-4532-b18b-89f741d6be2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c5ca35-237e-4adc-8ee2-0b2e3c1d45f8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c149b1-3a13-4da7-817b-7c5c2c9cbb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cbda26-6d03-44d4-8ace-669ef5793993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1257d6dc-92cd-4944-91d2-e99144a6685c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ee6abd-c33b-4799-809e-03856141699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69562d9-10e7-46f4-9217-60ff5aa558d0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c70114-84c1-4156-8854-f28354bdb154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b6a690-cada-4dad-b173-11e887708c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394cccbd-2abf-413d-8e6f-cb5a71d4075c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f91fe0-a99c-4c0b-a6e0-16937f12b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feed05ea-90f5-4c7c-853d-33770fec02ce",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd0261-ac8b-48fc-9d7f-1623443e7f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b0856a-55c8-4d65-bd9d-3ad8a7faf55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df2ae9-e19d-4104-8020-4d6f45aa254d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3caa4c-2422-41f0-93d0-8dc21745d0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec7ea8d-72ee-4df2-b4a6-2d419dc3a136",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0254f7cd-ec21-44f3-98e3-b02ee3ab768b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cf5d6c-882d-47ef-b169-c3ad870a3812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f86c6c-708b-4af4-b6c2-b772abce4e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327215e7-b9b7-4b55-ad1a-4addd59bafc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159c39a9-4a34-492b-bf1e-1ebf7446d5f7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68342cc4-9528-4871-844f-96c75a0352a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4844779-8f00-448b-ac13-958e0e8f73a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eb0b8b-5548-4fcc-a111-ca9eba7fd012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cbb110-d4dc-4112-9e38-ba54420cd4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39689c0-a76e-4c0f-a14b-d40f215486d1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74e45f-5ef0-459e-820f-0f14e7b19b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b589c84-3f5d-4010-a262-ddfc5264c3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eafbf0-3175-478c-9478-df8129804635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad34b10-cbd2-4f80-8193-17c69816e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee56f6b-f62b-4ea9-98a0-50c53606ee32",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f0fa5c-e5d1-401d-b611-f7d92d35b895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc27bf-236d-4696-8862-31631dd730b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48ee963-40c3-46e8-a9c9-24caa87a92bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274d6965-f4cc-433c-b1e6-a4b6e9ae3739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68f9184-4f69-4445-90aa-4d6a5a94c9aa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a539a-3ddc-4ba5-82ef-0fe9c5a7fa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1120a9d3-7076-40e0-986c-3f02f254ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7322946-a64d-4f11-8d7a-458d4ef3a8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d515189-3fcb-49c6-9b3e-7e36187f5628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3363e8a0-fb48-4688-b8c6-0e170d649136",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5772f5fb-f285-4f5d-92d6-9982c0037c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dedc0ce-f656-409e-84c3-1f36b5755566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c778f65f-54dc-45c8-95b5-bb2f65f75c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f35d39f-c167-4a41-bcaa-b691960e2d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aed3f2-e31d-4793-b4f4-1fd0d0667ed8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c97ff02-dcef-40e9-8e69-341dd5351e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b44d9b2-23a0-4978-ac07-0086c9545c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a34e7f-d37a-4502-82b8-1a43e2bab3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34862d3-7b1c-40bf-9dd3-e5afb17ee2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8642a6d5-d6da-4b05-af45-78d56e23a1bf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e1ed74-a058-4b0b-9ecb-974a3642e9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c090536-28de-4f21-8618-8be0765f16e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a69855-78a0-42df-9cc9-17b181f6313a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2efc637-ee4b-4811-bcf6-a3a43e221d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc591103-de5a-4d0f-af33-c2f0f29e2541",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db42e87c-4ae2-4c19-8f26-91cdceefa07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faec3123-d98d-4af0-867f-0a9d2dd14c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c6df9-2f85-4137-8754-dc750e01c5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c35ccb-0085-4e18-ae39-601f5e346508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965cacd0-bf56-4516-9329-5a0e89446b29",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee307c-0476-4e52-95d3-04e22732f030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131d9921-e3e6-49e1-a05c-57a6f0e6d34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4f4a2b-9759-47d1-9678-f09d8d42c390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563a7bec-b416-4efb-936e-3c3ff41f7a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf899905-cf41-4a06-ae85-49a06092e2a3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaca918e-cc79-4f31-bc3d-7632c8d8a893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767aa947-1deb-4c44-ad21-cf517b36b1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429ee709-c1e4-4ddb-a739-2e10ff10937a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e12e41c-baaa-4c7f-8f31-e395c043b211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187f9aed-3a85-432c-9d54-11a152286fcd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6bcdc1-f590-45da-88ae-056dd859b1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4280919b-50ea-40d3-83b2-783da3ab550e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd300cde-7d5f-435f-a43d-b298a4d58590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337efd9f-5490-4b00-8ed5-416be98e6804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3524df45-124a-4540-aaeb-2f6405f8b00f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f685564d-56af-4842-94a6-958dc9637701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b1c5f0-f3d2-4022-afa6-d70472df42ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80754c97-c173-4050-acad-e99cf2440395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc19ee4-2906-4fe5-8b11-6a4955433935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae267b0f-90fa-4598-8fdb-ee1d9519bf48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ccba5-524a-43d7-86f7-b6b51d57167a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa8154c-706a-4d90-b628-620f3c62c4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e98866f-5c2d-4527-83c3-b73246f74319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e74a2b-6b5d-4f8d-a73b-3bd0e493a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a048e3f0-d9ac-4a93-a1ba-57408b0a98f0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db89692d-0e5e-4328-9916-3b0ae0f13f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a021f71c-8680-49be-890f-59e02d221626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0c606-71e4-4147-b7a2-a5f5296d1e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c487ab-9775-40c2-9c22-96f02d8634c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dd84e8-7f38-41da-8166-eafc588254a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29e223f-eb83-4c71-bf13-9d9ac7dd2c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db60f2bc-7d46-4b21-a2ca-d8397b948823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3396b13c-2170-43a4-8822-bc922c504672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dffee35-93bd-4a10-931c-bca274091929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9cf41-205d-4810-a62c-c096c65e5f10",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbf144f-68cb-4cfe-a603-deb5c95d6535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e781938f-cfce-4e06-b23d-ac127600907e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4393ec39-a342-4ed3-9899-587fd9980cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42677267-d699-458e-b6e5-b6f7dedfe58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c91f40-ee89-4850-a872-1e937a9cf2f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775957f1-aa47-4ca5-88af-65e009b1e923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1edf606-fc58-4b29-97fa-23c4fb82fcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419822e2-59b9-430c-a626-bc8be46395fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066d17b3-9291-46d5-8928-d4a7e4cc421d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc10ce-d42f-47ad-aa5a-9faf7a4271a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56297873-1ab9-492f-b0b1-5634f7cddac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea294bf6-8eb4-4d74-8310-a2dbc64fe51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c382c67-9acc-4deb-8faf-374c61a45735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19046964-8fea-4b05-86da-a6e18ad44810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6a048e-d631-46ba-a2a8-15437048f9fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a253a028-8991-4987-a085-1a7ea35b656e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8e142b-037d-4ab2-bc50-e9f2ade588a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41370f1b-ac78-4d5f-8e65-949624030cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c407913-1864-4fa2-80a6-7a647cd94118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31f4553-7533-4c65-9478-8075112de5c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c1f5d-a318-4414-a3cc-51262978f98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e98176-fad1-4337-9d64-30ef37266e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56726a16-0542-4d11-9faf-8920d9fa0ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffafd1ed-f1fb-4cb9-897c-4d741eb8ffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bee235-ffa4-40a7-ac72-b2b88036542c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8451c6-e211-4abf-ac24-852e34df0231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fcdbf07-78c7-43fb-80c0-f630135f3595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e0ec91-791a-4084-b5ab-fe9e83f64573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb42a2c3-00e8-4edf-a88c-06d7e5148aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eef7aff-696e-4a38-b167-ee303b3cba67",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd7e5b7-25c4-45cb-ab1f-4800759f26de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835c0a18-fd07-462f-8b0f-0d6603826ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcc6200-96bb-4157-b86a-65e8c5359131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedeae52-887c-4a92-a583-f020d94beab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb835c5-1a44-47a5-b9c4-6fbf3fc4cfb2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86554f69-57d0-4120-b9c3-3052d88e33b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796a1afe-3597-4079-967d-68ae9be92466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07721ed6-be65-4850-9231-a120cd59f5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b00b2d1-2e30-4057-be3e-d75e24f2422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eb506b-7111-487a-8883-9b870f53064a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae7598c-c6d9-4500-b9c3-a10587054d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4de40e-5ccf-4d6c-b716-0682cd5ad49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471d77e6-e417-4807-850d-7923388cf914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a69e6df-d9f8-496a-9009-7fbadc280ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2444d72a-0631-4d48-bea1-6166f1926368",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17967c-f33e-42e4-9f76-b60e4b7f6859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f369a7f6-3054-4f58-addf-dd78a6c82fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d0fadd-78e9-4d56-8070-b992f313adfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ed2816-1bb6-4e5b-82eb-3a8e0b8218df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5317f11a-77e1-4a56-aac2-4464f87c5eab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febe93aa-4168-4f90-a8fd-67da8a787912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa680a1-850e-4f63-bd0a-5ef70c64016c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db132c1-e81e-4f62-b1db-39da16bbd1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46838241-5e66-4fd5-bd88-f805c5cd8f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144084c3-1fcd-4e60-a478-47a883e8c60e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab9533b-81e3-45bd-abc0-f6e080abe24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96a3d78f-6501-4b99-833e-4dfaac6d921c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1b10ab-5870-4232-bb0a-478c706a6f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bad213b-8d1e-49fc-9419-fc8815ee2c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceca94d-9006-4cee-9613-9b446b31c6f0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dddd0b4-2679-42df-8645-cd39d1945db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9a4816-942c-4b79-a85a-dd0907613b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa11492-88a2-4e5a-9157-ce11c5ae9044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0873f68-a987-41d6-9394-739dae1d747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e36a12-c100-491b-aa8e-334daff9215a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb45a5a5-f295-435b-842f-fd0d31a1a47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e32df3-13f7-4d0c-bdc9-a67080d5f838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e63cd9d-b6f7-43dc-8d3f-263feabf3913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14569b3e-ee44-4bba-953c-6330b49f3fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b432a599-5458-4332-8454-f2c037903b1b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6c7832-4045-4c3c-8a31-9d8f13eaadc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c971f218-c654-4a99-afea-932b452ef7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9092da-913b-4f56-81a6-acf93eaabe4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfd9040-32eb-4ab0-a377-925054eeee02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0949e6c-fff7-4c3f-8fbd-2699f5e230d6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6094b52-5cc4-45bf-bb1c-80f77f2fef64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ba5368-af19-4aef-b092-ee6b66703114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d891e4a-e6ad-4fef-be97-cb2c937331e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75dae40-2136-41e3-bb11-af7da5dc1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939a6c0-b454-4848-9fa7-3b1e7e77b8ae",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a668aaa-5581-412d-8dfc-3fc8c9583827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d3b371-258d-4933-8b87-65b3fc3941c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56cddc6-fb70-48a3-b0fe-e34639f9c9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c854a11-6714-4acb-9aee-d18eed697377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca776845-860f-4467-b651-9a54aff04bc3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5417a35-1154-4e8b-94f9-4a9077fd9921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7eedbf-8d92-46a5-a5a2-5d84751aa248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d300ada1-14ef-4cbf-9169-5cbae2149c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccace013-ca5a-4e68-b481-caab33d73445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd8421d-b18d-4ab7-a70a-38f06785b0b8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b45b23-c428-4652-b1ed-1a6bf0a5fcbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954b622a-f1cf-4ba1-8fd0-12ed7c1fef3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751e67cf-baab-4406-aeed-621d2ac0e590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2338e860-ad67-4314-a558-7a16cc9f5315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d625723b-4f2d-4815-a857-6ab52505d51a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3314eb-6551-4d19-aea2-71e2d5a3f40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ca3bd6-e4d5-4d6a-8d3b-33190b25f3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2247c908-9e62-46fb-ab40-49ee1ab66664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9fc951-1ae0-4101-ad5c-bc2079e66478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6d7c52-7703-4611-8223-b64367d79852",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50efd67a-543f-49cb-80c9-17574f03dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f875a4-ccd5-457d-bfa5-491a5c636fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa0432-5d90-4f52-b710-5be3d9e109de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccddd94d-02ce-4499-9a59-535c196acb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d72c61-5051-4863-b138-f62cebb3699a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e3aaa5-cdd5-40a3-bb7b-8e9b11cdb15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e6cfee-3311-4f6f-9646-5eace49c26ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9828122f-9db5-4f38-8e17-0042ea94e55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487b8b8b-6b26-4ef0-8da7-17b5698bbb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2914e1-e27d-4678-98ad-c50dcc946923",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c150313-a60c-45cc-8a59-338c40efb266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475938ff-08ad-48a3-a85f-09afc0550498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7f6f51-c3b8-4f5d-8d02-1ebb5216be18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9994cd-d9e0-4b7a-bd62-98758dba5ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8054e7-a3d2-4a65-868c-0a49482b0ac9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e19f836-33ba-444c-a8d7-72154d660c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718fe667-39d5-4527-94a5-845ad82af5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0661e9b6-04fc-45d3-b669-87b08ee59f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9f9cdc-fb96-498b-af72-1689356b6620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5669aa-690d-45ee-b97f-ffa179a31a17",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c390f2-23ad-4e68-be3f-c8d6d12bb1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0475a8-6f1e-469c-a05f-819dd4e62b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c58d05e-a044-45d8-bf3d-c9c2ee56d99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dddbaf6-5427-429e-b1aa-0c5aa8747d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b0103-fd5f-41f3-b053-36f375ff7d0c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80eb378e-b247-4d6e-8246-3e21164d52ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da3f443-329a-4c36-be24-785d23f3a08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a40c38d-ba8d-4b3d-886d-94bfed08b68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987a7169-7270-4c0e-84be-2e596ef08241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001de704-5ccb-4ca4-af05-ab7873aeca2b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867b9bda-05e6-4099-aa28-c7c6389aef95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03c43fb-181d-4cd3-b1f9-5764736d4b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49262944-5006-4b21-9b9d-14b5b1ec21ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2451c044-ca3e-4378-85fc-41241c013616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bad4a6a-bd17-4576-95be-fa323fcbde2d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e0b2a-5e06-414d-8b6a-d51257d5c94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db1100b-08ce-41dd-96f4-0d2fc8aac744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdaa4db-4f34-402b-a1a5-2ceab0da35bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e302242b-dacc-477a-ac7e-b6bfa8c2f6f6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5c641c0-dfbe-45ed-84f7-0e2b26e527f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37170e1b-d20a-4004-aa4e-e3c57f70d5df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d1e2bd-0a9d-4caf-ae87-145b6c407ac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20173009-7532-487f-ae19-f3c1c7bbd261"
                    }
                  }
                ]
              },
              {
                "id": "bf91c002-ad36-43f7-8d75-75a7e2561c3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12ec3956-3eeb-4b99-9987-e3b4dc996ed7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb8c1dd-6a94-45cc-a7ee-70b6ad424065",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d83217cc-d535-4af6-87f9-26ceecb5af01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7345a5-3366-4aa9-89b0-f8a41b9c736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae279ca8-4038-4c36-9720-55e90d808805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bc6752-e808-48ea-80dc-e8c0d93a101f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f2519f-e062-4350-b70c-054ec7438f61",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8fe1b4fa-0494-445e-a143-b513fa11f928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6026e3b-9ba6-4194-8c40-074b6a17bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a18dd9ee-121d-4c86-a83b-344c0f64f77c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f7238cf-fc08-4d63-94ee-ee66d54c0093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "873e1ae0-1bf4-429d-9235-cd43f695c536"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "359422d4-b52c-438a-a0c0-ec25519497dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26a33116-085b-46ff-a4e5-ca2034ec2439"
                    }
                  }
                ]
              },
              {
                "id": "9ef9aa74-beff-435d-b8e3-ccc64b54c26b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2c6956c8-d3ca-4c9a-b0f1-17d6ed0745b9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346e92b4-42b7-4017-b3e1-f45958cb1a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1e269e07-10c3-451c-9c99-6e27afa00da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48989b55-0e19-4445-9233-2b1e496442bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cea38e-a08c-4dfe-b13e-678cfd19ed89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7482d0f2-47de-44d5-90aa-1d92da3fe5a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fc7e531-d1ed-4dc1-8573-308f4297d6a9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2436b259-b3bb-4f9a-bfd5-ea8080f7b242",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93a6ef62-7140-4a71-8321-4f55f10ab69c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e665819-8291-4b1f-9636-0f2506943208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a39c9d1-4e07-4497-84ac-c114d008098d"
                    }
                  }
                ]
              },
              {
                "id": "b207affb-3761-4ec3-9e33-9ec9da2464c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cf67989-249b-4f7f-98f3-76b27de87de2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d013a96-c059-4175-b092-df40ba3e4e10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7824c0f1-5eb5-480c-9221-c18fd2652e79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "831ef477-db9f-4feb-962d-b790bcedb97b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab1a758a-0ebc-4f72-93cd-489bcc7713fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3808f8ca-40c8-452d-9710-398ed5b8a2af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0804c2f-59dc-4c46-ae45-ba7bcf5f20a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7365dfa-da39-457a-983c-081ddfb7be43"
            }
          }
        ]
      },
      {
        "id": "76debaf3-5ad8-4ed8-96bf-df9a18f8d402",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e5574424-6adf-477d-916a-644d6fda1ba3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc4dbb55-d603-4998-9b4f-424b56f5b103",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299ae282-0e56-446f-9ab6-e8f23385dd4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b3346793-3e5c-432a-9a20-d910eb80768f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd251e-0264-495a-8e4a-7fe083efaa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11841e05-3537-406d-b347-8059bbd6c554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d812f50e-99b7-4872-b528-a6d5e0e557e5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87be2b6-f14f-41b7-a049-13c703ad3307",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4e84d14-af00-4385-9ac8-b53879d82946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a41bd-3ab0-4cfb-aa35-8f949b3aea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f572b19f-4168-4afe-916a-5c538458ad69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2bb4e09-9668-4630-b9c5-a430a3ddbeb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d62ca31-bfef-4614-9782-c0ebbdf73abd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cef87b8c-fc0d-4ba4-80a8-42c6c02df4d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "627e83fd-58cb-44d4-9f35-6ba6f765e4e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "450bb606-6018-497a-a0d8-6b05953689be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "54dee12c-8f9e-410c-a10b-12f4d86c4bb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb4c719c-b172-4851-87e3-4460ee79c2e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e13ee3e5-fd49-49f6-b4af-9040a891d8c3"
            }
          }
        ]
      },
      {
        "id": "89d2c92a-de63-4463-8b33-e8386b975541",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e961702c-8bd2-4507-bde8-b9c9fe3031bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03983a2b-986f-4a38-8736-9601fdee6fff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85d4932a-4cca-4dba-9554-241b1e184948",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c56d7fa-4b53-4753-8e4e-36adf4a9c056",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1e7ddd2-9270-46d7-9d94-52ca9c47d4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc468c5-7f4e-486f-840c-f2039b47930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d418d9a-925c-482d-97a1-9ec13e4325de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9150fd-5f30-4f83-9778-9c20f151016d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead94d7e-c615-4b61-9ad4-7954a76ece0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43cca155-858b-4b7f-862c-6c3072df56cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10fab1-04f5-4bbc-9da1-d7b40155130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5b214be-2393-4259-a0a5-e87dbfea1fd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b8c70b7-b21a-4498-89bb-6d630dd926a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f92c0ce6-33c0-446b-841c-6343769bb93f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ed6daa-7ca4-42ee-a0c8-400ce2733c25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31b45341-04cb-4c09-a93e-1ffa4c09f7d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d785238a-d626-43fd-bdd7-ab87af25d77e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c12bcdc-6050-4a80-b33e-9cb970155260"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a3a6a30-c751-40a1-af42-016a122c38cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bd35fad-4b4e-4242-8f11-2403bbf60dce"
            }
          }
        ]
      },
      {
        "id": "aea7d755-9e59-4867-838f-41a42f250851",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c10fa383-c794-4808-9152-9ff9438c6abb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afb4d4e8-9ee8-47ba-9052-95bc01576848",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e02803a1-4568-4524-b68d-a0572dd27a4b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec98cd4-da0f-45a0-aea2-f9868395c2ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfa3e461-20e3-47d5-a6a4-6b57a66ab570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fe048f-699f-42b1-aac4-f83d522640e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc344b31-8411-444d-8300-e8ee4f38eb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a8ec66-7165-47ee-8cbc-21163c468a88",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac3a221-9a46-45b9-8e26-94a758a54990",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bbeb51-6959-415d-808f-b5d196a7255f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5541c08d-76fe-4ea5-846a-6bd1e9e0de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70241080-01cd-48bd-a04b-a71262e43e91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa0877ee-d188-4d95-9afa-5ed51f7428a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3155dd8-ae37-4148-a8e7-208819a4459f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e47bcef-9c51-435a-af47-28a71ccb4bf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd6988a4-eaf2-4caf-af47-868aa385e419"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "262319aa-043c-481c-8dcd-8b66aa3d5839",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52d5e3b3-9b40-4926-ad44-a2498bbabb32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c678caca-8417-45cd-aebe-26d5355c4c86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58ead041-7c88-44ca-b73a-2c16c74f950f"
            }
          }
        ]
      },
      {
        "id": "f71253de-ba57-4573-8a00-5701b747f550",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8305ea90-8808-4c53-bf38-693d5abadf32",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1417fc7c-9e56-4253-bd06-ed578d54b833",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "02ae536f-f38d-4136-a1f6-d91a6cfbd79f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30331be6-ac7f-4878-bf20-7429a9204a47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b5a3390-3b82-41e5-aca6-57c364a5f52a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.52307692307697,
      "responseMin": 7,
      "responseMax": 215,
      "responseSd": 25.417503171153953,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684284031714,
      "completed": 1684284062476
    },
    "executions": [
      {
        "id": "47f064cd-089c-4cfc-b9fb-23441a903e9a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "42efa865-a7f4-4c24-af6c-d84da8825d3b",
          "httpRequestId": "5638e195-ad4c-4c44-9ceb-a3eef2c4ae4c"
        },
        "item": {
          "id": "47f064cd-089c-4cfc-b9fb-23441a903e9a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "01534486-3d6b-4fa3-b537-a337c1952c57",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "9ffb7bcc-14c4-4507-a1a9-a61a5d8a5fcf",
        "cursor": {
          "ref": "a9f50bfc-cd5e-4711-ac20-2893d8b24bf5",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8b9a7087-ee26-42a2-ae30-07a7a8d4dcf8"
        },
        "item": {
          "id": "9ffb7bcc-14c4-4507-a1a9-a61a5d8a5fcf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20ff4e60-8e00-4c32-9589-ae5e9466dc0f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6e4eb620-0cce-4a31-8165-7dcc18c1cc4a",
        "cursor": {
          "ref": "49c12d98-d8eb-430c-b21e-fbbd3fc4ebaf",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5c7abc6d-e64e-4ef1-b20d-8e94d27dda58"
        },
        "item": {
          "id": "6e4eb620-0cce-4a31-8165-7dcc18c1cc4a",
          "name": "did_json"
        },
        "response": {
          "id": "9b58bff6-d5d9-4786-a1d1-44f73b97770b",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f4c4b8-1eb6-481c-96ef-39e762d27c2c",
        "cursor": {
          "ref": "b08386af-b624-4f71-b780-282f3592a53d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea5d0997-4dc2-4b02-b990-cf869b6f1624"
        },
        "item": {
          "id": "13f4c4b8-1eb6-481c-96ef-39e762d27c2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e8e8501-3048-416e-998a-be378b275a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f4c4b8-1eb6-481c-96ef-39e762d27c2c",
        "cursor": {
          "ref": "b08386af-b624-4f71-b780-282f3592a53d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea5d0997-4dc2-4b02-b990-cf869b6f1624"
        },
        "item": {
          "id": "13f4c4b8-1eb6-481c-96ef-39e762d27c2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e8e8501-3048-416e-998a-be378b275a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea6d8b3-2446-4c17-84e2-4d34604facd5",
        "cursor": {
          "ref": "5d200430-442e-40c5-9b7a-81f106f0f41c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4d3383f0-712a-4451-a9f0-07899c150590"
        },
        "item": {
          "id": "8ea6d8b3-2446-4c17-84e2-4d34604facd5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "66f8c6ee-1ba1-4d14-b6fc-425e299f4cab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7791ef6-98f8-451e-a589-c509cc9221aa",
        "cursor": {
          "ref": "3b6640e9-020a-4788-8972-b56f835ddb9c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "79ee4a2c-0256-476a-b46f-e9bb748545ab"
        },
        "item": {
          "id": "c7791ef6-98f8-451e-a589-c509cc9221aa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "53118a2c-e7a7-4959-8318-e8abe4f5f1f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f12adf-4379-464c-979f-da5484d6358c",
        "cursor": {
          "ref": "cabc2ca4-5d09-4eb1-a7ef-eb4003438cea",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c217d2f4-2898-4089-8a59-98b0aef9382b"
        },
        "item": {
          "id": "32f12adf-4379-464c-979f-da5484d6358c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e1aa61c1-d52a-45ba-8899-46d9110c935e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5f4ef-8024-4de4-b132-2054d36be919",
        "cursor": {
          "ref": "169b7cda-06c7-4d8b-803b-dc82dedadfde",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5cdd9bf1-d057-4e62-b79d-198d8d484c60"
        },
        "item": {
          "id": "b1a5f4ef-8024-4de4-b132-2054d36be919",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "559b7b04-b2a1-4c81-8800-9db244907c47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5f4ef-8024-4de4-b132-2054d36be919",
        "cursor": {
          "ref": "169b7cda-06c7-4d8b-803b-dc82dedadfde",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5cdd9bf1-d057-4e62-b79d-198d8d484c60"
        },
        "item": {
          "id": "b1a5f4ef-8024-4de4-b132-2054d36be919",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "559b7b04-b2a1-4c81-8800-9db244907c47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c757754-fcde-4813-ae1c-7d3b3702fe13",
        "cursor": {
          "ref": "f58e539d-2b57-47c5-8ef6-e425b88841af",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3ccc2221-8064-4aee-9243-e6eed2076eee"
        },
        "item": {
          "id": "3c757754-fcde-4813-ae1c-7d3b3702fe13",
          "name": "identifiers"
        },
        "response": {
          "id": "e4275bf9-de2c-44f3-9d9a-11a241de29d9",
          "status": "OK",
          "code": 200,
          "responseTime": 215,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ab471-4074-41fa-8dd4-0a1f9613e68d",
        "cursor": {
          "ref": "2c727b8f-0ab2-43a9-9285-389db5c79b71",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1682c776-efa8-4a00-b05b-85399e15fe70"
        },
        "item": {
          "id": "5b3ab471-4074-41fa-8dd4-0a1f9613e68d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81e9aea9-2c44-4cc6-8c65-5fbe02de5e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ab471-4074-41fa-8dd4-0a1f9613e68d",
        "cursor": {
          "ref": "2c727b8f-0ab2-43a9-9285-389db5c79b71",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1682c776-efa8-4a00-b05b-85399e15fe70"
        },
        "item": {
          "id": "5b3ab471-4074-41fa-8dd4-0a1f9613e68d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81e9aea9-2c44-4cc6-8c65-5fbe02de5e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdb78d1-e61b-4879-ba35-94bc6c5c5b08",
        "cursor": {
          "ref": "1474473b-8568-44af-aba4-898d754211bc",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "848921fa-53a4-4f2f-b011-d0cbf98a6d21"
        },
        "item": {
          "id": "6fdb78d1-e61b-4879-ba35-94bc6c5c5b08",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aa07e5da-85e7-4a02-aafb-4ef98c252086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c085035-5e87-4f8b-9d32-ed2cae256c68",
        "cursor": {
          "ref": "f9cf4170-2609-489c-8a9a-77f604ab4b9d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f20d9504-8e17-49e2-b790-91b5426713be"
        },
        "item": {
          "id": "7c085035-5e87-4f8b-9d32-ed2cae256c68",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7240d2a1-191a-4d92-be48-68888b9efd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76da75a-567c-4604-92f0-d32ec7642189",
        "cursor": {
          "ref": "063caf84-c195-4dba-b998-e934fecb82c9",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3d503985-4116-4452-8b7b-77c8b399a561"
        },
        "item": {
          "id": "e76da75a-567c-4604-92f0-d32ec7642189",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b061a3e2-198f-4980-b156-39af450f1711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d2ac0b-635c-4a32-b36e-4eee63316ea7",
        "cursor": {
          "ref": "dc9959f7-d1ba-42b6-9d66-dcd388702bf1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4c2f0b31-6e26-4771-bf3e-ceaa5e8183b0"
        },
        "item": {
          "id": "a9d2ac0b-635c-4a32-b36e-4eee63316ea7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2fd742aa-0d96-4d14-8beb-37684202c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af7dbc-8c11-4a6d-a1a1-67f3bc0d5550",
        "cursor": {
          "ref": "9319d00e-e405-4e4b-a771-ce9912846ecc",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e44eda8a-7dba-4544-9040-d121f50bf533"
        },
        "item": {
          "id": "35af7dbc-8c11-4a6d-a1a1-67f3bc0d5550",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "225856ba-2efa-4eac-942c-93599af05d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b333a9f7-969a-4e16-8782-7a7938e253de",
        "cursor": {
          "ref": "cc57967b-00c1-4750-ad72-9a2aa9a611fc",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b488067-4cd4-4517-a1f2-1409bda89879"
        },
        "item": {
          "id": "b333a9f7-969a-4e16-8782-7a7938e253de",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "629126ec-3313-4afc-82fc-440f9f7a08da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239f5de-c397-4e36-933a-c9dd43de2a26",
        "cursor": {
          "ref": "32019d4f-d801-467c-9f7d-2d7039a26ed0",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c87006ef-2d9a-4f43-90fe-4b45a235633a"
        },
        "item": {
          "id": "3239f5de-c397-4e36-933a-c9dd43de2a26",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bd52918-1260-4e26-b604-e63183e279a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06dd56-1d5e-4535-ba43-5a97fa405219",
        "cursor": {
          "ref": "b1da4165-e56c-46e8-9dee-712685923b8f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "04ad8b00-cee2-4e90-a8bd-c6451ca3e511"
        },
        "item": {
          "id": "2e06dd56-1d5e-4535-ba43-5a97fa405219",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "47c95699-d884-44bd-87c8-b1b17e115487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374ec301-e7b2-4603-ab35-0f73e5271504",
        "cursor": {
          "ref": "0ce57933-b180-4c1a-b398-8113b9843d2f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "99fc3adf-8803-480f-a543-96142ae3efa4"
        },
        "item": {
          "id": "374ec301-e7b2-4603-ab35-0f73e5271504",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e56efa2f-b320-4094-8274-0f2f615c0fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f40aae-bb8b-45b4-afc6-0ff5fed75efb",
        "cursor": {
          "ref": "edd2593e-a87f-4fea-922d-bd4d9960ee20",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f83d822c-ca9f-40e3-84ef-4b98c1b7ff9a"
        },
        "item": {
          "id": "66f40aae-bb8b-45b4-afc6-0ff5fed75efb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "73b0e2ec-4317-4de8-b1cd-d67c17142825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76104c68-ef62-4156-b98d-c7ee6c93b9cc",
        "cursor": {
          "ref": "2743af68-3241-4876-b084-a71f4b1ccca3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "14141de5-38f6-40d6-b9f5-6619534ceecc"
        },
        "item": {
          "id": "76104c68-ef62-4156-b98d-c7ee6c93b9cc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7d9e069e-b08e-457f-9c9f-cc13663f088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f69629-72bc-407b-8b37-2eb426d4c042",
        "cursor": {
          "ref": "f92ec9ab-dd0a-41d9-8e6a-115ef25a6653",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d9c62fd1-6dcb-4ad6-a4f2-b7af795191eb"
        },
        "item": {
          "id": "d8f69629-72bc-407b-8b37-2eb426d4c042",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7acf5f8f-444c-4a8b-9f6e-5f98896d24c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c5c005-f7e2-47f5-bad4-e72c63f3de51",
        "cursor": {
          "ref": "968b83df-acb0-4771-b179-2d62f4ebe753",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1a937043-42a4-4086-8925-23ab7928abf8"
        },
        "item": {
          "id": "74c5c005-f7e2-47f5-bad4-e72c63f3de51",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c870d2e6-b6c1-4421-881f-e1c3039834cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9785b2d3-c821-4b0f-a821-b9ecf01b4538",
        "cursor": {
          "ref": "e321f3e5-8352-4953-a722-c0491633f8b5",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e3006022-a4f0-43b8-8b95-0af0674bdab9"
        },
        "item": {
          "id": "9785b2d3-c821-4b0f-a821-b9ecf01b4538",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4814e113-58c9-41ee-b4a7-5ab124ec15f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e824755-ee13-4211-a367-813741ce0e80",
        "cursor": {
          "ref": "5890acec-5fcf-4ed6-bd67-c0920cae7e11",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b0178718-73b6-4bd2-8fb1-f9c4fb602834"
        },
        "item": {
          "id": "3e824755-ee13-4211-a367-813741ce0e80",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a9d99053-18f8-49b4-bd07-8840e1e790b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860b98e-0fa9-4654-afe7-52e798102e7c",
        "cursor": {
          "ref": "7781bfd5-0910-4f85-9793-dc6cad6b0720",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b56db40e-f562-4b1c-be71-b600b956d54b"
        },
        "item": {
          "id": "a860b98e-0fa9-4654-afe7-52e798102e7c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "af502a81-da9d-482a-92ca-370a1f74abcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d140bc5-e50d-4a65-a6f3-632ab7db17b6",
        "cursor": {
          "ref": "d76864ee-2037-4522-bade-9fb6d79ab29a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "64296bff-2f6b-4fe9-b1bc-b8e3c10e4a7c"
        },
        "item": {
          "id": "2d140bc5-e50d-4a65-a6f3-632ab7db17b6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e5d6c31a-52e0-4635-a4be-04f879fa262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1bf43b-abef-4d18-9809-b585c3cc7ec3",
        "cursor": {
          "ref": "0dd33521-0a9f-4fd1-84ff-b58eda5e2a9c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d47452c9-5347-4cb6-8166-b0836b455715"
        },
        "item": {
          "id": "3f1bf43b-abef-4d18-9809-b585c3cc7ec3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f52c8387-db37-4232-a8d6-6424ec76a6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a227a9-9544-45b7-a985-0c2219d01407",
        "cursor": {
          "ref": "0c7823f7-9779-4945-9de0-7c9358e1eb6d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9cdd8ac0-ad65-413a-815f-0f4f466432dc"
        },
        "item": {
          "id": "59a227a9-9544-45b7-a985-0c2219d01407",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "08dbd302-2cd1-4a79-bf7d-561ee80cf1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7028edab-50cd-40d9-817c-354dfe300d12",
        "cursor": {
          "ref": "b7ff81f0-0ec8-4134-82ad-8a1d780c8086",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6480a80-0c2c-44d9-8ea4-fea9662e00c1"
        },
        "item": {
          "id": "7028edab-50cd-40d9-817c-354dfe300d12",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e16a5a84-2d85-4029-8b1c-d42302d5e127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28427af-f158-4fae-b3a9-8fd5cec39185",
        "cursor": {
          "ref": "0949f11d-9688-4972-a1d9-cc84e69049ca",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f35f4305-1cd2-49cc-bcf7-56b8a4c83573"
        },
        "item": {
          "id": "b28427af-f158-4fae-b3a9-8fd5cec39185",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "75c15dcb-221e-475f-bb95-bb365dd70dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2c9fea-44fb-4f4c-b9ac-6eb1d1479c86",
        "cursor": {
          "ref": "406a9ae3-b4b7-4dd8-b032-aadef1398669",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "539d1506-f85a-42a3-a09e-9af5043942eb"
        },
        "item": {
          "id": "3f2c9fea-44fb-4f4c-b9ac-6eb1d1479c86",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "390076b7-15e8-45e6-9f84-98c30865393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6ea5f-c827-42f9-96bb-5fecb12b1d24",
        "cursor": {
          "ref": "554f204d-1ed5-42df-a355-c395d6138260",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "90d977dd-a5a0-48ba-bd5e-f15edb6b36a1"
        },
        "item": {
          "id": "a4b6ea5f-c827-42f9-96bb-5fecb12b1d24",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0ddc0aa8-2f67-43ff-8d77-e3f80c51509f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2430ab9-7e70-4450-80ba-ebf67107720e",
        "cursor": {
          "ref": "4d075254-b8cb-49b6-b495-73f56f75f6d8",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "488a21f5-4b20-4d6c-97b5-c9078d0d6efc"
        },
        "item": {
          "id": "f2430ab9-7e70-4450-80ba-ebf67107720e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6c53dfa7-4abb-4821-9308-ea2f92e5c772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405e0b93-d4b9-4aa2-b25c-13c8fe564ef3",
        "cursor": {
          "ref": "0671993c-d6ac-44d3-9f1e-0837e18ede16",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b8ed976-3491-4c3d-8859-765044c5fae6"
        },
        "item": {
          "id": "405e0b93-d4b9-4aa2-b25c-13c8fe564ef3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a62a6f2e-46b3-4ea8-8154-ff0d4a0db58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01564e72-4c8c-4e35-b3aa-c27950deac2c",
        "cursor": {
          "ref": "5cdfd215-f5fb-42cd-a93b-fa601440bc7e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1d3774f-8170-4a4b-8e50-18bfa45b966e"
        },
        "item": {
          "id": "01564e72-4c8c-4e35-b3aa-c27950deac2c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e37244fe-3755-4b13-94b3-0b32ad2c71e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c61712-f44f-4088-97c9-c00c27993e51",
        "cursor": {
          "ref": "2e264119-dc9d-4fde-beac-8286ebdb5499",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "03d12c31-0bad-4fc2-a545-b841baf1e3d8"
        },
        "item": {
          "id": "19c61712-f44f-4088-97c9-c00c27993e51",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6b962b47-279a-4a7d-9c63-43f7b95ce6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca8349-eee0-4d9a-9a1f-d25a3451b788",
        "cursor": {
          "ref": "156fa11e-b763-4e4b-aba9-cf25bbbad00a",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c4736c7a-bd4a-4c23-b8c9-407bc605ed6e"
        },
        "item": {
          "id": "f3ca8349-eee0-4d9a-9a1f-d25a3451b788",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eceb3339-4658-4652-abc6-537489abf5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff954417-2dea-46c9-b52a-fe9015edceed",
        "cursor": {
          "ref": "f2e7f2de-48ff-42d6-ab09-1412b333c189",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a12fb1df-70d3-42be-86c6-fa55f1de8f3f"
        },
        "item": {
          "id": "ff954417-2dea-46c9-b52a-fe9015edceed",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1501675f-6b3d-4b17-81b2-b233224ac6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd17325-c7d9-4620-a1b3-cb4b11b48c60",
        "cursor": {
          "ref": "f629bf37-3ab9-4fff-bf12-becb535f275f",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6c8efe76-2c2d-473f-b7e4-0d5c0ed53e27"
        },
        "item": {
          "id": "7dd17325-c7d9-4620-a1b3-cb4b11b48c60",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7b5c51d2-8f9b-411d-bbb5-139f1f592b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619e50a5-7d0d-4120-966c-ad4c9ddb1f7d",
        "cursor": {
          "ref": "4d38b84e-9015-45ee-8117-9edb5f9409a8",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "10d40926-37bf-49ee-8462-bd685c259504"
        },
        "item": {
          "id": "619e50a5-7d0d-4120-966c-ad4c9ddb1f7d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a2438f88-3843-41e5-8399-0b41ec61781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd51b9b7-9436-4c35-b170-8c6bdd52a557",
        "cursor": {
          "ref": "ff218672-435b-4361-b8f2-40a7ed89c166",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5133945f-d884-4204-8898-992708aebea4"
        },
        "item": {
          "id": "bd51b9b7-9436-4c35-b170-8c6bdd52a557",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2f46eb8-995a-4a86-ae2b-7db879aa6275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fb407b-ba98-4d24-88af-15cb7623e5a6",
        "cursor": {
          "ref": "d228438b-2871-4516-91c6-9bcaf501edaf",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "28ae70ae-85d7-4475-9fcb-5d3197bda901"
        },
        "item": {
          "id": "e5fb407b-ba98-4d24-88af-15cb7623e5a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a44540b-eed6-488f-ac22-5ea74a0c7445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548a40a3-5237-45f5-80e5-831c9ee07a94",
        "cursor": {
          "ref": "225cf076-c69b-458a-b2e1-edca86b6c06e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9ff51245-5591-46e4-b0c6-b37aca5a01c5"
        },
        "item": {
          "id": "548a40a3-5237-45f5-80e5-831c9ee07a94",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2750f8c3-b585-4c56-9c4d-6b23e1f0897d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51018014-fd38-4ee6-96d4-76cbfab19c2e",
        "cursor": {
          "ref": "0d6d1854-e505-4e80-af04-b940d24f1829",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dbe5c544-4648-46c7-8e6e-d3934b3fdbe0"
        },
        "item": {
          "id": "51018014-fd38-4ee6-96d4-76cbfab19c2e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4a848827-e1cc-4d64-a172-39dc89b23d7b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a648fc-42c9-4e95-beb2-dcc49217f4b1",
        "cursor": {
          "ref": "c6018db4-6cfd-42a8-a045-1d8b463dec71",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f66d0433-4909-4aa7-b865-85f9936a6c38"
        },
        "item": {
          "id": "b9a648fc-42c9-4e95-beb2-dcc49217f4b1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a96afc6e-4704-41cb-96c2-b751ed43487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59696a8b-3321-4b66-aa8a-c7789bcfa761",
        "cursor": {
          "ref": "5392dd7f-10e4-47ed-b951-388936736ec5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5f120f7b-5913-42db-9c03-3f0e51bc296d"
        },
        "item": {
          "id": "59696a8b-3321-4b66-aa8a-c7789bcfa761",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "127a2fd4-2a64-4bc5-87b6-452c9635a07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab3ab9-8168-4e21-b239-136c04af3a60",
        "cursor": {
          "ref": "37c615f6-d089-40ec-9aed-77236637cd5a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "77b7d63c-190b-437c-9ea2-248e809ee253"
        },
        "item": {
          "id": "dfab3ab9-8168-4e21-b239-136c04af3a60",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1724c741-22b6-470e-895c-369b9b957c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d3b96-95c0-4f0d-adfd-ea275f799543",
        "cursor": {
          "ref": "2e101225-586f-4bd3-b473-e29c70a2aa5c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ddef66d7-b115-47be-a46f-db3923cb8856"
        },
        "item": {
          "id": "ac4d3b96-95c0-4f0d-adfd-ea275f799543",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e100032-23fc-4a0a-8b55-32aa72d80676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9509f3e9-cf78-4391-944b-99f076e83442",
        "cursor": {
          "ref": "7ceeded3-c156-469d-923c-f42f512df767",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6080c082-7409-42e2-b331-f1bb918d1cd4"
        },
        "item": {
          "id": "9509f3e9-cf78-4391-944b-99f076e83442",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bdaaae6b-9ddf-468f-8983-26e98826e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d3e4e-7bc8-4193-8e62-49b3db252e28",
        "cursor": {
          "ref": "f35dbe51-5e84-4b70-99eb-3df2ea9e6751",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7dff42e9-e35a-4fd5-9c0b-fb70fe8fb0c2"
        },
        "item": {
          "id": "e12d3e4e-7bc8-4193-8e62-49b3db252e28",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e9fdc6f5-b97f-498b-aace-5b0871d9c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602162a2-ad4c-44e0-98f3-2ba721d5418b",
        "cursor": {
          "ref": "18317b6d-8655-4141-a3bf-de85eb984940",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0abd7baa-80fe-41ed-8fef-a9899840bbbc"
        },
        "item": {
          "id": "602162a2-ad4c-44e0-98f3-2ba721d5418b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b88f5702-ece5-4cee-8153-9095bdee0c16",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706ddc10-4448-4237-b9dc-5d4bd5f68c78",
        "cursor": {
          "ref": "5f3ce2c7-8f9d-4878-88d4-9e382dcdde4a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfddae77-08e9-466b-9d06-1e33fcb7e829"
        },
        "item": {
          "id": "706ddc10-4448-4237-b9dc-5d4bd5f68c78",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd25ca71-db47-49de-8313-bbede2a79a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a549fc0d-fa08-407a-9e3c-78170b341d22",
        "cursor": {
          "ref": "e46c2562-ef1e-49d5-b3e6-abc6c097f561",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "103806df-f110-4774-9f88-633c4da9cc75"
        },
        "item": {
          "id": "a549fc0d-fa08-407a-9e3c-78170b341d22",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41fb2850-dc00-47eb-87f1-2f1f07f4cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8a6753-038b-4e23-9f3d-2261a817d4cf",
        "cursor": {
          "ref": "49360482-f9d1-4917-ab87-562c20ac190c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c27dc9c-2ad9-494b-9737-8b45ce7d9444"
        },
        "item": {
          "id": "5b8a6753-038b-4e23-9f3d-2261a817d4cf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e9a116eb-0621-4dc2-8495-f1239682c227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c55e16e-033f-4de9-8d5c-c82d144b4411",
        "cursor": {
          "ref": "8d3c8282-ddb0-4164-a49d-78dda2fbce69",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "13da1d1f-b05c-4c2f-b308-e46476c4a5df"
        },
        "item": {
          "id": "7c55e16e-033f-4de9-8d5c-c82d144b4411",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99abf1bb-b8f0-4fe6-b2d7-f9391975c0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d177c-ba6b-4f88-9f38-e8192a3afe7f",
        "cursor": {
          "ref": "b3f0d1c1-a17a-4aa6-ae4a-21d867746a8d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fbd58908-ac82-4c3b-b7b1-a50c8a46dbff"
        },
        "item": {
          "id": "6c0d177c-ba6b-4f88-9f38-e8192a3afe7f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c34889b9-2e54-4aa2-a1e7-44fac3ad43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaf4dc4-c78f-43ef-b70c-72dfbdc90be0",
        "cursor": {
          "ref": "263b5de8-ab00-4614-b937-1541abb28937",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dfdc583c-5e0c-4529-a046-d9f3b7d8ab88"
        },
        "item": {
          "id": "7eaf4dc4-c78f-43ef-b70c-72dfbdc90be0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40315f9a-b574-4e75-aea2-9dfc8ee58d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88db55e3-b22d-4cc8-9e38-4e10d8a0c303",
        "cursor": {
          "ref": "acb4a513-5b4d-4627-a31a-ec84feafef9f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9ac99c57-a8c5-46f0-a3dd-7045a47e223d"
        },
        "item": {
          "id": "88db55e3-b22d-4cc8-9e38-4e10d8a0c303",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "57a913a8-842a-4f87-8bcd-789c3e988ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b1b65b-7e8d-4608-a0ee-85a39704697e",
        "cursor": {
          "ref": "86ab1ee5-9984-479d-838e-5612d2b4fb37",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6bfa871-d9a8-401a-a2d1-b828592525bf"
        },
        "item": {
          "id": "93b1b65b-7e8d-4608-a0ee-85a39704697e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f931f74e-5d41-4419-aa2f-e5ad5dbd96ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e9bdc6-95f2-4764-8b78-5c16d821e494",
        "cursor": {
          "ref": "a2979070-c253-473e-8cac-419f10382274",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7be19793-ac42-42fd-aa70-b9d27099eb16"
        },
        "item": {
          "id": "c2e9bdc6-95f2-4764-8b78-5c16d821e494",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a6254631-de7a-486b-b1f8-8974d1382f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c7cf7-7af3-4815-91ab-fed7c5f39e04",
        "cursor": {
          "ref": "8982b698-4e00-41ef-be86-a1d6cd2a7671",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "316de06e-19ae-4004-add5-8f1a13c2c4b1"
        },
        "item": {
          "id": "7d4c7cf7-7af3-4815-91ab-fed7c5f39e04",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d234604b-4510-44ae-8926-416b887b0c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de808e22-f34c-44dd-ab51-53715d1bb572",
        "cursor": {
          "ref": "662f87f3-a9f5-4f34-b452-045ab05d7a1d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af578441-9239-4e12-8942-256bb25cbffb"
        },
        "item": {
          "id": "de808e22-f34c-44dd-ab51-53715d1bb572",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "85d1e4c1-9bdf-40d8-be3a-b301f2cd454c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff4a628-8a8e-482d-aadc-94d1ea2b4245",
        "cursor": {
          "ref": "25bfdb80-4584-4b0f-9fa4-027dbea6d4c9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79b8e578-32e4-49c6-8738-58325bcb3e4a"
        },
        "item": {
          "id": "eff4a628-8a8e-482d-aadc-94d1ea2b4245",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1aaf216-0059-4ba7-a0ce-64f11d0eaaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5249ac85-58a8-498a-b6d1-a71f343e6741",
        "cursor": {
          "ref": "72765033-ee70-4cde-9ecf-9eabb0bfb00d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b39f4c49-4873-4c35-9171-a7134bb01b2e"
        },
        "item": {
          "id": "5249ac85-58a8-498a-b6d1-a71f343e6741",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "887fc9ae-9feb-4ab9-9b01-f0c982c70989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6281b654-9872-43e2-99fa-05511fc8d7cd",
        "cursor": {
          "ref": "885818a2-3757-4794-bb7c-66526c02f9a1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67139dea-054f-4262-ad99-fed7add32201"
        },
        "item": {
          "id": "6281b654-9872-43e2-99fa-05511fc8d7cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eeea743d-405f-480b-a6c9-70e5cb9395d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9d0c37-bce1-4b77-bdcf-aeece182079d",
        "cursor": {
          "ref": "0a43c1cc-ac5f-4570-8beb-271a7ee29659",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "feaf9210-ee8d-48c7-8eb2-63a56ad9bba1"
        },
        "item": {
          "id": "1d9d0c37-bce1-4b77-bdcf-aeece182079d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e5cf1b79-7170-4e3a-ad4a-f9b989076ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb114f4-be44-477f-8f43-cc3f4e407ea8",
        "cursor": {
          "ref": "6eff726a-d497-4764-90fa-c227f89ff448",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f3d65b62-fae9-4f4e-a575-ae741e84c60a"
        },
        "item": {
          "id": "fcb114f4-be44-477f-8f43-cc3f4e407ea8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b2bd9576-a452-4575-8dd8-7512f13dd57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a728756f-8909-406a-bc3c-ce8b5dcb2bff",
        "cursor": {
          "ref": "cc832af9-3861-488b-9678-8d989883fe57",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7d1a6988-e87d-4277-997f-b7c0120c7e2e"
        },
        "item": {
          "id": "a728756f-8909-406a-bc3c-ce8b5dcb2bff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b28f13e1-f531-4028-adf8-1b84de41d3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a937e5-d918-4c66-b9cf-f31557da6fc1",
        "cursor": {
          "ref": "f64a27f2-f5f0-4aae-ac9e-ef7f7af7b53c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "271a957e-33c4-4cc0-8111-4179a0206200"
        },
        "item": {
          "id": "b4a937e5-d918-4c66-b9cf-f31557da6fc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "156d7973-5895-4e4f-88ec-9a05e324e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b23b43-84d2-4975-b141-168534471794",
        "cursor": {
          "ref": "af9b4503-a3e2-4f99-87a6-4cc0cb8d3334",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "562221b9-5910-49a3-8fa6-9c7ed8700539"
        },
        "item": {
          "id": "e7b23b43-84d2-4975-b141-168534471794",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9f5f985d-431b-4fdf-8915-1e451f2148bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a77b83-55d8-448d-bc5a-d25a27dff025",
        "cursor": {
          "ref": "62792ce6-b097-49b8-9c97-195763b3e3b4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8f49938a-1dd3-4d9b-9ebe-76061b789802"
        },
        "item": {
          "id": "f1a77b83-55d8-448d-bc5a-d25a27dff025",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1378b78b-588c-4001-8904-e053545275ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55437cd5-b3ca-4d07-b5ea-1e3ffed81f45",
        "cursor": {
          "ref": "61eea77f-4147-487a-b363-fb4b28e09fe4",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bbbf23af-d296-4508-b30c-7b6f3c1db904"
        },
        "item": {
          "id": "55437cd5-b3ca-4d07-b5ea-1e3ffed81f45",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "673a87cf-e71d-41c6-a81e-4266c06e2eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4646bb7-2b24-48cf-87bd-a13656ae32da",
        "cursor": {
          "ref": "973f1c9a-722f-45f1-8b43-7777e6f320c6",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6dc54e6b-6740-493f-93f7-61b8dc61447b"
        },
        "item": {
          "id": "a4646bb7-2b24-48cf-87bd-a13656ae32da",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb2116bc-bc7d-4adc-85bc-db4ca75d7b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5cc115-c5ee-4a18-bc70-22ee31300458",
        "cursor": {
          "ref": "c7aaa63c-a2ef-48e9-84ef-a64f25c005c0",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c8154e64-2326-447a-abc3-467c659358d5"
        },
        "item": {
          "id": "9a5cc115-c5ee-4a18-bc70-22ee31300458",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "22f95910-b9fe-489f-a330-92d8ee530fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fee963-f919-4837-8dca-62eeaa827b5f",
        "cursor": {
          "ref": "7a794560-9a14-49f0-93a0-bb3fced7f0a5",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "977939b1-07d1-4f55-8c46-6abea77beacd"
        },
        "item": {
          "id": "15fee963-f919-4837-8dca-62eeaa827b5f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66127fa8-793d-4a2a-aed5-0ffcd9d50dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300774f3-abf5-427f-9cdb-c13d9f10ec9d",
        "cursor": {
          "ref": "193a7e37-1128-4490-a495-aea7a983fda7",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "24bc68c4-902a-4a05-a2f7-d19d595c8f91"
        },
        "item": {
          "id": "300774f3-abf5-427f-9cdb-c13d9f10ec9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "46bc4080-8fbe-4984-a2bc-1f8eda492b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eb9a7d-5399-4c25-9e96-ea159c00fe10",
        "cursor": {
          "ref": "1d68293b-436a-4c0e-bbc2-969a50edcbc5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "449198c2-52b3-49e8-9f36-74ec4ae71972"
        },
        "item": {
          "id": "d9eb9a7d-5399-4c25-9e96-ea159c00fe10",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e14fd2bd-3383-4706-88b9-e9d72222fdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c11af3-9b57-489c-84d9-a19c9d64c2dd",
        "cursor": {
          "ref": "cb7e5b66-2495-4088-ad3e-ecc5b1a979ea",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "625d46d1-fc53-4af8-a5aa-8f2dc1fe36b4"
        },
        "item": {
          "id": "41c11af3-9b57-489c-84d9-a19c9d64c2dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "72be01d9-1f69-4bc2-9545-e6063c67bfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bc7b2-c7d9-4bc3-a509-4650c470b104",
        "cursor": {
          "ref": "b62a3b23-78fc-4cd8-b789-a2c17f084862",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77fecb5c-9076-4ff4-8c04-7756002269d1"
        },
        "item": {
          "id": "4c0bc7b2-c7d9-4bc3-a509-4650c470b104",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "77d59c8a-411e-4d2a-8e1f-c41b1e4fe547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b51d66-206c-4568-a655-1e637280f13f",
        "cursor": {
          "ref": "41dc1f9e-d9bd-4f26-876e-fe4182129281",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c844ebd-b3b8-483d-af2d-ce1a762271df"
        },
        "item": {
          "id": "73b51d66-206c-4568-a655-1e637280f13f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1a8b0495-4a19-4701-9635-eded60c14ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b474d6-f7e0-4c2f-8c4f-cdcb3ae863b1",
        "cursor": {
          "ref": "f2ed6643-516e-4202-ba60-c1a89ec9763f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cbbb7f15-e42d-4f3b-9c5d-20a768ef3be3"
        },
        "item": {
          "id": "90b474d6-f7e0-4c2f-8c4f-cdcb3ae863b1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7bf7ff85-f6b2-4a4e-8bb3-b8f7f324e509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701eb668-42a4-42a3-89dc-e54bc8ed72d5",
        "cursor": {
          "ref": "26af114d-f871-47c9-8a5b-3e959190e01c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "768c1ea1-1a54-43d0-9966-3bd4cd38129d"
        },
        "item": {
          "id": "701eb668-42a4-42a3-89dc-e54bc8ed72d5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c3d69965-1644-434c-848d-a6a2731e2d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a94fd-0dce-4b2a-99b9-504a332c7b07",
        "cursor": {
          "ref": "76024ac0-6b9f-4c23-8675-bf716d302ba1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9a8b3572-8524-424f-91aa-351046916637"
        },
        "item": {
          "id": "751a94fd-0dce-4b2a-99b9-504a332c7b07",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "facdd1ab-c604-4ff3-b7ad-4933e1e0d0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e46fb4e-9678-41d9-a528-bc6602da6065",
        "cursor": {
          "ref": "20089f76-68c7-4162-bb45-7882871d878c",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f40b8a75-2448-4357-8977-819a60e9457d"
        },
        "item": {
          "id": "7e46fb4e-9678-41d9-a528-bc6602da6065",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3515831-0590-49f0-bd36-8459e3d4e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb09c65-5f6d-4600-be73-d331fe143917",
        "cursor": {
          "ref": "b827fabd-539f-4583-83d5-44a99c83fba0",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1d17980c-a238-4d90-9087-ba1b368ed6b8"
        },
        "item": {
          "id": "7fb09c65-5f6d-4600-be73-d331fe143917",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d70f0c15-7595-446a-aed9-52743c6d2bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e25bda-99f9-4bff-b638-387242f1ffce",
        "cursor": {
          "ref": "828ddd8d-069a-48a8-8c70-467d7c21414a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a57a6786-b8d3-4d07-a8be-d3a5ce1bda9e"
        },
        "item": {
          "id": "28e25bda-99f9-4bff-b638-387242f1ffce",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6cc12d9f-91e5-4918-91d1-380cb25fcf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f73e17-152c-42b9-8029-05838a02bd8a",
        "cursor": {
          "ref": "72809348-831e-4277-b924-2e4d4a2cf887",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7dff7bac-47f5-4284-9e7b-bca456f799e0"
        },
        "item": {
          "id": "03f73e17-152c-42b9-8029-05838a02bd8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ff54fee-a858-45ef-87ff-01dcf837c172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407afa74-5d5d-4f44-8387-88fb1726c04d",
        "cursor": {
          "ref": "7b1ce253-8b28-42f7-a2e9-4f95aaa39109",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "981af09a-dc9f-4748-b548-7a0c1da248f1"
        },
        "item": {
          "id": "407afa74-5d5d-4f44-8387-88fb1726c04d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b3549654-2bec-49f2-a465-541de26d2e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d0a7d-1dd7-4c4c-994b-de678eb56f9e",
        "cursor": {
          "ref": "5aa3d38a-e884-4ad5-8cdd-b393386d1366",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b4a75d2b-4235-4347-b34e-256df9a65a0f"
        },
        "item": {
          "id": "ca5d0a7d-1dd7-4c4c-994b-de678eb56f9e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6673d23c-cb38-49e6-bb9e-bad9e0b7a868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579546f-ce7c-4066-ad90-4538494e1254",
        "cursor": {
          "ref": "635db177-619c-4755-872e-886cb93d728e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "de6d1236-1085-452c-9d72-8630c1a98e33"
        },
        "item": {
          "id": "3579546f-ce7c-4066-ad90-4538494e1254",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "210a9695-b127-4ce7-9d3c-05fa7434b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9814ef-c48d-473b-ac29-98a171ccb19d",
        "cursor": {
          "ref": "c5ceea1a-23fc-4e76-bc72-e26a0815af82",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72b6f0fc-42b5-45bf-a03a-30478de6c38b"
        },
        "item": {
          "id": "bf9814ef-c48d-473b-ac29-98a171ccb19d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2645c25a-6d54-4857-97f0-7ea8162178cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0c8b78-6e09-4eb0-b07c-1826bc0d418f",
        "cursor": {
          "ref": "727156d7-6ea1-44a9-aacf-45d4c094e678",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04b5fd5e-976b-400d-96b0-dcdaefa8c300"
        },
        "item": {
          "id": "4d0c8b78-6e09-4eb0-b07c-1826bc0d418f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48407ddc-6fdc-42ae-97b8-ede1193eda78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c1816-8d12-4c8b-a150-4defc0293d5b",
        "cursor": {
          "ref": "abf451da-aa7b-42de-a2d9-4e82b40e659b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "49f71c8c-22e0-475e-b6ab-51ce003e4ea5"
        },
        "item": {
          "id": "158c1816-8d12-4c8b-a150-4defc0293d5b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "774d85fe-b8e3-464d-9c05-1670c205729e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb7fa4d-5c99-4937-b26a-65caeb93c74d",
        "cursor": {
          "ref": "daad9275-69e3-419e-a0fd-a94670fee83a",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "541877ed-139a-4ecf-bbb4-521dba15d2e3"
        },
        "item": {
          "id": "ecb7fa4d-5c99-4937-b26a-65caeb93c74d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1661b932-41f3-4340-b95c-c25127c6a588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f76559c-a0b4-4183-a9ed-0c8eab964a1d",
        "cursor": {
          "ref": "cb368392-f972-4c75-893a-6811e8b519f5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dc74a279-40bb-447b-85f6-e940b18ba987"
        },
        "item": {
          "id": "0f76559c-a0b4-4183-a9ed-0c8eab964a1d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "10fab841-2dc0-4e89-b58a-ccc51c073dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dbda2a-362e-4b79-adf5-5545830dbf44",
        "cursor": {
          "ref": "6d6d3644-dbf1-4ad6-8e3b-9a9727476b38",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3f8408f0-e08a-408c-b286-e17145de84d0"
        },
        "item": {
          "id": "d5dbda2a-362e-4b79-adf5-5545830dbf44",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0d7e413f-f9ce-424f-ab36-0c687825b2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baff537-2c4d-461f-a5e4-668ae81509df",
        "cursor": {
          "ref": "72d485ab-0265-4636-b429-89cbfa648ea1",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f7803f0-337a-4d95-8f80-eb0b257e4909"
        },
        "item": {
          "id": "7baff537-2c4d-461f-a5e4-668ae81509df",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "845b0af3-a703-4d15-aa8c-e1e96005e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baba78f-2172-433e-b34a-941473a27591",
        "cursor": {
          "ref": "2f93a1d8-94f6-4eb7-b38a-e1d591846a69",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "962b361b-6903-4e38-a19e-0885d9b2ddcf"
        },
        "item": {
          "id": "8baba78f-2172-433e-b34a-941473a27591",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "96dbd5a2-6b46-44ee-a6b2-412c5f2dc9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4885b0a8-220d-4389-bb73-887cc42e979f",
        "cursor": {
          "ref": "a6a654e6-2b9b-43a6-8dea-38b443b54b68",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "64380856-0d69-4884-b5c3-cf75a4905ba2"
        },
        "item": {
          "id": "4885b0a8-220d-4389-bb73-887cc42e979f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "89b1915e-14ac-4a68-85ce-8468bd039a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fc31fd-286a-4482-91a3-3034eab02e1b",
        "cursor": {
          "ref": "6f8bb475-fe96-4bd8-ad9a-72322ee86b9c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "99835537-a877-45d6-8a1f-35ab3b962c3c"
        },
        "item": {
          "id": "c1fc31fd-286a-4482-91a3-3034eab02e1b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "248900d2-edc8-463c-bd2f-a805fcee9a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbedf9e8-7316-4e90-90e5-4ff51276cbae",
        "cursor": {
          "ref": "83b48b8e-707f-413c-94b4-d5baf7070a5a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "869ae527-a3ff-44f2-a1ab-7ad266509bfd"
        },
        "item": {
          "id": "fbedf9e8-7316-4e90-90e5-4ff51276cbae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "793b47cc-4942-4cf7-98ef-e0693425378a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ce87b4-3c96-4e5b-8799-f0e715451aaf",
        "cursor": {
          "ref": "6a51c3fd-2d3d-4e8d-8c2d-4ce8a9d051a4",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "14305a03-f11d-48bb-8cce-7b3dddcb1400"
        },
        "item": {
          "id": "f4ce87b4-3c96-4e5b-8799-f0e715451aaf",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "21a2f35e-8a73-47ca-b9c5-3664769c97d8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 204,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88594e94-ba4e-4eef-9fa9-14d252ea7ea0",
        "cursor": {
          "ref": "a71fb136-3186-4f20-8362-059b0d47b1bd",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39c7a11e-d3ac-4a02-a4b4-33ebac24ecf0"
        },
        "item": {
          "id": "88594e94-ba4e-4eef-9fa9-14d252ea7ea0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "edfe1373-5c80-41bc-9516-81aa2fbfa1b9",
          "status": "Created",
          "code": 201,
          "responseTime": 118,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d9d9cf-4686-4fca-b7a3-0fd715cf13a7",
        "cursor": {
          "ref": "2b18af4b-6af5-49ec-afc3-373fa5d82c0c",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1a1bde78-fc4f-4c0c-b168-634cc7103602"
        },
        "item": {
          "id": "24d9d9cf-4686-4fca-b7a3-0fd715cf13a7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8d74b069-d47a-4904-8c5a-1b9f62accd1d",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e2ee0d-b8f3-4d91-bda2-f1ab2623f642",
        "cursor": {
          "ref": "de34f5b2-aa82-43c2-af3d-adcd65349123",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "59548200-2a50-4a3f-ad51-4a418386ad1b"
        },
        "item": {
          "id": "d3e2ee0d-b8f3-4d91-bda2-f1ab2623f642",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5e95ef82-3836-4b1e-8f03-3d7cf5c86722",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d626129c-0fe5-4afa-9811-e701c49c03b8",
        "cursor": {
          "ref": "e32fe379-b6ad-40a0-926d-07eac7723fd1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "970ba134-809e-49bb-a6ea-efe086ea588b"
        },
        "item": {
          "id": "d626129c-0fe5-4afa-9811-e701c49c03b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f3c35541-1b08-4194-927b-9471459d51ed",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c511aa-fc49-4ef3-a6f1-117a433f5159",
        "cursor": {
          "ref": "00ad577a-d1c0-4130-a424-0d8353ef79cc",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b4f93211-9a7c-46bb-afa8-8d4ec62135a9"
        },
        "item": {
          "id": "46c511aa-fc49-4ef3-a6f1-117a433f5159",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "826cde80-ae12-4e6e-8eef-928b0ee1f4c7",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2459f0af-e309-4c25-aee1-af58d6be9127",
        "cursor": {
          "ref": "1a7b6480-b7e0-489d-9d02-c47fd9d3119e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0a3a01e6-7247-4abd-a3d7-82e4a8c15c02"
        },
        "item": {
          "id": "2459f0af-e309-4c25-aee1-af58d6be9127",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "69e56761-c9f1-4f4a-a356-3b2f2a079430",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea0a6e8-9272-43e5-89e5-aff4e5712747",
        "cursor": {
          "ref": "224a0928-6246-45ce-adac-2bd0ec1666b7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b22a1a20-81c7-4a6b-a965-33c91e1a7dff"
        },
        "item": {
          "id": "8ea0a6e8-9272-43e5-89e5-aff4e5712747",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e94b1aa2-3733-4ff3-ad81-2a8db598ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea0a6e8-9272-43e5-89e5-aff4e5712747",
        "cursor": {
          "ref": "224a0928-6246-45ce-adac-2bd0ec1666b7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b22a1a20-81c7-4a6b-a965-33c91e1a7dff"
        },
        "item": {
          "id": "8ea0a6e8-9272-43e5-89e5-aff4e5712747",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e94b1aa2-3733-4ff3-ad81-2a8db598ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7899a7-d909-49d4-ab4d-842296e4e4fa",
        "cursor": {
          "ref": "f6ab253d-d4a2-42af-b317-dd09184ac69f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "797b8259-0c7e-40d5-84a1-08360b8b4a49"
        },
        "item": {
          "id": "ff7899a7-d909-49d4-ab4d-842296e4e4fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e4f4f9b-2d61-472e-b3c6-d2d78c37cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45fdf9c-46ba-4d19-bd6b-43b7d12358b4",
        "cursor": {
          "ref": "071892fc-7194-4047-a413-5f9c0e926e58",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a94c2e98-d397-4c10-8ffe-a085af614410"
        },
        "item": {
          "id": "e45fdf9c-46ba-4d19-bd6b-43b7d12358b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "810e67bd-ea18-4fd3-8e91-cdf7eb842bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb38a3-651f-42dd-bf2d-85363ade5dea",
        "cursor": {
          "ref": "bc3d78d1-610e-4fad-81dc-231990c4bb6e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91d33899-13a5-4f6c-9a03-0c754417a2fc"
        },
        "item": {
          "id": "8dbb38a3-651f-42dd-bf2d-85363ade5dea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ca5ce222-4bf6-46f7-baeb-53bc1e6894fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adac2f16-6e31-474f-b7ab-87a274bccf02",
        "cursor": {
          "ref": "d991a689-d1fc-4da7-baaf-da3ddbe73a7a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1997b1ba-2cee-4b62-a5ef-c6b3e925cc9f"
        },
        "item": {
          "id": "adac2f16-6e31-474f-b7ab-87a274bccf02",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a4624d30-9951-4055-900e-611e074ab93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f95c24a-efbf-474f-b06a-cea50586a547",
        "cursor": {
          "ref": "26dc4bb3-0fbd-49ad-b471-600125056d97",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4dd51ac2-2b3d-4647-a455-0434d5104b51"
        },
        "item": {
          "id": "9f95c24a-efbf-474f-b06a-cea50586a547",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de7b11d4-992f-43ff-ab53-4a7983e2a504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c105e59-6380-43c1-99b2-ab05a3771149",
        "cursor": {
          "ref": "e1ea37c7-af80-409c-afc7-b5a9ee56b640",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2bc3d3c6-93d3-4a59-a471-5d10fcf0eefe"
        },
        "item": {
          "id": "4c105e59-6380-43c1-99b2-ab05a3771149",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f41a7de2-1cdc-43e3-8126-b4af1eee319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcd5b6f-43e0-4b1c-ac1a-4e684979662e",
        "cursor": {
          "ref": "2d33140f-d887-4f5d-b777-3ec581000ed1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "271af3a3-c8fe-48ea-9034-6b0d8e41503f"
        },
        "item": {
          "id": "5fcd5b6f-43e0-4b1c-ac1a-4e684979662e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "62e96f94-0c6e-41fd-b8df-1c4b906c6041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f84e06-7927-41bc-9c03-a137fd7918be",
        "cursor": {
          "ref": "1fb6ab0d-3704-4d82-a0d8-93b78670c4f4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b13bc67e-af15-4fef-9a9e-f9f357b47c19"
        },
        "item": {
          "id": "60f84e06-7927-41bc-9c03-a137fd7918be",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7cfa41f6-f7b0-4613-b630-751e8cf8f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3649066f-6119-4cde-946e-de41a4bdcaf9",
        "cursor": {
          "ref": "ac7bd088-756b-4321-96f5-925a12b616c4",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "210212d3-1b06-4716-a86b-194bd0486658"
        },
        "item": {
          "id": "3649066f-6119-4cde-946e-de41a4bdcaf9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "804d1de7-2ec5-4e40-a959-4996db584f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656ebc4b-abff-4e8a-9dcf-190c790ca607",
        "cursor": {
          "ref": "4488d351-f8b5-4b8f-8f1f-0f1707943180",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7c1b4da1-4b82-47c7-a840-2c2d59350f63"
        },
        "item": {
          "id": "656ebc4b-abff-4e8a-9dcf-190c790ca607",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbc29360-ebef-4c31-a35b-29175f8b4d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b954c-937a-45ed-acbe-120cc7f21bbc",
        "cursor": {
          "ref": "25f494aa-81da-41d4-95d8-38369ae6b125",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "40add89c-a9a3-43e9-8103-82be8950e7c8"
        },
        "item": {
          "id": "031b954c-937a-45ed-acbe-120cc7f21bbc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6511cee7-c103-44cb-bbcc-b010665469ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32b0d78-8fce-430c-9108-10b07b7d2d6c",
        "cursor": {
          "ref": "14db9db2-ffd7-4a69-ba6b-a84daf645d07",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "298a6af1-b768-4296-a1df-a7de8474b387"
        },
        "item": {
          "id": "b32b0d78-8fce-430c-9108-10b07b7d2d6c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4960eb14-2702-4823-a1d6-262a0f9c06a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec68213-f2ec-4b28-b0f2-0588df4c8ca3",
        "cursor": {
          "ref": "431b12e7-7122-478c-995f-d59bc0181be6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6826bce6-7079-4eba-8a17-ab59e86144d0"
        },
        "item": {
          "id": "6ec68213-f2ec-4b28-b0f2-0588df4c8ca3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e1b1982-ac3c-4e37-857b-fa13896ee4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e153a4b-0741-41b7-b99f-910237028017",
        "cursor": {
          "ref": "b1e6f436-980d-4e12-9bd4-25a51f571032",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "da9aa73b-e37a-4b06-9de4-1c9308f2e832"
        },
        "item": {
          "id": "0e153a4b-0741-41b7-b99f-910237028017",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0c393dc-015e-42f4-9125-e2c0768d0aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25275426-cb55-47dd-b65f-bd1b43c614d7",
        "cursor": {
          "ref": "4a1feda7-9561-4816-a3a7-c3a9f2d8cc45",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6bbbc51b-c32d-4832-8831-34a1f5440cbb"
        },
        "item": {
          "id": "25275426-cb55-47dd-b65f-bd1b43c614d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5e15bfaf-7878-4c22-a9c4-943a48b25941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a100430-7584-4c7e-9eb2-526ba8342354",
        "cursor": {
          "ref": "2827f228-7c80-4a12-8019-5be8b2a1c12d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a48b88ed-f714-47c2-a54e-1afe1e6b8640"
        },
        "item": {
          "id": "9a100430-7584-4c7e-9eb2-526ba8342354",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b797ec32-32b6-46b6-b1cb-09d44ddef0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64415b8-76cc-4a5a-bd8b-a1c5bb121769",
        "cursor": {
          "ref": "a86f8e7b-b280-4342-a274-5f76bc61275d",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "03f5b51e-fd61-4f21-8d07-c4baad890cdd"
        },
        "item": {
          "id": "b64415b8-76cc-4a5a-bd8b-a1c5bb121769",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "db5877e9-ef76-452d-999d-7ba2bf39f241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6f1391-1af5-4a99-9aec-7b070ffb1a5f",
        "cursor": {
          "ref": "ac57f31e-dd06-4bfc-ba26-f9627de8da56",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eefbf4c7-d4a6-4bec-abeb-790127b6be88"
        },
        "item": {
          "id": "0e6f1391-1af5-4a99-9aec-7b070ffb1a5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "efea14bf-285c-4bb2-a744-ada3b6278e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834f6c6-9687-43e9-838d-99f166cdd953",
        "cursor": {
          "ref": "995982cc-9f47-4959-b5e9-1e8b720be2d9",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "99e72be9-6d23-4d2d-92a4-a57ce88393d1"
        },
        "item": {
          "id": "8834f6c6-9687-43e9-838d-99f166cdd953",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a59a0f4b-ef54-4fdc-b468-ffec8d830e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcdffa8-67d3-4175-adbc-2ea6fecdf001",
        "cursor": {
          "ref": "42684a49-ce37-4c53-9696-7ef155626e8e",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d32db8f8-a946-4aa5-94d4-b3e29ce334f9"
        },
        "item": {
          "id": "8fcdffa8-67d3-4175-adbc-2ea6fecdf001",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6d63b8d6-1803-451d-af3c-e1a34284c8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae860b27-8e26-41bd-a156-68aefc54fb4b",
        "cursor": {
          "ref": "ea7ada3d-4fa6-42b3-a0e9-c5ddd8c2b44b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d27b8245-af06-48a6-a879-44a2f5488e43"
        },
        "item": {
          "id": "ae860b27-8e26-41bd-a156-68aefc54fb4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e2b0e8c8-26b2-4acd-a9d3-84700a5d9fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e437b-f29a-4297-a287-9820b48972ee",
        "cursor": {
          "ref": "edce5ab2-2355-405c-867a-213efa1bdc82",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8a62a03b-76ff-4282-9c6e-9ebcdd5b1ebe"
        },
        "item": {
          "id": "9d5e437b-f29a-4297-a287-9820b48972ee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86bb9ed7-dee5-4113-a9e7-e64fbf4233d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cbed21-8326-4f0a-ac03-928a77ccaf9b",
        "cursor": {
          "ref": "ddbd3c80-5596-4a6b-abfb-16d21e3bbd39",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0aa2504c-f256-42ee-ab06-dd2c14f1ae66"
        },
        "item": {
          "id": "67cbed21-8326-4f0a-ac03-928a77ccaf9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87b81ce1-081e-4f92-91ed-4b8a18dd2e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d76d0c-770d-4620-b824-513733fed596",
        "cursor": {
          "ref": "a5d7ba19-e046-42f2-bdb7-fb98f725acce",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e53fea27-14ee-4c97-92f8-6bb4c48eaa74"
        },
        "item": {
          "id": "51d76d0c-770d-4620-b824-513733fed596",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8befddc-1535-4e62-b7d4-49df73824f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6198ae77-f7e0-449a-9bc4-c5e8127bf9d2",
        "cursor": {
          "ref": "bd535c18-9d5a-4501-a43d-83374071bf7b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "18e65add-d734-4528-8ab8-3a8d36c774e4"
        },
        "item": {
          "id": "6198ae77-f7e0-449a-9bc4-c5e8127bf9d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f12dc5e2-db42-4fd7-8137-eb3f8082474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7916ea-1438-4f98-8c07-95dfa0fccffd",
        "cursor": {
          "ref": "d7c5cef9-c6ba-49c5-af58-aae0200b9b8d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0ddcb9f7-5418-4811-beb9-76142a1e2ada"
        },
        "item": {
          "id": "ed7916ea-1438-4f98-8c07-95dfa0fccffd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3081091e-4765-47bc-b98f-ba9775d545e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0444bc79-d673-4830-86e1-fa2fc1a49429",
        "cursor": {
          "ref": "a1a96a40-654d-408e-9ba6-d070f3bec4ad",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0de8ecf0-1af9-4e59-800f-604a78d3b427"
        },
        "item": {
          "id": "0444bc79-d673-4830-86e1-fa2fc1a49429",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "93657f49-6d7c-4e08-85ee-3fe5b6f24070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76ec031-f191-49f3-911e-2162636f60df",
        "cursor": {
          "ref": "d9cfdc32-7198-4447-8efd-e8adecf97230",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bcbead40-f463-4d49-8aec-be7acf428a72"
        },
        "item": {
          "id": "e76ec031-f191-49f3-911e-2162636f60df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3cd6b21d-9ad9-446d-bfff-75d89808b5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cb8b2c-ccd7-498a-a195-e60be1c29dd1",
        "cursor": {
          "ref": "3c09667b-6fd6-4c8b-9340-7254bfb0dfa7",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "592939f3-ed75-4bfa-b79b-586ea72b61ce"
        },
        "item": {
          "id": "a4cb8b2c-ccd7-498a-a195-e60be1c29dd1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2312927-98c7-4fc3-8029-2b4145cb1a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4262403-df81-475c-9c9a-6e717e6f06d1",
        "cursor": {
          "ref": "15d72aad-e7ea-40c6-aa57-c319b120e68a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba9ae28d-5a6d-43c1-beb5-6fce9ca6ff35"
        },
        "item": {
          "id": "a4262403-df81-475c-9c9a-6e717e6f06d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "21503513-1a12-4e34-b898-cc5faa395dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0c42e-db58-413b-9bb8-072f3f6fbfb1",
        "cursor": {
          "ref": "22ed01e2-99d2-4b77-9f4e-358fccc13f48",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b3bb15ae-7ada-4042-83a3-07fdfdd93066"
        },
        "item": {
          "id": "15f0c42e-db58-413b-9bb8-072f3f6fbfb1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "66b533b4-b300-4aa8-802e-e13a21c957aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf20027-6423-4009-8664-af243716e08a",
        "cursor": {
          "ref": "c71eeb07-13ca-489d-835a-2c54050311ad",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8c94fc9a-1fee-4bcb-81bf-e8f2692ed9cd"
        },
        "item": {
          "id": "5cf20027-6423-4009-8664-af243716e08a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e1728cb9-0ae3-4e2e-9960-fa2973723abe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc4c928-7120-43b4-931e-ba0e145a12e9",
        "cursor": {
          "ref": "746f540e-16f0-4a15-bfd7-9f9fd9697a4b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "10d6e1d8-1c12-4179-8fb5-035e81dc64e8"
        },
        "item": {
          "id": "ccc4c928-7120-43b4-931e-ba0e145a12e9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2cf363d9-be09-4172-9af1-64a49a1405f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067a2c66-e4d7-4eca-9002-ff621eb6b4fd",
        "cursor": {
          "ref": "e7c3d6ed-27bb-4349-bac6-05b7e345abbe",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fe32bdfe-4186-420f-811a-f5ac2fe1d4f0"
        },
        "item": {
          "id": "067a2c66-e4d7-4eca-9002-ff621eb6b4fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "10ba3e8c-fe08-4740-8d41-66b41b8ed125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067a2c66-e4d7-4eca-9002-ff621eb6b4fd",
        "cursor": {
          "ref": "e7c3d6ed-27bb-4349-bac6-05b7e345abbe",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fe32bdfe-4186-420f-811a-f5ac2fe1d4f0"
        },
        "item": {
          "id": "067a2c66-e4d7-4eca-9002-ff621eb6b4fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "10ba3e8c-fe08-4740-8d41-66b41b8ed125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c18a347-7cd2-46bb-8e28-b6c0aa89da68",
        "cursor": {
          "ref": "d21374b9-ab47-4a79-8d7f-cbfb6fc6d708",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e6cb61b7-a7c3-4c0d-b24c-9d105430dc2e"
        },
        "item": {
          "id": "7c18a347-7cd2-46bb-8e28-b6c0aa89da68",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a6c6725-d8cc-4427-86a5-de57a9d29d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f011773a-5b43-4068-a92d-5b798062045d",
        "cursor": {
          "ref": "46f0cf00-7099-471e-8329-3df4d55b8dd7",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "349df09b-5d5d-43a3-a163-73fdc693f3a5"
        },
        "item": {
          "id": "f011773a-5b43-4068-a92d-5b798062045d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07da08b0-abf9-4527-88df-9e601d8aba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af37bd2-0609-49a8-840e-18b1f29beab0",
        "cursor": {
          "ref": "fbb16041-d4ef-4f46-9539-9c37b1170d8f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "26caf07f-ea5e-487c-88c0-4d619de141b6"
        },
        "item": {
          "id": "2af37bd2-0609-49a8-840e-18b1f29beab0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "37d1a126-87ce-40ae-afac-ceea5a17a53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a0aa02-cb64-4be6-b4eb-48342b8bcac8",
        "cursor": {
          "ref": "deca0477-f6ac-45e5-81b2-d65f3426a768",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8b691b0c-9a79-4bf0-81f9-7179b56ec1fc"
        },
        "item": {
          "id": "e6a0aa02-cb64-4be6-b4eb-48342b8bcac8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "439127fa-3231-40b4-90ff-ee15553eb554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653dbe98-165c-47f3-ad4e-8f048668d265",
        "cursor": {
          "ref": "9a82bf68-bd26-459d-9895-f1c06b475578",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "32d4e0c4-cbd4-434a-ab27-67bd63822bae"
        },
        "item": {
          "id": "653dbe98-165c-47f3-ad4e-8f048668d265",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cffa6f03-b11c-4642-9ec5-2d004c0d109d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346c0c9b-0409-4b93-8130-36cf63d57364",
        "cursor": {
          "ref": "d6277b62-6ff6-4938-a50d-41516d8cae3b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "206ccad1-9c34-471e-9f07-6ad1821744e5"
        },
        "item": {
          "id": "346c0c9b-0409-4b93-8130-36cf63d57364",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e3535785-8fb7-4e0f-ac53-7b9ba9fb7265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27d1aa9-56fb-47ea-999b-f671fbdb2b61",
        "cursor": {
          "ref": "caa619cd-8563-480c-9d34-257a60245db8",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a602829f-7fb4-47d8-9142-6178f95467d3"
        },
        "item": {
          "id": "b27d1aa9-56fb-47ea-999b-f671fbdb2b61",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7c367951-b1ce-4160-a34e-debd0c93635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805721a2-baa2-45d9-a3ee-995f85637d8e",
        "cursor": {
          "ref": "36ae39bc-5dd0-4015-8c89-9c237ae6aa88",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f23d447-98c2-44ba-9d9f-20f20e5e3f26"
        },
        "item": {
          "id": "805721a2-baa2-45d9-a3ee-995f85637d8e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ba3f156b-c950-4287-b180-5b9f6b549ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758863d7-8236-487e-abef-78637d24e169",
        "cursor": {
          "ref": "30acd212-8830-4372-9b7c-3f00e225d24c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fea7cc18-90d8-49bb-ba34-bec1ba5b3017"
        },
        "item": {
          "id": "758863d7-8236-487e-abef-78637d24e169",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6fea8f7-1c73-4c7c-a55c-c0789b726489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32902bb-3740-40fd-a905-53a336b97349",
        "cursor": {
          "ref": "e6d89ac8-df96-43cd-85bc-48037cd328de",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "33935c44-3ade-4386-9ef8-1191f9270c08"
        },
        "item": {
          "id": "f32902bb-3740-40fd-a905-53a336b97349",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7733acb6-b930-4e2e-8449-566c9eb4d39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f82e0f-b29f-44ef-ae0c-04d25405e75a",
        "cursor": {
          "ref": "94bd006f-565a-45c6-bd5d-1e1eda2f0e9e",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "46e5bdf4-a926-4806-a8d4-4cc3e2f31dad"
        },
        "item": {
          "id": "70f82e0f-b29f-44ef-ae0c-04d25405e75a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b3d60a0c-5424-4abe-b7d7-2477ff619e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2479fe08-9fcb-4c83-93a9-2a67e1b03b42",
        "cursor": {
          "ref": "7296c02c-c884-4954-b49e-f53d00e3610a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "efca3e6d-bec6-4aa2-9be3-4164605ea291"
        },
        "item": {
          "id": "2479fe08-9fcb-4c83-93a9-2a67e1b03b42",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7b12ecfb-71c2-42a7-9032-4139a5349a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a6f01-30ec-4cb7-bbea-4890a5af1d62",
        "cursor": {
          "ref": "6192e01e-6618-4fc1-9099-8b7fadbaa22b",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4161a584-7aa8-4ebe-a6c0-e0dcc6cf5559"
        },
        "item": {
          "id": "7a5a6f01-30ec-4cb7-bbea-4890a5af1d62",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f7bf1080-ca9e-4bc1-9ff2-7e32be229adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd875994-4793-4879-acc5-d2111e66696d",
        "cursor": {
          "ref": "6230981e-740b-4310-8b71-31d005d844ce",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6fa43782-4366-45e6-8557-cfb39ed69e32"
        },
        "item": {
          "id": "cd875994-4793-4879-acc5-d2111e66696d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d1a4c9d-e3d5-447a-9d9f-66aeb92c67a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da688bc1-ebb0-4273-b6cd-293daff95d47",
        "cursor": {
          "ref": "b7b3086b-2cdc-4c55-8c1a-83d1bbaf146c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "17b95da6-1985-4d0c-abe9-85997a544b03"
        },
        "item": {
          "id": "da688bc1-ebb0-4273-b6cd-293daff95d47",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dc4b2001-6606-42cf-98c5-fec5b90c3710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ebe57-62ad-4166-9913-175f4fe3a9f4",
        "cursor": {
          "ref": "cc08a93c-5d51-4a20-9c20-5b37fd0d8447",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "beb88f69-d07f-4e5c-901f-2ff8903a229e"
        },
        "item": {
          "id": "312ebe57-62ad-4166-9913-175f4fe3a9f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "055bc674-c9b1-4a7b-9a1c-ea6a123a1613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511fdb81-ecde-4c12-84b8-e96368f240f3",
        "cursor": {
          "ref": "bd7d47f3-af6d-40f9-91c3-2c666da0883b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b5db53a-0e31-4787-8c20-55a63a7e3eaf"
        },
        "item": {
          "id": "511fdb81-ecde-4c12-84b8-e96368f240f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c8847229-da01-4588-88c2-6c837a4c0492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be2dea1-2042-4cde-8ceb-12f517f97ec8",
        "cursor": {
          "ref": "4b6a8804-2e40-42c4-8ea6-8629d1fe6cb9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "10e186f8-9689-4ecb-a624-509d0ff9a53f"
        },
        "item": {
          "id": "6be2dea1-2042-4cde-8ceb-12f517f97ec8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "93f0ff9e-e15e-4e4c-8aa6-c597c24eeaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54508094-30cd-4fd4-8b6d-45280bb192a0",
        "cursor": {
          "ref": "6c1c1e45-1f66-4e99-bab2-cd7b0271ee79",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ac4841af-b26a-4e60-8b0a-752e8ff87cc9"
        },
        "item": {
          "id": "54508094-30cd-4fd4-8b6d-45280bb192a0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7fa88c38-8f30-4ae5-8c31-5f72999c3f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d7bd88-9b35-4cfb-b5ed-c22b550c0d35",
        "cursor": {
          "ref": "49f71763-e3d0-442f-80b3-269f081f53cc",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a3e3caba-15af-4d51-84ba-bbb87b8044d4"
        },
        "item": {
          "id": "33d7bd88-9b35-4cfb-b5ed-c22b550c0d35",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "26261723-94c3-4cad-8e23-b6686ee11e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ba4705-4280-4712-bebc-9d05bf98a94c",
        "cursor": {
          "ref": "00b2c85a-4dfc-498c-9e96-49315986b590",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb8acf4d-327a-4362-9e62-96a58ff10647"
        },
        "item": {
          "id": "47ba4705-4280-4712-bebc-9d05bf98a94c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf27ab64-4ae9-457d-9082-261457cb9e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a68e8eb-dee4-4c25-853f-0d5404d68672",
        "cursor": {
          "ref": "73ea211c-ed27-43a1-9277-7f486644bbaf",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "227c823e-9f77-4283-bb4d-90c1568df750"
        },
        "item": {
          "id": "4a68e8eb-dee4-4c25-853f-0d5404d68672",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1b562915-ec0b-4706-a42a-bf8666a5c153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decd7880-7a0e-470d-b199-2f8b522916ea",
        "cursor": {
          "ref": "84aec2d9-167e-46af-aa51-eb48099860b5",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6246df14-768f-4d14-9507-35f2dbba87ca"
        },
        "item": {
          "id": "decd7880-7a0e-470d-b199-2f8b522916ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f3150fc-7002-4cb2-b894-2377a0aca6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade32981-47cd-44ec-9744-026295f31525",
        "cursor": {
          "ref": "d4e83b03-7615-444a-9afc-e5627b270cf6",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02879266-871f-4716-8aef-f31dd8720424"
        },
        "item": {
          "id": "ade32981-47cd-44ec-9744-026295f31525",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12754c38-d9ca-41e1-a290-6884d6918e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb2e018-f848-4c42-b018-fe0b5f856c4f",
        "cursor": {
          "ref": "ed32561d-a840-4b26-963d-df1b1f40dd8e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7f7673a6-073f-4ec3-ad0a-1a50634f86bf"
        },
        "item": {
          "id": "2cb2e018-f848-4c42-b018-fe0b5f856c4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e06cf934-7f47-4063-8285-4e6106d7d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46779e73-04ea-4e16-824f-2b61d684964a",
        "cursor": {
          "ref": "43ceea63-cd2c-40cf-a1c4-6c15e7047e50",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6efe59c4-5f77-44be-9529-b842ca2a4a3e"
        },
        "item": {
          "id": "46779e73-04ea-4e16-824f-2b61d684964a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "21fa28f6-4480-435e-99fa-e333390b929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1215fcbd-b5f5-43df-a858-a2eb1502f4f5",
        "cursor": {
          "ref": "0434b128-ea08-4b34-9faf-6c6074ee792a",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "faad469a-2469-4788-9e7e-79718a4d1c2d"
        },
        "item": {
          "id": "1215fcbd-b5f5-43df-a858-a2eb1502f4f5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a0ba9a2a-4969-48c3-931a-b3d5a3a57f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d3a5f1-6f74-4d9a-b8e7-61a09f545f03",
        "cursor": {
          "ref": "cc39414a-337e-43e1-8e30-166fad07fcf0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "575d55ec-7ce6-417c-be94-f454517e70bb"
        },
        "item": {
          "id": "50d3a5f1-6f74-4d9a-b8e7-61a09f545f03",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6b7c3da5-e360-43d7-9916-d01b43c95d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a183446-fa04-4ed7-8cfe-22e9828b607e",
        "cursor": {
          "ref": "033c8d6a-255d-4ee3-a7a1-6eefc95ab1ed",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "432e2c6a-fbb4-46db-af65-9aa748b68caf"
        },
        "item": {
          "id": "1a183446-fa04-4ed7-8cfe-22e9828b607e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1566bc7-7da8-4833-890b-36388e28a03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507421a5-0e56-4de4-a83a-8defce8ac165",
        "cursor": {
          "ref": "db9ee5bc-68c5-431c-a834-11a3ea91885c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0be064a5-7e20-4848-98e5-a90682914fc3"
        },
        "item": {
          "id": "507421a5-0e56-4de4-a83a-8defce8ac165",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f86d588e-97c4-493d-9476-0f5f59e08df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92c712-5e8f-446a-98c4-d22e6f611132",
        "cursor": {
          "ref": "c879edc4-15e7-4ede-b9ad-4d7c9357bbd3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "de68daa0-60cb-45ec-9ba9-4574af7548b2"
        },
        "item": {
          "id": "ab92c712-5e8f-446a-98c4-d22e6f611132",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1b7ac549-22b0-411b-ae57-4cb33b5ea694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d896bd7-f55a-4c53-9b84-85145431389b",
        "cursor": {
          "ref": "61e5cd6f-83b7-46a7-8c12-e788130feefd",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "267f9048-8e55-4de4-93cf-9864d9c3b7f2"
        },
        "item": {
          "id": "3d896bd7-f55a-4c53-9b84-85145431389b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7eb8b28f-3d8e-4702-a31d-dd05faa48294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed969082-73cc-48ec-9c63-7246d0afc2d4",
        "cursor": {
          "ref": "29fc2b9f-4f46-4f6f-8d38-23f521883460",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "25bff398-a87d-4151-b90c-5632272595b1"
        },
        "item": {
          "id": "ed969082-73cc-48ec-9c63-7246d0afc2d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2affcd3e-3a17-4ebf-ab66-5487b34d62de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701c088-9c13-4aea-868f-32899f95d750",
        "cursor": {
          "ref": "e5bc83e5-40f0-4393-bf85-b003e701b82c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b38f1c0-7cc6-4d5a-9711-b5e44b36e04a"
        },
        "item": {
          "id": "a701c088-9c13-4aea-868f-32899f95d750",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30c725c7-9905-45ea-b9f1-09fbe212a8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a673bc-0357-47de-99ff-0b2a91014f19",
        "cursor": {
          "ref": "2d2dce3c-ddaf-43f9-a037-70c9cd65e8f3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "03a2ba0b-dced-40d4-aba7-ffb234377da4"
        },
        "item": {
          "id": "07a673bc-0357-47de-99ff-0b2a91014f19",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "90d1f745-12d6-44fc-b279-920c300afca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0469293c-4631-4a35-9784-7e5d9a5c7d83",
        "cursor": {
          "ref": "3e56521d-30a7-4ff0-8943-07ff271bef0a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0fc8dac9-5de4-4843-8a4b-027879ee7052"
        },
        "item": {
          "id": "0469293c-4631-4a35-9784-7e5d9a5c7d83",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ead79ea8-9937-4020-8324-a9261dc5cc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95405a4b-32eb-4748-938c-43eb1c52415a",
        "cursor": {
          "ref": "123892f8-1150-4ef9-9126-cae07873a8ce",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "37df486b-8ca7-4487-9b47-d0d50144da8a"
        },
        "item": {
          "id": "95405a4b-32eb-4748-938c-43eb1c52415a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b4d0bfdc-dd50-4b56-98de-246e771427b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3018ee69-b603-4279-9f46-b2526300166a",
        "cursor": {
          "ref": "e05c045f-6279-4b5d-921c-1997b8bf0835",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f00ef3a7-03f4-4b95-b772-4002ececd3f4"
        },
        "item": {
          "id": "3018ee69-b603-4279-9f46-b2526300166a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb4addf1-2119-471d-885c-47d2938d7914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394d09e1-1668-4fa2-8935-785246f15664",
        "cursor": {
          "ref": "b327c743-5932-46f1-9ab4-25f0e32c3bbd",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b89a7caf-c899-4784-9fde-fc27f44bffc7"
        },
        "item": {
          "id": "394d09e1-1668-4fa2-8935-785246f15664",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6ab8e5cf-667f-49da-88d7-fc3c6dc5c9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77645f4c-3478-46f4-889f-61b9a8ca5d12",
        "cursor": {
          "ref": "5109480b-0309-4ef6-8c5c-19e9c09b8ea2",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "07bf0b55-5983-4bea-b11c-534487046e12"
        },
        "item": {
          "id": "77645f4c-3478-46f4-889f-61b9a8ca5d12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "33dd3325-b3c5-40b0-8414-7f578b409b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b2e8f-ab11-4d5c-9813-678c3c871473",
        "cursor": {
          "ref": "fb2dfd01-453b-4b2d-9e61-18f85f62b29d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "99cc8a89-3b50-4841-9720-99bb9d7599d3"
        },
        "item": {
          "id": "436b2e8f-ab11-4d5c-9813-678c3c871473",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e37b9b1f-1106-4218-87f2-2739012ccc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bf687b-4d59-4016-9c63-631c8a5e3a27",
        "cursor": {
          "ref": "7f148a6b-07f0-4b7e-ab08-bcf5ac1df286",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b8f3fd3-c2fa-4779-b6ac-d0c2f62bf8c9"
        },
        "item": {
          "id": "98bf687b-4d59-4016-9c63-631c8a5e3a27",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1e52a65b-5fbb-4ad1-849c-515e7958cea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e1a1d0-6b48-478e-b347-1e89bcfd6a54",
        "cursor": {
          "ref": "c88e677b-bcde-4a8c-88ad-da2787207758",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "337f4bb5-2e3e-4157-8a8f-ab3eb167a60f"
        },
        "item": {
          "id": "49e1a1d0-6b48-478e-b347-1e89bcfd6a54",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "921521de-1de8-4535-80ad-c1331c00b30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad60dfca-98b5-486a-9377-fababe7e66e7",
        "cursor": {
          "ref": "b6b2122b-64f7-46e6-b4f7-f31ddaeafe01",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4465f17-a229-4b31-bbd7-236290c26277"
        },
        "item": {
          "id": "ad60dfca-98b5-486a-9377-fababe7e66e7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ffe967bc-c73b-4593-bc7f-a09d58c41a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c0ec20-7c6f-401e-9810-b24b5645a7d5",
        "cursor": {
          "ref": "76df9535-a7fb-4c62-93c8-3989ebb9f8c0",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c4eec64f-cf6b-4726-997e-c8115dc0e621"
        },
        "item": {
          "id": "67c0ec20-7c6f-401e-9810-b24b5645a7d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "27c34f23-0b77-453a-ab38-c52a3208a256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04113d2c-0882-40ba-8bcf-cef3094563d3",
        "cursor": {
          "ref": "ae4f7f06-e4e1-4b4a-adf3-dcb35a3eac0c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "47e3d492-848c-4a81-90b5-eb05c2058140"
        },
        "item": {
          "id": "04113d2c-0882-40ba-8bcf-cef3094563d3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "31774a5f-d240-4195-bb65-3b4dfff52fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cea793-63b7-4210-bbdd-aaa665dc2c40",
        "cursor": {
          "ref": "c1ce5c51-aff8-4e63-9b42-89c36a00f5cd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d2766b9-bb5f-4ac5-b0e5-ae7f6f6662b8"
        },
        "item": {
          "id": "78cea793-63b7-4210-bbdd-aaa665dc2c40",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f0eb437-07ca-4032-b381-fa45546bd572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736465ec-2dc4-41f0-b891-1f7a0d4b2df3",
        "cursor": {
          "ref": "a9262165-95d3-4b49-baed-7f5c5b54ff84",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "25545596-9efd-4c53-b6c4-cd66ad39834c"
        },
        "item": {
          "id": "736465ec-2dc4-41f0-b891-1f7a0d4b2df3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d5afc8b3-3d76-448f-b811-e9beacc92595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38979bc6-f581-4799-8435-85a314ef27be",
        "cursor": {
          "ref": "0c3eb817-bdd3-4275-8582-07db5ec4d60e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8a663ff-a977-4de6-a86f-5749f03c3aa9"
        },
        "item": {
          "id": "38979bc6-f581-4799-8435-85a314ef27be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "939628ad-7f51-454e-8550-a5a6583b0afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c5ca35-237e-4adc-8ee2-0b2e3c1d45f8",
        "cursor": {
          "ref": "339d68ad-ea51-4fdf-8fa8-572611c86392",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d19f62f-2048-4160-88fa-d6ae9c6fa577"
        },
        "item": {
          "id": "72c5ca35-237e-4adc-8ee2-0b2e3c1d45f8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "18ba5fb9-b812-4025-ac30-bb6d3700ed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69562d9-10e7-46f4-9217-60ff5aa558d0",
        "cursor": {
          "ref": "28d36ea8-7650-41db-8651-4766f309e451",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d0afbdea-9f0c-4759-a4d7-2094d86bf0bb"
        },
        "item": {
          "id": "f69562d9-10e7-46f4-9217-60ff5aa558d0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5441e04d-7f9c-4b6a-a940-077c1e4bd9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feed05ea-90f5-4c7c-853d-33770fec02ce",
        "cursor": {
          "ref": "16905d1d-9e4c-4606-8315-0b8b6c056268",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2ca90c08-1521-4cdc-a790-cdb038aeed15"
        },
        "item": {
          "id": "feed05ea-90f5-4c7c-853d-33770fec02ce",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "79f1b3e3-0a51-428d-8e32-c25b12336874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec7ea8d-72ee-4df2-b4a6-2d419dc3a136",
        "cursor": {
          "ref": "ad58d039-3810-480e-a1f4-533c557ac761",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5280e4e-f1ee-45e5-b223-39e3b2eadff3"
        },
        "item": {
          "id": "cec7ea8d-72ee-4df2-b4a6-2d419dc3a136",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4a456b68-b173-407d-88cc-05177916d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c39a9-4a34-492b-bf1e-1ebf7446d5f7",
        "cursor": {
          "ref": "178d863c-d9d8-4bdf-b21b-cdc82a0437d7",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "377a0fd3-5a8a-4d3a-bc1a-0c56dc881609"
        },
        "item": {
          "id": "159c39a9-4a34-492b-bf1e-1ebf7446d5f7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4bdd0972-c179-45f5-bb7c-8fa5f76e63bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39689c0-a76e-4c0f-a14b-d40f215486d1",
        "cursor": {
          "ref": "019d2b60-4ef3-41b4-8e49-31e84b9a07cc",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6e2c9e1f-1501-4af9-ad86-640781b69786"
        },
        "item": {
          "id": "d39689c0-a76e-4c0f-a14b-d40f215486d1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "121ec0f0-64c7-4c82-af2f-a2e3ab166b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee56f6b-f62b-4ea9-98a0-50c53606ee32",
        "cursor": {
          "ref": "934b4795-85ce-4101-b687-6060fdac8977",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "beab886d-dd45-4595-a3af-3913b85ce0cb"
        },
        "item": {
          "id": "cee56f6b-f62b-4ea9-98a0-50c53606ee32",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8f6ed2b-ab1c-404e-8f49-f535691c2b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68f9184-4f69-4445-90aa-4d6a5a94c9aa",
        "cursor": {
          "ref": "ec0bb1a0-e82d-4213-a823-1c5276fe0285",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4163fd1a-0765-4d4e-92bb-582e337ed0af"
        },
        "item": {
          "id": "d68f9184-4f69-4445-90aa-4d6a5a94c9aa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4bbd0d5f-cec2-4bbf-a3d6-be3841002d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3363e8a0-fb48-4688-b8c6-0e170d649136",
        "cursor": {
          "ref": "2eafabfa-062f-4010-b1d4-8b8b3fdb244d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "688a168a-2426-4714-a7fc-d4b17f6d667a"
        },
        "item": {
          "id": "3363e8a0-fb48-4688-b8c6-0e170d649136",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c183ecdb-58a0-4358-93b9-ff98e0c73bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aed3f2-e31d-4793-b4f4-1fd0d0667ed8",
        "cursor": {
          "ref": "801de894-2f7b-4b1f-b81f-9752e8231fb6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a365ea31-ec42-4d5f-bb3d-d191b0307083"
        },
        "item": {
          "id": "31aed3f2-e31d-4793-b4f4-1fd0d0667ed8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c88dc213-f964-4d02-a26d-db194e4bff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8642a6d5-d6da-4b05-af45-78d56e23a1bf",
        "cursor": {
          "ref": "f98eadb3-d01b-4359-92e8-2f136e39060f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1bc9f9e4-bac3-457a-b414-7525a117a964"
        },
        "item": {
          "id": "8642a6d5-d6da-4b05-af45-78d56e23a1bf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b052a17e-f7a7-45cf-a3fa-0439d91c32dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc591103-de5a-4d0f-af33-c2f0f29e2541",
        "cursor": {
          "ref": "0d0f4e5a-c802-4195-82f1-c4c0fd4fa07f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6cb005c6-bb29-4c98-af87-ae69010c9221"
        },
        "item": {
          "id": "dc591103-de5a-4d0f-af33-c2f0f29e2541",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4e8e7db3-9861-4386-b52c-a0fc01eaa214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965cacd0-bf56-4516-9329-5a0e89446b29",
        "cursor": {
          "ref": "a5b92bf8-618c-4372-8ca7-8210e4ee8363",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "48186977-6425-4ed4-b502-448438110787"
        },
        "item": {
          "id": "965cacd0-bf56-4516-9329-5a0e89446b29",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e2b1d136-eb19-4d37-8fb3-02b53b9b9645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf899905-cf41-4a06-ae85-49a06092e2a3",
        "cursor": {
          "ref": "a17d94bc-771c-40a6-9ce8-5bee71576634",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dda1cdc3-e897-47a2-9582-051a400d9da9"
        },
        "item": {
          "id": "bf899905-cf41-4a06-ae85-49a06092e2a3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "14c5d959-1f90-4b13-a751-108b5841ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187f9aed-3a85-432c-9d54-11a152286fcd",
        "cursor": {
          "ref": "b08cb0f1-f8b2-4228-93a8-50e0907595df",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f7c82428-341a-4c0f-9469-5db192d824ff"
        },
        "item": {
          "id": "187f9aed-3a85-432c-9d54-11a152286fcd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ac2dae1b-a4fa-46d3-a127-62dff854cd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3524df45-124a-4540-aaeb-2f6405f8b00f",
        "cursor": {
          "ref": "f01952f8-7c07-498f-aa1c-9ebebb5e6fe0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "725071eb-3aaa-4d76-8e40-e5febdb2b82f"
        },
        "item": {
          "id": "3524df45-124a-4540-aaeb-2f6405f8b00f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6c6aea85-ad09-4c58-8399-b68ab0652f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae267b0f-90fa-4598-8fdb-ee1d9519bf48",
        "cursor": {
          "ref": "d6a5a99e-2edc-4130-b0fb-2e03fb0f2b8f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2c305bb7-0af3-4339-a084-5a4d4e7e01fa"
        },
        "item": {
          "id": "ae267b0f-90fa-4598-8fdb-ee1d9519bf48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "132d5b95-8fb7-40a4-b05b-6747eb625ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a048e3f0-d9ac-4a93-a1ba-57408b0a98f0",
        "cursor": {
          "ref": "107c2311-4391-4674-b639-47e48d442381",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "620ed63e-ba94-4139-afe6-75ac9bc4005f"
        },
        "item": {
          "id": "a048e3f0-d9ac-4a93-a1ba-57408b0a98f0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9031a07a-4ec5-4142-8d78-1f0ebdc08b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dd84e8-7f38-41da-8166-eafc588254a2",
        "cursor": {
          "ref": "bf9b0519-facb-49b6-b596-62a9387cef5f",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a3b57fcc-de43-4e36-a68f-43d16ec59896"
        },
        "item": {
          "id": "97dd84e8-7f38-41da-8166-eafc588254a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41c5f6e4-fce3-4ade-b4a0-f0b466f32620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9cf41-205d-4810-a62c-c096c65e5f10",
        "cursor": {
          "ref": "c04e79ac-d9ff-404c-89d2-7842200118b2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aeaa109a-fb76-4d80-b475-c07fe883325f"
        },
        "item": {
          "id": "7ec9cf41-205d-4810-a62c-c096c65e5f10",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8478e96c-8b16-4ca0-805a-573d89b66536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c91f40-ee89-4850-a872-1e937a9cf2f5",
        "cursor": {
          "ref": "4dcdf14b-bfd7-4da4-bb0c-617e75658c00",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dd0d6f51-5e83-4de5-944b-823b2aa5c795"
        },
        "item": {
          "id": "25c91f40-ee89-4850-a872-1e937a9cf2f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "049f5170-55e6-405d-a9b5-c752f2b525f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc10ce-d42f-47ad-aa5a-9faf7a4271a8",
        "cursor": {
          "ref": "f323fb9b-5906-441b-b1d7-fdfb41b88ac1",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aca8a874-c41d-495b-b777-53ecdcec8f70"
        },
        "item": {
          "id": "01fc10ce-d42f-47ad-aa5a-9faf7a4271a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dc73db72-9d2b-463e-a5f7-286a75b8f4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a048e-d631-46ba-a2a8-15437048f9fa",
        "cursor": {
          "ref": "e8bb2766-1ea2-4d1c-b969-6d12f87970e0",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a8cafa3-6289-45ba-ac84-2b868fe13034"
        },
        "item": {
          "id": "1c6a048e-d631-46ba-a2a8-15437048f9fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2dd593d7-6ce8-4086-badf-0ad942d51bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31f4553-7533-4c65-9478-8075112de5c4",
        "cursor": {
          "ref": "ea1a97b0-0cbb-4d3e-a12c-32827a34bbe8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "11953cbe-8537-4b16-9cc1-3162c6d06f65"
        },
        "item": {
          "id": "c31f4553-7533-4c65-9478-8075112de5c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b9dbedda-c1a1-4486-89f7-23f8e9c4bd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bee235-ffa4-40a7-ac72-b2b88036542c",
        "cursor": {
          "ref": "e98c8bd2-c307-4d6c-939e-08ce814bb43e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d62d188b-e275-4010-8cec-123f92bc55dd"
        },
        "item": {
          "id": "b5bee235-ffa4-40a7-ac72-b2b88036542c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "111b9d3e-e9eb-4e60-856d-47cc31ac5d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eef7aff-696e-4a38-b167-ee303b3cba67",
        "cursor": {
          "ref": "a09dba0e-72d5-4b10-ac35-fcaaa9971d25",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8aee10c-68b8-45fe-bbff-836459fa5f3f"
        },
        "item": {
          "id": "5eef7aff-696e-4a38-b167-ee303b3cba67",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d42fbe61-dbe5-481e-bd47-18a6be94066a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb835c5-1a44-47a5-b9c4-6fbf3fc4cfb2",
        "cursor": {
          "ref": "91d02355-5547-40df-90e6-5b67e6bf6e06",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "86df559d-0dd9-401d-acc3-c768408225ac"
        },
        "item": {
          "id": "9cb835c5-1a44-47a5-b9c4-6fbf3fc4cfb2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a850b325-eed9-4fad-bd3e-6050316e437d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb506b-7111-487a-8883-9b870f53064a",
        "cursor": {
          "ref": "a87f3b77-b3ff-4532-b357-791b008ea79f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e18da67f-5a45-4c9d-9f2c-c355d51560cb"
        },
        "item": {
          "id": "65eb506b-7111-487a-8883-9b870f53064a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "683f24a9-1f38-49f4-9caa-f77bbd2a46cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2444d72a-0631-4d48-bea1-6166f1926368",
        "cursor": {
          "ref": "2fc5dd31-ef28-4604-84ea-05544aa2ef86",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c7c24293-4f3d-4fc3-b682-6b5709be5d7e"
        },
        "item": {
          "id": "2444d72a-0631-4d48-bea1-6166f1926368",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "38290f9c-5fc8-4562-847c-401b61dff5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5317f11a-77e1-4a56-aac2-4464f87c5eab",
        "cursor": {
          "ref": "3bdc1468-c508-474e-9240-6c03df8101f8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "023e0342-c8c0-42ba-988d-0fb48a7fc336"
        },
        "item": {
          "id": "5317f11a-77e1-4a56-aac2-4464f87c5eab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9fa32d01-a967-4fe4-946a-1d15136fb48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144084c3-1fcd-4e60-a478-47a883e8c60e",
        "cursor": {
          "ref": "e4096b47-dde6-451a-9b53-d180d8725583",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c2e099af-5525-4bde-9b15-ccb4f6b7cf73"
        },
        "item": {
          "id": "144084c3-1fcd-4e60-a478-47a883e8c60e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90e9d597-483b-4d09-9eec-6775fbc733c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceca94d-9006-4cee-9613-9b446b31c6f0",
        "cursor": {
          "ref": "f1600bc6-8b07-4979-800d-f467a0719296",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b233cc87-4ece-486c-a70f-992c2a140052"
        },
        "item": {
          "id": "1ceca94d-9006-4cee-9613-9b446b31c6f0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0bc82ef2-91ea-432b-9237-656f4cfb3424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e36a12-c100-491b-aa8e-334daff9215a",
        "cursor": {
          "ref": "c700794a-1279-44c1-a408-68e3fea70de4",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "391a58e3-afa6-419a-86cf-659c05c4972b"
        },
        "item": {
          "id": "d9e36a12-c100-491b-aa8e-334daff9215a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc8c6bc1-bd1c-484b-8619-b98e1ad30371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b432a599-5458-4332-8454-f2c037903b1b",
        "cursor": {
          "ref": "ea7e90d3-0425-4375-8428-7fd49f98d9c3",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea17a508-3610-4a1d-8029-564c4e6b65b8"
        },
        "item": {
          "id": "b432a599-5458-4332-8454-f2c037903b1b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d21cc42e-f153-4565-89b3-06d24ec21518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0949e6c-fff7-4c3f-8fbd-2699f5e230d6",
        "cursor": {
          "ref": "e98b291a-f047-4cd4-8a12-640cc9f294ca",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b619b3bf-6dca-4bfe-99bc-0271db780542"
        },
        "item": {
          "id": "e0949e6c-fff7-4c3f-8fbd-2699f5e230d6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d303cacc-f5a4-4e94-aa3c-6099a588c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939a6c0-b454-4848-9fa7-3b1e7e77b8ae",
        "cursor": {
          "ref": "e211fb97-d706-4efe-b50a-7feb8e5f9c40",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3fe3749c-5fb6-47b2-9b61-2bc9ec761ff5"
        },
        "item": {
          "id": "d939a6c0-b454-4848-9fa7-3b1e7e77b8ae",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8e76fdef-e77e-4e9a-a029-5225cc8bf07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca776845-860f-4467-b651-9a54aff04bc3",
        "cursor": {
          "ref": "be824423-c0d1-426c-ad56-05dffa651423",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b1a9bbd1-2dcf-4b55-ad5d-bd1f65c7ca2b"
        },
        "item": {
          "id": "ca776845-860f-4467-b651-9a54aff04bc3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bf265f2b-3a67-4b81-bd4c-8522795a56bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd8421d-b18d-4ab7-a70a-38f06785b0b8",
        "cursor": {
          "ref": "3c22a0c7-e193-4522-bfb0-cb358eb776ff",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "67c24d90-d21b-44c6-af1c-96c9881351cf"
        },
        "item": {
          "id": "6bd8421d-b18d-4ab7-a70a-38f06785b0b8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c0b65bb3-df76-4c3b-b539-3e0a9555dc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d625723b-4f2d-4815-a857-6ab52505d51a",
        "cursor": {
          "ref": "e2658bf3-0947-46d9-a687-b3b5190fc352",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "17b5ce2d-e770-4533-b7f2-c1e759f26200"
        },
        "item": {
          "id": "d625723b-4f2d-4815-a857-6ab52505d51a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f58f63d7-c80c-4a34-ad7e-19bfe91eb5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6d7c52-7703-4611-8223-b64367d79852",
        "cursor": {
          "ref": "aea9d548-47e2-4886-a839-f457c70bcba5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "755427dc-d496-491a-ad77-9e6aad44156c"
        },
        "item": {
          "id": "2a6d7c52-7703-4611-8223-b64367d79852",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76d56d2d-6f63-4e86-baf0-09ad00594c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d72c61-5051-4863-b138-f62cebb3699a",
        "cursor": {
          "ref": "66078295-fa65-42d0-a59d-868c5e7cf852",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09f908dd-9b0f-4ece-b094-961449c3acfd"
        },
        "item": {
          "id": "e1d72c61-5051-4863-b138-f62cebb3699a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "87726aef-8297-4b21-9009-97cdde3f51c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2914e1-e27d-4678-98ad-c50dcc946923",
        "cursor": {
          "ref": "cdbc4f67-e24e-4463-b631-c2f29a21598b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ad1f2523-d6c1-4796-bd49-a07c8258ec58"
        },
        "item": {
          "id": "7c2914e1-e27d-4678-98ad-c50dcc946923",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d3bf186c-8487-46ee-a07d-5f6c7352ac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8054e7-a3d2-4a65-868c-0a49482b0ac9",
        "cursor": {
          "ref": "0d6902c3-a7e5-4dc4-9d48-e356ad76b184",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "83f06cb8-5834-4a43-817b-c4b39955e9ad"
        },
        "item": {
          "id": "cb8054e7-a3d2-4a65-868c-0a49482b0ac9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "89655ecf-73e4-4331-8798-d1bd31620577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5669aa-690d-45ee-b97f-ffa179a31a17",
        "cursor": {
          "ref": "579037dc-d788-4d70-9879-84bfa4250a97",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ec7a73e8-f3fa-4ddf-929e-66d378a966e9"
        },
        "item": {
          "id": "5f5669aa-690d-45ee-b97f-ffa179a31a17",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "324daed3-2efd-4943-8e54-063f7f02a5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b0103-fd5f-41f3-b053-36f375ff7d0c",
        "cursor": {
          "ref": "deba74d0-4e3c-45d0-8d53-d8f919a34fdc",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "933919ee-eedd-4a48-8093-3f072e60a79a"
        },
        "item": {
          "id": "881b0103-fd5f-41f3-b053-36f375ff7d0c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9bf617ff-af34-470c-a514-5e4412bf9659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001de704-5ccb-4ca4-af05-ab7873aeca2b",
        "cursor": {
          "ref": "4d2efcb8-bde8-42d5-b8bf-319a07ec2267",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "35490ecc-3ba6-4bcd-8916-7778accf5812"
        },
        "item": {
          "id": "001de704-5ccb-4ca4-af05-ab7873aeca2b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "76c73267-bb87-4c19-96f4-b6128d7fde5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad4a6a-bd17-4576-95be-fa323fcbde2d",
        "cursor": {
          "ref": "f716dc82-3fe8-4ce9-9929-ff8b26165eda",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7c92b16b-2915-4342-99f7-3eff1b863b8d"
        },
        "item": {
          "id": "5bad4a6a-bd17-4576-95be-fa323fcbde2d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4522a61e-42e2-4aa5-9089-83c3a4183662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ec3956-3eeb-4b99-9987-e3b4dc996ed7",
        "cursor": {
          "ref": "85666cde-ddc4-40b8-acd2-5d5df14f81af",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e0448ef1-4101-4c85-8882-013a913a17d0"
        },
        "item": {
          "id": "12ec3956-3eeb-4b99-9987-e3b4dc996ed7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3ee004b8-3858-4a5a-847c-cbda50002459",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bc6752-e808-48ea-80dc-e8c0d93a101f",
        "cursor": {
          "ref": "9419a767-1d0f-4114-955f-7d5e91918043",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "30da3285-01ba-4464-8fd8-e7abb46c4d47"
        },
        "item": {
          "id": "b9bc6752-e808-48ea-80dc-e8c0d93a101f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3a7b6933-fc18-4683-a204-770383b2dfbd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6956c8-d3ca-4c9a-b0f1-17d6ed0745b9",
        "cursor": {
          "ref": "8945c6b3-73ef-4b21-8274-0bb8b8367d28",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "30673c10-9614-4b64-8cc5-bce6533f7ded"
        },
        "item": {
          "id": "2c6956c8-d3ca-4c9a-b0f1-17d6ed0745b9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "705269d8-692c-478c-a43b-cb69ca6b4a09",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7e531-d1ed-4dc1-8573-308f4297d6a9",
        "cursor": {
          "ref": "efffa9d3-9e0d-4a6f-b631-e1b26ae6ebb1",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7672080d-4111-48e7-9c33-9d7535fdc8da"
        },
        "item": {
          "id": "7fc7e531-d1ed-4dc1-8573-308f4297d6a9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4746c860-14f4-42be-b6a6-e58a29fab057",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b207affb-3761-4ec3-9e33-9ec9da2464c8",
        "cursor": {
          "ref": "ddb5446b-246f-43e8-87b1-e359ef9b203c",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9c7751ef-f1eb-431c-ba5a-67ad37cb8680"
        },
        "item": {
          "id": "b207affb-3761-4ec3-9e33-9ec9da2464c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e3bcebff-ed30-475f-bdcf-6a23bcb9b9b8",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
        "cursor": {
          "ref": "76dcf972-8fe3-42c3-8ae9-032b4715a08c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8492189a-3d6c-436c-8f49-a774fbc03405"
        },
        "item": {
          "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48ca2ecf-5f10-4e9a-9c75-f4c94ccb0401",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
        "cursor": {
          "ref": "76dcf972-8fe3-42c3-8ae9-032b4715a08c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8492189a-3d6c-436c-8f49-a774fbc03405"
        },
        "item": {
          "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48ca2ecf-5f10-4e9a-9c75-f4c94ccb0401",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
        "cursor": {
          "ref": "76dcf972-8fe3-42c3-8ae9-032b4715a08c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8492189a-3d6c-436c-8f49-a774fbc03405"
        },
        "item": {
          "id": "a308f28e-a019-43b3-8299-9d1584bfd765",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48ca2ecf-5f10-4e9a-9c75-f4c94ccb0401",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d812f50e-99b7-4872-b528-a6d5e0e557e5",
        "cursor": {
          "ref": "7cf59aca-eb61-4c7d-9608-45b99967d0b5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cefa1cce-bb76-4585-b08b-cb32efded480"
        },
        "item": {
          "id": "d812f50e-99b7-4872-b528-a6d5e0e557e5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "993f2df4-6c08-4e99-a4fd-15c36d345cf5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4932a-4cca-4dba-9554-241b1e184948",
        "cursor": {
          "ref": "4411fa00-3a92-40e9-a285-5eaeffaa7085",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b85d4fa-ebcf-40d3-8b3e-c18f170a2b39"
        },
        "item": {
          "id": "85d4932a-4cca-4dba-9554-241b1e184948",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d407a8ee-8909-4b50-84c8-d3629bb32f92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4932a-4cca-4dba-9554-241b1e184948",
        "cursor": {
          "ref": "4411fa00-3a92-40e9-a285-5eaeffaa7085",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b85d4fa-ebcf-40d3-8b3e-c18f170a2b39"
        },
        "item": {
          "id": "85d4932a-4cca-4dba-9554-241b1e184948",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d407a8ee-8909-4b50-84c8-d3629bb32f92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9150fd-5f30-4f83-9778-9c20f151016d",
        "cursor": {
          "ref": "a1e0c872-9442-4edc-b74e-fe69a326ffee",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c811122e-86b5-43d4-bb4f-30244ec7cc51"
        },
        "item": {
          "id": "dc9150fd-5f30-4f83-9778-9c20f151016d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0bc8cd4f-cd71-4df7-8361-cc476a082ecf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02803a1-4568-4524-b68d-a0572dd27a4b",
        "cursor": {
          "ref": "02f3e82c-3582-4de5-a07e-3f82cc57480b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8e354ba0-e030-4c8e-96e4-6682e6e9c1ad"
        },
        "item": {
          "id": "e02803a1-4568-4524-b68d-a0572dd27a4b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac26e0f3-2747-4a2f-9712-3f7ee4815eb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02803a1-4568-4524-b68d-a0572dd27a4b",
        "cursor": {
          "ref": "02f3e82c-3582-4de5-a07e-3f82cc57480b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8e354ba0-e030-4c8e-96e4-6682e6e9c1ad"
        },
        "item": {
          "id": "e02803a1-4568-4524-b68d-a0572dd27a4b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac26e0f3-2747-4a2f-9712-3f7ee4815eb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a8ec66-7165-47ee-8cbc-21163c468a88",
        "cursor": {
          "ref": "f89769ad-2aa3-4044-861b-1115c870fe6f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b401c43e-8c31-41a2-b314-55b0b5676ac4"
        },
        "item": {
          "id": "a6a8ec66-7165-47ee-8cbc-21163c468a88",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "36e0d9ef-787b-4330-90dc-95f32cbd2ca8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}