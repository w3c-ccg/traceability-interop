{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "79a1e970-8017-4854-bf61-837ad827f6c5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b4017a07-0106-4ce3-bfc6-6bd7064bace9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c03a1842-ceab-4d49-87b2-7ba23911b626",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6596470-6ffe-4794-ac3d-cf03b59c788f"
                }
              }
            ]
          },
          {
            "id": "c466a3bf-52bc-41ec-bbe8-c25da1fd7bec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8786d672-6cd8-48fb-8184-af1f98d8f455",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "070a3654-9505-4a85-8515-9aebbcf921db"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d33ed8d-e0da-429f-8bc9-d375c73caec9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "72944c76-2ae2-4452-9830-6b364ca91bc4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59fe1422-8dad-4506-a081-1861bc25f95c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "009155f3-2c13-4ea1-9267-5e9e49c53407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95b3be8c-cc42-463b-b069-23afbbb48a59"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c57db5ec-f166-4db5-b904-4f9ebf8b3e63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd70f794-c529-4d7b-b08d-d60cd45b5568"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "342f2163-6c73-4428-9fd1-21d75dc94c50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18a4e8b5-f4c6-47ca-b982-c6d6a6660101"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd54ec3-fea9-414e-a2a1-86d7eb2c636f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38add692-0396-402e-a34e-1f0888a0f6f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be454cb-36cf-4e7e-b770-d87616c10e16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cf8d403-d02a-4350-982f-318f47b2ac45"
            }
          }
        ]
      },
      {
        "id": "1575de0c-3398-492d-9c72-6f2bcdfa63d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5defa82-d8c7-46b1-a5a2-4103fc8be416",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55bd80b2-17ac-403d-baa1-b507e66897c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "676d1a15-4501-478d-9bec-68e30dfac60c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11cfe00-2657-416c-9af6-cc815dfcfae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a743683-2942-41be-8acd-148ab1e705be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef79007c-7dce-4e4e-bd74-8c8933fbfd77",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5055ee-3161-4a8f-94e5-6dcd33591470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78854ac0-5e7e-4e6b-8ce8-2b105637854d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6a8efa-e07d-41ac-a3ed-9ab0620615e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66bbe4f-f95e-438c-9f82-f987e9c401b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "275047b7-3eb8-4a03-bbb3-c6679e2862e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b49b71b-7d0f-446b-b1bc-9781662cc767",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64279a79-bbe1-4dbc-a418-96fc9a653a4b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e357ab96-712f-4b22-9176-34e685f21cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bec8d357-4142-456f-8a78-710f672976f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12db88f-9aab-4807-ac74-9247e2a32442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739a65ab-a96d-471f-b78b-076d553548a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d5eed64-8dc9-4ee8-9548-a6bf21276b5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8240a2a-fc47-4bad-8d98-4a039dd3cd75",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98ca21bd-8134-49e2-932a-8f731fac51f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7f5d9eed-91e2-4812-bf8c-a1a1b6710686"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3bc982-4ceb-476e-a525-bc68a691f088",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7c9f32ba-2cab-407b-880a-66024b7348a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc63ac9a-5fc7-4569-802a-875582c45ca8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57d71546-9e76-45eb-99dc-b11e8420189e"
            }
          }
        ]
      },
      {
        "id": "0fb3c55e-ea0a-4761-b5b1-9f328e4be330",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4818333-6fb6-421e-8ce6-90abb02464da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d3e705e-3f90-4245-bc3e-88e8067cb220",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "398ce7e6-c8b1-4ac8-8fca-f2cd5ef2b971",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7754f-9332-45ea-bd82-685f5448bf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844e17b5-54bb-48df-a53f-602d07537e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c69246-ad6f-4d18-8191-9b6448bb36ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0c29d6-1fca-4004-82cb-66c873dad1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe9648-49b9-40b7-a5fd-6ed2d983a9fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ded36b-cdf4-4900-98b4-b458b036bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8d51da-12fb-4c4a-ba6d-4ab3059e0c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38a71f7-1373-40be-8601-43509b5b1f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dad576a-61a8-4091-a8a4-a7790c88c0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eb8198-99a6-47d5-9d98-ee0881b0a4f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d856c519-ce15-4673-9085-d151af233060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347e3f99-1b9c-43be-93e5-d73df040e7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e234611-bea0-486b-a417-e0c2057930f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d4db370-dc3d-41ac-8d35-b3e64bb0d99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57330b2-e225-4d02-93c5-ed1e2f4b0251",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d729bb94-39fe-4a89-bc61-bc93a6128e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda45cdd-36e6-47e7-b944-1b8384bc3bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1a31ec-b836-4923-850f-9ea54b3d1fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c8f904-9a2b-41b6-87e3-786dbec4bc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30b7c9b-ae0a-4678-b85b-a0b53b86cbfc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0187db07-339b-4c48-a0cd-1d0c81fea733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b411ef-4a16-4fb0-8d84-3679742468c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f05728-9b0e-4d26-a1b6-f87684fc692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ecf1908-d1a0-46cc-9b15-d5d4cc3596c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3376db09-90cf-4139-afa1-722bfa81e298",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc64069-1df5-4037-ad5b-388dcbc5830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0bc17e-af68-4f9f-94d1-c071273a8b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb699edc-1e80-48b5-933c-6810538a78b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3ca7610-d604-4e09-a2e2-33c7704f3029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350d6563-8b64-4a9a-b245-cd55060d1f07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b25aff-bd9a-43cb-9149-356308f8f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a01b993-6027-4b9f-b153-c9af19101d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d7c081-a5c3-46da-867b-eb897d6625e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f58fe29-83bc-400f-bba5-fa8c28523bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5f0ff5-6a96-48e0-b64c-ad6d839ca537",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd10d15-d6f9-4684-b3d2-f6096bac2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063b37d2-79e9-42a3-812c-dfe0e5416579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5880cb02-659d-4317-a0ed-5a35326f6c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0114e3e-5d6a-4195-b64e-eea060fb4c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab32135-38b8-4082-97e1-102d36880595",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904af21f-1493-43b9-8731-802c7a640906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165b8d41-ca00-43bc-812d-78382bbf4313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a5abc-0827-4426-81d8-b8039bad60ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48207012-2d5a-4584-bac9-90062dee24a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74cfdb7-fa35-48fd-ad39-06a27cdd21bd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d8ae05-6a4b-48be-b236-907f5dd3c02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b014f099-2027-444a-a10d-5e654ac4b35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7345417-5ce2-4b3e-981f-8042002a079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21705f57-7c53-4932-8cf6-116fec708c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534944f0-d3df-43cb-9c72-027130f662e2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3a3f80-b487-4506-a891-23905ad90193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d471fb1a-cf13-4696-9e0a-bad534ee5939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f6850e-9e5a-4ccd-889d-160a389c44c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5b119aa-4578-4f12-9a71-fde258ccf872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e63f847-cc16-4c4a-82b8-c9f72e92dc3e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4655dbad-3adc-4709-9dc9-9346da0d1dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8882a593-b7fc-4a7c-9793-4f5efa2440e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9fede6-62e7-47c7-8ad3-24fbdb0ee4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fce5b2ae-c5c6-4527-940e-db8b9e3e5086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08e536a-3df8-417f-be5b-6bebde3ae14e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec63a359-136e-4e21-b6ed-53650ccb003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81616ca7-0989-4349-a6ae-688816887a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf84427-a766-4dea-a12e-fb7971513cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db422a6-9c2c-488b-801c-e56fc7745038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8d32f2-51df-47bf-a491-944800f5775f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e6e62-b20e-471f-a7f0-b707afaaed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4908df35-4698-4a08-9390-d48ef025196e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673bb53b-42ce-4053-b717-7c77b40d61ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50e4350d-8be2-4438-a25a-bce4ccc053e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be76878-dc63-44fc-a1e0-014f30d811bc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46764160-9614-496f-958c-2ca07a4df958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551b65c1-537d-4386-b4b3-5778b802ef3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3776669c-1636-4332-9401-97ba1f6146e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6073cc27-6065-40dd-b230-f669f10224fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36158b46-114f-4b00-bb9a-be8aa4e4ed23",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56a2f36-2f7a-4d6d-b56e-9d82ec421ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275c9a1c-4f0b-4a04-b359-4858d68a6a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fad1d2-6f83-499c-a6a8-0d6cd7bdcf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423e4f3b-36b4-4422-a7c0-746161d59f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c432559-01a8-4315-82bc-0a6295f845f5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb9ca19-e825-4c41-8be8-a13dc0e6a5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b6cca7-c582-40e7-88d9-a7507857b742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cb42af-7fd1-4530-a6b9-008831fd4e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "552f72fc-608f-4582-8d5d-c09551184351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483f7ae-9e3d-452e-aa1c-da4203d1e724",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3c7d56-0243-48ff-8145-e648a271104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c767ee83-3285-4fd3-82b4-4430f4e3127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f784d36c-3ae8-42c6-b5bf-a70ce08a784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1094ffb3-5b1e-41a3-b881-864db0415dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76271d3f-21c6-4826-99c4-559b5c5b5507",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadce1e2-0790-4f7e-8458-75624b2a11ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9de989-50a8-4170-8cc3-428873b97dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f89a53b-8616-4611-881c-f663c74c3ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd6f9f0-934d-4cf6-8d7e-75c061d9a1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea210d-b726-483f-b445-e28e3fec806c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6266afbe-223a-4248-8329-723c8c2e3e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1f1655-afaa-46b9-b95f-3f7edb9cba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b20f07-ad1d-428a-8dbb-e4713cfb2670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27018f66-62fe-4029-ba6e-54f1ac738ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806b3ea-43b2-47bf-8084-85631b322138",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c330730-acd7-45de-b4f7-c13e0822d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047decab-cf81-4180-af2a-113ca07eacf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badf1529-fbb3-4eb0-9106-cf29cbcd8e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ce8dba-948b-4f45-a763-72e37a00d6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794bf1f-5e77-48c0-830a-a1a362d87f52",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e352df68-3091-4373-89ca-f3a771fdadaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5260f276-ef01-4b95-81b8-443143532d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfbc2fb-bbd0-4118-8753-fdb25e3e2665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef45d630-4601-466f-adca-356f7537fb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f593a7-846d-4e8c-8991-0acf7d291e20",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb72f77-a202-4865-9951-d7fd3708cf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409f8948-de37-47bf-95bc-d242428544db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76737a22-4798-4f5f-be45-127025eefe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d9304a-7bd7-4d45-a649-cde3fd0213d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c447d975-9eff-437a-86ef-172e657c1112",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e916e0-820f-47d3-9248-daf92da1cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6543988a-83ed-45d1-8111-d95188630efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85248d71-4a8f-44a8-ac32-62fa0e646b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15c21de-db2a-48c3-b411-dd87e9acabdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2775c07-a23e-4d1b-952f-e6ce60bcaa58",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5167bd3-92db-4f31-96e9-bb9869a7f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b7dbfc-d7ba-491d-97c2-b0f1f60d79a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44ee80a-1958-45dc-91e8-3d51d2eed1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebcb3b6-4fef-4685-bbc5-8f643c3fec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4714119c-a0d3-47b4-a124-a14a7bc3ec34",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebfda0f-b984-4f3c-b281-aed846697153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96d7ed4-3ae4-4e81-9d8f-e36da2d80d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdc06f5-1402-46fa-9e45-912aace73981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33676bfc-9594-4e96-8a51-8182e88b7253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8d62ce-3d79-4ca8-95ab-12164fa6c639",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06ddb2c-68b5-4a7f-8756-d5fd148524b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1727867-ddab-491f-9fb4-7524d513caf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308dc69-cc79-4bb3-afbf-8b1208a555e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd9023d-819b-4fdb-a629-74cb1f653c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1531cc-389f-43b5-9174-b28594368b50",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f368321-8db9-4eea-b06c-57ca0f91d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04826ce3-ae77-4844-83ea-7758705177a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc715e-a5af-4dc0-a73f-cecfe146dcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f072a1af-ae24-4508-8acf-2c6093268ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc0bb92-9d1f-4d2e-826d-328f9c7fce77",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0850327-7ccc-4227-8a06-5c32af46a530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6048c224-e57e-4350-b34e-0fe82273b9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0acb8fe-a9e6-4467-badd-dfd9a1579f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ac6805-99a6-4b5b-bfd9-f998d807584c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d85d6d-091b-45e1-82ab-a34aa06b6d42",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3cb63c-102d-4fff-baad-55fefc2ba1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d3fdf3-61bb-4bea-9867-dd51b2adc0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193fc0ba-d13a-402f-9213-9d199074b76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2426c9ff-a7d9-4836-9a4e-532e4518cccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc461057-6386-40f9-baae-15fc9d1c1046",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08709fe-0a05-43b2-a546-8fc670a967e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba34d1d-4c74-40a9-92f5-06937cdea5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246fe011-fcf7-49ab-a3a7-cb5b804e935e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48f4f15-2516-4660-bd7b-37e711cc24ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e100d614-2c36-45a6-93dd-17fd755e7bda",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2645d-5ed6-4ad2-aa8b-673d65e03e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d00c1e-9c02-4557-b3ae-67029e3ce2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fe7822-df19-4e54-ab98-ad33e3ebf0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0ef703-4f99-4069-930d-15906e003eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5978472f-9c6d-4718-8986-f99dd4a3e7d4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf66f38-315f-4921-8589-1fa262a187b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e192300b-e61d-4ac6-8730-5d940bee1390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3580090-285c-485d-ba94-23b05552c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fee5f2c-1818-4c98-bca1-caeef05ebadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e77997-4b3b-40d3-92e1-01d726c43364",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cdb220-d947-4c04-8407-145f8059ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef806a1-18e2-45be-8f9f-3c06e4117c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4e733c-1174-42d0-8850-1fc1eecfd293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb2a910-e010-4982-9fe7-f9c8d0c8bad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2df3e-e199-46b7-8a73-86968e909764",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355e36ad-6967-423c-8f3b-cb6ff431e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2096afdd-4a8b-4a44-9297-4bee10c568db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccadd85-2c71-472c-9d60-5014edddea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a00044f0-9db5-49d6-b25d-25198d489e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a5f7d-cd32-4249-ba19-4062affeaf4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fdb8a1-1f91-46ee-ae73-9c6d5ece8e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e85f5821-f3e9-4d40-9aa5-4966db5f1514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9badaa7-5fc8-4f61-acf4-6eec8963b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34a1a16b-fc89-4de7-b9fc-e52eaa7f3c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd131a0-7c50-4769-9a6d-846762080fb3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3156a4-28dc-475a-8bd6-026c1f6fe702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb7646d-08e2-4d6c-94f8-aa48035f7573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f563dd1f-8bb1-40d8-8d27-132aba10a056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feeec7f7-6f59-4634-93e0-a014dca44024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77581d4c-e278-4de8-83bf-0d1176af3978",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a217b01-4fbf-4a4e-953a-572345f150c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9671e5c-2d95-45cc-889c-dac26cd0c7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7da5bf-af51-4af9-80a4-a938d44b3c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b57b9a2a-4c63-4079-ac1f-059c43ff2f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd43e0f-69fd-4767-a29e-0663930a02c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4371c5-0e08-4114-89f0-f01cd8ef023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8e9161-7fe9-46dd-aef9-508eadb20aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4e6427-e295-4abc-9c60-01b516f83988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8850fa5-da6e-40f8-8feb-83a2eb023cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c8486-7676-4cbe-8f65-318c2b16bc09",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bf0239-3cb8-4b11-a8af-94ebd8e3b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8548542-b2eb-4f96-a416-11a4fd20374f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0afcb6f-973f-48a2-b83e-cfb88eb0b9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bbf1af-3da9-4869-965a-8b6cc8d0d1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae25d2-c1d8-4dff-a436-b0c101964187",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e889ae-6e9c-4fc1-b7a4-82782d6c9060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d61e8e-25e6-4809-b639-9c222a09211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee09e5b-c822-4d4e-a3c2-a6af35d2d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9bc345-258d-46e6-a8b8-91bb1651d428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c6563a-23b2-4d04-9271-15f5b3afd77b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d622779-ab11-4758-871b-4d3f24ddba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237f7100-736f-4e7f-85ee-5721471179c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17af76d-8e15-4e0f-aceb-7c5cb5b8af74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "845d5c6a-e47c-47c8-9e24-c9ded83ec8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d581069-6436-44cb-aadd-b3f73f9e1f35",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc1537b-4af1-4ad2-8708-6e142372cd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115eced1-4dee-40b8-89c9-b81ba9838412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffd0ec-7ac9-4783-bef8-98f54de23ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f81b33-d8f4-4135-a644-6c3c9fe39c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a9889d-1759-44c6-91ee-2e7a6fd61752",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b04b44-2463-45d7-9713-9d4c833d5bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d069dd3f-f3cc-429c-ab8d-e91e05b916fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67d67c3-5595-4578-8c3d-25309dc9f358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "24602428-7c31-4a2e-8277-e4a4635fe102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07d05b-9711-423d-9de3-5fb0836af330",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139b9d33-fe0c-4b3e-9dc0-fbda866e53c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c034e5d7-36dd-4b40-af21-32229ebb5d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b62f435-a07b-468c-8eb3-95c5c5605100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35bea4be-5e8e-407d-88b4-2e656c0daba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188fa1e8-f92d-4cdd-9404-ce0224750d7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce750fb-1f82-43e2-a4a8-5a0e56cccf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de0a304-eab7-4549-bfe8-f3e98f996462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb1f600-90cc-4588-a413-1901f3742159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd1b7e3-7f38-42ba-979c-14272049b6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a0f79-e7c2-4e0e-a656-b8f4c106ffac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c747c46-30f7-4682-a777-9a33a1f1eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b12432-2958-4238-8ec1-a6e5b38c5982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f93cb5-c447-43bd-ae3f-146e24d5469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a631e495-11e8-4c1c-b904-f62a224ef28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203df804-8551-4f5b-a3f0-ab2f6c615069",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f2704b-7a75-429a-8099-0a75e8d312b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6aadc97-8ad8-4b99-b6a0-790ccfdf56b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc6ba21-19e0-4b23-accc-e7bb478739e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee29593-8fa7-4674-b79c-d33d1659a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca88bd6d-567c-4d1f-9bd4-36cdae52074b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f9f72d-9d20-4953-9a74-373b8a8b165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567fd23c-ba55-4e1b-9c78-d86d892c8477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6214bc-4395-40fe-9cd6-d8c454b1c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d379eee0-ac02-4783-a427-562f1f636280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e51dae-e95f-4896-b705-5b3e8ca6afdb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701987f6-83a6-49fb-853e-ea01bacabe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec7b871-c6fe-455a-b014-eb9ca9a97b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e10665-f9f8-40d0-ae1a-4770c8af182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f4f088-66c1-4efe-9816-b9222a481f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a59d58-4794-4fbe-b130-3553b10b8cca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab60bba-e892-4ab3-914c-d27ec8c0d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6598a2-ca7d-45cf-b56d-ecab5354a672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad81034-d1e9-4b0a-adc8-7816e7d94c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e728794-5c27-41ce-a14e-f54cda16ccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1316bcb-0912-41c4-875d-0d18b51dbc81",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d0331-2df4-49b9-be9b-e693fcc01fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01899fc3-f8e9-48d2-b6e8-ee52090e6377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dbbfea-f578-4302-b89c-5a1fd67633e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9503b1b-3a52-4a68-9d32-02c435974c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf550e47-e7d3-4490-94fd-7ccc9568e81f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6188fe-3167-41a7-8223-ea6d25f5f440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d41440-564b-4763-a0f4-7413255a17b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b72fb1c-5ecb-402d-925e-d9db82375052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1255a9d9-ec33-4958-88ea-f5d92b3598aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8de41c3-2fa8-4309-95a6-7e2431990669",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0d8a14-8db7-43cf-8b4d-6da9c6f857a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85226bf0-ef7c-4716-a745-10e031bde33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e80132-69ac-4814-9205-01f58dcdcb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cca24d-b920-4d7e-9dcf-3fc1b068d9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f20160d-13ee-4ffa-b918-ce1c55f28d60",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cebd25f-dbe9-4664-ad9b-d1c21a8e218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44e7ffb-e37f-43e7-8af1-71f2c0e7bffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f77aee-7be7-46b6-a76e-264bc923a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49f1f97-3de1-420c-a8bd-d20d27cd5f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c113f30-3d6e-4460-81a6-f9ed11a8012e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464f631c-b9e1-4700-9a67-b3df3f04068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e546fd10-c909-4c85-b1bc-6b8397930287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c697415-6608-42f1-9b84-13659a812e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "09c05fb1-914f-4244-b55c-d4fd9397b341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0aedb-ac5c-40e5-bb32-a47c7c4deb8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bff51ca-f91b-415f-8dc6-27ac6c0f24f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b04f38f-3b29-40ec-89f2-5f0bc58f08f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c9aa48-6e17-4a3a-9233-6dd9fe864176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "177a6e4e-ad07-49b2-81be-b0570fcaeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce7977a-1e45-4f81-8396-a7c324fc86d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576fc93f-fd84-460e-b33e-b980581f2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf4cfbe-cfc9-46d4-b7f6-ba753d39564e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcac6661-c9fa-48d0-9117-01a320bbb7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27623244-7ace-43a4-be08-fec8c3be9b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192a54b8-f8db-427a-9cb3-ef878cb2bed0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dccfea5-cbbb-4da0-a7a4-aafb4a650b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3a0ac8-f685-4c7a-831b-75091e40611f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d9ad9e-ddc2-48dc-a2e3-9ec253ca112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae604c20-e6b3-466f-89ec-b6df5a51cef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e47270-7e84-47b3-97f3-c3496609af89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196e2491-e2d8-452c-94f6-275f35cac25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffcc85c-e22d-4cbb-8f39-50bac81ffbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d9bb9-bc85-492e-a9ea-bb69240810bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9324f0ca-b6fe-4646-a38b-5cc8f3b2f722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98dbc0-f287-4986-872e-c00317fd51ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244b9af-23f7-4650-bf7a-ce1cd26a5c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be549b44-cdde-485c-bfd4-6dd24f0f5efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf3dd71-659c-442b-890c-60b7c6b0fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69c9d3d-7fb4-4322-b1e5-69842ac8bdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c9e77-5d5b-46f0-a914-cde0dd76a70d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f705ff-26b3-44aa-b1be-c4018da80486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9b8637-cb4a-4dc6-8984-d198aa573e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc92ebd9-4bb3-4f4a-932d-6ce5c76f64bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5804ff-f213-4c7b-82f2-7ea197ebe746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b9af8d-76e8-4234-a262-8ce2cd9dc5b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070acabb-1835-42c8-bf22-9887d56ab8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64aaf35-eb33-4f73-b43a-75203f2596b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a9f22a-a747-42e9-b03e-8847d6feb9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b471f570-ec4d-4eb9-a5c6-a539cb41898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2486576f-caec-4e69-ae16-344d942d1be8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f41d5-ebf9-415b-b686-4c6c446077eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24cfefd-fbee-4a58-b212-118f4d402e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08feaaee-d38e-419d-9188-7298b29f40e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f3a61a-304a-49d0-95d0-7e9ebb010e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519f810c-52ef-4fdb-a66e-6164282faf11",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2e7bf7-916b-4cd9-8c95-82db4226a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687ae260-c6c8-470e-95bc-469fe136c58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdb2907-278c-4173-8e68-ae35df1f2c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ed0353-5584-4f02-8cf2-cba7bf0df618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3247b816-0bec-4586-8ca3-ebeccd827a16",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563393c4-7672-4d71-885d-03745b78722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4dec49-2e49-4d72-a3a3-9fe5b1b693ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b46bde5-858a-42ab-948c-5efc188c2912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2950541-a3a5-4338-88e6-f118135bdcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41c4ca6-a69b-4fa8-bdbd-45f283efd00f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51affb1-9f10-4e41-b2ea-6aeb118a85a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74714b6-5955-45db-9fb9-2e587e89f4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b8045d-fa88-4da3-a627-81b289df3df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ab27c8-392f-4c85-9d95-5b20cc64eae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311103fc-2287-4b79-a8f6-aab0a8315b80",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e75a356-b703-4784-8b28-3a065b0cb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a616a1-73c0-4f56-968e-8c1696f031a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abcc88-573f-4f8c-aecc-82a52f406c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "72181309-260f-4a8d-afae-c87e5125c313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f947e78-3ef0-42f1-b76c-f75f934dd8eb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d6e2a-cb81-49ae-bcc5-d43fb05b47df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe090486-fc08-4e57-9fcc-91306b358c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9c56b8-d3c3-41fe-bf6a-23273803e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39c8fb5-a9af-4638-b0cb-f8937f4a0b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7044e5-e6fe-4cf8-9364-9ec1751b2121",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92b72a8-2e8a-4a96-bb54-feb9130a6968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3dadaf-de9c-4994-b17f-cbf5c82f67fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ae48c-1450-455d-8444-7f3d6079f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7c295b-d7a6-4d58-877e-fd268922dd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a692c90-b788-4475-a6c9-9e47e7ba8fe8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a9629-ab90-4f3f-b37f-2bb744a36fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195acc13-ea7b-4d43-948a-fecb6edaad51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3460d2c8-9877-451d-ae9f-26f1c8dd5035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "708afe33-8ac2-468f-ac47-31a27fb52ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d775222-89c4-4268-9ea4-6bddefc95a09",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1063a1e7-a319-4305-8026-f83568a8990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dd4086-aab5-4384-a2da-097928d9944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89d8e49-e436-413f-b8e4-ff22dbc90f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2557713-c6ba-4271-a0aa-ce8144e9243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d101e7-52ae-4bee-9007-d2617bf3a3d7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caded86f-d2cc-46db-9702-f2ced1d66d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a39bee9-1f2f-484e-b4d1-7c6e54103b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f2571-2c7d-42df-84bb-3b53241a8a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b6e9ea-6076-495b-8fca-83dac6945860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1f5e9f-0fa2-44a0-ae80-d293d7ab5cd4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b829669a-d04d-49e2-9b80-68fce50bbecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540fb669-5298-4725-8e61-c6909bf4d5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e8addb-714f-4db2-a8aa-d38b28979bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75f639f5-c74c-4491-9761-bac8e07ad27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388708f3-8f8b-4fd9-99d2-f6b957bebbba",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6083fcea-9255-4b03-8b54-457b25172088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b3cf61-e2a1-4876-a647-72a127f5a40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430c7181-c834-48c9-8fca-4a68a0e85572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff98b58-dd91-4dcb-a12c-5149447348fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165409b4-e161-448b-8087-ebd10165b76a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afabf93e-8b01-4d0e-b691-53c03b2aea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6f9050-61f8-4899-a3a8-e73dd5707e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9015a4b-a166-4100-98f8-8b73974400fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace31802-1fcb-4976-a7bb-61c0dacf9508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511c492-aa9d-4bbe-99f2-51624911d7a8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a159500-4033-425d-b488-2d39cbe5b346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c139c823-1a42-4d80-9058-0028cf24d504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac0414-51a1-4198-9781-1b346b7f7da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7717c0-1704-47e5-aa25-c1580b5b7b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3fa6e4-2f44-47c1-8a60-1adfbab5f997",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ae5a1-89f5-486a-b8ea-f915ed03b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882d3384-789d-4ae2-ab34-b0513f3b4c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8c45d0-8488-4f0c-84e1-5a377dbbb0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35042ba-3ca6-4791-990a-2ee035d93b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75102087-affd-4171-9655-e3edf6655588",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f425f-1f41-4a01-8d4b-ff90ab9accb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15ad4b5-7855-4aa8-b2fb-80d65dd24589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaf5492-52fd-4574-9a3d-d15726756942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec8fcb1-1f4d-46d3-89d0-f389d8c977a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb27346-1220-41f9-9cf5-bf5e06a3b2f8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f22d0a-ca9e-47da-988d-66b920374221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90976fed-34f8-43ae-9746-cba40ac914ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852756c3-462d-4069-8ddf-c7f5ef530b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f854df4f-ed71-4a79-bde0-3ad02464f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341e7c9d-b4a7-4fef-bbc7-543caa577b61",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681bba7f-1c73-41d6-b8ca-277deeed9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982c572a-bc4d-4c12-ba81-2e97ce228ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93393ea-4c15-461f-a034-4674abc69125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c930e4-9ece-4c5a-a807-64fd4a816b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260861e-2db9-45f0-86f9-b0e26f5d95e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2cea65-7f48-4e6c-8844-a2a99298153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5912fbab-79e3-4bd5-a617-0ee6c5cf5e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebf977c-ca42-4660-8787-784645c9b448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f41bb12f-3624-4778-a799-e7d7b1c4944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00298af-428f-4e9f-a71f-08ae69c3bb69",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db71394d-1a62-4171-bbe1-a7da63b5e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855ee2c7-fddb-4ddf-a589-7ea8ea685e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f416bf17-55b9-408e-ac3d-94c7fcfc4554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb7775d-490f-47f2-8bcd-20901d5fd692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78856a36-5206-4de6-8b9d-fdc66b259f4f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94cb646-e95a-4430-8731-c98f4c2801d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1cc1fb-1820-4187-ac1f-4df2b85b7ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b714138-765f-4c2e-81d4-9ab70267e3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085a0b75-cca7-4845-805e-118d8f9a5eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ca5e9b-43e0-4c07-8fae-3ef6924ab424",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0578ba4-6425-4ddd-acf8-654f9ca08091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7403a94a-473e-4e86-a6ec-6a883d1774ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a43f389-51f1-4837-902f-6fafcd31e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b97ac55-174b-4706-b55a-bceef58dc011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87d58d3-152c-4f74-94b2-77e2f8688075",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd4c084-4fa5-4870-9c1a-4181487a18d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d716d-90ab-4170-bca7-0f28418b5381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62f174a-8102-47c3-9fe2-dcf74c4cb161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fe75d8-e74c-4b79-a81b-c1f65367d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e902dc85-c5ce-441c-895f-07e92c8fb32e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33614591-4f20-4709-a3d9-8a8af08e014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bb8578-4a3b-40ce-85b6-90f785a62aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0e7076-0dc1-49b5-8680-22d5e3291277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0812e2ac-baff-4812-b02d-39ee88bcaa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03939c0-7df5-4ef5-8075-2fe7ae113409",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a2cefb-08b9-4706-b2f6-61e9d9204e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6b1fd3-900f-47c9-8938-8e06690fb128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6b5699-9dba-4d79-8d2b-ad33d6a3f723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1544d59-560a-48b5-b1bb-aafd24595b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497a582d-0aa2-40b3-bf33-3de3f3c511d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ae775c-059f-4fbb-8aee-df7468873601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215536ba-8e28-42fa-8779-c0e44f1b7ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ad0d1-b5e0-4b20-8db5-b499414a4258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d88157-e1e8-4a76-9a4c-1ea2d6b99b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297cfeb1-c32b-4ad9-8cfc-4a255be1a09d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3acdc-8013-417d-82eb-078c564213a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d024d7-0e0e-4bad-8737-871663c04d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d15333a-e9da-4905-8a7a-5784c6d43726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fee05451-2fe4-4179-86c1-a0af784334b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cb5ff1-ddbe-4b52-98cc-5bff7397b057",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a33c93a-0637-44e5-b853-4eda6a511275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe4ab03-f33c-43b6-a3e6-92c0c5d690a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9cbaaf-8815-4dc5-8831-261d45bb90f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39a53ed-d843-40a1-ad77-c46d5d80b95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d535c1ad-99ae-4c13-9350-89ddeecb6c45",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f20cef-cf2b-4d48-8e42-277a4b9c70a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f2ca587-5002-4d13-8083-ea93211a9f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44cfb07-bbd0-4356-962d-f8b5b0973ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1faf0a-2d59-4220-8a84-01394a8e9767"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f6b23d4-83af-44ea-baad-eb4587800771",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab145905-5362-43d1-85d7-e09c7aead8f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015934e4-9cd9-4417-8393-7b8b5b6d3592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2b55738-94c3-4d65-b89d-ad57082daaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386bafd4-4c25-4374-8377-1c2e75204b4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecafd01d-3b05-4e15-a0b9-6ebd0f0df74e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5b1a008-c46d-47d6-978a-c97bf31b14d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c6c5cb2-4d39-499a-9a54-9ebf16ac3dee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d6c5fa-8113-4a7f-a186-26836b5fa7f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3c6017a-a9c1-4fe5-aaf2-496bf76d2186"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75cd423d-4ab6-41d0-803e-ff86dbf2223e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "390bf4ed-a7d1-4297-ba32-cd53fbeca706"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "977b9a54-bfd8-4ef1-8c40-778cad40b8d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19b04aee-7a25-4d77-895f-592f3720f239"
                }
              }
            ]
          },
          {
            "id": "39ed892d-80a8-443e-8379-b0b61cc5d139",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd0763af-9c08-403b-a697-275b5e70b233",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c1e6d492-0776-497b-a94d-cd9b449c690c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694529f3-871d-44a1-afa2-0bd3b7385617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21bcd60d-8911-406f-8676-4707e6cd63c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d393f2-f1dc-4f92-968b-daca8e8ec30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de29632-1410-4b98-ae72-998b42a74898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "274cc09c-98a8-4ce8-a50e-ab610b189bba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef704366-43ee-49ed-a059-37759d5069e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9ccc91b-89f3-4c9f-9d06-f8a49eb30f58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5110fc54-a5f5-4ef8-a853-a02ba68f5e43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a0497fc-ac6b-4cc2-bb33-deca6f6bf5e0"
                    }
                  }
                ]
              },
              {
                "id": "f9f45f16-3f62-4388-8eca-64b81e6bca62",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c89b1f6-5e34-4d66-8a26-ba0266f49495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d59d326b-ba36-45a0-96c3-46b28f225e2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5081fdde-cb1b-4fdc-9d9e-d7f352a48be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f5f7769-2f44-49b2-9ea3-c5277cc7655b"
                    }
                  }
                ]
              },
              {
                "id": "c96d4533-d260-4d8a-9341-de0aa5b2723c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "957aa117-e750-4fcc-8fda-d6333db099d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bb4e6a7-832a-4147-800f-c5fc2839c730"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3def5a43-c27c-46d9-ae31-e3f48af8e62f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55dd7a29-1467-43d8-ab93-bda393805596"
                    }
                  }
                ]
              },
              {
                "id": "08186b29-0fc6-498c-8fc2-4f0867b7c7ce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adb24f1a-8b41-44cf-956e-46ce8cefa6c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11e09e86-e3a9-43b7-b1ac-40deb6082c9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89cec26f-9365-48d4-9400-de4bcbe944e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ad7278db-93b7-44d8-9c89-3390b2ca24e6"
                    }
                  }
                ]
              },
              {
                "id": "c3d20f8b-db6c-410b-943b-220e9e0bd218",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36374b87-af2c-4ea4-9344-7752a8d5046e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e7e8804-cfd4-4f98-9154-35d43b872b7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49457542-c2c5-4c5c-93a1-05f0df37c0cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fc1b8dc8-0d87-4967-bfe0-5ba5a4c29ed6"
                    }
                  }
                ]
              },
              {
                "id": "b81e4677-d8c7-44f9-a66a-7f3b9860d53e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70cfc785-3cdd-455d-80b7-efea9f1dee0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25aa1f0e-3a46-48fd-b018-11467b20d89f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd4d36a7-bdac-45ef-8fd5-f62e6b94d2e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f576ef6-b713-4cd2-b78c-6aec3c408ea4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8acd33ec-2675-4c29-aa7b-d9adcf855a74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbaf2488-3402-48b6-94da-1d7af9a4d0be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dbf9cfc4-1012-423f-b0a9-9df6d33d6a5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a266d174-4e75-4095-a8b0-14debd1fd527"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c4d3b7e-83e3-41f2-90ec-b51686b72091",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3d3fa8b8-1728-4a9c-bc05-eddd67d54106"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93257468-237e-4ddb-b1c7-0f4d5b82627c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24a783b6-7813-46a0-86ff-d11d0fc9a9ed"
            }
          }
        ]
      },
      {
        "id": "31d96d4f-458c-440c-913b-3ef6d5adb487",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a1e34c8-1132-424f-84f9-d2c57c35efae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0053ecc-68bf-4660-aa84-5e33219385b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57f97ad6-fb43-444f-ab25-42c3bce3565f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9683fe9f-5d92-44c6-b036-1489a919e3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51272af8-65d2-4ef3-a424-ca3a5bc0bb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b815c7ed-ad1c-4e95-b6a0-a8d5953b5bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f3cc0a-9871-4f3e-99e8-53e015a5845a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5d0bb-d458-47e4-afca-8551e5f80e6c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3821a795-e48d-4ee2-905e-83924435000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59267f07-5331-4778-8717-399ce5a007d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41719f13-1de9-4346-939c-00ad2a3aa2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "112664ce-802d-404d-a21c-ed8256a360d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe755d2-88be-43c2-a0da-d46a84072a43",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29855fa-afaf-4c45-ac1c-7de7ccffc266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbc522f-7753-401a-8646-8535d0b8a576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9625a43a-4eec-4695-b640-f32e44aa6ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde30066-fe7d-4b1d-8e16-8720f7b3f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aee28ff-f9c2-4a18-98f2-a40abcb28e15",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf42d191-b649-4a90-974c-5cb70a9d1fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0976b998-460a-40a9-a765-f83505dc779f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9192ee2f-a77c-4f8b-a7dc-e939d2e26868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ade2869-c756-4442-90c9-23633123302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0e2594-b2d4-4d1a-9ef2-404c927d9090",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15bf44d-b660-4179-9189-e34938891a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7806c3-3b07-415c-9085-1cb9b0e9ca77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2906635d-672d-4837-8810-153a47d31e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1305a78a-4132-46be-a9b7-63a8e48bd891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974d78a9-1f60-45d3-8d70-b44c34af0013",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25fe4a2-f257-4e4d-b5f0-d35a7cf4c715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f869c2a1-9466-44b0-adbd-1fb0f1690501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81241c85-9e60-4881-9745-38c6f609f608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce455b1-4dfb-4ec9-bc69-c29fc1f947d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c3cf43-1c0f-476c-9b2b-e5fe134a33d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a217e6e-69f7-4cf7-b357-508629c3b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b0b249-3c75-4c39-8c73-75763ed4dbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97f2a22-d99a-4293-ae2d-a250d8b4fb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a85a7ff2-83ff-4c70-bd1e-b773187c2333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e113652-ef8a-413c-9a23-5d55edd58cda",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d84efe-fb89-432b-a784-de70a1be090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59efd467-ca50-4d02-883e-9a4eb728176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88addd88-3ca8-4d67-8e08-911b90dd0b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1874ff6-171f-46ec-8007-b90bccea6aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d3225-b94d-4150-a437-cbd1afb72311",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4752aee1-097e-44a5-ba87-9a426c2edb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4cc1e5-fbf3-4cf6-b9dd-bf95b2401cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc743a6d-15bf-44fb-b09d-eb5f66c75558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0160f67-c05e-494b-9dc9-c0d597a31bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6fcbcf-6f5a-4d2f-9fa7-427e0a40d752",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5bcf2a-e62f-4f5e-92c2-d223a62012af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0c3f62-594c-425a-b7cf-0b4ac77802e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc50387-b46b-4d1d-a649-30c81c14f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c92f9a-a8a4-4624-b79d-f9f9ae61439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d25c9b-49cf-4d39-9c03-5d679059fbe6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ffb02c-0ad8-48d8-b31f-31fc0e8f6c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacd4e19-3cbc-483a-9e95-8e5492a359aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc009c5a-cff6-4fdf-8209-3a6c141eb849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "84f7bc9b-e3ce-4fcf-bc4a-7bfe9e0b0de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d27119-a3c5-413d-bb90-90d5ab4322da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f4cfd0-683a-4e8d-aedd-baac3aa335d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf73ac1f-5173-4a80-a891-1d24b243513b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79c423-82ed-47f0-bdaa-ecb80156e5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02cf662b-e044-44c7-befe-d59b4975a254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6172dc5a-8202-43e4-bbb6-c5e7b9257add",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1c2cde-1925-4a10-8d93-b52bc6c86866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b6c99d-c4ab-404a-bb33-72ae7957081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b73c07-612e-4bd1-bf7d-afc91e18a02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea88658e-1eed-4330-8665-c6ede2397a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2a42d1-ccf2-4887-addb-0184a5475d89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0563cf1-626d-4d14-af7f-437c205578bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7ea831-bb22-467a-8637-4c5a029d6b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb83a6-e58d-4479-b340-0421ac9f7ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "493804f2-40c9-48e3-8401-616e4e2f8f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6600055b-eff2-4b09-b197-f357f6cb55b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bebe73-b71f-43d3-a153-fcd34753bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3702c2ab-b9e3-4bb6-a9d8-50c3297cf68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5181aa9-970d-4809-8120-dc36c8f9ec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "77fdc226-840f-4eae-b10f-599917f1982e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5670a94-2c6d-4755-b4be-d62c1bedafe2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2751b57b-d992-4c46-92a2-2b2f20f2a4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088bb63e-1170-478e-adae-bf7b04ecbf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0892311d-cbc7-4699-87c7-7c33381570da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecedae1e-50e9-4b22-9f6e-163d5510dd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b8a68-b74a-437a-905e-44fab7f84295",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5e092b-c6e0-4552-a06b-f8f5582b8562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9680f627-7cb8-4d45-a789-14fb217cfbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c6e039-5030-49c0-848f-56bba9783b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a6208f-54fb-41c5-a64a-49404e42f3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd2c4f7-b45e-496d-9139-18f5c5e20791",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e30fa-fba7-43d7-a6b0-55bc294c4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f765d5e-6091-4b4d-a2e0-dfe5b31cded4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cb6831-1e1b-4cf1-bef4-306c2cb03608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c239cc-034b-4a66-9d68-251e4cf33a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57036d9f-7b18-4462-a6df-3a9f6adcea98",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18330f37-ed39-435e-997b-abe7d876dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c771f10-0d60-4df8-ade1-0627d60f4bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fdc897-4c4d-4988-a229-2a575353ba5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20e502c-1baf-419d-8894-32580460ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c5bfcf-8647-44fa-927d-4566687965e2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402980c8-0911-4b4c-a071-67485653a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1965b735-c01d-4468-898e-3239cc527e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d819baa8-ab13-49cd-9d27-80eb8a602fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df33de0-d67d-4918-a3d9-a9ae1cf699b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ac05ff-e36b-42de-9101-1996fd34aaa4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86136bd-4077-4812-a99c-e84fbdfa4c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7ab9ce-9d61-4ad4-bdef-de71849b5d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb08cf2-4698-4927-8095-29021ae8c904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6019ff63-bbd8-4955-b7a3-d12809967fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37e38a4-def2-4939-a63b-66b619f33610",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9105866-e0d8-42ca-9d39-5da13aa10f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ffb3e6-9094-4b0a-b8d4-aebe1048961a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b219c5f-29ce-496f-87e1-01316e52e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4546b9c-9b94-4623-bb55-012cfd35f6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a97f69-bd84-4714-ad60-0ed8bc1a4a11",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb01282-1d46-4b83-ba31-601e4c08ef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272a39b8-9b11-48aa-8c07-b9f46007988e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171422f1-2da9-46e8-ab18-d800294d97ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4d95cf-fe8f-4edf-9a26-89e005365be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd7847e-b920-4fbb-8446-bf29f0f52b0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7789071-e83a-4966-b811-64abeefd2d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b06dff-8689-41d2-87dd-7330efc41207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856ba820-d2c2-4a50-9b6d-fe573ced040b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7bd568-dfab-41ec-a36a-8362448980e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc8fec6-7075-4769-b5b9-313e2e40e3cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df89f18-7b66-4a03-a280-9de45d7d3d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4fbd34-04a7-448b-80db-5aea60fea8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7376b9cc-1b7a-458d-bc38-6feb96e4ebdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77df8854-0ad1-4b23-a18c-f786869fa27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f776ad3b-80b6-44fd-bedc-820f0a2361ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af93c8-0070-4f6d-b00b-8826852586a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145a4cac-85f4-4d79-8014-428c25fe3761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d126625-d391-401b-a5b5-8ce8e27151ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae32f573-38aa-402f-b379-07d56990ade8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4625ba73-2cb7-43e4-8609-2081969ca9cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088b6af-a5bf-4a8d-bd48-a4d6aa0d4d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacfdec4-1171-4fdc-aa3e-e262e636f703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caddcf6c-6351-4eb4-a111-4c83e25c61dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1570ecc4-a19c-41d7-992e-c33950ff505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5426adfa-c02c-4169-8c87-eb8946d21b9c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066cb818-bbad-4fd7-956a-b68e3f0c5398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a858360a-0e47-4fb6-b597-ddc8d6ecf0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d244278-a430-42e3-b147-c57029926d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36d7207-232b-4b9e-bba9-a1f843c332d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fdc911-a36e-41c5-8a53-5cabc82ef7b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e85fa58-1bcd-4b25-8039-cb1153bbca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72b531a-76b1-4428-9f65-444c72955d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13210f-2811-4f51-a842-130ead3ba6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4977143-32df-401e-8d37-d01eccc2b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f19a74e-9d03-44e3-83c4-223f1cd9cfc5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db1ece2-c71d-408a-b96c-62ae59432b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62317646-7142-4589-8d96-85fdf7691913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d785e32-d9a4-4ecb-b51a-21e8941a9fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b371f2e-6cb9-4cbb-87db-b34799649375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4499fd21-82b8-4c16-880d-dc6dc9bc3124",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a4b7f2-2cae-4e94-a796-c7f43485cbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d00bd5-2f6c-4bab-9cb9-fc14f51de702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd011239-58db-4206-b951-07a6018e9d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db085d18-deef-4fb7-ba37-c47f104bd5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f552177-cee6-4fbb-8127-07201df9a922",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d11cb88-adf4-4443-a201-7e6575153f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e346f56-0a3a-4149-97b6-88ef747b15fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799de774-a280-447f-b217-679922073bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae2f557-2ed4-4de1-a4f9-d7c34bddc768"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0242c36e-86ad-4c23-a855-4010e1ae9ac4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2c9cf15-31e2-4d09-9887-efabcf3730a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e586cff-5c6a-49cd-b7c7-42892707468d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "84e3ebb8-1329-4bdd-92c5-774473e007c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa00390-883b-4d90-b095-fef8abdcd4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0881b38c-49b6-4f7c-93e3-715c9794425b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6f49dd3-ac88-496a-84f2-38477eed12d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb50ab18-1fb6-436e-849e-e392ed677df8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0063674e-2e58-4ec3-b99f-b69b0ca72e1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab24b7da-c964-4d42-b8e7-cd0a9a0bf3a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1589b8c3-ad61-4e3d-870e-7c9d0673698f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77716e79-d31a-42f2-a57c-efbb4fe10243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe921f3d-e292-451f-912c-4c03abe9c9c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0147f35-171f-4b12-9693-c7815a57fd3d"
            }
          }
        ]
      },
      {
        "id": "b60049f9-1b03-4723-876e-153cadce346e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ddb2c547-f755-4c2c-9cc0-4c6786622847",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4e60e9d-7df6-44f5-be48-0ab551fab65f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75ce4a95-e138-4058-a1e4-7ec65526c9e9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb4ab22-684d-4dc4-936d-1fb2e797ca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60baaa3-2b12-413a-bcfb-038005f0fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22a91b-cd8a-4cdf-b368-bf3ed77a14f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6adb36c3-408d-4a33-b69b-e2d707e0fbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d8dcdd-dae6-49a3-bce5-b6bf363654be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6167b0-ead3-4bc8-b815-53eed1515110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a8e34-84fc-411c-a336-a225165a3ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80418a32-b6d2-4261-9b9b-7678a0025250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5e3135-40c7-48e9-8c56-6bbb998cb9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b126ab0-c853-4467-a1f0-0b4f69030767",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4990ea4-06c1-4691-8b14-a2f096a589f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6687de89-5180-4853-bb68-1d456bbed6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d673772-2914-41a1-b3b7-2f9658e74c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60169706-68fe-4abb-8740-087b94cbcd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8be484-78ba-4f18-93b9-21f22327a795",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd50295-38e3-4df3-a9fd-4008db5ac78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583b5148-7b91-4397-8085-c8793f7e3f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad9250e-dc86-4ee6-8373-e6709399be7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66cd631-4034-4d14-a4e7-4a3df4c231ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d434cab-e924-4bb4-be65-0fdfbbed27e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341d2348-303a-470e-943b-9222d1ee0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06543379-3043-4202-a45e-bb3718666094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449592a-8dbd-48a1-b4a3-cf57909cb6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ca97c8-7eb5-4bc4-b474-1ff17baca1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12cd5c3-20d5-4fd4-9681-66fc4d51ceaa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d8aad7-ac48-4dd9-9997-9d63ef035103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e97e39-449a-4b3b-bc82-67f4c4ad61f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6bfeaf-5416-4ea5-a287-cbb34b2b2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3454ac35-324d-402b-91e0-5d70f51d6af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608365cf-7311-42c3-a3cb-2d44a4192dbb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8dd4f3-6092-4bf7-848b-c7fcca1500d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e0ef43-f1d2-47aa-9dd3-f7d6def2e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f67978a-ed24-4cac-aa46-e2271ebd3cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c4ba11-1f96-4416-b253-c6409a40a475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2149bf7-0394-4768-a452-63c2056cc5a5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca33737c-04e9-4f91-8302-92aeac1ef5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02aacdc1-04e5-42b7-94b6-b480c8a097da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eed56f-9d3f-4243-a001-618555bfd352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "406fdfa1-b8e4-4e63-af87-2b9db31bd3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe0b9a-3f89-45e3-bee4-d93999d41049",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb2b083-baaf-4f5b-9e3f-f2650b4b940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e027b34-f7f5-4b05-ad9e-911d9507119e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a44b2de-5e2b-4a52-ae17-577fd3dc2da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79857dc2-70a3-41b2-a642-00db69258357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d8ac8a-2a5c-4001-88ec-e606bb640b20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93880313-724a-4188-a850-d034db84a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68872540-7421-427f-b8fb-07592ee83c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a27ad3-754a-4685-95d1-7f3dc8bf62b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a553075d-3ffb-4c4f-8cf3-3efbbf4028bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43391702-d8b5-4422-a350-3090e62d8115",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8417a31d-9f6f-40ec-9103-6716411ea7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9facc8-2b5b-4a1b-82ca-240da27aa043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f4ea78-534f-4135-a29d-99b4ddeeb10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5b91911d-114a-45b2-9b72-74c363780d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e7989c-91e6-4112-a99e-214145c4ba09",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef14571a-ed66-42b1-b9e2-8058dc8edbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dede3e-72b4-4afb-85a6-20cb849463a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbb657-18a8-4a69-ac72-68b2f20942aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfa4da9-1643-4e02-bd4b-55cf4e416806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe476b-4fac-4957-947c-35b821691414",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19f0a0e-3ae9-4fec-bee6-2f0519f19680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068a4864-52f9-4d2c-aca1-bc6e36b49516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a6b2b-86f4-4160-ae14-30e96e85a8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5517ef89-fc1a-494a-8ce1-60544aec3a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8e3236-2dc6-4b0e-b208-72f3656ede21",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb929d-009a-4d14-9cc5-190bb330ac0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d729cd37-4152-4690-8cc9-e02b1e8949ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7d063-292d-4516-8172-da991907df14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2eb3c2-b3db-4337-8619-5ec5227ee3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3850d674-12c1-4166-9590-815109b5774a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc3b171-8d9b-47e0-8cd2-c4741492e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2eece9-f587-4e59-be24-1b0a46496bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af82b13a-281a-4374-9145-77bcb793ab79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb31a9e-f11c-4725-a2b5-f0cefee12142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f937b631-1504-49e9-be05-c59ad4a9d35d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b63c110-9bf2-4046-aeb2-ea107f1b88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10e469e-3c86-4501-b210-f5c33722b41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcb2a16-440a-451e-8e2e-6a7f3f063aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68ac733-c736-4e24-a36b-541af5fa3180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e7068e-1144-4ac7-8997-839106ed1c5d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b57e5aa-6128-4736-9400-11a52f980814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722cc18e-b5f1-463c-9eed-ac5c2eb95cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878de80b-002a-4fa6-9bcf-f64a67cf2364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3864455-cdf8-4d58-967c-a4cfe6a28e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4897c-6fc2-45f5-9dc3-38e72438c982",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ed773-cfa7-4b98-9311-82d78bf5737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34843075-4cad-4ca6-ab24-48a90dd5ffff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40664d9f-da5e-4149-80f3-3cefe651337a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "466d5696-4264-4fc1-adb3-422c067a2861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05703d5-cef7-4fed-bc1b-ecd9d7a4a21b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31824e71-43f8-47c5-a796-4c43f75b749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f239a36d-3934-44ac-8aa8-d71c23843b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b175ec3-a8f0-43b0-b795-5950dacc0bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0962cb27-7973-4eba-b6b3-1cfe3f1322ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8abeb9-cbd4-4eaf-8971-2fb4f8c21bcc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d7457c-dd11-4921-9508-4b102de2c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcc66a4-3f7d-493b-bdf1-32d925bbe120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ca2a0f-87d9-4ace-83b9-79fc6f46c7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "269d89da-13b9-471c-bb2f-b3f770488fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5625d170-0853-4c32-97d3-b2461360be6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f7c9d-c3fc-4a83-a925-8cdb05a78c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f62db8-b279-48e5-b441-5f46b71b2518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b16f34-4422-4fee-beca-a0d9fae1d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f00300f-462e-4ebc-a494-ce10e02cb057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5f4cdf-c3a9-42b0-a471-2633dcba69f0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badc8a47-6467-44bd-89a1-5214e0b87d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d064155-807c-44c0-ad6d-93a40bfb0d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b173194-f4d4-4b9a-8efa-ebd1570e4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24f7c36-f85f-4db2-b3c0-d7029fbc868b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73f810-24a7-425b-af13-28d716703326",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dfe54c-8aa1-48e9-8334-941c0e1d5a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f99c086-7413-402b-955a-40b9da9af73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01777d9-da38-471e-be45-566f262b6a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b18a2f-8bf5-468f-8a62-5a8d77bb4447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d288ffb8-fe9a-4eaa-8dee-5d844b810921",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f916c3-29ef-4707-939f-dcca8a15f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9391d6-6d6a-486e-9af9-b7ead7cd9243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91c93fb-8de0-4b0b-b6b2-aa6bffe6b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb014ae-bc13-4b3e-aa9f-c4ae5aff9100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d7b203-695d-4f20-bfa8-075884ce716a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a415579-af61-4220-a2e3-8dd9f87f12d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de609653-6878-4420-9240-9299033f0f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85960fa0-0cb0-488a-b231-447a59a76c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba6b4b7-4743-4025-838b-f5c74269dec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63595a28-b02f-4931-b1de-a2b83e1a0e2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5304b1b-1911-4f77-8096-72a1304d6b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad03a16-1075-4590-b275-070ac2ca3e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db782285-fc3e-4755-9af1-7a769eb42ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae8b088-4677-4939-b8f4-82c038b5d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7470fa12-d9d5-4c0b-8f44-3beabc0ae327",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc3039-0449-412e-b83e-d87f6048e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c76451-a01d-4b3c-b445-0919529b9c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1328b5c-bb15-40a8-af0a-6687011c19c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6a6e83-838f-45c9-ad1c-d91e8c39a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70408f83-25ec-4525-b596-912e1c120465",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899af6f5-e2ac-4f75-a39c-d71b5abaddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8dd1a-15cb-47de-913a-5a7e87496201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26d76e8-ac15-46ff-a505-ba91d9891eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b4b73-6359-4869-b523-36bb5086c29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe286fa8-df1e-4920-ad04-e26a73d333ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edb8b44-ca52-4752-aef8-f5228380b06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b95287f-d8a8-4244-ad04-b5649136fbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3979fb-9874-40a1-9525-e04fe6be98be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f687627-1585-4532-ba06-2827e302e780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f9790c-9647-4f7b-8510-76bcae9e26f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e858b0f-a5c7-4335-a801-385f5f6720b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37d77c6-b4f1-4bd0-ab5e-322dec84460b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d9b8d0-f26d-410f-b8fb-ee79f94cbe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d30f563a-f524-47c9-8f40-db4b08d53d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0928b9f-ee37-4005-bf32-b454fd8aa203",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a681be-ee2a-49b1-808e-b9e6a17eb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c15d55c-f477-4d1e-8fbd-476a2c68d8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be8d04b-f289-4b0d-9b56-cdea62609f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d9353f-f997-4e40-88d7-ea3464fe6b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdfb109-3043-4cbf-af6f-d85f7339ee3b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46e29a-c190-42d5-ac9b-c928db9ecf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67eabbb-5a17-4ca8-8402-35d2678e2990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35784298-fb85-4f26-a8a8-afba8d3a959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abb44be-4173-47c0-b985-2ce42fd949b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4716ca8-061a-436f-bab7-a5210c4852c9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293fc27f-0c0f-4038-88a4-b70208ed3364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c226f31f-a2f9-4f36-a058-783745817e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc491f0b-f1b7-42e3-b27d-ee1621117824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01fa124-bc66-4b45-a905-6360f882e170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b99c82-e844-4e02-909a-639a908ed6c4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee65a7c-a5dd-4ad5-ad32-08ec4226ab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4299a1-95f0-4aa0-9b6d-c587e015aaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676f53eb-ce43-4e58-8128-605801806265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1597647d-198e-4e9f-9592-cfa628fb728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eb2cfc-3b75-4e52-970e-9f9047df3b50",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb793b-e065-45d7-8ef4-6746d2fbe392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b31633-853b-4589-af84-6199e38da575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc292e4-1dfd-4f9d-ba26-ba23ed3f41b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9760160e-b568-458f-b397-3a8bb02eb51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d1be0e-9a8e-48c4-bdee-264d2059dfe5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c13967-3300-4df8-8a9e-415b6a047eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556cf1fd-d45a-460e-a60f-d918771f14d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c2253b-267e-4117-8847-6c301fc1263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730fb0f5-7836-414f-89cb-3cfcac2f2877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a690c-04bc-4d2a-81a9-bfd909e21243",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b13c9c-364c-4693-b10a-51136e26d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ba1b4d-642b-4d36-a627-19c79fcc09fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe64f96-4ee9-44fa-9426-2631e850d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba70adb-72ac-4a4f-9b51-3d8725539580"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18763cbd-5baf-4eab-a958-3007a1e1ad0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22b3f8c4-4961-4ff7-a63c-0e02b7e27399",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbf13dc-c201-496f-9bbc-ac272fb4f35f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6170fb7-181e-456e-9f06-2cea78c1955f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44abc506-05f8-4c06-b88f-84887bf2cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f4f944-1769-4c76-9b55-bffc720a695b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "063569cb-53e5-42bb-8eb5-93e147c19301",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4caa68d-f60f-4003-991b-caadab33c529"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c9eecb-1d91-42bc-b479-d2dbc01d2118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b2b793-16c3-4f2a-9fd1-7f5c1d30a632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c278092-7c91-4d46-a94f-c478e41527b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1f2e93b-56bc-4232-b701-b9aae9de2d73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f1ca461-7eee-44ba-8155-581175526409",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d98e7ed5-0a81-43b1-a588-29b907c40714"
            }
          }
        ]
      },
      {
        "id": "361d8ec1-5c5a-47f0-8c4b-1992dd8b4711",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d385b1c7-efc7-4dec-94c3-c4567952a02c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "321b3c78-0126-4471-88d3-aa0930c08757",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c596d76d-62ef-4667-b3d9-9d12dfbcaf19",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d630ed-b2c1-4ad6-96cf-6a1999b05672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b492cae-e988-4b06-a6ae-bae9264acd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a8b19b-05c0-417a-b7d9-b38258992cc0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb024901-cbab-424a-97d5-86bfea6d5135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f320e2-bf65-4c63-bafe-b627339b33e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400115d8-5d06-40f9-9778-c830f5134ce7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334751d8-4534-42c5-b5f1-28832b4d0f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804d78d0-d3f9-48cb-a733-3de0eb46b626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69b8cfd-3aea-4afc-aacc-abbd1c317314",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e8649-3dad-499f-be30-d0ba92eb1abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caea469c-cd3f-4c3b-8605-57734f880077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a88db5-a337-46fc-9fc6-9c63681e23fd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb0d1d-b3ee-446a-885c-f011c74d02d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46818469-35d3-448c-a9a7-1151e15d2002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eb7039-0587-4f3a-aff7-7e178b545e88",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2fc94f-a738-4f5c-b65a-e7c4235db3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fde8a4-88fe-445a-bd18-775b5b543379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409ad159-c37c-4c15-8500-b426cce180f6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4071f012-d36d-45ea-a6f8-33e0d8e73278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1916b0-f2d4-4a6c-9149-56c58f118043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3af82d-1b53-4f50-932a-fb40399f1088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b9e51f-384b-46ab-9736-557677e45014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1e5ccf-28ee-4a4e-8956-ffcb3c0d8086",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a430691-8530-4694-a014-95d92a68cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ea9b0e-e516-48d1-8ca8-cb6b5a073e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b802391d-a0ef-45ad-9f69-8523c16a59b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeef73a-d31b-4942-995c-c711be11e798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cee1af9-9f6a-447b-91df-d550054ecaac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d71fafc-edb6-4495-a497-8288bf1e2cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1762ee97-fdfe-4dbd-b320-c562618268ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8592ebbe-1c53-4235-b219-e96c528db984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5eceb5c-5a51-42bb-a20a-4956899cc856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2250a89-1c0b-49c5-84d1-b6e404c33567",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0924e190-3ec2-4f9c-bc0e-8729c4f5fb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cf3c27-7429-4dd7-afef-2318bedcb4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f79048b-6897-4b4f-8809-a3463bbe56b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6def2c9b-1892-40c8-80f3-a1cb4346d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceea39b-0613-4dd2-a1c4-551bd25fe872",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ffcce6-8980-41aa-ba6d-641c3e41525a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47b3e57-ce40-4477-9eca-6aa2a844c569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22eba37-da8f-4209-9c5f-e33daec87f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61208e13-2bbc-46f5-9f86-8f75dd537b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c0ba3f-b967-4595-8068-2f6f71935036",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a824dbda-977c-43d8-b544-5a32f8e89fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d55a10-9a0c-42ac-b87a-19c2809211bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146bfa10-0c06-4976-af6d-7d41af931d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159ed6dd-6ce3-46ae-bf7c-5c67836eb211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ebb52e-74e0-4c48-a2cf-3eed8c9f1358",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc9b8fa-8c2e-401d-bb11-dad28f92972c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a48232-36d2-4799-827a-5c437c96a37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2ef6b4-fa4d-416e-897d-9db2f0a6872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4ba6fa-8861-4d2f-a829-ef173f0d22a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e955e5af-89a3-4ffb-86d0-40aaf69087bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f542a2-1d76-4dff-a52e-738c4cc84bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433be8ab-aab8-431f-be0b-95968925aed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f93ede-1559-41a3-ac50-8d2a53bfb99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed455a9-b954-4a41-89bf-46bc7e90614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fec84a9-2ed2-4f97-baad-199e96fd0ed5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3985b35-a331-4182-89f8-36ce59d0c97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cedf82-305f-4d53-8f39-106a6568faaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4dfc2e-4d11-49db-8669-dbec6ed0844d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be418e4f-4f5c-482e-8087-c4621628d8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da1eab6-085a-46e9-b02f-ded0d04a3494",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2375879-fb7b-499f-97fa-586a18523c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59de5436-49b2-4d33-a21c-55cc12d34391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810b08af-af95-431c-84d8-7d65d35dc60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1219fc-1b9e-4f2c-901e-a6ceb4a5ea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b5e7c2-f277-4080-88d0-b353d0e1cd27",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ab9774-a68a-475d-8ab0-2e4f02009677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdc17ff-f54a-420a-b76b-39ee7d6fa834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c91085-18da-46a8-aeb3-8ecc2893c777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b91c71-5384-4882-ae92-6793699f41f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9181150-0496-4961-a1b9-a9d8687c891e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bbfec3-2aee-4831-b99a-1072196b2d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef5fecc-241f-493d-83d7-3b1239e35e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17210607-a324-4053-9fbd-1604f781599b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bbe51f-a0ed-40ce-a2b0-570bf96b3c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fe55e3-b77e-45a0-b9e7-8e81740e1eac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280bf636-791d-4675-80ad-ccb64aa8ba87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5beaee4d-9d73-40ee-9099-a9be53710d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e50c39-1976-44db-b1b8-b99ae8ea1eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600419e0-8a6b-4c0f-8104-aeba3dcc2c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107bf731-d80e-4b47-ac6d-f3e5e7fb7f6d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa1d68-388f-4784-987b-87c548b37bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aabfd8-5edf-471b-a264-a1f543a6b735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d9136d-f571-49ea-a0e5-7d541ae7d543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d60e30-4f66-45ce-a689-a97268a6522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7a568d-b5da-4b33-971f-9f56a55e2fde",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3015aec-0f39-4b06-b93f-cf11dc3c3d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4734a8-61c2-4d80-ae1c-9795c928fe77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4970cdb-43e2-47ca-8045-77cc14c65e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6610cde7-c796-44f8-bda4-018f4d486e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b79a79-a504-4ce0-be0b-c4dd12575b1b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07e330c-bbdd-4375-a856-c1b94882469e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3230fb-93fa-4a7c-9986-d2bf6c5e8327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd33f8b2-155f-49fd-91a9-5cad11510c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7aa9dc-90af-4eb9-9927-8e099ebc1305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696f7a64-0340-45c2-a869-f47eb725c164",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702c2ea1-b7bc-4de6-a0b2-89c6f9ee8587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b745eba7-feac-40a5-a8f7-261843805cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015651f1-b86b-4ab3-a5f7-2fb889adf68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ace765-0215-4a8d-a8ed-5160750ee6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b045fa-4a6d-4b7f-8994-f81d12d19b7e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a20f83-5378-4d45-88ca-b05fe6b24b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4aea773-e492-40e7-81fd-a5801069e503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d728c02-b189-4974-9014-d0b65ba5936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeb4739-426e-46d8-a0a2-87f8e9618eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934eb76b-edf0-44fa-8fe2-ac2f0e009ad1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31257efa-e9cb-4195-b707-d1a2836501a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9394b705-cdf1-4494-b987-d6a3b2092797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4dbb59-5103-48f9-a7f8-e39b6c750c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c22c62-9a89-4fe5-9a54-972eb42e92f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9f7301-8994-4345-86a9-810e94837664",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9090d9-7c8b-4d00-85d8-88611332064d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dfe1a1d-c196-410d-ae34-bf76355b50e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1571c3-2446-4083-b7ac-209c5d0806b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84950762-fe43-46eb-b18b-60e7f715892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5471e95-1eb2-46ef-90dd-5ed59181418b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7deec08-03f4-40ba-89cf-a9824417ce45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3334d7-5494-491c-b635-6d2cde7e8536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eb8682-7b92-4664-a986-45ab876494c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8811695e-fd2e-4a7a-ad45-eb98fb865693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e223902-4991-4358-8668-73456c71e53c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522a6a5b-012d-438f-bc68-ebb99b5c300f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb57905-7c67-4c8f-a68c-7432ba5f102b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9fa872-3e2b-4c5b-8981-69a545a9ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4feec63-13c7-461c-9d91-5044b495fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40d9425-ac87-4fb5-888e-8a003f4bb7e9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b76e02-9539-4499-8eac-ab3ce84baf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e06572e2-97ed-4104-bb14-e5bc3c6b048e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c456f06a-c82e-436a-91bb-87aa09ab06c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bae2ed6-9db9-4bda-b91b-0bcf3fda7034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ecc192-9010-46df-896d-3b172e3ceefd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6289fc60-f902-44a3-a468-340c46e9661f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0fc2d03-48f8-42d3-ade9-bf48acd4cc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9ac036-3552-4428-9c6b-ce4a647412a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadaee4e-1ba1-41ad-84f5-5303a9bbd44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894269c7-6b7d-42b6-b854-5c55dd3c3292",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2e8684-543a-466e-bb1d-c5af8497500a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8625607-7ad6-4d2f-a130-3c9145b3444a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d893a00d-d0e3-45a2-b93c-77fc6ffe5146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af152ada-a401-4048-832d-d41526096e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb454824-34fd-49c9-ac02-d265b5e35c9c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57979ba3-cc33-4361-969c-b7a1588afcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d7801d-0958-49c5-8c8b-54de338fa2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cae8bb2-6c36-4fe1-baec-5a1836efbd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12916f6-dfd9-48c0-997e-40b3ea1a44fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5055f22-e078-4e21-b1f5-ea666d2c5f87",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54273da5-b98a-4771-bbab-ecd666263264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d5e9e1-6419-4ab4-ad53-f55fe5981e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076b2a3f-a1ed-427e-9db4-1cd8918b98c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f693d27-b671-4713-b24c-befc0911ecf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68ba5aa-63eb-4f4a-9271-23c62d3301b5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbedb81-5aeb-4535-a381-4063a5624207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535ab5b6-36ae-4fb5-ba6f-cc77caddf9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa11a141-6002-4ed9-92e6-39b5b19dffb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d39333-5508-4ead-a7af-248215350c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc626d0b-bf8b-40ca-837a-6290c4ae725e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926e6b27-958a-42be-aaf6-e627b9e4236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd072b6c-f3c0-4df2-ab55-3e0f7cb64402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5407af-1052-4f68-955c-2ef72b71a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9564cbd-bb64-4646-a900-8a5cbb0b7c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da0b856-2f06-440e-89ba-c99967be678a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5447c13c-40a5-406f-bbd6-75ec469185a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040c2e6-4199-4672-abc0-9c181de9b1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c6011-6792-424f-9fbd-7e47eb729998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d134e7c1-265f-4c1a-9242-f95daf24b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260c3203-4dfb-48ed-81f7-3a0fb15ad1ba",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb34936-dede-4956-8465-27cf863f0e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a26502-5eae-496a-a3a7-80d566d33386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb4877-7d6f-45e7-97eb-0413799b1d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9eb5d3a-0369-4ba3-abd7-6d2ba7714a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bee5380-5615-4100-9c14-622aa7ffba5b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e695d-0333-4f92-a41f-eb97dfa1b778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db14ac7-c7a2-4a06-92d3-85c9612eb8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fc8626-c970-4ff3-bb2b-65def7dfb95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e396c080-d417-4887-9edf-b78ef9ef8f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d0a05-97bf-4e2f-8c10-dc0d29e0db1e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46154a8f-39ce-467d-98a7-117c83bf3e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6d2d4b-ecf1-43b5-bc90-db2cfa39c7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e37832-5e98-415a-afa3-3c6061d971c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a85617-a58e-49ac-ae32-97a1ff47d2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeec55d-da0e-4b0b-ad1c-c659391727ac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bfdf1d-ef7b-436e-ac88-06cea686e9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0538515-fc50-4b9e-a611-39646b34d2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7ac6e-26be-4116-b66f-fafba4121c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558331f3-8ea4-45e6-976b-1bd4573a8714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f178a-3f3d-4784-b629-55ed12821aef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d144908d-c767-4345-876a-aaf78369ed0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9c12ad-f09f-4546-807a-6c75e805fc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f85d96-487a-4b2a-ac7e-e06c7a0d044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7de235c-c33d-4b86-8294-de9198f8006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c54f7d-9d8e-4cd4-8377-e3419dec6101",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc1d823-56dc-4225-8a4d-9fdc2e49d39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4fc2b5-0cd2-44fd-8ca4-ff1ed03b6924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8038afee-2e64-4936-a881-ad072fa983d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ea31a5-76c5-4889-8857-90322b2042b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8483b-51d2-472b-a043-a9cda8aea043",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458138a-23b7-4abd-a76f-835b0300169e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3d3dca-6011-41f6-b3d8-c64fc5a283da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf5bdf5-8733-4f4d-a23c-39b591fd92e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd309b6a-c5cd-44d3-89b2-77bf12dde0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb69daf-9eac-4e7f-9129-c41639a1460e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb64e7b-addd-49e9-821a-04b13b19872d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90671da2-eebb-431e-8589-8b0dca096297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8f3e9f-6ef6-4b7a-b408-d4ce67613520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6d8b63-feb3-4d04-abb7-d2d1c5f35b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86183f-edf2-4783-8576-f9ddbab3250a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518ccc47-6adc-4e3d-8059-f57f1f133d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e000efe7-6fdf-4ab8-8279-4ea33c897a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3946c697-14b9-4039-a90a-8bce04fd63a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a1224a-b8b0-4bdb-95d0-d692241ac1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ac12e-cbb2-4d25-8142-01a84274f942",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dd31a8-a9eb-4671-be25-4451c8748ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5958262-8e12-4200-bd00-f3d80852c4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a6377-1c94-415b-b00c-442fe27dc843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86110b1-547b-405b-885e-f56e12e23909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798e01c8-702b-4b13-af39-ff1006935cfe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cb9551-89c3-4839-bd8c-ad06565dc8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe011bbb-5611-40d9-b881-251e40710b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41ddb2f-db94-4fd9-a6b7-3956718e3d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76e3cb3-f311-4260-80dd-8f7dd693bbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aa291b-9a00-4cc3-a321-48493c16390d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdc70f8-3356-4b91-9c43-e71d959a2442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca0d377-6c86-4312-8487-145914f22126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353cd913-c41f-4830-bd09-8755f56ec811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7696407-875b-4eea-928f-50677c50c83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f02bef-fabf-4123-93de-3cd0951c615e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c544cf-04c1-4ee4-ad64-ae00ed735493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1050628-55e9-4b31-b356-dbd667394a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f74201-098f-4c72-a2fc-da04e45e90de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eedf491-6cdb-4fac-9b94-fc2c77d2b827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8d5165-d174-4358-96a3-fdc5d970f355",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e003e052-f2b3-42dd-978d-3bb026743fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8895c6-66b2-4643-a23c-48a16f0ec2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653cf0d0-45eb-4fc2-9af1-7355bf57b184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf304b8c-9cc5-45ec-9ec0-caac178b0d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd07c23-206a-4ea9-b108-289f2b32bb1b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf8e186-d242-44ef-ab33-5706e1483d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902f09d2-d9d5-415d-b945-35892b5ace35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d99653b-b7bc-4a1d-9cfa-8c57dca2cb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24453002-221c-467d-9d41-0ab3e2ed6916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9f93e3-e932-4b94-8e8e-2ca122fda02b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b949a162-efc5-4b52-bbab-5928985dd454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c67c8d-e7ff-4760-9dd8-834c2b936139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d873401-20ad-48e0-bf8e-6d6e49fa5e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c1080b-2d43-4907-bfff-5dfc354e43ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a845b0e5-9aae-4c83-9776-f29046ca5cc3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae9c712-0985-46fa-9c1b-89fbc779fd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e13f16d-7e56-41d2-9273-191c42c36a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f714051-2e5a-472d-9d4a-52c04bb2ea95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db72894-b438-415b-980e-bb0f4acf9dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca06cee-bd6d-4ca1-8b5b-945bd9021247",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3e1fc2-3ec8-461a-a156-bc8309c2da2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1852ea9-534c-49b6-ad47-570ca714f3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dbb522-5978-43a7-9ec9-42f412ab7386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085bab0f-97f3-4fb9-a136-4ce4233f9564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57c3fda-547b-4a04-ad43-083fa8bdef98",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6e4c6-7594-4cf9-aada-68b2d0469248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f171f3a-7453-4c81-865e-91f0c33e2987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f1256-c73f-4940-914b-931bbd65f419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db6d8df-d82e-42c7-8596-9d0d35598b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21dbdd9-8dbb-4452-916f-34fdd345f7b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b21702-3812-47b9-822e-71a9dfc934e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c71db6-5777-4ffd-9ee6-dedc79f62d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39b20bd-0255-44b1-aba5-44e4768e3e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092f2165-a154-4d86-a03f-d99faccbeb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbfcdca-398b-4bae-a2bf-62ef40b6d036",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ea512c-4f25-4873-b668-61cef91af6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90437cd0-da08-43c9-b3d3-d7709bc6e054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c758c820-353e-4c84-adbd-3d18889f89bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4080b19-7077-4e1f-a3ee-cd1ce7f01f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f6cec3-8b2f-44ee-af3a-814c7e671953",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438bcca4-5bc9-4ff8-8a59-efea00aaee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a904e9-fb83-4154-b243-1339c56556ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775baf44-886b-4460-a838-6ff043fc46df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3433202-7203-446e-be36-972317c1c4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeaacba-0f7d-4c97-8b43-d4fac8925962",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ff879-0ba5-4705-a41d-5031cc0b3e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805b0383-5fb9-47e7-b03f-dd25e0dbd668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8343d09-d4b5-422b-899a-b8a7c963a093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0952b202-cb68-403a-82ab-72217eff5877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b46e9-541c-414f-a9e3-412bb68f7e8a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc1fad2-4027-4c42-b829-86c1d606a260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4658e055-e9a7-4654-a5d4-4b7c3ff9f9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ab2330-1e92-4ca6-9ae7-26ef2d5c5365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003121f4-dd54-44c7-a729-f8202109b228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d019321a-810c-4a7f-a573-572561426d35",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0b93fb-504e-42b1-b06d-600830f1a589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb8c093-d895-479d-bb1a-b1adb4b39a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186a1d7c-fc66-4417-8991-38d659b5b4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762229cd-0e44-4616-b1cc-2d3abac54deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6516c056-698c-46b5-b6b2-42b48a6623e6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6abff4-4504-45e9-bc13-8a0ccccc0e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7830be-05b6-4107-83a5-67c3be3fe860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77d490e-d40c-48a5-a7fc-b05e568b15fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa0e840-52b2-47fd-b706-3fc9befb5660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f62ee-5cf1-402e-9799-bcb34d145981",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42392c7-e025-4d0f-9094-70b33ebe50a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c848d5-51c4-4904-b6cd-6d6f4a6023e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0fac1e-00cd-42ec-b5c0-e7ff9b989c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec2c553-62a7-422e-8ebe-1f752aebf496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd5af4f-d40d-453a-b8c9-7451e1ee9ddb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35223f8f-9f0e-472f-97d8-d567ef129309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3649bf08-3a64-497b-a531-61fad6c5ed1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d010c0b8-1dae-4b4c-bd78-1e1d52d453f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18ab6a7-10cd-4d56-b4b8-07fdaee6c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e0f5c7-cae1-4387-a758-54146dee9963",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84ccfab-125b-4b7c-86f9-95eb360ca659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab1744b-202d-4cd9-88fa-6cb19dd83bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932eb180-ee2e-4b6e-b228-cb38c1eb227c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b96ca2-c596-4335-ae1d-1628c88c6651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5bf89e-f1ad-4e8c-b289-40503b571f29",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726a1d21-d282-49da-b130-4c95ae4ed4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836839d9-1afb-4608-82b5-a9a2d3b33459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250d58cf-b1cb-4e76-ba00-9fd732fa859a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40c83fa-fed0-4103-8442-378e493cc200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e643af7-65c6-4dd3-a9f1-5cc8def9b05a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70a4bc2-a744-4e6c-b7a3-4a2d55041607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d94c452-4623-42e8-a77b-6cf0d2a8e8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e135aa4-47c3-43c0-a723-4b5c4302f621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98c1c8e-1e38-4843-aa57-13cc57c66ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d25b6e3-b704-4837-9740-ed2907bfa193",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1f3ff7-b03f-4d70-b4bf-376b5f974a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e90f0d-07a2-4eaa-b5f7-293366e1b3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a77abf2-b885-4c53-a621-1c783d62a758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c7cad9-2b17-47c0-8bdb-70da353eeac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b64f470-f10e-4d4c-b121-d8ad3754d819",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb64b39-a315-4a69-901d-52dd7986a85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba856bb2-ed8d-4711-aff2-e738114550f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc5e13-5bde-4992-86a5-dbd9f3685bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fc8b80-ef89-49bf-9f5b-38e872c445f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c7112-34a6-4623-8b84-3a5ee03839ee",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224226cb-42ac-42e6-a361-65d95eb605f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56e5026-76af-4a26-b14f-9ed9db3b9658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec981b8e-49ca-492a-976f-1493e30417a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96629072-b085-46d2-a760-62c461e6dab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdb9afc-9c3a-4519-96d2-17ceb069a478",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57046a2-e3ac-43fe-a972-e12b1515211f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df98fe4-5141-4b80-b920-14047a63ccc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584ac7e3-666c-425a-9286-b0073100db3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba7455a-991f-4bc1-963a-3f8513e705ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ab62a4-4a73-46c9-bcac-363825551c3f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99944372-e6e2-4ab2-8d61-6dc77185bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ce90ae-d455-4aa3-b6a8-3dcdbc546b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630b8111-7736-4d29-8bf8-d125ca925599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba766e3-ca82-4e81-b96e-888f7125852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa72fd9-6a49-49ff-a75e-dcb18cac9294",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3923cd-a2dd-4c75-b9dc-d85418c98d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdad60e-7fdb-453f-ab5d-ad5382d363d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510e8307-5bbf-433a-8c7c-b8c0cb80798a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9eaba2-c233-4cdf-a350-6f3c04d1ad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e37bb-7105-4cfc-8fca-3b18265e6b4c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3d4fc2-03b1-4b87-a0df-86a0746e2022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a13b5d-c87d-441b-9361-f7bc3c1fba38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f1f101-68d3-4679-aa80-b6ad9f72fdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfd7272-1aa2-467b-807f-8276b7876470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa349906-ca45-4a1b-9ee6-d749565aeec6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f1ba49-d5d8-4a88-b643-9fe286d673c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb3b081-c9fc-477a-b122-f5166098a68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9255260-68a1-4adb-bdb1-b023a5bd268c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1a7949-43a5-491f-8e99-bc5280dee617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131654aa-f80a-4a20-a84c-1c677772c436",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f92565-bf62-4b27-9dcf-f8396b13e65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18967cd-15c2-4aac-8ff2-1f58d02e78ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770233d3-8963-41e8-9fde-57255cc4726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c334656-8e99-437b-933c-4fac8f9a05bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d73ddcf-c0f6-4fff-a98f-63daecddd80c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd86b630-2aa2-4d3c-b61f-c4ffd1f286c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32f7cd9-2b33-4877-9c40-34039d7d2e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7163f411-deca-4e79-8985-bd1b3564c2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214750e9-ddcc-447e-9739-0ccd79327b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203418cb-2a0c-4f91-9150-709a4c0a4ecd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b153aa61-b93b-42e5-b7f7-386bc4078ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5ee0d3-6e43-4a01-9856-afdfa6a95dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d9fb95-4132-4c92-bd9e-a8f5cbade79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307bf9a0-b989-4d2e-ac22-b6a0a71c5eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce573d63-36f7-4c1a-adc2-e331d8e3200e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9180c329-42c4-47ce-b24c-b99d89baf5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd1235f-3997-4647-a9ef-bcbaa8d185ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459682e1-8326-4c64-9ec6-ab0395f34cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21ea724-f7c2-47f3-8cc9-e4728c0f8b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9264a4e-74ec-4dcb-b729-7453caa732ba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9b438e-e8f6-45ce-88cd-909f66150248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21209ad6-8c3b-4f7e-a8bf-a798219286fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466aa3f2-070b-489c-a932-335114af650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60d152a-523b-4e2d-87b3-dffda453c76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c780a4e-94cf-4d52-8d8e-ee7b5a3f493d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44890d4d-6498-4711-93b7-e92696367607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b901994-5e96-414e-8027-4d37f51957d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b42ce1e-5242-46a2-8956-c92af5c9384f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e60175d-ca07-41b6-a20b-c9fd818e44b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dcfad6-d4f4-4dae-b4d0-5f931c2e7b01",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8f6fc7-b02b-466f-bcfb-b075a9bc721a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baec7600-cc3a-4166-905a-4bf60493efdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5924aa-67cf-4fea-9157-ff4dad2a1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fc3c81-1a58-41b9-bfcd-30802ffd48de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e00d7a3-239b-4082-8bb6-65ef26cb6e31",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dd5239-5c8f-4e0f-9af2-0b61e8987be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2773609-0fb5-4bd2-bf30-9da1ba4e4bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e2aa35-bc26-4c16-b6c2-8d7e50c48872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4748284-1001-4e0f-9b69-287de6121c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776ee96f-9d79-493a-8ce8-4e04ff2015b4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa021172-62d8-44e6-aaea-9111c0ee0251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a46017-6a0b-4748-a7a6-660195be8a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0abc84-4824-4f8e-9322-59aa99ae59f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0097ef-daae-4c7b-9f2c-6886c33cf09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafc6af5-bac5-4b82-a9f5-8301643e0197",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829227fc-ec06-4284-8ec3-667b08aa03dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b04c53-d606-4448-b119-00c5e5813dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dc8f1b-e4ce-484a-bf33-78a74abd7e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76b31fd-55a3-40e2-a2da-fe7c97dcd985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a646beb1-a0b1-4f4e-a30e-44403a123396",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9e4c8b-7ed8-4937-857f-08e71c9adddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae85489-51e1-4463-9f7a-4b5dc860fd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0d98d-0316-49f4-9b5e-06bb4b514981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb877ff-af1c-4188-9630-438b90c98051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af09407-b706-4c23-89cb-5ed288df4da6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5ef6ed-6d1b-41b0-9f2b-d5b101820283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb4abdc-ec9e-43b4-b4b4-86535c6ae2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d852e7a-ffc2-4341-91dd-ca7890a5d643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938a495d-029e-44d7-a0fe-162b53b17615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8cfd4d-6adf-4918-a9cf-76f5712fe66d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d30a3-449f-4886-84ef-b3653b453595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b8f535-e19f-4f33-8741-52c7700e765b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f06b97e-fe1c-4323-8017-6bfa7fef49ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c73f5e-8df5-445d-853e-6583425979b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30585be-7773-4f6c-b596-523811a1ee79",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0691ee31-4fdf-48d9-88e0-5d38c337cc59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ff26ba-56e2-4947-84dc-6985ef1b795b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847d2202-f471-491e-84b8-ea5bd165a05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e895e9-8aa9-49f7-aeee-b208ba0c1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f365ed-c9ca-4798-a325-be3095c22fd5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f111903-adff-4fbb-a389-afcadd673962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64afc9ba-7381-449e-adb0-2561fdf038d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa06823f-ceb4-424e-8264-6ff1cb8610dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2d1227-f774-4d8f-a700-6df8a7dd3246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e34ae4-3d60-457b-9e51-b8831cb7bd2d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b8ec7c-b082-4e2a-991d-00fb0c8af2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed181e3-42a2-4116-afbf-fda1aac3d3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a2131-4f24-4b53-88d0-af0b16287e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47886125-6ea7-41b7-83c7-701f0c71bbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f4815c-19dc-475b-a308-22ba14588937",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babfb891-d190-4462-a809-5b46f880cd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9363cd7c-0572-4b67-85b4-f3c39ae95403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccafa27-4a26-48c0-bba7-6a23484cd5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93863f3-1f1a-4613-8304-6d4ac3f78bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b9ce96-20f3-4659-bd36-9a2732693f6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3c9130-7451-4fa5-8d11-b3eab2921ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f893e23-13fb-4f92-9419-c969279102cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a28693a-466a-4362-90f7-0a6c4f7ce09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60ef217-3e82-45e6-aa4a-04fb66a54318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d65f25-45cb-423c-9234-c4e59bdd7dbe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fd6565-ac4a-42f1-8aa3-700f3e876998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630cb23b-6fcf-453d-b1e2-3c97a9144633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af39452d-9f32-4f40-ad72-b1adc408cecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e695ebfa-e7d6-4412-a540-cc6d5eebca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f027117-08ae-42dd-9ef9-818ffbf0cb1a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1132ccbb-31dd-4e3b-a552-bfecd0278886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce09973-8c79-4a40-b7e7-21284af3bff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413a56c7-3959-4eb3-9b7f-ff69c2570c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5610a54-0541-4bca-b8b2-7d593caffedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0490c73b-0d7e-4b01-9d1c-361afa4369cb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd6796-6bda-4e79-bafa-23e7a2a6cb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c18519a-a8c6-4194-961e-77559d89452f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f837e62-2a42-4e41-99e5-7451961a04ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ca2ea4-7bf1-4a9f-ba17-f3f44d303b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb60546-1944-43f7-8043-ecb1d11b806e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843769f0-5037-49b9-b530-ad404cf7f5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8a21bd-7289-4951-b31c-987c2d372a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fca3076-2df6-4067-8e2a-7fa6f799163d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3806e447-1ccb-4e82-adbc-efb279aa24ef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bb7c8d1-9a24-4dbc-a470-bc7631445dd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3da535d-9040-4dc7-9a71-40e125fcd3aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c0710dc-dd14-4d5d-82a1-279911eee403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48476c0e-2852-4dd0-a8e3-4e135e3bcf82"
                    }
                  }
                ]
              },
              {
                "id": "a9b4f305-c81d-4025-8818-133770e98fba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bdb6395-d6f0-4931-baf3-dddbb9a97848",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6486b588-da76-4b3e-9cdb-1380cbe2afb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "08f21612-4a0f-48da-a3ea-ea40b1c14b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e223066b-e4d3-44c3-94c2-091935844d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94af935e-088f-4e84-8d02-a70d469e6300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96b0c929-2252-41a2-a8b6-33189cce0e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9550eec-4907-48ac-b78f-a83f9dc0a493"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "278addca-f8fb-4229-a8cc-c06739e4ea76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970e7410-dffe-4698-8146-47174410d4d8"
                    }
                  }
                ]
              },
              {
                "id": "df28da5f-9541-4117-8203-234702432024",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a276ffca-fa4f-458d-9950-a7f54d8963d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1aa1b2-d7f7-4083-aca4-c207a9d2405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ff4e977-3803-4f2e-bd26-999efeca3130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d6db7c-d65b-4e24-93ce-fe00eab651c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd3b010-493e-4c8a-ba47-99356704d796"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8aa95d8-9a3b-4465-ac84-577cc210f3b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "005db599-f576-4b73-9fa9-f9bf773acce5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5353482-ef04-40a9-8de5-f45597d4ad80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf22de00-d916-4f9b-b7db-e2f4ea51fc46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c47a1e6e-8997-43cd-b9c3-7607e593f020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89d3bbef-8085-4916-a098-c2c443ed51ad"
                    }
                  }
                ]
              },
              {
                "id": "f1d12983-a71f-46df-b56c-d3ae8fc232dd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4362d1f-60a5-4e1d-8b0c-9ba50c5f9945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7175d653-a320-4936-bbc5-fcbdf915baf7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15b8f51-fdb2-48d0-a8dd-c4f02d6fa5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8192396c-ae6e-4b55-a255-a649929142e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "012dc9c0-805d-4190-a7bb-163fa688ef3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "603b55a7-3524-494e-a5f4-81abda0cb3c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ece4370-a973-4aaf-821a-3667b53eec5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf3a04fb-6201-4fcb-93cc-cb9106ac83db"
            }
          }
        ]
      },
      {
        "id": "796df29d-4b9e-4321-adbe-479385dd6021",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "52d9a9a5-a16c-40fc-b0f7-532d8af85c78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19293baa-2041-426d-bca9-86b46b4a9773",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d50f5f8b-0a6f-4e0f-b1f0-a40b77233039",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03d326e-1fde-457a-92f3-b936fd1c35d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc76c190-6e4f-44ab-9cd5-54404b17ac79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af67dc9-a8c4-4193-b6b6-94cb58be2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e950a69d-310f-406b-be72-d6f8ce2ed65b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77772445-abd5-4780-9bbb-014b5b02f8f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4850797a-00e2-4ec4-bd5d-5f012fb72b26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd42ae67-8b7d-4825-82ac-c1dc5f2b691a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87626b8d-64bd-4129-9071-ee5ba4c36952"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d223c50-dece-4dab-a5ae-5af0c88e3c29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a7b8c307-4123-4ee0-8588-b3dc55646824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1867553-5a07-4324-afd3-986b2f701bcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "300ce94b-8d09-475d-aecb-982fee404bf2"
            }
          }
        ]
      },
      {
        "id": "db78a5f3-ef30-45d2-8622-667b925644b0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a5c94a1d-bef2-4804-aba6-f648bd315e61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb70a78-d3f4-44b2-811b-1215c49601f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e9431b5-373b-47b9-9741-285dd080569e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7d363-f832-480e-834a-dbc5a439eef2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e4dcba3-6da3-4498-889f-e216bba90063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d95a871-c0f8-41f8-a9f9-4fe940bb256c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbb26eee-5296-440a-98ca-b6c6c841e321"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9e5aa60-4177-475c-b1ec-429b2239dbf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b8002a5-791d-482c-a6a7-7f005a7b2ad6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88801fc9-c681-455d-9e41-6b1271225706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea0e62a1-e9ba-4d04-9f83-5b94bf9cd37e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d57ff8b8-6541-4c4a-b2ee-c244bb455c47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "569fb2f9-83c3-4daa-b73d-2a06992fa4cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f652936a-9cd4-475c-9903-512d24884865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bda8d8c3-3cd9-4642-812c-c7ece8c90157"
            }
          }
        ]
      },
      {
        "id": "03f6e344-7c4f-4e1a-ab88-63570d229e7a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cb057361-8cd6-4dee-961f-9dfeb8477263",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2afed70-3a0d-40a2-9d02-3637a7f1458d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de136f2b-e807-40a4-a5b6-33238e9c08ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b001c9ea-06bd-4dea-9021-3c60a89aa972",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3238a68a-0196-4b01-932f-e86c7a1740c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed90be0-e3ff-4e15-9b53-98cf46215c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "844495e2-4e77-4833-98c5-0eb0e8e8e4de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65fbf5d0-814e-4e96-8d52-0ec8148ebb5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88ae372-ce55-4621-be6e-7d166569a656"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3ac455-bd9e-486d-a7c5-376aa8d805ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff212b6a-f8fb-4134-94f5-76064af61b88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "221dbe95-6886-4ed7-b9ee-7f443169348c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f4927fce-fb6c-4221-ac95-c90c317a4cba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d4b3d22-c624-426a-8db7-5cc08d5772b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7d4fbde-eeec-4c4b-a91f-5736f9dd5cc8"
            }
          }
        ]
      },
      {
        "id": "6d5d5f50-a6cc-4760-a8d7-9bac06fba7ba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1939a86-4e65-40e8-8f6d-9e010cb1d130",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f34b0264-0247-409e-84cd-0b349468e753",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ab76dc8d-92aa-44f6-b2f6-c75e966e94fb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03935740-3e8d-4f80-b9c5-ab4c4ca64efa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdce9d4f-cbd3-469d-a3f9-72f8828af66e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 5.992982456140349,
      "responseMin": 2,
      "responseMax": 288,
      "responseSd": 17.794537498602327,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707784469277,
      "completed": 1707784480024
    },
    "executions": [
      {
        "id": "b4017a07-0106-4ce3-bfc6-6bd7064bace9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "51b8d7fd-c6c2-4c9e-905a-63ac8313ba27",
          "httpRequestId": "38c4f01a-01ad-4a46-a4d4-c3a41b4b5932"
        },
        "item": {
          "id": "b4017a07-0106-4ce3-bfc6-6bd7064bace9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a4e2455e-defa-46a9-8b54-ad3b9fe31025",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "c466a3bf-52bc-41ec-bbe8-c25da1fd7bec",
        "cursor": {
          "ref": "ec896920-6fa3-41bf-94a2-aec50497fd36",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "80fb55ed-11eb-410d-ba02-6b81e355d4ce"
        },
        "item": {
          "id": "c466a3bf-52bc-41ec-bbe8-c25da1fd7bec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "41482726-d450-45d9-a45d-b38c8aad2f19",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "59fe1422-8dad-4506-a081-1861bc25f95c",
        "cursor": {
          "ref": "1b01c2a3-6001-452a-b5f2-a01fdbfb7ebf",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "34a54792-b250-4a29-aa95-9bf8415e47ac"
        },
        "item": {
          "id": "59fe1422-8dad-4506-a081-1861bc25f95c",
          "name": "did_json"
        },
        "response": {
          "id": "6c08d668-f994-4691-9ece-2615c9b13ac5",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d1a15-4501-478d-9bec-68e30dfac60c",
        "cursor": {
          "ref": "1b4e2b79-7f80-40c4-b07f-01343861aaf2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "919322bf-b80d-4460-854b-ce7c138b830d"
        },
        "item": {
          "id": "676d1a15-4501-478d-9bec-68e30dfac60c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a5a72c5b-e7fa-40be-a3ba-8ab4f013fda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d1a15-4501-478d-9bec-68e30dfac60c",
        "cursor": {
          "ref": "1b4e2b79-7f80-40c4-b07f-01343861aaf2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "919322bf-b80d-4460-854b-ce7c138b830d"
        },
        "item": {
          "id": "676d1a15-4501-478d-9bec-68e30dfac60c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a5a72c5b-e7fa-40be-a3ba-8ab4f013fda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79007c-7dce-4e4e-bd74-8c8933fbfd77",
        "cursor": {
          "ref": "f13813bc-24c4-4d9f-a1f9-f83ba785a7c5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dae9c2e9-0a1b-4591-9804-d742a0c07cd0"
        },
        "item": {
          "id": "ef79007c-7dce-4e4e-bd74-8c8933fbfd77",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "82f9b175-43f7-431b-a362-942b9aed23b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6a8efa-e07d-41ac-a3ed-9ab0620615e0",
        "cursor": {
          "ref": "104bd35f-6c98-41a3-ac55-dbfaf365c734",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d22b23e-d9dc-4df0-8bad-8aa27a4d9d80"
        },
        "item": {
          "id": "7b6a8efa-e07d-41ac-a3ed-9ab0620615e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "532f3866-7737-4d13-bd1d-bf52a2cf675d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64279a79-bbe1-4dbc-a418-96fc9a653a4b",
        "cursor": {
          "ref": "6f49a73b-62cd-4846-a832-a3a92c0b9bc2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8edd5b8c-99dd-43a0-bddf-dccf793b3e16"
        },
        "item": {
          "id": "64279a79-bbe1-4dbc-a418-96fc9a653a4b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c3530c8-9f22-44de-9a50-ce076c175b76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8240a2a-fc47-4bad-8d98-4a039dd3cd75",
        "cursor": {
          "ref": "881993af-feb4-4067-ace5-b9ffaa8bdc73",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6f3f052c-db2d-4249-8d08-d66d67481d31"
        },
        "item": {
          "id": "f8240a2a-fc47-4bad-8d98-4a039dd3cd75",
          "name": "identifiers"
        },
        "response": {
          "id": "a5776034-b2c4-4268-9306-cb075d9d3e9b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ce7e6-c8b1-4ac8-8fca-f2cd5ef2b971",
        "cursor": {
          "ref": "f4473b17-8669-4742-8af1-ee0f8b09fdfc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "068d2775-765b-42d7-961f-2998e09845a3"
        },
        "item": {
          "id": "398ce7e6-c8b1-4ac8-8fca-f2cd5ef2b971",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d434fe3c-5130-4036-9aa8-5fa4cf81ba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe9648-49b9-40b7-a5fd-6ed2d983a9fa",
        "cursor": {
          "ref": "57669980-7aed-44fe-85c0-c8822069c984",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "78672851-9044-44cf-b928-196a5291e28a"
        },
        "item": {
          "id": "edfe9648-49b9-40b7-a5fd-6ed2d983a9fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3a1610df-d96c-48a6-b644-d24944b744ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb8198-99a6-47d5-9d98-ee0881b0a4f8",
        "cursor": {
          "ref": "93164bfb-4abd-4e55-933f-56fe0cedb470",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ad864526-93c1-4fb5-962e-1aeb8ae37614"
        },
        "item": {
          "id": "a3eb8198-99a6-47d5-9d98-ee0881b0a4f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "84c6f5fe-25d1-4426-9149-d5443c42ddcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57330b2-e225-4d02-93c5-ed1e2f4b0251",
        "cursor": {
          "ref": "55f921e8-bf1a-4dd8-b308-073d48150066",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3770f696-9579-496f-8ae4-e7708f62d518"
        },
        "item": {
          "id": "b57330b2-e225-4d02-93c5-ed1e2f4b0251",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5015f1b1-b661-4163-9858-be7c7018ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30b7c9b-ae0a-4678-b85b-a0b53b86cbfc",
        "cursor": {
          "ref": "93f159fd-9716-408e-ad23-a2fb549fec64",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0a9767b7-c0e0-46ae-b0fc-b93c340e106b"
        },
        "item": {
          "id": "e30b7c9b-ae0a-4678-b85b-a0b53b86cbfc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "556f01f4-c8b2-426b-9291-4895a8581fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3376db09-90cf-4139-afa1-722bfa81e298",
        "cursor": {
          "ref": "d1a46bab-c6b5-4461-8380-6d49f3de67b7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da818738-eac7-440e-9e5e-f1972ee2b5ab"
        },
        "item": {
          "id": "3376db09-90cf-4139-afa1-722bfa81e298",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fa71be5e-6eb3-450d-b2fe-411d635b6a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350d6563-8b64-4a9a-b245-cd55060d1f07",
        "cursor": {
          "ref": "91f32a7c-892c-4722-86e4-0a41148fbc03",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5ae01736-3ff9-420b-a821-30508b2fbf31"
        },
        "item": {
          "id": "350d6563-8b64-4a9a-b245-cd55060d1f07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "36006d03-e68b-4fa4-88bc-e9c79cab439b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5f0ff5-6a96-48e0-b64c-ad6d839ca537",
        "cursor": {
          "ref": "9fea3e93-02dd-48f1-bf9f-9d54fe7fe2e9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3d12d5b-dcae-4b1f-9883-5dfa0280d1a9"
        },
        "item": {
          "id": "3e5f0ff5-6a96-48e0-b64c-ad6d839ca537",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7a4cbd0e-cac1-4f8a-84ca-2c6ab5a1e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab32135-38b8-4082-97e1-102d36880595",
        "cursor": {
          "ref": "7b58743a-dea0-4afd-b6e4-93ae505aad7b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fc7de65b-66e8-4d0f-9eac-e0630ac1faa1"
        },
        "item": {
          "id": "eab32135-38b8-4082-97e1-102d36880595",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e879d1c3-127a-4a4d-a98a-e4192e668d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74cfdb7-fa35-48fd-ad39-06a27cdd21bd",
        "cursor": {
          "ref": "d7835f56-13de-49d5-8f20-1b654f0182c7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af0700ba-7ceb-4cbb-b63d-2a24459f98b8"
        },
        "item": {
          "id": "d74cfdb7-fa35-48fd-ad39-06a27cdd21bd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9933ed8a-4790-496b-b0a5-67ba768fa49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534944f0-d3df-43cb-9c72-027130f662e2",
        "cursor": {
          "ref": "0bf24adc-6582-48bd-8bf5-3746eac3ccc5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81adba24-28d3-43d2-be34-f0cfaaa7283b"
        },
        "item": {
          "id": "534944f0-d3df-43cb-9c72-027130f662e2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "386883a4-31c5-4d0d-ab60-e159d1ab802f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e63f847-cc16-4c4a-82b8-c9f72e92dc3e",
        "cursor": {
          "ref": "6b7a6107-ba90-47a7-ab56-79e82560ac39",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "64476b1e-7f76-4e5d-8066-29b8da97778d"
        },
        "item": {
          "id": "9e63f847-cc16-4c4a-82b8-c9f72e92dc3e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42079954-b383-495c-a1f7-5556c6b24c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08e536a-3df8-417f-be5b-6bebde3ae14e",
        "cursor": {
          "ref": "2728df13-3b26-49a2-b770-1727a086ef58",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4bafde5-648a-4ec4-b49d-7cfc0553c215"
        },
        "item": {
          "id": "c08e536a-3df8-417f-be5b-6bebde3ae14e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46cb8108-0831-4205-9b52-c6ea71064442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8d32f2-51df-47bf-a491-944800f5775f",
        "cursor": {
          "ref": "2c1d14b5-0205-4305-beea-3af587afa432",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "24aede78-e56d-4c79-b2e6-37ddf8d3b017"
        },
        "item": {
          "id": "bc8d32f2-51df-47bf-a491-944800f5775f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b77117ab-363c-49bf-a441-76edb2913e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be76878-dc63-44fc-a1e0-014f30d811bc",
        "cursor": {
          "ref": "8564ff35-0328-4195-9b74-eefe54ff3d59",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "43ca14a1-32f1-4953-8e46-2a5122d25084"
        },
        "item": {
          "id": "7be76878-dc63-44fc-a1e0-014f30d811bc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d221a1a1-99d4-4835-923c-683d4ed8aa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36158b46-114f-4b00-bb9a-be8aa4e4ed23",
        "cursor": {
          "ref": "72b4286b-ab25-4e57-97b7-79022e285c1f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "80467848-7ee6-4409-8bbb-06b89cd4a235"
        },
        "item": {
          "id": "36158b46-114f-4b00-bb9a-be8aa4e4ed23",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8539f1d4-bded-4168-9670-cee0bff24d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c432559-01a8-4315-82bc-0a6295f845f5",
        "cursor": {
          "ref": "d751b6b4-789b-4aa9-a25a-2c5904dc90ee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "977ab19f-20e9-4833-ae98-2776a22e3518"
        },
        "item": {
          "id": "0c432559-01a8-4315-82bc-0a6295f845f5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6113f058-019c-48b3-8ef2-8e609f4a7a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483f7ae-9e3d-452e-aa1c-da4203d1e724",
        "cursor": {
          "ref": "8ff87875-2d9d-48e0-a17b-02ec2ded2e61",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "82561ae4-adc4-4243-8730-0efd4b78349a"
        },
        "item": {
          "id": "0483f7ae-9e3d-452e-aa1c-da4203d1e724",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "faa29992-eff9-47a0-a013-bfaa13a23961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76271d3f-21c6-4826-99c4-559b5c5b5507",
        "cursor": {
          "ref": "cb79bd93-178a-4c2f-a323-96b7aa471e25",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d23e9f5d-268d-41eb-be60-797b2cedd20a"
        },
        "item": {
          "id": "76271d3f-21c6-4826-99c4-559b5c5b5507",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba896853-b261-4c97-8184-1c74b24645ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea210d-b726-483f-b445-e28e3fec806c",
        "cursor": {
          "ref": "9447427a-aaab-4ddb-a718-39df15ba1809",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7a477b46-bce8-4ae6-96ae-de18c1393eb4"
        },
        "item": {
          "id": "14ea210d-b726-483f-b445-e28e3fec806c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c1491480-76c1-4507-8404-44cccf4da9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806b3ea-43b2-47bf-8084-85631b322138",
        "cursor": {
          "ref": "139447c2-dfce-4ede-afa4-225880c16ea4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a5f5d391-643e-47ce-94d1-7e6bb7d5f607"
        },
        "item": {
          "id": "4806b3ea-43b2-47bf-8084-85631b322138",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9fcf6906-6c4b-4149-bb0d-586da37810b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794bf1f-5e77-48c0-830a-a1a362d87f52",
        "cursor": {
          "ref": "32e02f54-75ef-4537-b318-01ffd30c30e1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44255ae4-9eef-4f5f-a665-20c2a96a1cc2"
        },
        "item": {
          "id": "8794bf1f-5e77-48c0-830a-a1a362d87f52",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a549a520-3931-4196-9f6a-9689c1d379f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f593a7-846d-4e8c-8991-0acf7d291e20",
        "cursor": {
          "ref": "921b61d8-1cd4-4d32-bb08-b2862c71b630",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "31ec1549-9c54-40fe-b23f-5c9f72a5e4a9"
        },
        "item": {
          "id": "b7f593a7-846d-4e8c-8991-0acf7d291e20",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba8a3a62-f68c-4ea0-bbcf-1465ef2ee8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c447d975-9eff-437a-86ef-172e657c1112",
        "cursor": {
          "ref": "c6475121-f7b4-4154-98ff-3c499be7e966",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d51484f2-eb08-4d70-8b46-10e6ea094f6f"
        },
        "item": {
          "id": "c447d975-9eff-437a-86ef-172e657c1112",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ccff6da9-4f6f-4c88-935c-7d8a0a8a9087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2775c07-a23e-4d1b-952f-e6ce60bcaa58",
        "cursor": {
          "ref": "e41e0533-5bc7-4e90-a024-1f86a4ad6b63",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a01d706b-33e8-4c8d-8cf4-9d9ed872b687"
        },
        "item": {
          "id": "a2775c07-a23e-4d1b-952f-e6ce60bcaa58",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d9f56957-a5b1-4c8b-b68d-ab63194d7390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4714119c-a0d3-47b4-a124-a14a7bc3ec34",
        "cursor": {
          "ref": "32314681-a1a1-4f2e-a34f-2d45f4ecab7b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e4433782-bd37-476d-9a8c-89f8de284159"
        },
        "item": {
          "id": "4714119c-a0d3-47b4-a124-a14a7bc3ec34",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "427e87b4-9b88-4423-956a-c6e516f0f7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8d62ce-3d79-4ca8-95ab-12164fa6c639",
        "cursor": {
          "ref": "e95069fb-3747-46e9-a251-9efda238823b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8d58bbe1-5c9c-412b-839d-b42934aeef92"
        },
        "item": {
          "id": "9f8d62ce-3d79-4ca8-95ab-12164fa6c639",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4d1e30e1-2567-4222-a82c-df86fcb03224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1531cc-389f-43b5-9174-b28594368b50",
        "cursor": {
          "ref": "97662207-f1ec-4a0f-a17a-ea48e2d4732d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5274305e-c73c-4e36-9715-3f4ee422656c"
        },
        "item": {
          "id": "0f1531cc-389f-43b5-9174-b28594368b50",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9cd4aeed-d11e-4c6d-b52f-bcce0b18c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc0bb92-9d1f-4d2e-826d-328f9c7fce77",
        "cursor": {
          "ref": "56a5f9bf-a907-4b31-adf7-86c124f0012f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "afbc4905-2d82-4e51-acba-7a6fd27e24ce"
        },
        "item": {
          "id": "1dc0bb92-9d1f-4d2e-826d-328f9c7fce77",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a4611ce2-d913-4c63-b716-a0195094bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d85d6d-091b-45e1-82ab-a34aa06b6d42",
        "cursor": {
          "ref": "20b99ced-71df-4c14-b1dd-6b53e135237f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cffd81a7-3745-403f-b65b-cd9fb96608da"
        },
        "item": {
          "id": "d4d85d6d-091b-45e1-82ab-a34aa06b6d42",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2b14a1db-b6a4-4832-9075-62a1827c9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc461057-6386-40f9-baae-15fc9d1c1046",
        "cursor": {
          "ref": "5e7c4b10-f07f-413b-a193-498d19569c44",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9acaf46c-bdba-43e8-a79e-0b8134d5d7e6"
        },
        "item": {
          "id": "bc461057-6386-40f9-baae-15fc9d1c1046",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6c8e485d-04f8-4840-839a-93b9dd845e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e100d614-2c36-45a6-93dd-17fd755e7bda",
        "cursor": {
          "ref": "e83f5038-ec8a-49b7-a4ae-46a30936d625",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77bf73f6-74f0-4f54-9d0b-551ded6ada6b"
        },
        "item": {
          "id": "e100d614-2c36-45a6-93dd-17fd755e7bda",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f3b09df2-58f2-423b-b929-4c2309c563dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5978472f-9c6d-4718-8986-f99dd4a3e7d4",
        "cursor": {
          "ref": "29620feb-9e47-41e2-9644-74999baf95f1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2e8fee05-841c-42eb-aad4-7a07c0a27422"
        },
        "item": {
          "id": "5978472f-9c6d-4718-8986-f99dd4a3e7d4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12d75dba-8104-4c86-a397-39d9d0486e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e77997-4b3b-40d3-92e1-01d726c43364",
        "cursor": {
          "ref": "a787cc83-ab63-49db-828f-6e232a64143a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "602e9b93-ab2c-4aed-af4a-a2289cc1c606"
        },
        "item": {
          "id": "23e77997-4b3b-40d3-92e1-01d726c43364",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6c04560d-f77b-410d-b9b0-77398f398460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2df3e-e199-46b7-8a73-86968e909764",
        "cursor": {
          "ref": "a7713855-b3ef-4f28-85e2-401477573897",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "367ae83d-74f5-41fd-9809-da82bbceb120"
        },
        "item": {
          "id": "99a2df3e-e199-46b7-8a73-86968e909764",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "63728d03-f96e-4aba-a4cd-b8bb7d6a4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a5f7d-cd32-4249-ba19-4062affeaf4e",
        "cursor": {
          "ref": "a0ae554a-8886-4274-a1f9-d777f6646394",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "17c57dd2-92e6-42db-8249-30a9c95e9782"
        },
        "item": {
          "id": "445a5f7d-cd32-4249-ba19-4062affeaf4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f3beb14b-991f-4c44-89fd-1f7b9d6df59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd131a0-7c50-4769-9a6d-846762080fb3",
        "cursor": {
          "ref": "6eba2e1e-2d23-4b3a-a311-f5e21e820263",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2843abdb-7cad-44e6-974a-2673157544ce"
        },
        "item": {
          "id": "8dd131a0-7c50-4769-9a6d-846762080fb3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4aed445f-c3ab-41e9-b589-6c8cb1cceac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77581d4c-e278-4de8-83bf-0d1176af3978",
        "cursor": {
          "ref": "cbe6f924-54cb-425a-b412-027890736d74",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a9e05718-b0d3-4110-b033-9aabb6e03257"
        },
        "item": {
          "id": "77581d4c-e278-4de8-83bf-0d1176af3978",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5999dcbb-066e-43ca-907c-c3925abb8429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd43e0f-69fd-4767-a29e-0663930a02c1",
        "cursor": {
          "ref": "ca42a91e-4fc6-469d-a1d7-be8ad316c6c5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6c387f80-2b62-44b7-adc4-92a7c38b5ef9"
        },
        "item": {
          "id": "6dd43e0f-69fd-4767-a29e-0663930a02c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "acd8c3e7-9d80-4dda-bf37-501b1f19fcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c8486-7676-4cbe-8f65-318c2b16bc09",
        "cursor": {
          "ref": "0fc4eda4-a348-4ed2-9006-eba091116fc3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b305bd81-c8a4-4d2e-b19a-5d16ed1909f3"
        },
        "item": {
          "id": "099c8486-7676-4cbe-8f65-318c2b16bc09",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ba38f09-07e5-4d64-9085-ef806d15086b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae25d2-c1d8-4dff-a436-b0c101964187",
        "cursor": {
          "ref": "ce876e42-eba8-41eb-9755-19fc4b040ddc",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "177ee0f3-9407-4f7d-a3ec-edfe199a94d8"
        },
        "item": {
          "id": "13ae25d2-c1d8-4dff-a436-b0c101964187",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3175c937-d460-4b0e-b34d-1fcd1114ac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6563a-23b2-4d04-9271-15f5b3afd77b",
        "cursor": {
          "ref": "9e2c7c97-d27b-4f48-a4b8-ac3cd2f482bc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1a36574d-ab0b-4f3f-8cfd-52a8443c7b46"
        },
        "item": {
          "id": "e0c6563a-23b2-4d04-9271-15f5b3afd77b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "230e1817-5aa7-4de3-917b-3ba1e3bc7a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d581069-6436-44cb-aadd-b3f73f9e1f35",
        "cursor": {
          "ref": "4e1de6bd-c253-417d-ad5d-f7ab10ac3b03",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b8e19a8-ddee-49f9-862f-a85c683ace0d"
        },
        "item": {
          "id": "9d581069-6436-44cb-aadd-b3f73f9e1f35",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "873912ef-b197-4b9e-aa27-fa67139dcf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a9889d-1759-44c6-91ee-2e7a6fd61752",
        "cursor": {
          "ref": "49daf3c1-22b0-4689-8b3f-80db5c814d01",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "483a026a-4b5a-4953-8a07-5d50c8d89502"
        },
        "item": {
          "id": "89a9889d-1759-44c6-91ee-2e7a6fd61752",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "859ff4f3-723e-4635-9f9e-9a8641800688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07d05b-9711-423d-9de3-5fb0836af330",
        "cursor": {
          "ref": "0d9e0233-2d01-404f-a1f5-7aead5d4dcb8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e794c24-8fcf-4c66-ad35-baeea6c6faed"
        },
        "item": {
          "id": "fc07d05b-9711-423d-9de3-5fb0836af330",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3735d5f9-7c80-475c-9840-e159b9635646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188fa1e8-f92d-4cdd-9404-ce0224750d7c",
        "cursor": {
          "ref": "47fcb68e-fd36-44d8-86ad-a77a4e6bdc14",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "88e54a75-5d04-4918-8249-7b24257a1b9c"
        },
        "item": {
          "id": "188fa1e8-f92d-4cdd-9404-ce0224750d7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "86680da4-2d1a-4d8b-88fc-8d47a4de05b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a0f79-e7c2-4e0e-a656-b8f4c106ffac",
        "cursor": {
          "ref": "5b6909cb-c595-456f-9403-f532f654acb6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aa0fa98e-0f81-4c8c-b594-0b0f91388139"
        },
        "item": {
          "id": "4a5a0f79-e7c2-4e0e-a656-b8f4c106ffac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "820edaa9-1b4f-4084-8b41-566f74b82c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203df804-8551-4f5b-a3f0-ab2f6c615069",
        "cursor": {
          "ref": "0dba000f-8810-4902-bb30-d1eedc0fd811",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "788f7fb3-04cb-4692-b8ce-f21b4333797a"
        },
        "item": {
          "id": "203df804-8551-4f5b-a3f0-ab2f6c615069",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a5908331-b521-4a00-adbf-62014bff01ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca88bd6d-567c-4d1f-9bd4-36cdae52074b",
        "cursor": {
          "ref": "f0784eb7-8451-43ff-8357-f3afab9b95af",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c3600d2-3ae1-41dc-b957-548f444479ec"
        },
        "item": {
          "id": "ca88bd6d-567c-4d1f-9bd4-36cdae52074b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3b7151c8-ca13-4ee1-b16a-3b4f22fbb5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e51dae-e95f-4896-b705-5b3e8ca6afdb",
        "cursor": {
          "ref": "cf2c0c9e-6fcf-4325-8b52-ecca38cae48e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d9094833-c043-406b-85f7-ef3f07559b40"
        },
        "item": {
          "id": "a0e51dae-e95f-4896-b705-5b3e8ca6afdb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "921d28d2-3e0d-4c19-be45-7a2464ee9055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a59d58-4794-4fbe-b130-3553b10b8cca",
        "cursor": {
          "ref": "6107b8b6-4ff7-44e9-bb6a-c27ed449d670",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "40741e77-4a6d-4ff2-a89a-1fa8af1d1401"
        },
        "item": {
          "id": "e5a59d58-4794-4fbe-b130-3553b10b8cca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "919a709f-63b6-49da-8aa5-6782a64f8f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1316bcb-0912-41c4-875d-0d18b51dbc81",
        "cursor": {
          "ref": "4d69abd9-fbd5-4021-924b-c49a7cdf58d8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6a80b494-79ff-4bf1-97d1-ca2dc4666629"
        },
        "item": {
          "id": "d1316bcb-0912-41c4-875d-0d18b51dbc81",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d781fa1-2568-43c1-b8ee-5599605ce988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf550e47-e7d3-4490-94fd-7ccc9568e81f",
        "cursor": {
          "ref": "a62f8494-b1f0-4ab4-93af-c189444ca5d3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b37e2531-6975-46bb-8546-d14a467e23ca"
        },
        "item": {
          "id": "cf550e47-e7d3-4490-94fd-7ccc9568e81f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "58e88dc0-1d54-41d4-af5e-7869de8e7d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8de41c3-2fa8-4309-95a6-7e2431990669",
        "cursor": {
          "ref": "89ae771a-a466-4343-8559-03c25fce90f1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "10fe9665-9da9-4804-9a69-27b89e1359f4"
        },
        "item": {
          "id": "d8de41c3-2fa8-4309-95a6-7e2431990669",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d407a81b-cb6f-4929-97b9-8fe969f4481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20160d-13ee-4ffa-b918-ce1c55f28d60",
        "cursor": {
          "ref": "27658204-cd0a-4e80-8995-26386f11a414",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a4a21620-9063-4d82-88c2-e89f0621ba5e"
        },
        "item": {
          "id": "5f20160d-13ee-4ffa-b918-ce1c55f28d60",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1e458b8d-b189-4c93-bd48-743c387e1af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c113f30-3d6e-4460-81a6-f9ed11a8012e",
        "cursor": {
          "ref": "f203cb1a-dc9e-44f1-9cfd-2704f218b31c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "481e1e94-a010-49d8-82cf-b89158b7ff64"
        },
        "item": {
          "id": "7c113f30-3d6e-4460-81a6-f9ed11a8012e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9133bfe4-8d87-4075-b1b0-186431786a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0aedb-ac5c-40e5-bb32-a47c7c4deb8a",
        "cursor": {
          "ref": "9a66a18b-3549-4d3c-88db-f3cdfafc0251",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "950965aa-e734-4f93-be8a-c5b617b3b70b"
        },
        "item": {
          "id": "fae0aedb-ac5c-40e5-bb32-a47c7c4deb8a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3710272c-1523-4f49-94bb-5ea25784eb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce7977a-1e45-4f81-8396-a7c324fc86d5",
        "cursor": {
          "ref": "a8730286-ef8a-43f9-9c6d-cba3117b2a74",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c0261744-8bb1-42bb-9adc-5f1a9af5c856"
        },
        "item": {
          "id": "dce7977a-1e45-4f81-8396-a7c324fc86d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ec16409-a7c9-434d-8fe6-74a23d9d3688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192a54b8-f8db-427a-9cb3-ef878cb2bed0",
        "cursor": {
          "ref": "dbf7df1e-cc69-49f4-becd-a6846affbe76",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d252c7b-4b78-4fd4-b2eb-e850e2b5636b"
        },
        "item": {
          "id": "192a54b8-f8db-427a-9cb3-ef878cb2bed0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e0bdf714-daa5-4c32-a730-931f09d53569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e47270-7e84-47b3-97f3-c3496609af89",
        "cursor": {
          "ref": "daea2ba3-844a-46b9-94a3-89d736e0da6e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd56d7f2-71cb-4eed-a9bd-e4a8f2f5579b"
        },
        "item": {
          "id": "f0e47270-7e84-47b3-97f3-c3496609af89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b165039d-fb96-4308-88cf-11a22d1f6f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98dbc0-f287-4986-872e-c00317fd51ab",
        "cursor": {
          "ref": "5a460f12-e165-4f85-b1b1-5d4486fe2059",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "941be384-3dad-4b2e-ab6b-9a8ffe3acd5b"
        },
        "item": {
          "id": "cb98dbc0-f287-4986-872e-c00317fd51ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "55079fff-a016-409e-b0a4-cdf97a4a1069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c9e77-5d5b-46f0-a914-cde0dd76a70d",
        "cursor": {
          "ref": "c38e7605-37cc-453b-89a5-688dcb63d75c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5ddce723-b9f5-46fc-ab15-553e59acca1d"
        },
        "item": {
          "id": "603c9e77-5d5b-46f0-a914-cde0dd76a70d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bbccba7c-1b04-4002-a0d1-68bbd9cb5880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b9af8d-76e8-4234-a262-8ce2cd9dc5b6",
        "cursor": {
          "ref": "016ef566-6868-4089-96cd-64ef2fa4cc02",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2683f8e9-64b6-4214-845b-3205089c0cfb"
        },
        "item": {
          "id": "89b9af8d-76e8-4234-a262-8ce2cd9dc5b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6f9235f1-19d6-471f-8f5a-9176cd6de3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2486576f-caec-4e69-ae16-344d942d1be8",
        "cursor": {
          "ref": "d6b2d301-5b6a-4091-acf5-5a40323b51af",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c6dc6bfa-cb89-4524-bb21-5c3b4555c7fd"
        },
        "item": {
          "id": "2486576f-caec-4e69-ae16-344d942d1be8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e14dfe20-08e0-4d4f-8714-48c0a3ab9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f810c-52ef-4fdb-a66e-6164282faf11",
        "cursor": {
          "ref": "24a512bf-2e11-42b0-b41e-b641d6615105",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cfc02922-cf24-4bbc-b33d-d1e8c9366679"
        },
        "item": {
          "id": "519f810c-52ef-4fdb-a66e-6164282faf11",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d412be31-4a8f-4e67-b387-4659a6eedf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3247b816-0bec-4586-8ca3-ebeccd827a16",
        "cursor": {
          "ref": "2b590c47-0fa6-4710-aabd-419e52a548cc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2b75598e-b243-4a74-9560-90a472b7188f"
        },
        "item": {
          "id": "3247b816-0bec-4586-8ca3-ebeccd827a16",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bdab5561-32f2-41bc-9330-a9934cc77198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41c4ca6-a69b-4fa8-bdbd-45f283efd00f",
        "cursor": {
          "ref": "083d3c45-ac2f-4a75-abbb-9181996ad7da",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee9bcbae-d167-4f47-b9b6-0fd96ec2e5e9"
        },
        "item": {
          "id": "a41c4ca6-a69b-4fa8-bdbd-45f283efd00f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "521e53a0-cb50-4d68-9fc9-361c6b71e13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311103fc-2287-4b79-a8f6-aab0a8315b80",
        "cursor": {
          "ref": "937982e4-25f0-4d12-a7f9-0e2ec1926414",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "57672fa6-190b-4ff7-a31e-2c06e2861e0a"
        },
        "item": {
          "id": "311103fc-2287-4b79-a8f6-aab0a8315b80",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6533d27a-5601-4253-b75d-6e32c6f87b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f947e78-3ef0-42f1-b76c-f75f934dd8eb",
        "cursor": {
          "ref": "64ff27ba-3308-486a-87b7-4e4dc4eb3ac7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c2555998-8d3b-4e9f-9fb2-cc5137f5a2a1"
        },
        "item": {
          "id": "4f947e78-3ef0-42f1-b76c-f75f934dd8eb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cfefd58f-2336-401b-be50-480930a3e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7044e5-e6fe-4cf8-9364-9ec1751b2121",
        "cursor": {
          "ref": "a9f3f49d-be76-4746-87ca-4726eb2d45ae",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "63b20d4c-90f1-4078-a125-ff62277af3c6"
        },
        "item": {
          "id": "fe7044e5-e6fe-4cf8-9364-9ec1751b2121",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "78ef8e2f-2bba-4c8f-b304-13f06182e5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a692c90-b788-4475-a6c9-9e47e7ba8fe8",
        "cursor": {
          "ref": "35269174-e400-4989-9f8c-0c607d1d6efa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3443c667-75ce-4e81-83ad-3f762d6771ec"
        },
        "item": {
          "id": "9a692c90-b788-4475-a6c9-9e47e7ba8fe8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "de5195d7-6c64-4745-8519-730423cfc0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d775222-89c4-4268-9ea4-6bddefc95a09",
        "cursor": {
          "ref": "258dbf7d-a3b5-48c0-b1f5-68806905f402",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b18f402d-a35d-4a44-8f81-8d627a2cd2a7"
        },
        "item": {
          "id": "6d775222-89c4-4268-9ea4-6bddefc95a09",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "97f6b98e-d5d7-471c-b0a2-2de4470e65af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d101e7-52ae-4bee-9007-d2617bf3a3d7",
        "cursor": {
          "ref": "8bc37bd2-c1fd-40db-9800-9e6329d729ac",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ed59f1b-753b-472f-bbc9-21cc3e9bb157"
        },
        "item": {
          "id": "a6d101e7-52ae-4bee-9007-d2617bf3a3d7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "88510acf-d685-40eb-9841-f03474149cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1f5e9f-0fa2-44a0-ae80-d293d7ab5cd4",
        "cursor": {
          "ref": "427de6e6-e18e-41e6-b138-5b0c6c7355a2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dbe64319-d3b6-4653-b95b-f6f89d9223de"
        },
        "item": {
          "id": "1a1f5e9f-0fa2-44a0-ae80-d293d7ab5cd4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dcc10dde-edc4-43d2-af3c-110f5a35bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388708f3-8f8b-4fd9-99d2-f6b957bebbba",
        "cursor": {
          "ref": "ec82931b-cace-4c97-9fed-78fd72f7eb43",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e72e81a1-e1da-4d95-9ce7-518b7a67ad83"
        },
        "item": {
          "id": "388708f3-8f8b-4fd9-99d2-f6b957bebbba",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c78b866-7d90-4699-acb7-a77e9a06369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165409b4-e161-448b-8087-ebd10165b76a",
        "cursor": {
          "ref": "b47f8606-4063-4fe0-b1f2-eccc35ba0e4e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "78951273-d6aa-4f2e-b4a4-0cad1b55e176"
        },
        "item": {
          "id": "165409b4-e161-448b-8087-ebd10165b76a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6c9f130d-5867-4330-9dbc-24267552ec5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511c492-aa9d-4bbe-99f2-51624911d7a8",
        "cursor": {
          "ref": "807ee359-78e8-4bf7-8594-b33d5054dfa8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32e2a491-2d09-42fb-b8ee-1dd4f7c8fbd5"
        },
        "item": {
          "id": "c511c492-aa9d-4bbe-99f2-51624911d7a8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "015fa8f5-f89b-4f04-bc76-98133cda543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3fa6e4-2f44-47c1-8a60-1adfbab5f997",
        "cursor": {
          "ref": "42e23ff8-b128-47d8-9c63-c2fc09ea8671",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cdc08a61-a7b3-4cef-9453-b3b4c577d2d4"
        },
        "item": {
          "id": "7b3fa6e4-2f44-47c1-8a60-1adfbab5f997",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "579e2694-289b-4047-b138-ac180af40638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75102087-affd-4171-9655-e3edf6655588",
        "cursor": {
          "ref": "867a2bf0-aaac-43e1-8b12-ec91ce443829",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a8e462db-1a75-4d8c-b807-8d4732c7a36b"
        },
        "item": {
          "id": "75102087-affd-4171-9655-e3edf6655588",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "012b9e52-9ce9-4854-a012-121c47da3454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb27346-1220-41f9-9cf5-bf5e06a3b2f8",
        "cursor": {
          "ref": "0beeea7a-9c34-438e-85e5-eb39ca3c79f6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9e8011e7-0992-4d61-9f89-5f3ce24129e6"
        },
        "item": {
          "id": "acb27346-1220-41f9-9cf5-bf5e06a3b2f8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c63115f9-58b3-483e-ac28-749b9e9709cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341e7c9d-b4a7-4fef-bbc7-543caa577b61",
        "cursor": {
          "ref": "8240b3b0-8d56-400a-a354-afc61740fbf3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b22db544-77d6-499e-b64a-911e29505e45"
        },
        "item": {
          "id": "341e7c9d-b4a7-4fef-bbc7-543caa577b61",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d974b56d-d6d9-4df2-b09b-f75064eb863a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260861e-2db9-45f0-86f9-b0e26f5d95e6",
        "cursor": {
          "ref": "08d22b2b-d723-4c33-b593-2d4783ac4c69",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be37193d-9df8-4808-805d-e1ea7e03ed7f"
        },
        "item": {
          "id": "9260861e-2db9-45f0-86f9-b0e26f5d95e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4ff900e6-35c2-4615-b620-db9a910fa2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00298af-428f-4e9f-a71f-08ae69c3bb69",
        "cursor": {
          "ref": "6a05d45e-f438-4e9e-a631-b0efecac8d10",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e86b7368-4003-4f6a-9f1a-6defcca698ba"
        },
        "item": {
          "id": "f00298af-428f-4e9f-a71f-08ae69c3bb69",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b170f058-af69-488f-9fa1-1dd248e5134a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78856a36-5206-4de6-8b9d-fdc66b259f4f",
        "cursor": {
          "ref": "d491584c-75df-4811-b85f-ea4561d4f4a8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2ca112b-7cad-4a6c-970c-7f50a4d24ae2"
        },
        "item": {
          "id": "78856a36-5206-4de6-8b9d-fdc66b259f4f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9d99ed48-b0e4-4c87-91c5-f25b0f625ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ca5e9b-43e0-4c07-8fae-3ef6924ab424",
        "cursor": {
          "ref": "5d0d26aa-4539-49bd-8191-60230194b6aa",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34c71113-27e4-4d54-b34a-77d845ff4bc2"
        },
        "item": {
          "id": "63ca5e9b-43e0-4c07-8fae-3ef6924ab424",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a99ae7d0-dd11-4809-b979-e408233f48c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87d58d3-152c-4f74-94b2-77e2f8688075",
        "cursor": {
          "ref": "63969d62-51e0-4cd3-a563-699c6410b1b3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9d7d1815-303a-4599-9c54-faa29a3b4708"
        },
        "item": {
          "id": "c87d58d3-152c-4f74-94b2-77e2f8688075",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a7babe11-b72e-4f9e-9ebc-4d3511f9fd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e902dc85-c5ce-441c-895f-07e92c8fb32e",
        "cursor": {
          "ref": "cbd0137c-55e5-43fe-9d02-f158358b133f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b5ad2214-21f0-4911-bc0d-b8cccf39e5e0"
        },
        "item": {
          "id": "e902dc85-c5ce-441c-895f-07e92c8fb32e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc0e4802-49c1-4162-8f01-0d67989c3cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03939c0-7df5-4ef5-8075-2fe7ae113409",
        "cursor": {
          "ref": "2a0719a2-3164-4de8-90b6-11ea2a4d2233",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fd7bd103-f9a8-4071-8486-5ee6436e50b8"
        },
        "item": {
          "id": "b03939c0-7df5-4ef5-8075-2fe7ae113409",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e9574af-bad8-41dd-af07-c9290092d28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497a582d-0aa2-40b3-bf33-3de3f3c511d3",
        "cursor": {
          "ref": "db42db3e-60ef-45bf-a5e9-633d8309f7ac",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdb46164-ebef-40ea-808b-a620f6687561"
        },
        "item": {
          "id": "497a582d-0aa2-40b3-bf33-3de3f3c511d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9f7040d3-165e-4d8f-83c7-af4a0566b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297cfeb1-c32b-4ad9-8cfc-4a255be1a09d",
        "cursor": {
          "ref": "9901b9d1-ac75-462f-b8ba-c680b811d59e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8edde134-3e5e-49a2-8ca8-18605cb8c90c"
        },
        "item": {
          "id": "297cfeb1-c32b-4ad9-8cfc-4a255be1a09d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9837e085-9bbd-4c23-8ef1-35e565266b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cb5ff1-ddbe-4b52-98cc-5bff7397b057",
        "cursor": {
          "ref": "7a25e8bf-631d-4206-916e-a77fd8d98a5c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8b22a403-6f55-4fa4-af9f-663af82b8448"
        },
        "item": {
          "id": "09cb5ff1-ddbe-4b52-98cc-5bff7397b057",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f88bfbc-b01d-465e-b464-4c8ae3c2939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d535c1ad-99ae-4c13-9350-89ddeecb6c45",
        "cursor": {
          "ref": "da24ae69-50d1-46ff-992b-048ca6d27d77",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ca4c874-875e-4014-ab1c-2ca8427780eb"
        },
        "item": {
          "id": "d535c1ad-99ae-4c13-9350-89ddeecb6c45",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aba87eb3-7da2-4b7b-8c0a-d9e64c9095e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab145905-5362-43d1-85d7-e09c7aead8f1",
        "cursor": {
          "ref": "125cd0f7-39d5-4170-b8b9-149f3193ac58",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "29e34dcb-4c42-4e4b-b2ca-9648f43751ab"
        },
        "item": {
          "id": "ab145905-5362-43d1-85d7-e09c7aead8f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c673fa6b-9867-4258-9e62-f15e7276ddf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e6d492-0776-497b-a94d-cd9b449c690c",
        "cursor": {
          "ref": "1ad87314-9f3e-4d7c-93a4-0145f3e59a54",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6cdcf62c-acde-4a33-8b4a-ce77431307f6"
        },
        "item": {
          "id": "c1e6d492-0776-497b-a94d-cd9b449c690c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5ce15768-8f51-4772-a6e4-46a385d688db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "274cc09c-98a8-4ce8-a50e-ab610b189bba",
        "cursor": {
          "ref": "0d1fc862-6ee1-4b6e-b3e4-373f4bdcb18d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "77dc8c4a-90cf-424e-b0e8-deb759bea372"
        },
        "item": {
          "id": "274cc09c-98a8-4ce8-a50e-ab610b189bba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9358bf63-700e-4aa0-b07c-52aa512f28d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f9f45f16-3f62-4388-8eca-64b81e6bca62",
        "cursor": {
          "ref": "f2632007-64a6-41cc-83ef-250783cef4d8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "489f74b5-c5cf-41dd-bd1e-fb3b61c1ad74"
        },
        "item": {
          "id": "f9f45f16-3f62-4388-8eca-64b81e6bca62",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6d5cb89d-22a2-435e-a25d-c41cb10399cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c96d4533-d260-4d8a-9341-de0aa5b2723c",
        "cursor": {
          "ref": "9379e9b0-bc03-42b5-b334-c238f39d7342",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5b0350f5-d362-47bb-a453-a30930681efe"
        },
        "item": {
          "id": "c96d4533-d260-4d8a-9341-de0aa5b2723c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bce57cf0-f256-4aa7-b93a-89f5dd882d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "08186b29-0fc6-498c-8fc2-4f0867b7c7ce",
        "cursor": {
          "ref": "117d9b85-a5d8-4990-8b33-b69a573d1236",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54c93170-8a47-4ff7-9245-6a377e23ea5f"
        },
        "item": {
          "id": "08186b29-0fc6-498c-8fc2-4f0867b7c7ce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "80940ab6-12d4-4eec-a03c-dfaa68104341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c3d20f8b-db6c-410b-943b-220e9e0bd218",
        "cursor": {
          "ref": "b5a7bde8-138c-46db-a26f-4c4b26241b0c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12656c7e-a1bb-4d1a-90b9-0aa7a140e85d"
        },
        "item": {
          "id": "c3d20f8b-db6c-410b-943b-220e9e0bd218",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4973d6f2-eb7c-4b90-8b86-d34b24f36ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b81e4677-d8c7-44f9-a66a-7f3b9860d53e",
        "cursor": {
          "ref": "ece8d6f5-6e34-4fc4-bf53-4813bde4f62d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f730598a-f1b5-404b-8453-ce245ddb9348"
        },
        "item": {
          "id": "b81e4677-d8c7-44f9-a66a-7f3b9860d53e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9f8146ac-c04b-425d-8bec-c71d2ec8cbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "57f97ad6-fb43-444f-ab25-42c3bce3565f",
        "cursor": {
          "ref": "0989d5ce-9b8d-4e6d-b39e-c3af70c105e1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ceb62806-05c6-4b9d-bcd0-fd4c3cd59089"
        },
        "item": {
          "id": "57f97ad6-fb43-444f-ab25-42c3bce3565f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a33c05d-6828-41d6-9959-cb18ff64f89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5d0bb-d458-47e4-afca-8551e5f80e6c",
        "cursor": {
          "ref": "40b15940-0c50-48db-aa34-c6ee1663b218",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "abfd79bd-930c-4027-abef-e268acba6690"
        },
        "item": {
          "id": "b8d5d0bb-d458-47e4-afca-8551e5f80e6c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a48b728-3214-43cf-8aad-20e8caaf0d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe755d2-88be-43c2-a0da-d46a84072a43",
        "cursor": {
          "ref": "2b19395a-fc7d-4a2f-89df-397021a5532b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "105fdd10-5462-400d-be3c-cc09c62e5804"
        },
        "item": {
          "id": "7fe755d2-88be-43c2-a0da-d46a84072a43",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7a7d42ca-4595-4ce2-8bb4-8fec32d80919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aee28ff-f9c2-4a18-98f2-a40abcb28e15",
        "cursor": {
          "ref": "9b886a4a-1c52-4f29-8f9e-70f6ecfc233e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5dc22a9b-0004-4e73-b448-b234f8f3d5ab"
        },
        "item": {
          "id": "1aee28ff-f9c2-4a18-98f2-a40abcb28e15",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "395ddf3c-9447-4576-a6ae-cf4c951faad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0e2594-b2d4-4d1a-9ef2-404c927d9090",
        "cursor": {
          "ref": "2d794ae0-fc23-45a6-98e1-455448f55de5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b472675c-48e1-4965-b51f-acda37e0fa91"
        },
        "item": {
          "id": "8d0e2594-b2d4-4d1a-9ef2-404c927d9090",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4b331c1f-9c17-4b17-a827-695ae771f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974d78a9-1f60-45d3-8d70-b44c34af0013",
        "cursor": {
          "ref": "68b2a56e-f259-4f9b-8ec7-7d4e7a1fde22",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e6b92c2b-5145-4362-9b2e-56959eb4b374"
        },
        "item": {
          "id": "974d78a9-1f60-45d3-8d70-b44c34af0013",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "42e19a5f-c64e-4eb2-82c9-fa07dfeca2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c3cf43-1c0f-476c-9b2b-e5fe134a33d3",
        "cursor": {
          "ref": "dd04fcef-3f77-44c7-9a4f-2ba4aaa6c36c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9bef3714-2497-4b1b-88a5-f77493c77ca6"
        },
        "item": {
          "id": "87c3cf43-1c0f-476c-9b2b-e5fe134a33d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "84687187-410b-4c43-9029-fcc783201895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e113652-ef8a-413c-9a23-5d55edd58cda",
        "cursor": {
          "ref": "1f1c0933-385c-46cb-9f24-ea70f677e7e3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "37d54801-ff2a-4b9e-924a-15f774af95f9"
        },
        "item": {
          "id": "0e113652-ef8a-413c-9a23-5d55edd58cda",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d468516c-f440-4d11-a96f-a22de9e691e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d3225-b94d-4150-a437-cbd1afb72311",
        "cursor": {
          "ref": "cd8136d3-53aa-44fb-8dc2-29fcbae51233",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b0f43e80-a0a2-4741-87fd-122a5983e4c6"
        },
        "item": {
          "id": "390d3225-b94d-4150-a437-cbd1afb72311",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8930d0f-91db-42a1-b02d-f96ab0dafdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6fcbcf-6f5a-4d2f-9fa7-427e0a40d752",
        "cursor": {
          "ref": "098a37a4-1c3c-4003-a118-25cadfc3973b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d35b8889-589c-493d-99c8-512b69e2ca0a"
        },
        "item": {
          "id": "ad6fcbcf-6f5a-4d2f-9fa7-427e0a40d752",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0baa3103-cbdb-4a27-8534-e64b3e5337cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d25c9b-49cf-4d39-9c03-5d679059fbe6",
        "cursor": {
          "ref": "af0e4b0b-f06d-4376-81db-6575c31f0dcb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "411654ad-74f2-4e32-ac14-0260d07bf634"
        },
        "item": {
          "id": "80d25c9b-49cf-4d39-9c03-5d679059fbe6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5845b6aa-37de-4f50-8bdc-36755f871eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d27119-a3c5-413d-bb90-90d5ab4322da",
        "cursor": {
          "ref": "7adfc8ef-1214-47d4-bf20-839c15bfc072",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f372de8-caef-46c5-93ab-411a7cf5b07e"
        },
        "item": {
          "id": "33d27119-a3c5-413d-bb90-90d5ab4322da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef31105d-752d-429b-868e-a222835ec090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6172dc5a-8202-43e4-bbb6-c5e7b9257add",
        "cursor": {
          "ref": "dc9dece3-44b7-49c3-9c05-227ce1e705fc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "99dce0bf-d9ef-4e2e-9cc9-98fbf089526f"
        },
        "item": {
          "id": "6172dc5a-8202-43e4-bbb6-c5e7b9257add",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "70b34cfc-2c1f-45c8-9625-27e3877870f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2a42d1-ccf2-4887-addb-0184a5475d89",
        "cursor": {
          "ref": "fc1cb359-75ca-44a4-a6bd-3960d650941f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b7cfdd14-67dc-4c96-ad8e-dfa9ca29d87a"
        },
        "item": {
          "id": "0b2a42d1-ccf2-4887-addb-0184a5475d89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ee52b9a7-1f52-422c-9843-721990df1f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6600055b-eff2-4b09-b197-f357f6cb55b6",
        "cursor": {
          "ref": "8526fcfc-b634-4250-bae3-02190444857e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e4b10cc3-e5f8-43f4-aa8e-570eb8c6cea0"
        },
        "item": {
          "id": "6600055b-eff2-4b09-b197-f357f6cb55b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6f5ee9ca-4f56-4458-8b17-b722b5e8f7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5670a94-2c6d-4755-b4be-d62c1bedafe2",
        "cursor": {
          "ref": "5afcc97a-df5e-46ed-89f5-97d7ea420791",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "92dca600-4b10-488e-b6b7-21c2778136f1"
        },
        "item": {
          "id": "b5670a94-2c6d-4755-b4be-d62c1bedafe2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8eba1eb-0eac-48bf-b5b4-425f68799548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b8a68-b74a-437a-905e-44fab7f84295",
        "cursor": {
          "ref": "578bf385-eb7a-4a9c-aa4f-1ad05bb45335",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2457e2f-3bee-4357-b3c6-ead955d9305f"
        },
        "item": {
          "id": "071b8a68-b74a-437a-905e-44fab7f84295",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c41a2d9-5ad1-4a98-aa7d-386f5a31a379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd2c4f7-b45e-496d-9139-18f5c5e20791",
        "cursor": {
          "ref": "d23f703f-617f-4c36-a15d-df969b751d09",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62d26157-0776-4deb-8e47-ac6b936dfbf9"
        },
        "item": {
          "id": "2dd2c4f7-b45e-496d-9139-18f5c5e20791",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00d45c02-2c99-4573-b65d-d6cb3e782c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57036d9f-7b18-4462-a6df-3a9f6adcea98",
        "cursor": {
          "ref": "2526592f-e0fe-4e43-a399-e3eb47ea4216",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8a3237b4-f61d-43df-81b6-1d720f3f382d"
        },
        "item": {
          "id": "57036d9f-7b18-4462-a6df-3a9f6adcea98",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9bb62ae5-81f9-46a5-81e6-d34869855d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5bfcf-8647-44fa-927d-4566687965e2",
        "cursor": {
          "ref": "113ac440-ad30-4ee1-a555-b31d55d50f29",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a88fdf58-5c6b-498e-8b73-1613396111aa"
        },
        "item": {
          "id": "86c5bfcf-8647-44fa-927d-4566687965e2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d1788ede-3fac-4e82-bbe5-191255013910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ac05ff-e36b-42de-9101-1996fd34aaa4",
        "cursor": {
          "ref": "13e547e7-564a-4f15-8ea2-176c0821128d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3abc478d-cc2c-4cc3-a129-da241cb5e358"
        },
        "item": {
          "id": "82ac05ff-e36b-42de-9101-1996fd34aaa4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30bec997-6d3b-49ed-af4b-4141d3eeb0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37e38a4-def2-4939-a63b-66b619f33610",
        "cursor": {
          "ref": "682065f8-1d05-434e-9f08-9e6bee85f72b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "230cf902-cf12-439a-b4bd-3a334c828ec2"
        },
        "item": {
          "id": "f37e38a4-def2-4939-a63b-66b619f33610",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e329e7a-9ba8-412b-b3a0-653d03f71dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a97f69-bd84-4714-ad60-0ed8bc1a4a11",
        "cursor": {
          "ref": "3a86f12c-820f-4263-9a1f-f6e7a807fe56",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cd1cbeaa-8593-4e2e-a7f5-d10c4ae23f5d"
        },
        "item": {
          "id": "33a97f69-bd84-4714-ad60-0ed8bc1a4a11",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3e94de4f-4e40-4d52-9ce7-db566589c4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd7847e-b920-4fbb-8446-bf29f0f52b0f",
        "cursor": {
          "ref": "abcdbdf7-f6a2-48e4-b9d8-02b5b156b919",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "11156e34-3a23-4323-befb-ddcd39621be4"
        },
        "item": {
          "id": "cbd7847e-b920-4fbb-8446-bf29f0f52b0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bcefa413-7ab0-4037-a177-37235225e0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8fec6-7075-4769-b5b9-313e2e40e3cb",
        "cursor": {
          "ref": "cfe25275-890f-4551-88a3-f032b5c33e4a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e864c878-27b4-4388-ab44-7c03041c03bd"
        },
        "item": {
          "id": "fbc8fec6-7075-4769-b5b9-313e2e40e3cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "97b72576-d784-47de-8cf8-37cee52ad668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f776ad3b-80b6-44fd-bedc-820f0a2361ab",
        "cursor": {
          "ref": "73edebc0-f76a-48c4-a191-4d2f0d000908",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "704b756f-43fd-4483-95e0-340cc0cc3beb"
        },
        "item": {
          "id": "f776ad3b-80b6-44fd-bedc-820f0a2361ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb0d0c21-a234-40ae-b2aa-50aea4c51121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4625ba73-2cb7-43e4-8609-2081969ca9cc",
        "cursor": {
          "ref": "d81cb2fb-dfdf-410d-82c0-2cb90abfeb04",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "059fa186-f516-46d1-b1f4-d23dac3ca053"
        },
        "item": {
          "id": "4625ba73-2cb7-43e4-8609-2081969ca9cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fa0d9d0-d06d-489e-bd79-9062105568d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5426adfa-c02c-4169-8c87-eb8946d21b9c",
        "cursor": {
          "ref": "a8ec1159-e6e8-4640-ae23-07d43bec74b7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6cbc4dcd-5fae-4072-9075-0db8937d2606"
        },
        "item": {
          "id": "5426adfa-c02c-4169-8c87-eb8946d21b9c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa67f995-99d0-4b75-bca1-57ee5b510be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fdc911-a36e-41c5-8a53-5cabc82ef7b2",
        "cursor": {
          "ref": "cd7e51a6-1889-413b-ac97-6e4d8c7564a9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c32816ef-57a5-4434-984c-f4e88b603f7d"
        },
        "item": {
          "id": "17fdc911-a36e-41c5-8a53-5cabc82ef7b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b4eaf986-f84d-41f3-87c1-4b6c70e0a9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f19a74e-9d03-44e3-83c4-223f1cd9cfc5",
        "cursor": {
          "ref": "526219bf-b494-4bbf-97d9-682b7f6a704b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b7d897e7-49e8-4dec-a417-392e7599f16a"
        },
        "item": {
          "id": "9f19a74e-9d03-44e3-83c4-223f1cd9cfc5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02d33f1d-d532-44ea-879c-580f9b86f557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4499fd21-82b8-4c16-880d-dc6dc9bc3124",
        "cursor": {
          "ref": "624212f1-b9d2-43de-b2a9-360f298d5088",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "573cf092-4407-480a-ae13-efc078f12cec"
        },
        "item": {
          "id": "4499fd21-82b8-4c16-880d-dc6dc9bc3124",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78ac5049-3d56-4ab4-9dbf-32e2f167fc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f552177-cee6-4fbb-8127-07201df9a922",
        "cursor": {
          "ref": "b197901f-ea70-4daa-aca1-b4ce1dd4bac5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "910d5407-e3c8-4866-aea3-bf52532c02e8"
        },
        "item": {
          "id": "0f552177-cee6-4fbb-8127-07201df9a922",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "edb4724a-c974-47f1-9435-ae1e663bba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c9cf15-31e2-4d09-9887-efabcf3730a2",
        "cursor": {
          "ref": "2b8d6a62-c6ff-46be-b1e4-9dfc85c89946",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "39d1f3e2-8f86-4012-8a7d-c69ef06ba2c2"
        },
        "item": {
          "id": "b2c9cf15-31e2-4d09-9887-efabcf3730a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0ad3cdf-4d2c-4e6e-a469-ff5319618c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce4a95-e138-4058-a1e4-7ec65526c9e9",
        "cursor": {
          "ref": "ceab3e8e-0424-4bed-88ea-cd6ab08a6f4a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74979c5e-da0f-4da5-be90-1654ab907a39"
        },
        "item": {
          "id": "75ce4a95-e138-4058-a1e4-7ec65526c9e9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2cc3281-d66e-41ea-8cb4-41802cf19caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d8dcdd-dae6-49a3-bce5-b6bf363654be",
        "cursor": {
          "ref": "0f8dc3f8-528e-414e-b93c-0c30bae24f08",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02b232eb-83d8-441e-b8ce-f34ef16b3460"
        },
        "item": {
          "id": "37d8dcdd-dae6-49a3-bce5-b6bf363654be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3b72912-9ec2-4723-b98b-6f2669ec9382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b126ab0-c853-4467-a1f0-0b4f69030767",
        "cursor": {
          "ref": "dfa9bd08-5bbd-4460-b2d0-6c67741b73ea",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8cad4dd0-6a16-440b-ac1a-45013860d1c8"
        },
        "item": {
          "id": "3b126ab0-c853-4467-a1f0-0b4f69030767",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6188dd5f-e052-4982-a5dc-738b3bacf6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8be484-78ba-4f18-93b9-21f22327a795",
        "cursor": {
          "ref": "a2545f9a-7c28-44eb-bd9e-d9b4dff9b8ee",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8edbdde4-5a8c-45e4-ba9b-0893b1e78358"
        },
        "item": {
          "id": "7b8be484-78ba-4f18-93b9-21f22327a795",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "be5ea03f-a1ff-449d-9b19-c5074b3a88e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d434cab-e924-4bb4-be65-0fdfbbed27e6",
        "cursor": {
          "ref": "14439281-9e87-4bb2-b312-5e337e6832db",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7a215af9-e5de-4885-9be1-ae9190dc8f3e"
        },
        "item": {
          "id": "5d434cab-e924-4bb4-be65-0fdfbbed27e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1baa321f-275c-4bbb-b3b7-26ac538d6ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12cd5c3-20d5-4fd4-9681-66fc4d51ceaa",
        "cursor": {
          "ref": "a4a4ae02-32e1-480c-86ab-e14920231623",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc5ffa30-d0a3-4783-ad6b-c74673ac6aa8"
        },
        "item": {
          "id": "d12cd5c3-20d5-4fd4-9681-66fc4d51ceaa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "24cdd5a4-3a83-4a33-8851-dda3a71e7fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608365cf-7311-42c3-a3cb-2d44a4192dbb",
        "cursor": {
          "ref": "e4b52637-135c-453e-851c-4101ce733202",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "85f00aff-02fd-4853-a559-58bb3f98886d"
        },
        "item": {
          "id": "608365cf-7311-42c3-a3cb-2d44a4192dbb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b93bfad-5d5e-4fcc-9abd-0d8e75e3c188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2149bf7-0394-4768-a452-63c2056cc5a5",
        "cursor": {
          "ref": "e6b16fea-ff05-4002-8f2f-f8da9adf1b85",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "888f454d-be39-47c5-9b20-175e087edbe6"
        },
        "item": {
          "id": "d2149bf7-0394-4768-a452-63c2056cc5a5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "73c910a3-e8e2-475a-afdf-9262533f1fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe0b9a-3f89-45e3-bee4-d93999d41049",
        "cursor": {
          "ref": "40f77f6a-69ac-49a3-ba85-d5bc12e417e0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b40bc922-47d9-4fad-940c-15df40c0b992"
        },
        "item": {
          "id": "68fe0b9a-3f89-45e3-bee4-d93999d41049",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc8dc27d-92d0-4127-919e-897f538725d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d8ac8a-2a5c-4001-88ec-e606bb640b20",
        "cursor": {
          "ref": "691a072d-d3f2-497a-bf9e-32aef2e621fd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9e0e2a5-1477-43de-b31c-edd3fd8025dc"
        },
        "item": {
          "id": "35d8ac8a-2a5c-4001-88ec-e606bb640b20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "240c3e6f-94cc-4f70-9474-4bfb4e92370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43391702-d8b5-4422-a350-3090e62d8115",
        "cursor": {
          "ref": "b6e2072f-966e-4ee5-8a1b-65db2756833b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fedd4b5a-8b6a-4154-921c-90b99ab63366"
        },
        "item": {
          "id": "43391702-d8b5-4422-a350-3090e62d8115",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "974342ff-012e-433e-b42c-1550eae2f27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e7989c-91e6-4112-a99e-214145c4ba09",
        "cursor": {
          "ref": "c1f3c557-2114-4d6c-ae08-84f68bb565d0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2c2f5069-3d31-424f-b965-2e2ec9fefbf8"
        },
        "item": {
          "id": "94e7989c-91e6-4112-a99e-214145c4ba09",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "94207768-46b4-4fca-9a98-c3f3c3373813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe476b-4fac-4957-947c-35b821691414",
        "cursor": {
          "ref": "78ec6bc3-1d45-4aa3-a85b-7ab1697a79ec",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c891d6f-e18d-4bc1-a383-ef8d33dec377"
        },
        "item": {
          "id": "6abe476b-4fac-4957-947c-35b821691414",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b30f9dd-9f65-4958-8e8d-dfcd963d15ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8e3236-2dc6-4b0e-b208-72f3656ede21",
        "cursor": {
          "ref": "0ff6c354-cfaa-47b7-8c0d-860652e97e2b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ad804373-c9f5-478b-9272-89846000b1c8"
        },
        "item": {
          "id": "cc8e3236-2dc6-4b0e-b208-72f3656ede21",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bdc97b4d-e2e9-421f-85ea-6d2809747e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3850d674-12c1-4166-9590-815109b5774a",
        "cursor": {
          "ref": "1ec694ac-4ad2-44e2-b0b9-a41aa256e0d3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "481f8fce-8444-452c-8a93-f975c2242344"
        },
        "item": {
          "id": "3850d674-12c1-4166-9590-815109b5774a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "44955b44-1532-4898-a6db-3ac5063a9498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f937b631-1504-49e9-be05-c59ad4a9d35d",
        "cursor": {
          "ref": "0f87354b-57a5-4116-8ec0-3c1b0e5de123",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2aa6119-28b6-44c3-8b50-1460107ccaec"
        },
        "item": {
          "id": "f937b631-1504-49e9-be05-c59ad4a9d35d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a28f9841-a100-44ba-8c89-50b4a9db40b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e7068e-1144-4ac7-8997-839106ed1c5d",
        "cursor": {
          "ref": "a3a739c8-c7b8-4cc9-9e08-0a0dda8ddfed",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "224eb224-fc98-4284-8745-a4bea18053b3"
        },
        "item": {
          "id": "37e7068e-1144-4ac7-8997-839106ed1c5d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "71865319-9090-45ca-8e8a-d530db445bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4897c-6fc2-45f5-9dc3-38e72438c982",
        "cursor": {
          "ref": "e3225771-7807-4054-95d0-4ec7b87ff7c3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5cf8ba27-a931-43b5-a0a6-94d2bbf601a2"
        },
        "item": {
          "id": "8ce4897c-6fc2-45f5-9dc3-38e72438c982",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "644e977c-3ae8-41f1-9e00-2a2e7750540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05703d5-cef7-4fed-bc1b-ecd9d7a4a21b",
        "cursor": {
          "ref": "d5e130fb-1729-49e9-950c-f587c39b1e1a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "86b13ba1-60cc-4800-b7f0-97925fc89407"
        },
        "item": {
          "id": "a05703d5-cef7-4fed-bc1b-ecd9d7a4a21b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "72d4da42-91f7-4e67-b298-9da8a6b12aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8abeb9-cbd4-4eaf-8971-2fb4f8c21bcc",
        "cursor": {
          "ref": "1ec26749-9628-4bbf-9df1-f91a5cf719ab",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c734d9ed-28b5-4f1f-8cf1-c1bdeac1a64e"
        },
        "item": {
          "id": "5e8abeb9-cbd4-4eaf-8971-2fb4f8c21bcc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "624d133e-3d99-461b-8feb-5c368f4511ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625d170-0853-4c32-97d3-b2461360be6e",
        "cursor": {
          "ref": "38611e58-a66c-4e95-baa2-4f10fdc15272",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40e8e51b-1e53-4da3-abd0-d2da39b287a3"
        },
        "item": {
          "id": "5625d170-0853-4c32-97d3-b2461360be6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad4de794-4ff5-496b-94d5-2dfe94130e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5f4cdf-c3a9-42b0-a471-2633dcba69f0",
        "cursor": {
          "ref": "3c2ff7e5-c9c4-4757-ad33-4bc246ae3020",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "886cd0ae-7f07-469e-9dd3-2bdef9ce8e72"
        },
        "item": {
          "id": "7a5f4cdf-c3a9-42b0-a471-2633dcba69f0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9fe3dcf-2234-4d37-ba8f-851e609a2705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73f810-24a7-425b-af13-28d716703326",
        "cursor": {
          "ref": "a2166aff-a97d-4b6d-b248-aad0ceccaa91",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ca6f6810-c4ff-477e-a9e2-208198ec1ef1"
        },
        "item": {
          "id": "fe73f810-24a7-425b-af13-28d716703326",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9df81cc-bad8-42f3-b84f-9e7c1a48d6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d288ffb8-fe9a-4eaa-8dee-5d844b810921",
        "cursor": {
          "ref": "0f9d324f-f9c5-49bd-9de6-24bc9b4aa9e5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "40fd0933-ff9a-40a2-8bf7-de51dc218e88"
        },
        "item": {
          "id": "d288ffb8-fe9a-4eaa-8dee-5d844b810921",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "facb650a-53e8-49f3-909e-d7ab17de8b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d7b203-695d-4f20-bfa8-075884ce716a",
        "cursor": {
          "ref": "e6cda4cf-b2f1-47a9-bdd3-f9b3eba1a7a6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "13e57074-0058-4583-a72b-2fea424c7f4a"
        },
        "item": {
          "id": "09d7b203-695d-4f20-bfa8-075884ce716a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a64610d2-e069-4f26-883d-db89dcb19997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63595a28-b02f-4931-b1de-a2b83e1a0e2e",
        "cursor": {
          "ref": "1d725892-549c-45b1-a78a-2b7e0afd5e52",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f096313e-341c-4629-97a6-4a45e4f8127b"
        },
        "item": {
          "id": "63595a28-b02f-4931-b1de-a2b83e1a0e2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8eb8e89-682c-4228-b207-63ee274b5d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7470fa12-d9d5-4c0b-8f44-3beabc0ae327",
        "cursor": {
          "ref": "49865606-38e3-4ac5-a6aa-c9646c10e93b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbe44b42-5cf5-4d23-8aeb-aa644df692a6"
        },
        "item": {
          "id": "7470fa12-d9d5-4c0b-8f44-3beabc0ae327",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "caaa99a1-1738-45d5-a2f2-fa07752978e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70408f83-25ec-4525-b596-912e1c120465",
        "cursor": {
          "ref": "eab94fce-6693-49ca-96d1-c24466797951",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "05311ae9-5a62-4ee6-a0a4-7916629c94c1"
        },
        "item": {
          "id": "70408f83-25ec-4525-b596-912e1c120465",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c75b1743-f3dd-40c3-ac94-189c0f361f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe286fa8-df1e-4920-ad04-e26a73d333ca",
        "cursor": {
          "ref": "2c60bf94-142f-4fc0-a4d5-84eadae8f425",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7659a036-fd6c-43f3-8d00-899551fe41e7"
        },
        "item": {
          "id": "fe286fa8-df1e-4920-ad04-e26a73d333ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5eaf3c73-d7c0-46e9-9995-cb2e86a69065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f9790c-9647-4f7b-8510-76bcae9e26f4",
        "cursor": {
          "ref": "30438a9e-6b33-4132-b739-375bcafd5496",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "85d83d3f-2aaf-460d-880a-c3e792efb3cc"
        },
        "item": {
          "id": "b1f9790c-9647-4f7b-8510-76bcae9e26f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "67f22912-807f-46e2-8b24-3f4df224f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0928b9f-ee37-4005-bf32-b454fd8aa203",
        "cursor": {
          "ref": "5ebc88e2-bc1e-4022-8097-97a31e86d5c9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "63010954-916f-4c79-8dce-c8bd45243d6b"
        },
        "item": {
          "id": "e0928b9f-ee37-4005-bf32-b454fd8aa203",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6cd3676c-3200-4e3f-9499-f3543aedeaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdfb109-3043-4cbf-af6f-d85f7339ee3b",
        "cursor": {
          "ref": "96e0f610-12a5-4132-8cd7-11fa137bf27d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a810670-0c9c-4ede-b2ee-e4d70c757ff7"
        },
        "item": {
          "id": "ecdfb109-3043-4cbf-af6f-d85f7339ee3b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "00afb665-1e72-4bf3-975a-da98c266a857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4716ca8-061a-436f-bab7-a5210c4852c9",
        "cursor": {
          "ref": "58b280f6-d17e-4ee7-88e0-92aeaf1b56fa",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "58356b74-0ac1-4f5a-b28a-1e2ec7ffb3ef"
        },
        "item": {
          "id": "e4716ca8-061a-436f-bab7-a5210c4852c9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0d116563-e84e-44e5-93a5-c735b1d31f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b99c82-e844-4e02-909a-639a908ed6c4",
        "cursor": {
          "ref": "ec2cd6aa-8c48-46ef-8438-87e163740d68",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0abb5abc-49cf-422d-86fe-8ab84b13fa73"
        },
        "item": {
          "id": "e1b99c82-e844-4e02-909a-639a908ed6c4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "30c12174-029b-4555-9535-4bd113c520fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eb2cfc-3b75-4e52-970e-9f9047df3b50",
        "cursor": {
          "ref": "2b7bc4df-0dac-4de0-80bf-c9b4066b61b5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "da913b80-feda-4691-aa29-be5b5496ce9c"
        },
        "item": {
          "id": "d0eb2cfc-3b75-4e52-970e-9f9047df3b50",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eacc1f69-aed3-4459-8506-23e3f5e41608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d1be0e-9a8e-48c4-bdee-264d2059dfe5",
        "cursor": {
          "ref": "5a6c1caa-0679-4a94-bf6f-919691780d6c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5f03f70f-992d-4461-899d-a9e91cafa1f6"
        },
        "item": {
          "id": "e7d1be0e-9a8e-48c4-bdee-264d2059dfe5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "230e8422-6cfb-4cd0-a9d5-8e638628d0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a690c-04bc-4d2a-81a9-bfd909e21243",
        "cursor": {
          "ref": "aad89892-115e-44fe-a859-c5bc80ef8331",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4047453e-c094-425e-97f0-c252772c2f4e"
        },
        "item": {
          "id": "ff9a690c-04bc-4d2a-81a9-bfd909e21243",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4cf96554-530c-45f9-8a1d-9e80ec96f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b3f8c4-4961-4ff7-a63c-0e02b7e27399",
        "cursor": {
          "ref": "e479824a-07ee-42f0-af6c-0b6d6ec395a6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4c3c0695-26cd-4319-9881-df6012bcec25"
        },
        "item": {
          "id": "22b3f8c4-4961-4ff7-a63c-0e02b7e27399",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93ba85fa-cea9-48a6-8a28-f93e85cdc714",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c596d76d-62ef-4667-b3d9-9d12dfbcaf19",
        "cursor": {
          "ref": "9ddd4284-2e2b-4c27-9265-649d087e77ef",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "33fbb59b-4438-4f41-a613-78ad7a72888e"
        },
        "item": {
          "id": "c596d76d-62ef-4667-b3d9-9d12dfbcaf19",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cde4222b-fca9-432e-9007-9b3780659e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a8b19b-05c0-417a-b7d9-b38258992cc0",
        "cursor": {
          "ref": "084a40a8-0505-4147-ad31-5514ea8f823a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "77badc25-406b-4129-b433-9b5c4e9064f2"
        },
        "item": {
          "id": "f2a8b19b-05c0-417a-b7d9-b38258992cc0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "391c1f55-a8b8-4ddb-8632-0f9baf40e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400115d8-5d06-40f9-9778-c830f5134ce7",
        "cursor": {
          "ref": "e4e07b9d-af5b-4b91-afeb-0b5807747341",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be7154ac-027f-4f52-978d-71d43dd7cf35"
        },
        "item": {
          "id": "400115d8-5d06-40f9-9778-c830f5134ce7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "63db0ee8-a5c3-4802-acd8-fe6529c9cec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69b8cfd-3aea-4afc-aacc-abbd1c317314",
        "cursor": {
          "ref": "95c6171b-ca21-48f1-bd31-831c5ffee278",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18124b1c-2f78-4cf4-a2d4-9697f37e05f0"
        },
        "item": {
          "id": "b69b8cfd-3aea-4afc-aacc-abbd1c317314",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b322a00c-d725-4814-9ddf-d76be4daf003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a88db5-a337-46fc-9fc6-9c63681e23fd",
        "cursor": {
          "ref": "fcad7971-145a-4215-b681-38d2aa5a91a5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ff6d267-ce24-4ccf-829a-35aa3bb5a771"
        },
        "item": {
          "id": "50a88db5-a337-46fc-9fc6-9c63681e23fd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "21686353-81de-4e6e-982b-8276ae631886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eb7039-0587-4f3a-aff7-7e178b545e88",
        "cursor": {
          "ref": "f5ee4379-4ca0-4daf-8308-02750b79ffe0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7dd38a04-8e12-446c-aa95-e3890714a206"
        },
        "item": {
          "id": "03eb7039-0587-4f3a-aff7-7e178b545e88",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5aa47015-322c-4968-9e25-45fd66dc590c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409ad159-c37c-4c15-8500-b426cce180f6",
        "cursor": {
          "ref": "2807e63b-1488-4643-8860-06ed7074d18d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f1595ed-d7f5-46cc-a4b3-653799e4385c"
        },
        "item": {
          "id": "409ad159-c37c-4c15-8500-b426cce180f6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f4a811d0-615b-45e5-8efc-a6b1813a2c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1e5ccf-28ee-4a4e-8956-ffcb3c0d8086",
        "cursor": {
          "ref": "11228381-5c76-43a1-ba2f-221c8370559c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "124967c0-2bc2-49c6-81d7-be0b4e894692"
        },
        "item": {
          "id": "cf1e5ccf-28ee-4a4e-8956-ffcb3c0d8086",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0757f5ee-6f97-4bcb-b6c1-cd2db7925635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee1af9-9f6a-447b-91df-d550054ecaac",
        "cursor": {
          "ref": "2c758f25-342d-474d-b766-f03d2224b048",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3615c724-b4cb-4839-b355-45b5e4dfb586"
        },
        "item": {
          "id": "4cee1af9-9f6a-447b-91df-d550054ecaac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "004684e4-646a-4d7c-a967-437119816166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2250a89-1c0b-49c5-84d1-b6e404c33567",
        "cursor": {
          "ref": "e4cd5970-d9e9-4de2-9705-03a14ebc3eb3",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3c5dd6c3-ac4f-4546-ac87-f51349ce3214"
        },
        "item": {
          "id": "a2250a89-1c0b-49c5-84d1-b6e404c33567",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7fcb8277-c0e1-4dfe-899c-fa8439047eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceea39b-0613-4dd2-a1c4-551bd25fe872",
        "cursor": {
          "ref": "8fdec9d0-0bd2-4ef7-b9e3-57378e07be29",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "32f79f63-d5c7-44a4-afb8-3d7998330b66"
        },
        "item": {
          "id": "6ceea39b-0613-4dd2-a1c4-551bd25fe872",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7f4f099a-5dce-4aa4-b8dc-36ec5530e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c0ba3f-b967-4595-8068-2f6f71935036",
        "cursor": {
          "ref": "f3e5a9d2-e6ba-4d81-b45c-dafdff39fe25",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bcb05f66-610c-45a8-b326-031c7b1b09fa"
        },
        "item": {
          "id": "f8c0ba3f-b967-4595-8068-2f6f71935036",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b26ccdad-6a70-4d0e-8ae4-0d5e7f01af6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ebb52e-74e0-4c48-a2cf-3eed8c9f1358",
        "cursor": {
          "ref": "13842c51-5f75-44b8-9d5d-30ddc27bb111",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f185e196-0ad1-4e2a-8640-758e4906e7b9"
        },
        "item": {
          "id": "c7ebb52e-74e0-4c48-a2cf-3eed8c9f1358",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f104f9b4-42af-4017-8670-08bf2e64e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e955e5af-89a3-4ffb-86d0-40aaf69087bd",
        "cursor": {
          "ref": "a2eb75c4-1b67-4a76-867d-609aa1bb7487",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5ec44f39-9ab0-45e5-9e5c-de72d0989359"
        },
        "item": {
          "id": "e955e5af-89a3-4ffb-86d0-40aaf69087bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4ca28b32-8988-4f35-8b0a-bbd9cb452512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fec84a9-2ed2-4f97-baad-199e96fd0ed5",
        "cursor": {
          "ref": "2e1460e5-2384-40f7-9e99-f0b784c3998f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "361a2ab7-c897-4639-ad4e-632ea5e922c8"
        },
        "item": {
          "id": "9fec84a9-2ed2-4f97-baad-199e96fd0ed5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4325239b-d042-4f0b-96b4-c506a3822a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da1eab6-085a-46e9-b02f-ded0d04a3494",
        "cursor": {
          "ref": "263d42c3-0910-4d35-a20c-281b3a214c42",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eb4512fc-e2ca-4d7d-96ce-3f2c95447729"
        },
        "item": {
          "id": "7da1eab6-085a-46e9-b02f-ded0d04a3494",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4455566a-e4c1-4083-94c7-da52ece5e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b5e7c2-f277-4080-88d0-b353d0e1cd27",
        "cursor": {
          "ref": "42a7f196-096c-42f2-9243-0233e7d19029",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dac00ecc-aa6c-4046-a860-26a332d367fb"
        },
        "item": {
          "id": "23b5e7c2-f277-4080-88d0-b353d0e1cd27",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "33e8ff49-f59e-4b1a-baa5-cf2e769d57b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9181150-0496-4961-a1b9-a9d8687c891e",
        "cursor": {
          "ref": "21231b9d-776b-475b-bcb1-2f7a2581101c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c93784da-1980-4577-8c75-0e56e6c21316"
        },
        "item": {
          "id": "d9181150-0496-4961-a1b9-a9d8687c891e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f05ef9af-b91d-45e5-8676-6e89a97d7c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fe55e3-b77e-45a0-b9e7-8e81740e1eac",
        "cursor": {
          "ref": "6061fe23-77dc-4855-be13-3f8d321f868c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "67343ab0-aaf7-4d3d-8d77-186b25a74055"
        },
        "item": {
          "id": "c7fe55e3-b77e-45a0-b9e7-8e81740e1eac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a20512fb-dead-4294-ab6f-e90825e85f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107bf731-d80e-4b47-ac6d-f3e5e7fb7f6d",
        "cursor": {
          "ref": "c35bf320-1bcb-4bc8-a989-806961cef170",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "11afb065-64e0-4274-8cb0-7ce59bb3c379"
        },
        "item": {
          "id": "107bf731-d80e-4b47-ac6d-f3e5e7fb7f6d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "94316147-c94c-406e-ac77-f9587b2d2ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7a568d-b5da-4b33-971f-9f56a55e2fde",
        "cursor": {
          "ref": "6a624927-ca80-4895-b87f-12621072701a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1abeafe-c0c4-4e18-bdf5-6f1af93741ed"
        },
        "item": {
          "id": "ac7a568d-b5da-4b33-971f-9f56a55e2fde",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb519c1b-e5b3-4251-b22a-63c2735f9e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b79a79-a504-4ce0-be0b-c4dd12575b1b",
        "cursor": {
          "ref": "e5fc1c1d-7847-42e6-ba8a-549134f8c3fb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dd73efcb-e3c7-4260-b2e7-138ead2438fe"
        },
        "item": {
          "id": "c8b79a79-a504-4ce0-be0b-c4dd12575b1b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5ab74476-8685-4a4d-b8f7-918d3e2e3d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f7a64-0340-45c2-a869-f47eb725c164",
        "cursor": {
          "ref": "e189fc04-6ff3-430c-bd3e-68b7bb269bd3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cff25f99-b027-4f66-b81d-77414e30f889"
        },
        "item": {
          "id": "696f7a64-0340-45c2-a869-f47eb725c164",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ffc4510f-c48a-46d9-a467-97c8b89fcfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b045fa-4a6d-4b7f-8994-f81d12d19b7e",
        "cursor": {
          "ref": "4e1f0359-3188-4aa9-b71f-3cb5e13292d2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b3d7d2f9-1069-4430-97ce-8d88fe1469c2"
        },
        "item": {
          "id": "00b045fa-4a6d-4b7f-8994-f81d12d19b7e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2df194af-f8b5-4e42-bcc0-a1bff1992731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934eb76b-edf0-44fa-8fe2-ac2f0e009ad1",
        "cursor": {
          "ref": "7fe45c79-7060-4c7c-bbb3-368e5b31ef9c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8a08d877-d41c-4c16-b00c-2e82198442f2"
        },
        "item": {
          "id": "934eb76b-edf0-44fa-8fe2-ac2f0e009ad1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "addb9432-f03b-41e0-83a7-0b3b90e3f779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9f7301-8994-4345-86a9-810e94837664",
        "cursor": {
          "ref": "dd8ad10a-6315-4c56-8fc6-44fb0871bff2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9cb97b43-286e-42d2-8a0d-da00942c8a2e"
        },
        "item": {
          "id": "da9f7301-8994-4345-86a9-810e94837664",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "97ac11f6-3b50-4663-9722-2b5661ee5813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5471e95-1eb2-46ef-90dd-5ed59181418b",
        "cursor": {
          "ref": "e91b940e-d3f1-4888-b294-a49dee5f4a7b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23bf4052-fb32-44d0-a0de-fff14bf90bfd"
        },
        "item": {
          "id": "e5471e95-1eb2-46ef-90dd-5ed59181418b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8c06a96a-bb48-4eaa-af47-6c3f08ff2453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e223902-4991-4358-8668-73456c71e53c",
        "cursor": {
          "ref": "8f76cc0e-2320-4c63-ade6-6587e0299e00",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "62675f71-86b1-4400-969a-f144212ed367"
        },
        "item": {
          "id": "7e223902-4991-4358-8668-73456c71e53c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e35ec2a-fdfc-4695-9e97-374d5a2efe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40d9425-ac87-4fb5-888e-8a003f4bb7e9",
        "cursor": {
          "ref": "1562be3a-b874-42f9-94b8-92b185808f6c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "98b50010-2b49-4f1c-ba7a-40a83f2d7bbb"
        },
        "item": {
          "id": "a40d9425-ac87-4fb5-888e-8a003f4bb7e9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4282c566-f69a-47e9-9a9e-fe6573291351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ecc192-9010-46df-896d-3b172e3ceefd",
        "cursor": {
          "ref": "29d5dbe8-60e1-4979-a76c-14ab33e9ef11",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aa776075-105c-464a-8404-411129e3ce4c"
        },
        "item": {
          "id": "36ecc192-9010-46df-896d-3b172e3ceefd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5fa05314-16f4-4e5e-af2c-bda8ab7b4dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894269c7-6b7d-42b6-b854-5c55dd3c3292",
        "cursor": {
          "ref": "2163529a-0aa0-4236-b659-5efb838d947b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ffd176f8-a4bc-4fd1-9a41-802f15f1fafe"
        },
        "item": {
          "id": "894269c7-6b7d-42b6-b854-5c55dd3c3292",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6f9d9d68-e02b-44f5-8d9e-e63996097d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb454824-34fd-49c9-ac02-d265b5e35c9c",
        "cursor": {
          "ref": "12e5aa64-84b1-4b2f-9d9f-910c653ed397",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "71c5d902-854e-4b3a-885c-e06f12a1fa2e"
        },
        "item": {
          "id": "eb454824-34fd-49c9-ac02-d265b5e35c9c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e021e853-3b2e-4fbd-be5d-41ac7442cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5055f22-e078-4e21-b1f5-ea666d2c5f87",
        "cursor": {
          "ref": "51c3e0d4-0a86-472c-86b3-03e0416029d3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "36995ee0-39d9-4bb4-91c9-6f145de91ae2"
        },
        "item": {
          "id": "e5055f22-e078-4e21-b1f5-ea666d2c5f87",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "901ba1cb-18b7-4108-a256-4382f5aaff90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68ba5aa-63eb-4f4a-9271-23c62d3301b5",
        "cursor": {
          "ref": "54852270-14c8-4a74-beab-8e1dea751788",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "914f12c2-ac76-462a-9390-9266f3f9a706"
        },
        "item": {
          "id": "f68ba5aa-63eb-4f4a-9271-23c62d3301b5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "126d5b73-5f88-4a10-8956-6870c40942dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc626d0b-bf8b-40ca-837a-6290c4ae725e",
        "cursor": {
          "ref": "e10674d3-4215-477d-9d5a-41ae1afce937",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cdaba69c-98f2-42e8-a3db-f943c8e9f43c"
        },
        "item": {
          "id": "cc626d0b-bf8b-40ca-837a-6290c4ae725e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "eba642a7-d5a5-47df-8dc9-c77cfdf3606d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da0b856-2f06-440e-89ba-c99967be678a",
        "cursor": {
          "ref": "01553a9e-713e-4746-a4dc-038234728253",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c5995377-dfa1-4cee-9c5f-9a541e288f59"
        },
        "item": {
          "id": "5da0b856-2f06-440e-89ba-c99967be678a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f2a5e3f6-2b83-4267-a281-9d2871cb69c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260c3203-4dfb-48ed-81f7-3a0fb15ad1ba",
        "cursor": {
          "ref": "95d5b0fe-87c1-4cec-8e61-e8c837ed640f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a22a00f9-3a05-4b98-ba1f-c6480e33fde8"
        },
        "item": {
          "id": "260c3203-4dfb-48ed-81f7-3a0fb15ad1ba",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e5ebf464-feda-45e5-a78f-b9fa9abb816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bee5380-5615-4100-9c14-622aa7ffba5b",
        "cursor": {
          "ref": "38d2802c-dd68-4c98-b060-256cec4df130",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "798e9b55-e259-4394-b6c1-3ed97347359b"
        },
        "item": {
          "id": "0bee5380-5615-4100-9c14-622aa7ffba5b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b6523da1-6a4d-443e-99fc-07d31988799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d0a05-97bf-4e2f-8c10-dc0d29e0db1e",
        "cursor": {
          "ref": "b88e66f4-2166-43f0-a256-cc8a92dc0b04",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "37b10828-5460-4d90-9eca-2076bc7530b2"
        },
        "item": {
          "id": "ef4d0a05-97bf-4e2f-8c10-dc0d29e0db1e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "27887183-11a4-4d06-ba61-2ac18612db73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeec55d-da0e-4b0b-ad1c-c659391727ac",
        "cursor": {
          "ref": "9fcef403-3713-4034-87db-3b2063233ff1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dbc0e020-7a53-47f7-a88c-8cf51732f545"
        },
        "item": {
          "id": "4aeec55d-da0e-4b0b-ad1c-c659391727ac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4a5a619c-8309-42b9-ad21-f47fa7681026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f178a-3f3d-4784-b629-55ed12821aef",
        "cursor": {
          "ref": "371bec2f-e0cb-451f-bd50-8017c83d0392",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "20800ddc-6ef5-4b1b-be22-89d100722025"
        },
        "item": {
          "id": "3d2f178a-3f3d-4784-b629-55ed12821aef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "883117ee-02ef-4d97-81cb-54c93dfd3fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c54f7d-9d8e-4cd4-8377-e3419dec6101",
        "cursor": {
          "ref": "c2e344da-6e82-477b-b1ec-0b2d0b084b2d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3c5a90db-5793-49ba-b3c7-2fd8866147be"
        },
        "item": {
          "id": "81c54f7d-9d8e-4cd4-8377-e3419dec6101",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b5f76e73-6cdf-4cff-8553-3f9a153116d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8483b-51d2-472b-a043-a9cda8aea043",
        "cursor": {
          "ref": "cfb6f76c-c448-40d8-b0ab-bed841b74fef",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d73478a-d13c-44b8-90e7-5a79fbfdb8af"
        },
        "item": {
          "id": "d0c8483b-51d2-472b-a043-a9cda8aea043",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7fdc47b2-0f50-4ffe-8b08-f5da548b1af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb69daf-9eac-4e7f-9129-c41639a1460e",
        "cursor": {
          "ref": "79be40e5-ee96-4abc-bd29-8a598f9ca237",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eb4c5890-c59f-47ec-b2f5-079760087e08"
        },
        "item": {
          "id": "cdb69daf-9eac-4e7f-9129-c41639a1460e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "84401ab1-efb2-45bc-a6fe-ed3b08fc4b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86183f-edf2-4783-8576-f9ddbab3250a",
        "cursor": {
          "ref": "b366e058-0ca7-4397-8afe-b9de32f1da39",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7ea92c98-a125-462f-a44f-33a74860d9d3"
        },
        "item": {
          "id": "1d86183f-edf2-4783-8576-f9ddbab3250a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c6a117f7-8d6b-4f1c-8e14-ab3c1c080b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ac12e-cbb2-4d25-8142-01a84274f942",
        "cursor": {
          "ref": "94da7478-3808-4501-a7f5-37f68144c5ca",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4b12b5a5-eb88-43e6-b522-4404198e5e75"
        },
        "item": {
          "id": "532ac12e-cbb2-4d25-8142-01a84274f942",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2b551711-4ff7-4d62-93ee-c29d5d61e57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798e01c8-702b-4b13-af39-ff1006935cfe",
        "cursor": {
          "ref": "ee11e072-1681-433a-b347-786bfdc72fe6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01d85f17-852a-49dc-80f5-c5d6026b2c8c"
        },
        "item": {
          "id": "798e01c8-702b-4b13-af39-ff1006935cfe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9359d449-a0ae-4aa6-abaf-23ba26bb06e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aa291b-9a00-4cc3-a321-48493c16390d",
        "cursor": {
          "ref": "e93b11bd-8df5-4e7b-8411-5962745ce2fd",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf43ae6b-713b-4bc1-8af1-2661860c143b"
        },
        "item": {
          "id": "a5aa291b-9a00-4cc3-a321-48493c16390d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "550714d7-007d-48a2-b9a8-11e914b62c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f02bef-fabf-4123-93de-3cd0951c615e",
        "cursor": {
          "ref": "5c4f4ba7-a1f7-4d59-9a1d-eae5d5472c2f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9ad79b00-fe2c-46b3-81b2-67fa5324c318"
        },
        "item": {
          "id": "f9f02bef-fabf-4123-93de-3cd0951c615e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a366d062-805e-49cc-8607-cc10dff50d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8d5165-d174-4358-96a3-fdc5d970f355",
        "cursor": {
          "ref": "2a9f7e93-02f8-4ad7-b9dd-0ac801e7c353",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "af23a8af-e45e-4bc7-8e01-33662814ae22"
        },
        "item": {
          "id": "4b8d5165-d174-4358-96a3-fdc5d970f355",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "581033c9-44f5-4aab-8696-e4ebf450d8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd07c23-206a-4ea9-b108-289f2b32bb1b",
        "cursor": {
          "ref": "c2a08db8-1d5a-492b-863d-a93d5f986dad",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0eedeb1e-546b-42e1-a106-184fb236f611"
        },
        "item": {
          "id": "6cd07c23-206a-4ea9-b108-289f2b32bb1b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "09df4a6d-08ef-44bb-9707-5e52e03da784",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "7a9f93e3-e932-4b94-8e8e-2ca122fda02b",
        "cursor": {
          "ref": "ac7c13c6-db6f-4b1e-9f1d-908e66e344d9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3e2f17c4-5acd-4b59-b96c-f9359d65e3cd"
        },
        "item": {
          "id": "7a9f93e3-e932-4b94-8e8e-2ca122fda02b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "74cb2939-95ec-4287-8d38-9565417a4dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a845b0e5-9aae-4c83-9776-f29046ca5cc3",
        "cursor": {
          "ref": "77fd69f9-dd7a-41a1-b51c-f1b8e6e00806",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ce3a5095-0622-4c8d-9085-4559ac31b31b"
        },
        "item": {
          "id": "a845b0e5-9aae-4c83-9776-f29046ca5cc3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83c7846b-06bd-47fb-bd4d-2e6187b56f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca06cee-bd6d-4ca1-8b5b-945bd9021247",
        "cursor": {
          "ref": "46a994e8-1c6e-445d-808e-a1d267e03f6c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d9022306-8787-45b6-82b0-9a03f781735d"
        },
        "item": {
          "id": "bca06cee-bd6d-4ca1-8b5b-945bd9021247",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "73f472b9-26ac-4987-b955-24bbfc0aa23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57c3fda-547b-4a04-ad43-083fa8bdef98",
        "cursor": {
          "ref": "650e4e91-069b-4218-919c-37a5b709457a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8431cf90-5de7-4fda-a6db-769a637bedbe"
        },
        "item": {
          "id": "a57c3fda-547b-4a04-ad43-083fa8bdef98",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "271ee7de-40ba-49a6-ad71-dd856f6f871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21dbdd9-8dbb-4452-916f-34fdd345f7b7",
        "cursor": {
          "ref": "8b8a6a69-a251-4e35-93fc-ed31c9ede6ff",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7ca3d270-9094-4bb2-8b7e-60fa86a7bcd4"
        },
        "item": {
          "id": "f21dbdd9-8dbb-4452-916f-34fdd345f7b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7527539c-09ad-44d3-986c-c4fae2d68b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbfcdca-398b-4bae-a2bf-62ef40b6d036",
        "cursor": {
          "ref": "1246548a-b052-4440-b983-bd1863772926",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9873e56b-5d41-4da7-a550-deab429ea697"
        },
        "item": {
          "id": "7cbfcdca-398b-4bae-a2bf-62ef40b6d036",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a462ef53-5d05-4d9b-a772-2529022392f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f6cec3-8b2f-44ee-af3a-814c7e671953",
        "cursor": {
          "ref": "68c46989-1daf-447b-a5e7-29a1cc0ebc25",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "05c4ed03-cfb9-4ba1-b9b1-845cd5ecffde"
        },
        "item": {
          "id": "54f6cec3-8b2f-44ee-af3a-814c7e671953",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0365b765-3811-491f-9e4e-0038f3cd3973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeaacba-0f7d-4c97-8b43-d4fac8925962",
        "cursor": {
          "ref": "d22bdc54-fddd-4cbd-9f15-8f464db2800c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d41f23ee-ffdf-4051-b75b-8674e2719670"
        },
        "item": {
          "id": "aeeaacba-0f7d-4c97-8b43-d4fac8925962",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "48c2693a-ddca-480c-b1f4-d18af74857f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b46e9-541c-414f-a9e3-412bb68f7e8a",
        "cursor": {
          "ref": "42868722-c1b7-44e8-bf29-c3b774a7491a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b2ec8d38-3383-4bcc-bf23-6e8568a6d353"
        },
        "item": {
          "id": "607b46e9-541c-414f-a9e3-412bb68f7e8a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c6467446-e115-4082-897e-4bfcbaeb5ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d019321a-810c-4a7f-a573-572561426d35",
        "cursor": {
          "ref": "2bc5ad52-12cc-4b4b-b038-9b0eef59d91d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5404bfc-094c-4a2d-a20c-1c9ed5b386cb"
        },
        "item": {
          "id": "d019321a-810c-4a7f-a573-572561426d35",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "72efabb9-191c-4540-9dca-0c910f995017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6516c056-698c-46b5-b6b2-42b48a6623e6",
        "cursor": {
          "ref": "e4073ba3-5aaf-4a26-9196-79c91aafddf9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "37f26e0d-6d3e-4f0f-b1e6-e20f27486e36"
        },
        "item": {
          "id": "6516c056-698c-46b5-b6b2-42b48a6623e6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37e96319-515b-4f7a-9e9f-37cdd99a7b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f62ee-5cf1-402e-9799-bcb34d145981",
        "cursor": {
          "ref": "24db929c-67d1-4c44-bcd2-a7aad12785de",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e0764791-5581-4f49-9850-29385d1d459d"
        },
        "item": {
          "id": "cb6f62ee-5cf1-402e-9799-bcb34d145981",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c61964b6-931f-48f2-a733-f8624a0d0bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd5af4f-d40d-453a-b8c9-7451e1ee9ddb",
        "cursor": {
          "ref": "3f989c94-a6fa-4e46-8fd0-97d879a9828b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5a321af5-4a6a-4ad4-8989-aa7ae7650289"
        },
        "item": {
          "id": "8bd5af4f-d40d-453a-b8c9-7451e1ee9ddb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "92e19583-b567-407c-9c20-a8805cdd46da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e0f5c7-cae1-4387-a758-54146dee9963",
        "cursor": {
          "ref": "0d33a476-3db9-4779-a07e-a394c8f93af2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ac8d17dc-d178-416f-b3d6-66dce3e86d87"
        },
        "item": {
          "id": "b0e0f5c7-cae1-4387-a758-54146dee9963",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b05d053-95b1-498e-808f-87a957063847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5bf89e-f1ad-4e8c-b289-40503b571f29",
        "cursor": {
          "ref": "38fb545f-ac35-4480-9c68-94d451b912b7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4fe22e4c-8ec7-42ee-b748-0702f204ec2d"
        },
        "item": {
          "id": "2b5bf89e-f1ad-4e8c-b289-40503b571f29",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fc674616-9354-457b-b4bf-548a43776791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e643af7-65c6-4dd3-a9f1-5cc8def9b05a",
        "cursor": {
          "ref": "71a71ee4-6cf5-4ea3-b4b4-161f89767e4f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1033e681-8eae-443e-969f-7ecf80c9b50b"
        },
        "item": {
          "id": "2e643af7-65c6-4dd3-a9f1-5cc8def9b05a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d739612-4f05-4ff4-9ea6-42f7270de211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d25b6e3-b704-4837-9740-ed2907bfa193",
        "cursor": {
          "ref": "1aaa7133-1320-4da3-9efc-e6290c22d7c5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1797f54e-29ec-4d32-bcba-58a7d47f03c3"
        },
        "item": {
          "id": "3d25b6e3-b704-4837-9740-ed2907bfa193",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "db2eef16-d802-445f-94d4-580df0544f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b64f470-f10e-4d4c-b121-d8ad3754d819",
        "cursor": {
          "ref": "8a5a7822-6b68-4149-aa1f-87ec6242005d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c664e3a2-bea5-4f7e-ae14-75d720d2213c"
        },
        "item": {
          "id": "6b64f470-f10e-4d4c-b121-d8ad3754d819",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3fb4cfcc-069b-4a9d-89f2-9d7115972342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c7112-34a6-4623-8b84-3a5ee03839ee",
        "cursor": {
          "ref": "25f62302-e49b-47ce-af8e-cb6fe874a298",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "63152afd-af0e-4ff6-b52d-335a587ea084"
        },
        "item": {
          "id": "d43c7112-34a6-4623-8b84-3a5ee03839ee",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8586c92f-8ee0-41d5-b662-93e5c05a3a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdb9afc-9c3a-4519-96d2-17ceb069a478",
        "cursor": {
          "ref": "1fcc5625-9c26-4719-b397-5f177d02a197",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "488cdc82-a9e0-44d6-bbad-6066ff2a8a66"
        },
        "item": {
          "id": "9cdb9afc-9c3a-4519-96d2-17ceb069a478",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "31557ec1-7957-4ca0-9002-15c6389596ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ab62a4-4a73-46c9-bcac-363825551c3f",
        "cursor": {
          "ref": "93de54be-b766-4391-8ad8-7473bb514c5c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ef7c5517-4a30-437c-a21a-a0fe8af78452"
        },
        "item": {
          "id": "67ab62a4-4a73-46c9-bcac-363825551c3f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8e14bcf3-f944-434f-a87b-6f8095c4537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa72fd9-6a49-49ff-a75e-dcb18cac9294",
        "cursor": {
          "ref": "6b87f3b3-29c0-4d32-84b1-a9115e75a1ba",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bd1bf03e-30b7-44e1-95fe-6d75031e906f"
        },
        "item": {
          "id": "afa72fd9-6a49-49ff-a75e-dcb18cac9294",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ad7abd14-503b-4a8e-ba81-862630670df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e37bb-7105-4cfc-8fca-3b18265e6b4c",
        "cursor": {
          "ref": "1dfe1cbf-8640-4b8a-beaa-f0cb5a14f685",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b2509deb-e811-4a29-88a2-96e811e2e7de"
        },
        "item": {
          "id": "5c0e37bb-7105-4cfc-8fca-3b18265e6b4c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d74097a-3300-4f98-941d-6dc269116116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa349906-ca45-4a1b-9ee6-d749565aeec6",
        "cursor": {
          "ref": "00c359d4-fb73-4a65-92da-5d7f8b0c481c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9d6a40ba-c423-47f3-8059-891aa58a1112"
        },
        "item": {
          "id": "fa349906-ca45-4a1b-9ee6-d749565aeec6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "49ffa63f-30b3-48c4-9fdf-08a506b1a3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131654aa-f80a-4a20-a84c-1c677772c436",
        "cursor": {
          "ref": "113e2dad-ec79-4b83-ac67-5e22de048bc5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3333ba91-c9da-4e3b-9933-430f6a86d0db"
        },
        "item": {
          "id": "131654aa-f80a-4a20-a84c-1c677772c436",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fe65f3e-a0ce-4c89-b61d-1c9360faa716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d73ddcf-c0f6-4fff-a98f-63daecddd80c",
        "cursor": {
          "ref": "6f7eed7e-6f91-41e8-96f8-fbfde4b7f365",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c429e169-ba82-4b33-90d6-2f59f0d97d80"
        },
        "item": {
          "id": "1d73ddcf-c0f6-4fff-a98f-63daecddd80c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e4f51233-abc2-4b4c-b0a5-5b03175b8158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203418cb-2a0c-4f91-9150-709a4c0a4ecd",
        "cursor": {
          "ref": "9f7f3d82-320a-4c0b-9fa2-ca3039822c33",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0c8eb8ce-0106-4408-834a-cbc05d3da2c9"
        },
        "item": {
          "id": "203418cb-2a0c-4f91-9150-709a4c0a4ecd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4dad0153-501f-48a7-a510-c3d3d23147b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce573d63-36f7-4c1a-adc2-e331d8e3200e",
        "cursor": {
          "ref": "078033bf-6ae8-49d7-82f8-7e7ba1490b79",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bfa72af3-7d16-4509-b5df-c0c30777e424"
        },
        "item": {
          "id": "ce573d63-36f7-4c1a-adc2-e331d8e3200e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b4b76e59-02b1-4221-a64e-4d1f1fbccfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9264a4e-74ec-4dcb-b729-7453caa732ba",
        "cursor": {
          "ref": "7e6f15dc-01ff-4545-98aa-736af610a094",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fb4a0e7f-6fcd-43fd-b21b-43835d43fd9a"
        },
        "item": {
          "id": "d9264a4e-74ec-4dcb-b729-7453caa732ba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1860b69a-df8a-43a4-b27b-8b9ccfa307cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c780a4e-94cf-4d52-8d8e-ee7b5a3f493d",
        "cursor": {
          "ref": "aa591b5f-aa5e-4529-a0b7-56b2f7bb1e9a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2d00ce14-9e97-4a00-86b3-d44aec0b4c99"
        },
        "item": {
          "id": "7c780a4e-94cf-4d52-8d8e-ee7b5a3f493d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "066af2e7-77ec-4f6a-bccb-1541d412b938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dcfad6-d4f4-4dae-b4d0-5f931c2e7b01",
        "cursor": {
          "ref": "d1d16841-4428-4834-b34f-5c11e491a518",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "971fe6c2-496b-4974-b8e5-b944eac613fa"
        },
        "item": {
          "id": "49dcfad6-d4f4-4dae-b4d0-5f931c2e7b01",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "57718119-61be-4941-9c15-73a75eeff622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e00d7a3-239b-4082-8bb6-65ef26cb6e31",
        "cursor": {
          "ref": "ef7ef761-51e7-4637-bea3-fa1974f771e2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "643c6cde-1b76-4973-a8cc-60070e012928"
        },
        "item": {
          "id": "3e00d7a3-239b-4082-8bb6-65ef26cb6e31",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d7ebf001-455a-430c-b5b1-c1dbab927ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776ee96f-9d79-493a-8ce8-4e04ff2015b4",
        "cursor": {
          "ref": "ad940b10-2685-4fd3-8ab7-5f82f153173c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9b4868f1-4e04-415e-8950-f1893e674c45"
        },
        "item": {
          "id": "776ee96f-9d79-493a-8ce8-4e04ff2015b4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ebd612b7-92e3-4e51-9276-d6e90ac9ac0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafc6af5-bac5-4b82-a9f5-8301643e0197",
        "cursor": {
          "ref": "e4142eaf-9eb4-4821-9ee5-89dafc408ee2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e3f431ee-e09f-4b3b-b5ba-f770c5220462"
        },
        "item": {
          "id": "dafc6af5-bac5-4b82-a9f5-8301643e0197",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bfa43afe-b71d-44cd-8081-7823c2628fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a646beb1-a0b1-4f4e-a30e-44403a123396",
        "cursor": {
          "ref": "cb4dfca3-6964-4b27-bcf0-ed24bea995b4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2a811d6a-f44b-4963-89c4-af6782ac0a5b"
        },
        "item": {
          "id": "a646beb1-a0b1-4f4e-a30e-44403a123396",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "14e03545-4eb2-4e44-a107-2e504962786d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af09407-b706-4c23-89cb-5ed288df4da6",
        "cursor": {
          "ref": "b3bb70ff-e18c-4717-800a-507240ae426a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9cb6e8e8-e9ef-4bfd-8cf3-957912eaed8b"
        },
        "item": {
          "id": "5af09407-b706-4c23-89cb-5ed288df4da6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "72db1856-2803-489e-b923-a3981661b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8cfd4d-6adf-4918-a9cf-76f5712fe66d",
        "cursor": {
          "ref": "49504975-a058-47a2-bc2f-97e4de81dd9a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b571d0c1-44cd-4c4f-9552-fe06f5643a7e"
        },
        "item": {
          "id": "6c8cfd4d-6adf-4918-a9cf-76f5712fe66d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bd294a65-d739-4c37-b9fc-375c3477bc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30585be-7773-4f6c-b596-523811a1ee79",
        "cursor": {
          "ref": "65c33c13-ded7-444e-894f-927c037874bb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "48960c8f-edba-4a1e-98b5-1d1da74c908e"
        },
        "item": {
          "id": "e30585be-7773-4f6c-b596-523811a1ee79",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "76928b10-a231-4f73-8761-1ae0664b98b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f365ed-c9ca-4798-a325-be3095c22fd5",
        "cursor": {
          "ref": "596b264d-f454-4015-ac96-43262e7f4774",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "42d1ff00-3577-4b67-9107-5b2de2d2a6c5"
        },
        "item": {
          "id": "18f365ed-c9ca-4798-a325-be3095c22fd5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc19a008-26a1-453b-a615-fb6c12dbe6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e34ae4-3d60-457b-9e51-b8831cb7bd2d",
        "cursor": {
          "ref": "4feb6cb7-f777-43c4-9e83-dc885dad931b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "14dafe30-910a-4406-8a31-bde60d786975"
        },
        "item": {
          "id": "94e34ae4-3d60-457b-9e51-b8831cb7bd2d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41921782-c1f5-4490-b012-d5cb3d6c336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f4815c-19dc-475b-a308-22ba14588937",
        "cursor": {
          "ref": "48e195f3-16b6-4c8c-8c9c-03e8fa2691dd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "851c3a47-bff7-46fd-adbb-87c44bff3f5d"
        },
        "item": {
          "id": "69f4815c-19dc-475b-a308-22ba14588937",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "82a20321-5215-491a-bd6a-972bd07b34b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b9ce96-20f3-4659-bd36-9a2732693f6d",
        "cursor": {
          "ref": "140667df-adef-495c-b6e0-0d2a05ac35e9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cc2d9824-9e8b-4135-a807-502eee56b83c"
        },
        "item": {
          "id": "e8b9ce96-20f3-4659-bd36-9a2732693f6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1c59213-39c8-4e20-9cc2-79d4bce9cf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d65f25-45cb-423c-9234-c4e59bdd7dbe",
        "cursor": {
          "ref": "0546a0b6-99a3-476c-8a31-62c6b15eb809",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9683aad4-7f8b-43b4-92b9-12ff98cb8a89"
        },
        "item": {
          "id": "a7d65f25-45cb-423c-9234-c4e59bdd7dbe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d73a805-8157-4ba6-b39a-e02903d9b4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f027117-08ae-42dd-9ef9-818ffbf0cb1a",
        "cursor": {
          "ref": "563face8-ea37-476b-b575-1b9afd29e2c8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "93eca42b-6985-4138-8175-2586621a621a"
        },
        "item": {
          "id": "2f027117-08ae-42dd-9ef9-818ffbf0cb1a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6c3a225-253f-4697-8cc7-2d39b15f8aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0490c73b-0d7e-4b01-9d1c-361afa4369cb",
        "cursor": {
          "ref": "013461bd-3582-4865-849c-d437c0b25925",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "41580e1d-2a3e-43a8-a746-7bd5b7987d13"
        },
        "item": {
          "id": "0490c73b-0d7e-4b01-9d1c-361afa4369cb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f062b5b-e95f-4efd-904b-0d5e7cd62443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb60546-1944-43f7-8043-ecb1d11b806e",
        "cursor": {
          "ref": "ba2dbbcb-af31-4b43-be5b-fae5c4f21465",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e7ec973f-ea93-4740-bcb3-2885adaa1a64"
        },
        "item": {
          "id": "ddb60546-1944-43f7-8043-ecb1d11b806e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f40cb3a-6d99-401d-86fc-3d77aaf33a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdb6395-d6f0-4931-baf3-dddbb9a97848",
        "cursor": {
          "ref": "c4e8561c-1f28-40a1-b347-88cb82e54792",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9349e8d7-b1e3-419d-ad72-12d095488eaa"
        },
        "item": {
          "id": "6bdb6395-d6f0-4931-baf3-dddbb9a97848",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e41c66b9-a9bc-42d5-8d97-be1e59b4e2bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a276ffca-fa4f-458d-9950-a7f54d8963d2",
        "cursor": {
          "ref": "00cc54b9-a788-4264-86eb-5811ac0ff024",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "66908ef3-8f47-490f-8979-9a782c869c8f"
        },
        "item": {
          "id": "a276ffca-fa4f-458d-9950-a7f54d8963d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "52002c5e-6c35-468c-8a6a-4ebe7992ab32",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "005db599-f576-4b73-9fa9-f9bf773acce5",
        "cursor": {
          "ref": "e28aecbe-7944-4a83-b281-b687ad2be236",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8de77339-0b14-434e-af5c-875067182dce"
        },
        "item": {
          "id": "005db599-f576-4b73-9fa9-f9bf773acce5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4ae63fc0-72ae-44fe-8196-a8bcdfc7eecf",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d12983-a71f-46df-b56c-d3ae8fc232dd",
        "cursor": {
          "ref": "00827168-da45-4155-b999-79fa3f112046",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4131c11c-7904-4202-8e12-6fa9e55be50a"
        },
        "item": {
          "id": "f1d12983-a71f-46df-b56c-d3ae8fc232dd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dcf1bc5a-3163-4519-a3fb-076d57a97a27",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50f5f8b-0a6f-4e0f-b1f0-a40b77233039",
        "cursor": {
          "ref": "397d3c79-47b5-4914-bc00-ecfb28709e9b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8f8bb7d7-795b-451b-a81f-11d79a6e637e"
        },
        "item": {
          "id": "d50f5f8b-0a6f-4e0f-b1f0-a40b77233039",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8a74949-fe01-4554-8686-bf399c622b69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50f5f8b-0a6f-4e0f-b1f0-a40b77233039",
        "cursor": {
          "ref": "397d3c79-47b5-4914-bc00-ecfb28709e9b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8f8bb7d7-795b-451b-a81f-11d79a6e637e"
        },
        "item": {
          "id": "d50f5f8b-0a6f-4e0f-b1f0-a40b77233039",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8a74949-fe01-4554-8686-bf399c622b69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9431b5-373b-47b9-9741-285dd080569e",
        "cursor": {
          "ref": "a821b1d2-bc8e-4c7e-9376-fd6691a7d7a7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0f4e3f03-0f34-44c4-be4d-9652cf0acc68"
        },
        "item": {
          "id": "5e9431b5-373b-47b9-9741-285dd080569e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c5efcd34-1f8b-4bbf-8c5e-5429eeabded0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de136f2b-e807-40a4-a5b6-33238e9c08ae",
        "cursor": {
          "ref": "e77f456a-f35f-436b-acec-ce921fe1835d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "060eeb09-9ab3-4ece-99d7-f8e21351e5fa"
        },
        "item": {
          "id": "de136f2b-e807-40a4-a5b6-33238e9c08ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b754f0fa-9f47-4946-8345-61f3c830bb6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}