{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e05a6145-478c-40eb-a3ba-140fa8c97ce0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45b2ef69-d3fa-4814-87a3-4c6d1aff7e5b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d9e179a-4032-4f10-830f-b3eb83f99e5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0799a11b-f876-48fe-82d2-f8b870f05e63"
                }
              }
            ]
          },
          {
            "id": "db725ecc-055b-4185-b0cb-32d784706b2d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87eb8796-55e5-48ea-b9b3-284dd50ec288",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6752a90-d68f-469c-a52b-8d91239674e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4ab66882-cc3f-4c1d-bc75-5fc5b0cc507f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c4dd3fe-3709-482b-bdfa-640e21ddfcce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76dc5989-d436-4257-ad57-7e07012c63c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "819227f7-f643-418d-b52d-a9633901c9c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3408b8dd-070c-4877-b82a-95198370f1ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46b422ac-24aa-47e1-ba93-f3ffbeedbd36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62022871-c4de-4fb4-b00f-46a75e5154f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab1245d3-6be6-4c68-ad6a-12ea6c6e4346",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "604f8d29-436f-465d-a6a7-56202a21b2b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78e0b2aa-bf1f-44d6-8c79-d0fcc28d898c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60bdf3bd-432b-438a-8d14-4a5d16711746"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "978491a1-746e-476d-b8f1-387f4a9e4589",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7542b4e6-da36-4c3f-b6a3-a0cb80c32166"
            }
          }
        ]
      },
      {
        "id": "471a9501-2e0b-425a-9eba-48bf2f005c99",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9c362097-1493-4152-97f0-ac2aa4ca90b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "797440a0-5fbf-452e-983c-0038382485d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8ee1e7f-c68e-48dc-ab3a-22eb54ab573a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a41836-a46f-43cb-b6dd-fecdef0f5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ba307c7-e25a-4fe6-b74b-56422250850d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559e8ea8-b527-4d5d-ada5-a5148dfecca1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f98cf-cd0f-43e3-9623-96ebbc4b3b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85f38291-6b6f-459e-acb1-8fdaee641fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21aedd73-8bf4-4c9c-9672-d9ec0f0915a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f8657-5d2f-473d-94c5-c63713a319f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b73f50a2-eb80-4c02-ba63-7b35dd0733d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f940fcb-24f5-426f-9160-2ef6687a5e9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7483dd84-a700-4f81-9509-bd9019dd3495",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23dea21-d431-449c-b629-ffb1a7490200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaafa972-5c79-46a5-98ca-a2ef18528f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7038e9e0-8781-42d6-95a7-20e90826fb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc4a9de-0df4-4d2f-b0a6-97528dd1cf4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb6ecec4-d45b-43cd-8dee-ba6dbfaf0b1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24af9e06-fe3d-4aa1-b82f-88853e6fee6a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca74e15a-5b91-48cc-9c2f-580e78aeb063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "734af58c-eb75-4dce-8116-908a9906947a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b15bf118-5313-43ee-ac7b-b04d80508a04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4dffc172-8ca2-4267-8e23-507af5275408"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6fbc75e-fe0c-4c00-a926-f279355ab4a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87bb5f48-ebd1-4c14-8c58-af6f2a8d05fd"
            }
          }
        ]
      },
      {
        "id": "bb4cb78f-9bac-4e85-b812-325d777b5152",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ac8c14c3-66a1-4a8e-a8e1-069ee96f1570",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117171ef-2e28-436f-8f32-453f2083a85b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "61654ac0-3837-4add-902d-afcd562fc0ef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbbc863-f04a-4a1a-b877-7c2d9c21e025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8f6041-d935-45ee-b619-586a9fc152c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd78ccb-bab7-4278-8bb7-ae095f5aaf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18b2e6be-d1d6-4d30-97d5-7693a12cdeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b30d19-1f42-4a02-a45e-5b864d7944f2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6612f2c-8e30-4bb7-9cf2-bb1c447fd5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d640ddd-d6e3-45fd-a046-fb9cf180a3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4230df-be0f-45bd-b9ff-b6e4544722d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37f396d8-c298-4380-a138-1bf09fe6236f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d177762-4a91-47c6-b876-7e33a040ff4e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcfc23-7d73-489c-a052-7979350bd0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a12b38-7838-4c09-b8f6-ffd9ed015052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b642a9-0d1f-43f5-9670-cd135b0341ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0013874-75a8-46f1-bddd-d571b0b8b054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab3ab6c-1dc7-4677-91df-4423c9467313",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d18c9-cdae-476e-ab50-2028c2719ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a6e4d4-834f-4e89-bfa4-93d5c3f2042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01991c01-5751-4414-b9b1-5e21d9905f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9e3c378-c587-4014-97ec-1d2260e3bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13315aa7-95b3-4c3b-819c-b86dc933173d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae5ad6-a983-4b03-a9f3-a9dda6ac1294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a68ee78-6df2-4530-b49b-fc910ec02814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1512408-a74c-418f-86e0-0de5d5d117f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a30d0cf-2488-4267-a7ad-e7a33b7feaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d8e5f2-6795-4d97-9758-392a882aca06",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f2188-2394-4010-bd48-dc7a960ff959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6c6118-35e5-4f5d-9350-2a5605ae19ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c5ecc-b127-493a-a2d6-c4343251a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5f33f9-5eea-49d1-b853-8ad18d62ee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477d4637-b2c7-4476-a8ff-1f3717a65329",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbf0cb1-517f-42e7-956a-20d9e017d658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8c8667-2229-4234-8fd3-e487b3dfb473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f7edfa-57d0-4e22-91ac-3e95de8b8ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6d08a34-176d-4914-b809-2fc53b944ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcdb3c8-ea0d-4774-9ed5-f015f89f3bc3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd33afa-cd5c-4547-8365-598fba95a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807edd79-f0a8-4dad-b05c-4cf0cef8bd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8a204a-a05f-48e9-9a7c-2dccd613221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd526337-7fb5-453c-9486-942d8c1d001b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4780919-873c-4ca8-bb37-b84e9420bb98",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a1938b-94f3-4ec9-b3bf-ee2a40c30f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9d6986-52f6-4e13-8bd1-2904706ef034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291fa696-68cd-4d27-9871-cf7094087daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26593fd0-4724-415b-b914-20e8be697bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c783fd-08b3-4a98-8205-237ec7787402",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910fc0b0-df61-4ffb-aea6-2cee91b24533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738814d2-2814-413b-bcb4-b761aba05cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85826b60-5856-416f-b759-3bd101b8471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "525c0308-2498-4a7c-8f3d-6d4b23819ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9a20f2-46b1-47ae-86af-bc92139efdda",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7290449-44c4-45da-a0d2-2e4a9de5f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ad58e6-c4fe-4d9c-8a81-9e71703f08eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5673094f-697e-4ba2-a74d-0e062b193205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf62dc84-11a3-4049-93f2-671e32cde99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb51d36a-a451-4d77-a490-7c4fc2214d03",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b1caf-d011-4015-9998-61f72364ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4d4aee-9c07-466c-a843-b23f95d7a110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68af050-5db0-40df-a0bb-e89cdea9d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "badef4a6-f25f-4fc0-8074-82a342b07bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d7baa-8976-4b33-8eda-e80b4f667ce4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eee276-00f2-4ec6-83c6-1363e5430dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa3438-67ad-4003-9932-2188fd72cbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1cb695-260d-4657-8880-b111da6f80cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3380e41-c9cc-43ad-adfb-32c34d1e8060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c348fa57-89e4-40ed-8dee-d7106813ce40",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03101cf9-39e8-43cc-9ebc-2172de00babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ce6caf-1eb0-4473-bb85-bda5826bf644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6e6c6c-f0e0-4712-9553-5c3e47511f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7d93854-5861-4bdc-9e50-0b5b4de4d02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb7ac9-b31b-4c0c-82e6-801280c202cc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aafec72-342c-46f4-8dd1-e6eda3c7a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586490b-e16c-40ac-81ef-04805cd2738b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a684d5f-ebfa-4221-b7e2-e1ec4bb0af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de82db9-20c3-4d72-8af1-3d75618fc4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea139651-cf10-4111-b24b-cb4a18531922",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc3fe71-5a89-47a0-9519-f7bd5e8f2f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c33d33-6711-4a96-ae2a-4ab19112ccda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f88f5e5-2749-4956-8773-662e0ca68f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7950f846-c32d-4108-acb2-d8d8abcb5e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338f43b8-fb7f-4947-a0e6-8dd6154b58ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaf72d4-20fc-404a-bf48-465a57f528d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ddba3f-ee97-49b1-8a7d-8a237122a3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9040369-4dea-404a-aeb4-db3cbe4f9d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3de95864-0f3d-445e-b47d-3301c099829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6db607a-340f-4cc6-bb20-677c536c6b69",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84175a1-5f8d-4611-a26f-40e333a27cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1937897-d747-4b03-b0c2-bcfb1a911b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa3736-5cd5-4827-bda4-df5f4076b94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff16b49-07a5-42d3-8b00-3eb23cbd35d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae045c77-b9f4-4ccb-af4e-783bdd5ed9eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95354c57-d5ee-471f-aefa-136447af909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e131d01f-84a3-41bc-80fd-9eb69b27600a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de40be05-107c-4972-ba90-893a66a020eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57f276d-47be-4710-b12a-091df330cd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddecb40-3c02-4352-90dd-bef7ff7405de",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3794a621-2b15-4733-bbb0-c291d9ebc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5ff3e0-98a5-47aa-9f6a-0be95fd881cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a017ea1-7ea0-4970-9f02-e8776a1607dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a31dec-b029-4c87-96db-c539f5569e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2342cf2b-5edd-43d4-98ab-7f47e2dd7efa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff50655c-306e-4cc0-a0ee-7565a00bb7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9bd7ec-edb5-474d-9fd0-fa36ea5fc82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc90c3d-06b7-405f-bafb-10b2eb547300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20506c79-00b4-47e5-a89f-0c91257da42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4372e82c-a656-4a39-9290-a6e77cc3c1f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7317f-cf1a-4ad4-a720-2f5156528879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87e1cf0-d0f4-469a-921a-4eb2c7b2567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8539e44-1391-4617-ba23-e28747e66237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03171330-655e-4bf5-bcc2-33252eeaf4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5460a1af-ee6c-4af0-a28f-f9fe61575f12",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004bb60-2ce6-498b-81a2-22537f42d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737356d2-8506-42a4-b49d-1526de438f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3792744-416b-4965-9cf7-f95a77effcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c5386e-573c-4b9e-b942-74bb839c915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac1cfb1-2625-486f-8554-cdccda6546ed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8769f08-2429-4a87-b7b1-d80dfd14ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df99473b-4606-47cf-a1d3-987621365322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56926784-f197-478a-b33f-0305cc605ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc99b204-a400-4fbb-8c33-4d4c5c037659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fe4000-eac1-4ea4-8e5f-02dca6743c25",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e91d272-3cc2-4522-8a48-7693a259dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12318184-a843-446d-ae62-6d551a4aead2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5234932d-d269-40ee-847c-f59b49feaca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c58581c-16ef-4c93-b269-9ecd496621c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56be4b05-363c-40a0-89bc-7e8bd70407ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183fabfb-3c83-4bfd-bc83-63f0aef9520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a26c9a-57c9-4d0a-b280-e3f498435e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7bd87e-74bc-487b-a2e8-7c6f76da3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8acee1-abf8-458f-a934-04a088da2d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb7d9a4-04be-480e-abf5-aeb34d07a17f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300fe7af-7747-4374-acc0-f27e16f7e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eebb3ff-d8a1-4a1f-b155-4fdc6eb419f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba97aa-0f3b-4669-9024-b737e5068900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24db76f-61e9-4c21-ac04-d1a93801ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daa88c7-8bdf-4493-b977-cc8795148eed",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69efd224-f98f-40d0-b793-53a441df2061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6220843e-1680-421e-8a55-61ae7fcf0ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a565bc3c-70ea-4340-8654-97a32955f47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cda9a3b-447a-48bd-8576-e779cb129ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd45c561-a5ec-484d-8bd1-ade5a21f389a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13289b0b-8c6c-4f58-975c-b823e455f00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c652d4f9-0b5c-4475-b81f-c5c9977feeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d321b4-f32e-477c-939b-6f0e3fab1552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02da56aa-11aa-451f-93fa-05c1236a874a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474984a0-b7d5-4b08-bba2-63798b4f860f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf504d-8919-4935-8540-d12aa4cfcc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc27c598-aa06-4e41-a9e0-a8f7d621407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f29c8aa-a1c7-4bbf-9ad5-34115a9df2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d110680-004a-4f19-86e2-0182f89a1b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67983ad-c478-4a40-9fc0-76b2fae1a7b1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0662a85e-432e-4518-8024-ebc928aaf966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d50480-a377-4164-918f-69c8ffcfeceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b384d1-a7f8-4c7c-a040-ab821e0bb74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7521e22d-a9d8-41b2-ae13-740e3eaa13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf95938-525a-42fa-ae4a-1e42452e4734",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723c8802-fa68-41b8-96a6-b87ac19fea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd21f91-5066-4766-8764-a29265031174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ffd86-4b8f-4e15-a9af-493e994c8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8653f8c1-9df8-47f0-b5e0-ffc24fb72220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547cdff-01a7-4bef-82af-7ca0557c42d0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608b0ac-ab3f-4253-9ef7-61ad3e069149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3330ab3d-538f-42d0-ae32-ee8719023533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9805b0-13bc-4866-8fae-350c42f9c228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31f2af3-6ab7-49af-8db7-6c63587ef404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400285b7-945a-4aad-be48-944ea4eb048c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58153f78-68ba-45b9-bb97-92a0463cfa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c392956-497a-4895-8d0c-db81fe659c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f5619-04db-4afe-a21b-c001826d8df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05de7b9-b150-41b7-8611-edaf9827531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b36a2d-3769-4bdb-b699-6c520994b2d4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25da7597-e5c7-4cdb-9db7-fc4553ca8f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642449a-3f8d-46a7-afe1-1775cb48cf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de342227-3bdf-43ab-9f79-ea63736dcb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b99bf57a-892c-4913-9749-2adef59bc79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5752626-8aee-4ac7-8861-560c42db1350",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7218324a-0d02-4fb2-b2c4-05f68308fd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c50c69e-ec84-4a41-a11e-3e378a7419cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7eaa52-25ae-460b-9301-d9a2b905ef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7986faf-032c-402f-8e1a-87c6875626bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51aea7e-f3f0-4350-8a9f-ee0b0f4a2e16",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d638ce-ed31-4f85-af9c-81a76b9e4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dcbcb2-5a2b-4caa-b5fc-a92cfadf710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a202d9-5563-4433-8b63-cb8ce4db37b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b68631-2cda-488d-af0c-b54c0226cb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80963b2b-5429-4273-94fc-4246b8b09a0e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f518938d-cc6e-4721-b8f2-1f5be04737fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e36399e-6325-4234-92be-2e50e45afd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e683cb-c79b-46e3-842d-45ec9a96ce9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ed8495-995f-4c73-89e7-7d3210605768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c45452-a332-4283-ac10-2a64206afffe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca5d7aa-b757-4736-9a10-792c9c8078f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ea0caa-9b69-4432-b077-250cd4f4c507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c040ff9a-56c1-49a4-bcbd-c861577b6b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed22c7c5-2a58-48fc-863c-c1d618ca6e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb83701-45b8-49d3-b865-33f54952a2c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dea6e3-12cd-47e2-b053-e2fd19bf13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0161c564-48fa-49df-a5c1-9e0ce263b7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca33476-19a6-4a31-b438-dc2c6ea55bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e770d4ae-ff05-474b-8fd4-1618f9882d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db93774-fe37-4f0b-8987-fb6e53b62f80",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f2c31-43ce-4de3-a482-59275958a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd83186d-ae97-4d8f-acec-1cf25b2e3aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a11076a-20dd-4cd6-a540-812b588b64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab33a740-01fc-4626-88bb-1b09bf1c6833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b48e643-dab1-4cd2-bb65-07909248eb0a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822978d0-1d85-493c-9a94-e4413975ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9464a77-0da7-40cf-834d-0ff72ddcbcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f0e753-c0e9-4fdc-8e2a-36e8cad7a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "646777d1-0f32-4c03-baed-3c8860b5cd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986fc7ee-d677-490b-be91-b35c9102c556",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eebcc2-8589-40ed-bbe8-864e1b8ad267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a35ad8b-9d4a-4287-a534-97a5ee074a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc802c90-478e-4a1e-929f-3259e042664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "113ae576-27d5-4e11-8093-0bdfc34d6c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbdb06f-154e-44bb-baf7-d320a074ef3a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352191dc-9135-4801-bdbb-ea13f02bdca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be53a51f-50e0-4f80-917d-608c640d12c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ca17d8-a022-40b4-96eb-6c496f67c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c79a48-65d5-4742-a72c-252c4bb37104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232ed400-69f1-41bc-bfbc-7c1226e1b5d7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cfa4e-b3ef-4843-ae36-6c8dd3ec5dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935c6420-28e5-477f-976f-b0635068b4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73001175-9dc3-4285-a659-ae389b0704c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74882d40-e10f-4704-a656-5deef4b29a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f23a9ea-d5d7-4882-af6c-30aa840e29b4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cced10c0-5d0b-4969-9b8e-d2daf9a89c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9d863f-c4d4-42b5-ad90-b851a8ad7ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af5f76c-80f4-4810-b044-9590ca1b8c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c54107a-d801-4df8-86e1-19a1e25280ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a9e7b4-5779-41fd-ab51-091343b4253a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a36b8b1-3c24-4e55-abb2-c21ada22e25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a32d5d-c78c-41fe-82fb-9cfd96b4fe32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df436ed-ab55-4dd3-84ab-f51bb60322b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3b4af1-ed3e-4c9e-925b-a93ba1a5f7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8878c5-2f5d-4d06-b4a4-0c1288b5b631",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593cb602-48d0-4d27-8a2a-46cbc28f26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e5e74-3924-4cca-a026-bd96f7e494bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c3553b-6963-4390-a30e-1a91a1fb39c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79de7aad-a01d-499a-a5a9-0fea3fecf83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f8b3bd-a130-4555-a5c3-53d9d47571fe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb18936-36df-48b7-98d1-3e0deb47a893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805cc81c-fcc7-4dae-828e-22ba5ffd7134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72268da3-7e79-4293-8542-808c4260efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd682a53-515e-4fc6-96c1-4b65c99e220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9579a913-6c0a-49c9-9d76-97c076a622a1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c46bd1f-0086-4e61-926e-2a23d586752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600e7fca-1617-4164-aa07-c59ac601d989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be620464-f1d3-47eb-a7db-60f57ef6be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe806ef9-8352-4172-b261-fd69f2752af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f19a8d-8ed9-4ded-b04e-0dba9f138aa7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c4bcff-e612-433c-b3d2-ad59e4100577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957478a6-075b-42d6-bd74-ac64001b17cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd8109c-bdba-441d-94f3-2c058cc63427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "61521b96-f5c6-4c91-991e-5858fecc6f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750064db-8839-4efe-a396-1ac2d36ca1aa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f4a37-9e51-4628-b120-66965ef58959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af4eaa-d080-4a36-b279-a63718d79fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79459cfa-7805-4e13-beb0-009e6da0d34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65160759-e14b-4079-b76f-286ff2eda987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2924ce-6819-4dc7-8d6c-2a20015147a5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c066764f-5802-4bfe-9912-0b480bb85d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc03c20a-1a21-462a-b4f5-55727adeb0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e7add-f6f5-4967-8dbe-345605813f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8c2974-b1f8-44ee-864f-adfb6b357969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cba530-a656-4450-81df-aef0e2d81aa0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ab567-bca4-44ee-a1aa-afdfc382d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd77f7d-3e4a-4891-b3d0-89234849f3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869d5975-ecc4-48dc-897d-a78eb3c534dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef8bcc6-f517-4144-afee-d1e8600d3aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb186931-a4eb-4526-9789-b1854142ea0d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fde16-c70a-4eed-9d21-981ee6b05269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad26ef94-f25d-431d-9f57-4f564f05c4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba487f-73ca-4c4e-878b-3bac449c9516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c25aa59-1298-4e3c-a9ca-068064618909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd53310-9794-4099-b981-0f71aa5c8595",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8f13ac-071f-45aa-a48f-4cce58fb2c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c324a2d-43ea-4cc7-8d05-05822dc64a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9680f163-a694-4363-9380-8cf5cbf15dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "79d72585-0c49-4e5a-86cb-409cab74cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8045549f-c899-4783-aefb-8f4c98a6a4bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c5159f-7480-4660-a818-b471dc47b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5968601-92ea-499b-aaa7-6cb5ad0eb185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72fb1cb-3f1f-4987-8a26-bd63000aaf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdb42a4-f5dc-413c-b808-0d945cb36a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0974a7-ebef-47d6-ac64-2cf42b0d5042",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccd1e1-8628-46c0-832e-6c7b6e7140e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65fb7bd-96c3-45cd-a4e1-bc869e3fcf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c72aacd-74db-437e-8382-0e95a7d3479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81178556-0530-4451-846d-92dc51a1b530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0c3769-ba35-4731-b83a-2d05a7b3fe35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140650ae-f963-421e-81f7-139f65599a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ad96a-503a-4851-bc7f-0ecf35d96dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce00ace-e9f9-44af-a233-25f9e990bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59f83b1-eb46-4859-b2fb-2dcb3286cf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7629d2-9836-4225-978f-f7a348b2ca54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d9ef1-bf6a-4ee7-b1b0-4c27d5367a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef190e9-d524-40f1-9a8c-437ec827993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa1a836-98be-4ea9-a09d-14cbd82a915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15c778a-a39b-465f-a170-8739a328c7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a780598-74bb-44fd-960a-8bcfac1cd4df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447a2999-fd13-4b63-88e9-1079d4a268cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbdac9a-e9c5-48f5-829c-0f31ec6dc146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3858a-c7db-4d72-9d8b-651fc3b19263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7f4dc7-eb66-4be5-b1ee-dc134c3a2e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef319b39-4416-4a60-9a7b-4149350814b7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f19b12-6065-4b94-810a-ee5a4abd3816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453753c6-5c74-4efc-85cc-346f8ddee91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cbcd2a-2fa1-4787-b9be-cbac72dc7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9099d35-d545-4560-9be6-758ae84dee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a4b91a-3a17-483e-9f7e-f4639cf2ce4c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc0421-8aa3-465e-8f24-8ff5f0dce99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c9ce3-71b8-4f2b-bda5-f34fdacf2ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc2d14a-46b0-4a75-b73a-668bc1173715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7a8b38-8867-49b4-9e1e-ff4d9e052725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558e8e2d-3925-4977-b6ff-61a108c58442",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2227604-813f-46b8-9748-eb8cfe482f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1285bd-ce7f-4cd0-bda3-e5150e106f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d8613b-8901-4941-85a3-4ed1b854454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c47e92-ef5f-4f5a-b9c4-7bb984c2eaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af5aa4-3da1-41ae-99e8-153f2c0e15a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fdd42a-47fa-4c33-86b7-3044ee58c329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8eea11-e708-47be-aeb2-8e87382448b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6afbebb-d199-4cf8-b728-0a29227b66a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e1d73f-ca36-481c-a82a-39fcbc69e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661b5c02-e594-4a53-ae3b-ee257a3985eb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3406d4e5-45a1-4589-9f50-367c930bfd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff243d4-e1b0-4317-ac67-ebe6a915e4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0f518-2088-4932-867d-e91a50c19341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "561732d2-d504-46d9-8108-da0754c4501a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736ad6a4-0f14-4c39-8ab7-ccb2381e2299",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46b905-78a0-4f49-82e4-ab5988a9b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6ef21d-4a0e-49c6-9db4-fc42baf3a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a1a48d-3597-46ec-a6d0-7761ba69e916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e1837f-0b84-4a57-954d-0d75497f31ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eff8a8-f061-4959-b960-3ba6901e93bb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa320f5-2c73-49f1-9e56-74c7b4e41980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9c0618-dca6-4d99-b3c9-4416087e99cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435f4719-b6bd-4d20-ba2f-a59e1a8e5053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f449f-f63c-4723-90eb-7476afc0c851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c240f451-2168-43c9-81e5-e4315ad3937d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7707ff9-d834-4aae-a626-b95029eac52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5197b2c1-da87-4fdb-ace2-9dad68efcbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475bffd5-f7a4-42de-a333-de8da6bc94aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d0a21e-7cfe-4da6-a15a-261826e2868b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd33abed-6230-4ce7-96d0-549ee1cf02ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2151f544-9284-413f-bf4c-2eda615362be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc914db4-37d5-4483-9122-c20e8147c3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45fecd-39ea-4267-925c-acfe5b60a7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a04b1eb-0a33-4fbf-a74b-c0240d6227ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4419ac24-f222-4b9b-8995-19f56c673274",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7446a54b-9c00-491b-8817-e8d3b1815ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0751e850-c2f0-4e7c-9069-2c1dd9ca5d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb566a3-dfe1-4125-8582-07dd24408a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c692632-efc5-499f-9e5f-fd755d7dfc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfeaa44-91af-4d4b-b0cb-85f7f5ee0b83",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5d4e22-fb89-4465-ba0a-2f8f4043e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dc967c-a951-4ce3-b80c-b8f9cc967ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c0d131-4235-4ff3-a31d-0c8abc3d074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b53f8a75-755b-40c5-a4b2-52a3bac9a4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ee698-8064-422f-9390-192ee2e49f9a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85dfe38-75ad-440c-8f19-98d454d4518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1719b155-156e-4dfe-a934-7af59cbb0721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f181bf-a292-4d4e-805d-176fba02ff26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cda5962-bcf6-4885-93bb-9e8ab619e397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643f00b0-143b-4a54-85c7-371c336eb02d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec99a29-ed9c-4f6e-b439-8ac87f41ea4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bcdfee-838b-485a-991e-22abaf28dcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34285c5-604f-4619-b51f-714203389cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d31aad35-6121-4463-a9f8-c976284009aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd2f32c-2597-401e-9816-205cf0ee1342",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82571ecf-92b7-4e4e-acab-4a7ea8ddb8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdd5bcd-8c1a-4e0f-89e4-4627797fb4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75d3327-96da-401b-acd9-0df7b24e4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5826692-5318-4494-aa35-7230c738aaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e618785-bf24-4d71-a306-f2ec090ce000",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdc6a0b-e541-4242-8452-30f12880ae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d18428-0c1b-4c42-9802-cd684bc96f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e261b34b-0d2c-48d9-99b8-fa69e10d5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b1eb29-1b93-4576-9c4f-c87d1ba473ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447b90f-e1f9-4780-9c4a-88a2f7b66d09",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fb7e7-a400-4743-bfef-5131e2947fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b1b5cd-9abc-4067-ad6f-c173b3f611aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ac55a9-4dda-4b16-834d-962dd71aee8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025f8fd5-e7b8-4869-9f5c-0ed5d98c14e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63c768d-dccd-4247-a7dc-1ec2f82273c8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c280dd2-c9b2-432f-9038-f22b6cf29cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44625e93-1134-4afc-8f0f-15da0b7f5d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9965976-bff1-42cc-ad1d-798a4dedc558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fcf4f1-d3ce-4cba-9e7a-89be4ef60b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0423a5d1-f6f6-42c8-983a-eff6f3c2c32f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a1c69-256a-4b35-a79d-73007232d05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4ad263-1e70-4908-be95-ce2a93055d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee926b6-f81b-4062-9e63-e2ebf80a73cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b441903-fd59-4d67-8c7c-439f9ee94806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0f282a-daea-4178-a585-66990efcc920",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9189c35-ef9f-4ead-a536-61a59a79a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9101e432-5316-4f86-b13d-e13946d44534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45a7f9-9a53-400e-a5d7-3d162f1b3d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f85ef92-61ea-45b8-bde4-7837adb07a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1c49df-002e-4f38-bc7b-048cfd436962",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0f6222-dfc0-42e2-8c2f-c98c15c5d314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19443686-c4fa-4895-9c31-86ec0c029270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b177f0a6-f746-4e62-a8c7-919d39bcfbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b214e47-53b8-4011-b1b7-329801319ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e0dba-378d-4602-9d6f-427a14d11091",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf16cda-911e-4dc4-b600-448445030f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f8b80a-f795-4962-a3b7-c43efa1265d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a499d9c1-7820-4676-962c-bbc745305d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1938c3-8f83-4708-9ca4-74814dad96ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a4af22-c9a1-413b-b178-d6d51384d84a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d952105d-ebc8-4e26-bb09-d614a2899bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdc4945-a952-4238-b067-3191c1f18688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cf18bb-1a3f-4a93-9674-fa49cd6307aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb97563-095e-449a-b076-cfdc198a9bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce48e8e3-62cd-4261-87d8-2b69b8906957",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c27085-fdc2-4f7f-a8b5-9414f5d193c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38439c0a-546d-475d-ba6a-fadaecb0c742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f710ba-6c3d-4c69-8a4e-7c6d7bfddaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b00093-a8e7-45e4-abd6-572cbce861ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63b8a8b-2860-4f7d-96e3-3972effd9e73",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00391175-d511-45e6-8fe3-9d3e9e6616cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6c9134-8a22-4d1c-9863-7cdc35a3c8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17de8e22-aa6b-4123-a269-df93939e247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa95324-5f70-4252-a69d-fae6a951aa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e0937d-d5b7-41eb-8652-0c2542232942",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93cb84f-6da6-484b-aaaa-bcd0678d0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2015a4-3a3d-4838-91bb-907127fe5d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7434b05f-cdd5-4aba-bfc2-f1450b73426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f219b5-c3b3-4ebf-a1dd-f562695b0b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da5f1fc-d989-45ed-a395-7b8566ecc573",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ffa2d-18b5-420a-ac4c-ab549cd5c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ea4a8e-1b2f-4eb3-a422-f817ec3f6a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8dec19-142b-4ed4-a080-b342fe824bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba15c9fd-571a-4403-8a72-34a4c1a61238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455598e0-baa5-4dd2-a14b-b92252f31fc3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63711edd-4a96-4217-b4fa-e9c70fa99214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289bc0a5-9439-48c2-aba7-2d181d9238d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28ed31-e82e-4e4f-8df8-2504160110d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9233cd-988c-4767-8b73-12b827261f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b537e9ef-b5f6-42b7-bd27-c33b3addf820",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56510ee1-6db0-420f-b788-971c135e8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75025450-2b27-4b15-b4b6-d1308eea7143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0f88a-0aa0-4476-bd45-8fbacef33ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0734e-4b83-4858-a399-822b9bbc3592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d477e310-3c79-4693-bc95-310aa4dae6e3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a7a1b7-d657-4720-bb79-fd7f46412f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389f64af-bc9a-4c02-bc38-c61d3ba7ff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38576fdc-4f67-4dcf-b2c4-f06ec6a3e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "469ca962-0f1e-471d-becb-da1ad4e0f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e7b54e-df29-4c2b-baa9-bc775f524bea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc3a88-3c21-432e-98ca-3e791e1ba22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73b6615-e73b-4e8d-b854-59c8643d6f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80752537-2599-4d28-b7ea-31026ff2df9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43efa69b-dbcb-45c6-9303-8124a1f9a910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b541f047-4b55-4152-b8e4-9a2d32297cbe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af83afed-7cb7-4b11-a0ef-41e41e81974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ae59898-9e61-44cf-abe9-ea3dd0fcdcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2409afe0-0bb9-4949-837b-8bba24da9dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c1e82a-260b-462a-b613-859c478ad95e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab3ed216-214d-4fff-9b39-9aaa8d7d50ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a6cb30d-3294-4437-a5b3-7e66b2e4fddf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4694073e-7298-4941-93f9-01dca679470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ec373b4-b9b6-47de-8a8a-98d2758be9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63733da7-ee5e-438e-a3c1-089d8b306247",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb74812-fd3f-4803-812d-79d438a19d9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d4dcc9-df6c-4d7b-a930-64589a7556c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a296d3ac-35d1-4ea3-8f3d-e28707a904e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccfde4b4-6479-4538-a4e9-c39bcde8008f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8234cb82-49ee-4208-8b93-a29ff0832f71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efcbb611-dbec-4316-9e0f-d70f3a6a13fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43223b57-6d77-489b-8892-95ad7eca5bc9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88db428d-e62e-4c12-ac46-fe4b5a600a24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9f533a6-2172-4038-905f-d7bae03a15f9"
                }
              }
            ]
          },
          {
            "id": "79d1fcb8-45d6-4b6a-bf22-17fb9a1e3409",
            "name": "Positive Testing",
            "item": [
              {
                "id": "452ae469-d61a-4185-bfd9-73157392c34d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1f385750-9b5e-4492-9454-b363646014ed",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda4c0ff-03c8-4545-b1ce-886e04e75820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34256f5c-6f68-4a8f-857e-b61ba357dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6520491-645d-47e0-9f0c-24b4e8ccc34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e9ff07-73f9-48a9-8370-e7a2ac17a024"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee37becc-b975-4d1c-b06e-5c5010f19efa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2510d6c6-c6c1-42a0-9f05-f114ff143909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a37555ea-dd33-4e77-989a-8da2210bfa33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e544019-6916-4e59-80e2-cd1a2ab7553e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28f1fc71-2c38-416a-919c-81490aca6c25"
                    }
                  }
                ]
              },
              {
                "id": "47a833c0-0697-42b8-94db-5b74555adef0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "786bd348-21b1-42b7-ad31-303fe053752a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88e75936-b243-4fd6-a1f1-1a3e1e249446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fef3c4da-d5f1-47d5-ba92-b52780a47c50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "273962ab-2085-4454-913c-7a866d0e0d97"
                    }
                  }
                ]
              },
              {
                "id": "252ba04c-dba7-4339-8a06-6e1b2b6c72d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8315146f-f807-456b-9a6c-0e94e06d8d0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d10d4ea1-7c83-4ba2-9c5d-b2aacb8a7241"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46659f76-b2aa-454a-bf6d-49e985a49a0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c5ea07d-7ad8-4cb4-9a63-3e028865e2c4"
                    }
                  }
                ]
              },
              {
                "id": "9c0f1bdf-cf75-4e15-9030-b7edfa11ee04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03d21e7d-cc4b-46df-b749-21c27a5f00ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0563cf00-2a4c-4bcb-8e86-275fd8754089"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f32ae6-6815-41b0-beb8-8360a3f404b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3b1b3d02-f39c-4fe2-af58-28e8cafbc33b"
                    }
                  }
                ]
              },
              {
                "id": "0a2c0b5d-3220-4367-8b7b-22c83033345a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "512d0b8f-f299-472f-851d-ac4fc572dd07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95c242ae-5e9f-40dd-82ec-a27a4da9c3eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "effc1263-31bd-4a92-bbb3-101080c29bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fca40d41-9bfc-46a6-ac40-8405d4274c3c"
                    }
                  }
                ]
              },
              {
                "id": "1acf24a2-1e0b-4f0c-a7b1-d0a99c4b9f17",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56e62a1c-f5ea-4ef9-ad31-42d1d70c71f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a423526-5830-494e-92c3-e15c37be8ff6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73ac904c-0957-48e6-a418-7bb1fce59f38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f3d0cab-3d69-4919-8d03-a613de405f61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac33fe6d-a373-4aa1-8d3e-0b80528e32b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01d5d7e7-fdf7-4102-8928-cb8077e03328"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "484d6a48-ebd2-492b-a5dc-3db83ebd5815",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6426c3be-b16f-4361-ae8d-71f7658c486b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb8534d-c536-456c-b9ec-50e010eec4e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4785d58f-53f7-4d8f-a383-b0b3b4d3dcf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3338c755-a4f6-4162-bc4f-965c5c0bb3ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0417bdc9-2817-4425-900c-f90d8c268b79"
            }
          }
        ]
      },
      {
        "id": "7b22ff6c-519c-4eb3-b98d-0d0e4ed2f0b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9bdc9a1d-cb20-4a02-baf8-b79e5c93e925",
            "name": "Negative Testing",
            "item": [
              {
                "id": "874cf4e8-02d1-4043-8264-fc75b945dc34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8ce76dd-7daa-4bef-9730-69ebfc3ae606",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd82406d-c97d-4df2-8aef-aabd960caa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f025403-0e1c-4f6c-a138-037e999c2fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd273f-c489-4b5c-a0e4-f9b3991c4be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1afb2734-a1af-498a-822d-1aaf3c9dd306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c837e632-a522-4e53-a92b-7aa948a46269",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f920c2cf-6d25-4cce-9be9-da7e63095b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89dae1a-7eac-4505-b329-3fdbbd829222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1583087f-4319-4b80-9a10-e33601b1e863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f0a947-7a99-4036-bef2-55e0f16792b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7ff0d6-27a0-4928-8231-f61d1105d1ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ecd0a-856c-4ab3-b0fb-f483e20d86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dd9ba2-45c4-42a4-88e2-d2d78b4a70a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54a41fc-ebee-4c28-bbda-0b6934bb1be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cc3bf9-2a58-4547-bc0c-4130494f48cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbff7ef-941d-48d0-a4a8-524eea82dfd5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89ad5ea-65e0-406a-832b-fbc2266fe42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea24bdb-bea0-4de9-8c4d-66dc468adc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cc848b-2134-409a-815d-81cf6685d473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9b59e9-e10d-4908-8e75-04db0e8f5483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5031b9f2-faf8-4c0f-a6db-cb53edff9c72",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aab773-1dd6-4ac3-b156-130c9b564b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555cf6e0-5eb0-4943-b65d-3ad3a33a179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79f0d56-12ba-479a-8b42-287872355bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1991e7b2-03f9-4281-a350-3ac95e3a2141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbd401e-bdcc-4c00-883f-865be0f5bbed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da32ad3-b32a-4f5a-92b7-a3604bee3523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ea2570-9d06-455f-a28b-aaef663a8d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6da84e-7791-44ef-88a9-4b0bcb93de16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f5120b-b94f-4e4f-b2d2-b561d73a69ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2972050b-482a-4be9-b2b1-538392d93f4f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb0fa61-8a87-4dd8-9b6a-77084e4dbe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90990a4e-92a4-46a5-aa0a-b51e1584fdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaf7bd2-632e-4431-bf5e-e70ae8080841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b97e22-3b7c-4ade-a167-706c0b6aff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca39b294-26c2-48b3-a003-efa6bc88b94d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19731af6-d977-4a7b-86da-c625ed4b54d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d816f2-6c19-443e-a5bf-ae4c6be1a392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e6c5b9-f13d-4fcc-91a4-6658b1493e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e663985-401c-4d83-bdf6-77ee629481dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a26f27-4b99-492a-a5ce-ba2098f041a8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b5e61-7406-4ae8-bb11-cadc59a777f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eeab2e-1af9-4a56-a071-e45bfa562068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063d16ec-e701-4652-97ae-67ba5b7ee8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30525553-3ce4-421a-bfa8-f2d477d6dfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e768bd8-b3e0-479f-87ef-78ec7cce3638",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405cb5e7-6e74-4606-a779-0db0abcc4203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3915fea6-2a7c-43ae-ac8f-9aa2f9fb65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c63031-364a-4a9a-b13f-5caf73db0783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52a5bd0-5744-4049-931d-e5ec33badb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d82935-042e-4a26-87ac-d51373a0f8cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b08920f-7da5-4650-a583-ad6cd71b7072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c885919f-6689-4da6-9fd7-00dd304a7f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b9f178-8409-493e-88ae-de5107c189aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5445c6d4-e3ed-49a8-8a83-a24a973c3104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd95ea8f-47fb-4676-aeea-70978f0ef761",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c2403b-c68a-408d-bd2d-fe0d9d84b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975abbd6-513a-401b-9d53-dac3b2692678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949571e9-b322-4774-bcb3-d021a2cff6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14a892ce-23a8-4e35-9690-82bb4d082c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70417b29-b2f3-4593-b439-84ae58f400da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c12d8-799e-4891-90b5-ffe7ce2730c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962fc673-180a-4090-8d6f-5a7cb51d224d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78ebe8b-e350-46f4-bca1-a1e406e3827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2e3c52-cf75-4840-b2a4-0fcd09b9c99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171dc5e3-7961-4c26-a5c6-c642fbc6da7c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bd3278-99ae-4c38-a817-4abfc53b4935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bd066c-19f2-4604-8a5b-7bc4a4f3e386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6405374e-c2a4-47e0-b39d-18ffe1d26ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14cc32b-1f06-4614-ac04-2adab6f186ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690d37f7-0843-4f1b-b9c6-f3fe6648981c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20f052-0d81-413a-9f81-4397f3c8e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e064b1ce-8631-4202-9a09-2d1d2bd36f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42414e-d3a1-46c2-943b-f1dbcaff629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c583d5a6-04a0-437d-b9f1-5d7aa9bc3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b038099-6d46-4ac8-bff3-4017980418e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ce189e-1249-4225-9b45-b0ac9464d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5232b17-08da-40a6-b6bf-5670d17c01f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b9e4e5-aa47-44ff-b4f3-0bd5433841a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2080c563-0d51-4796-9ad6-be167b1aca5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0589f94-8c7f-436c-b67b-e209e5cbcf93",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af5740b-727a-4c07-af67-0924d27b977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f98975-003d-4a7d-8235-0b1b84614cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33a3a95-dd0b-40ef-864c-7355ffe9ef6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc98a5a-4e2a-4850-bc5d-77413f4b2ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bad04b-3108-4e6f-8b3d-4b16b495fe8a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d28408-b40a-493b-8088-bb6231c058df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c14370-88ce-4282-9208-ae573dcb5718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faed2f26-eed5-4469-bb0b-9a5e0325b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ec2824-8685-44cb-9793-059d0dbdb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfe2b18-784e-46a1-8515-5120e9e8f140",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2889ed-9668-4886-8d5f-be63ada6c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371608a2-2db7-4313-8ec1-1b1280089d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d1d1a-44a4-440b-884f-075f3a398523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0604c874-87be-4188-872d-e169a48743a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d57a2d-26eb-4d31-abde-b569b685b99a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da185884-fd5c-436d-857b-e9bf1a4fb58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f612e9da-15ba-48db-b716-244a0adb7d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772e8180-6f64-49a7-a57a-50c1dab20c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7ede6a-98c7-4173-aee7-9c9bc5ac97f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc9837d-fc04-4c33-9795-0b7a941eb284",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782914a-0650-4e43-881a-57f310841a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3527f08-e180-4abc-b030-5d72432ee6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7487d366-961e-461e-a456-5ecefe533167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fae6ce6-5637-4975-a429-d743206cdd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a314cfa7-33db-470e-a687-d161f102b2ac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc5c304-78cc-4bbf-ab16-e81d8efd90de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccb2e39-9414-4511-bd5d-b1fc5eb7699b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9900f8f2-5002-4551-9fcf-46822f65a5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b6f4dd-c3f7-4a44-886c-39a553db71c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd94d2d-dd23-4e42-93e4-00db3587910b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dce51df-9256-407f-bf1c-ff7423cf3281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067ed06b-f810-4dfe-b2da-d05bb4b15f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2436a8d-61de-4852-92f6-69858bc52a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05531ac-dc76-4c33-a5ef-76700292a492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eb1297-ee50-4756-a501-11bf908ea7a4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3aa41b-7e5c-449f-9edb-8c3ac0853ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ca0c08-c920-4748-b7ec-5d8a595eff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d63252-dc52-4dd0-945a-b6d99483b48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11595631-801e-44b8-af4a-de06273bf972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7032b1-8b7e-455b-8265-f7c79be7bf5f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985586a6-3fca-4335-b822-785c4cff85eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e567f9d-327a-4fe2-9ad3-21f594424ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4361009f-9c5b-405b-8aa0-4f73c26397fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1bece4-9bf8-4613-9a49-236fc9bdab11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9df584-de0a-448e-83c5-aa1d73d07960",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685dca4f-b2aa-4bcd-aee3-e5287e2c791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9491cdbf-fe42-49a9-bee9-7b8da5f0f7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4495951b-7fde-4d4a-9a64-bc64ccb636c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0ec15f-cced-4387-9442-6cbd65458bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d492075-2f62-488c-8979-b9db6f4bf158",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732f48d8-4388-4d64-8bf9-2acf067d5b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f2cfc0-bd82-4443-9101-62ccff5d4dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe729e17-b304-4963-8374-c558e00e1444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd80f6f8-b0a7-4a30-9a17-290ce7f0b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d5e24d-c28f-4644-bdce-59829a7397d7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4684dabd-d504-464e-87d5-1b03b026fea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0302492d-f73d-43f8-a3b5-d2cab235a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86622be8-1233-461b-93e6-6daadb420afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a85a422-6248-4b8a-bbd9-f9288c70029c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220db737-f8cb-4f58-be14-c03be143bc86",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf34fd4-c9ff-4ad3-ab0a-636e69b28297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba90d86-8676-44e1-a198-04f053419890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242b6ef3-1783-4458-afb4-5f77215baa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d3bce0-ae1b-4b1d-a566-4d97d93eca4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd43548-da6e-41ab-a572-88be00669493",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dc1a5a-f7e6-499f-a72e-e1cf9ca8bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91f5d59-99f8-4233-bbe9-35d78d2a48de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c4da82-e986-400f-8006-1079b5f1bbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a4da31-d376-43bf-bd54-21a102206f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbb5555-97db-4f7e-841f-237a8a9e2f38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b272a33-a2ca-46e9-b543-c6e175af6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f729a53-ebb2-4ff2-b46d-c261899c9afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3296d1-7976-474f-8f71-bc72856cca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4437b943-e97d-4f37-9eff-31acf74652f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf0579-61f7-4fe5-8416-cac0e5548c1e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40921bb8-fe42-4c74-910c-e90496c3a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98263a3a-1b68-4291-8c63-974332670a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e74a2-cac1-4dd3-a804-4c85295867fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc61437-ed63-4687-bb6c-b0ac0ad3ec5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa5070bb-92f9-4c78-9ef9-32145ddeb9c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "325a8322-1cb6-4ff3-b500-8c4e554149b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43963c3-e34f-41fd-9015-4f6e82a7fd16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b2d030-9d00-4e4b-9b61-deb72d9e4ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396f6b41-4a72-483c-b236-5d888b455089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed1c269a-66ae-438d-baf8-c8b17350cb81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4731db63-2906-4f05-8694-6894ea756bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec992eac-7631-4d91-8924-cb3a6575dd64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb09e112-053e-445f-84cb-68858b514fa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d193063-79c2-46f1-a096-9c5fbde17458"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88a474e0-1212-4beb-a0ba-fa8ca20f801f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "573d7e48-a198-43bc-860a-085aeb1e1149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "371ff2f3-5dba-471d-b9a9-da0ac24cd28a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddcd0dae-6007-4b6a-ada4-376c958a5921"
            }
          }
        ]
      },
      {
        "id": "7be3dd42-634c-46b3-85c3-d1de42b200c8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a62c8c0a-f474-4a27-b410-608a43e39233",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a1ef6b4-2d40-47f0-a35b-ae4c27750a91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1ffb79a-dbaf-4675-bce4-afe1f7a46995",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68f422-ae3c-4e7f-a1a4-9b1a2da3a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc841d69-e210-4282-9fa4-d71d7d96c4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5016d60f-a309-4352-9f0e-0ebd9aa028c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbb95cb-c747-4c05-b5df-41e7f699af7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587f89d-fbf7-4866-ae32-5f0f42d509ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e290f81-ee9f-44e1-821d-70b0ec5860e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9f37aa-0fef-4ea1-bd7d-2d2d803506bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e38094-3991-4834-a12e-e80bfaae9dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ae848c-2d95-4119-abb7-f3f439b453ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c96e607-57b3-42f5-b276-61b1b772a570",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742a8ab5-6a59-402c-9043-3b9bf0809b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66518ffa-2dd9-462e-8080-69d7e72c72b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6b03cf-215f-42e3-936c-82944d5b4a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f61c5d8-adda-4fdc-9cb4-9e3ba5de41ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c0684a-8b8a-45bd-b940-858cc960323b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4180e19-fc84-4740-8849-00beee129d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28252c91-0114-487a-a9e7-e9c87831c5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d6083d-8cc4-44e8-90e2-45c769e7b7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ec3e23-ea7f-4baa-8389-1339ff5d5ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3cc8a0-6c83-4870-9b69-ea6162c47b63",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdea10f8-cf17-48f1-be0c-86e49dedc554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763cf4ca-d4c4-4cd6-86b1-5c52a8dcb2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473cf0c2-e6b0-4cc3-88fc-e7622f1eff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "194b978b-f4a5-4e84-9410-1e617109bef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f310caa-db45-4100-9ba8-ef08db9fa95a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb5e0f7-28cf-4e83-975a-9dbe258fbb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd0ca58-32ea-41fb-886e-f84ebd5742b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd46b8e-bb49-4f0e-8dcb-d065c446ad67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb88957-da6e-4c8e-a43e-cb28d77df13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4363bf-9909-4f57-a4e8-9526dd403298",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c369b64-6fef-4036-b15d-d9ce5389f373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0025fc0b-9a06-48fb-b2b1-e4162135dc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c909462-1e24-4087-bad2-bca841acd21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df1ced6-6669-41f0-b860-7e9cfa97ff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92111931-5e09-4d2d-9248-452126c26524",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f32b7-927e-4153-9cab-3f4a80200f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2c3952-4b96-44e0-b194-6ae9233c2b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d622f69b-2e4a-4c46-9539-bf087497504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2b25a6-dc45-4e14-8e27-da7d35886878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd3a7c0-4467-44a8-8902-d0a035f94848",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d186c66f-7226-4f73-82e2-57dad68797ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c84695-b22f-46dc-9ff2-d98ddbd83f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c396d794-280d-4647-b2af-dffaeb780884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0eda86-ab93-4eef-b570-78cd15b52cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d7f56d-eb60-4942-ad5d-d6f47f087ae9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49705466-5ec3-41de-8ff6-65db6937d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba005c40-da96-41ae-a8a2-db3327c8ba2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dd90d3-daa8-4085-b6a4-2adab2863867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd503e5-9848-46ef-a010-579df8612120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2912e5-c361-4d66-91c0-53e161b7fc05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c4b5b-ad37-4acd-a751-729191e0c62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bb0b90-a13d-476a-97bd-9cd8240547ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64e9587-4695-4e78-894c-d647eb44f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5649dcd3-9289-44f5-afa0-5f70a154627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11874d8-0f13-4d6e-89af-9c1a596b6868",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11d19df-1611-4f25-a399-e37abdad8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c151a401-de7b-4da3-93c1-6ef5da4a42c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9758e460-4286-4b1a-a5b0-d1ac84a77b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b69791a2-86c8-4f76-9196-e73e547a8fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae84f1d7-ece8-4803-a80b-a6340d42111c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ad0bb0-c3e1-40fa-8314-9f049c0cb0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89df998-370e-4015-a81c-3b184f664f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9d7704-82e0-4397-9e45-c5fd65f929bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "892327dd-f02b-409c-aa64-1a5a5803177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de8bc1-bc5f-48f7-a972-d6393d6b9175",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9680e086-cce2-4264-875c-a35afc34f67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf63dfbc-c0f9-4035-848d-55ee71576e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7be63c4-a5e7-497b-a4da-7a9756e5da34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b32367a-0c14-4213-9318-c560a22abf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91a50bd-5e8a-4c82-8ca2-aa09ea612828",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0868b3a3-cfb2-44c9-8a40-c71ffcf08ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12334da5-1a3d-4a22-bf93-2d9af931ffe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361b9aac-ecda-45fb-a477-a06c97a0f9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe662a0-56f0-4d45-aa65-4cf7ce11c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c9ea6a-ea43-4304-9658-4a6b9a7aeb69",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a0e4a-1e5a-43d5-b3cc-a99b1b780218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08124120-97f3-43cc-a1c0-fa9286ed756e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ba8c9-0e7b-4eed-b2b1-0d82383cfc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3563bced-5942-418b-beac-6bc62dc0c96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96acf222-33a9-40d5-8483-627e9b46ff34",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770af86-df77-49d1-876d-889e1b9e28f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40e0b0a-92cd-4f0a-8c40-e53e66c6c30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674e22c3-104a-4cc0-bf48-6c4bbf37a119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a51c7d-def6-4d42-a6fe-820cd0c95935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ca7ff4-cee0-4bad-baf6-d3d791ba84aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64ee1e4-7639-4124-919c-b0f75981b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc6c8e-11df-49d4-890b-254dc2c773f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6da417-d401-4ae7-9850-1927b789c16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "932b5514-69d1-4329-85c4-caf299a05f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b5648e-7745-41af-af1e-7c27b6f4113e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa9021c-2c2e-4e90-b4a5-6b56b0fed609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff16211a-af40-4995-b437-28f01c634771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17865ef3-29f6-46c1-bcc7-67f005b4152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac7cd59-88ca-47cc-9fdb-e9bac88b6622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef03cc-9890-4a57-9095-10ffc9f37dad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8767e0b0-8ab4-41c7-a126-ba1bec3cd845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a5e6b0-db35-4a29-93ed-d58b9f846046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b70c2f-c191-4d19-8ed0-1ae1ad859061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9183e13-3136-4065-9e62-fe13dd61ef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d76e6cd-de9e-405f-8c3b-7234354cb4f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ca83b4-b8d4-4c9c-ac9e-297632af99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b417c044-9a5a-48d5-a771-5232c883fd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489fdccd-4d04-4b09-9c9b-ce98f6519820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0707c1-2137-4418-95bd-54932a0f660d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b33e04-4ba8-4347-82be-3e4a6843568e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b43f9d-bdf2-4a3a-b364-ba26e1a6e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d53a88f-73e0-423d-af88-d4b552066751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece3239e-eb30-490f-85c1-725c163d8897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e413cf-a467-4449-99c1-d042adc1aedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d40733-0d27-4332-aeb4-4289a868ec81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cdc271-b934-4ac7-847a-882551e95480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203f6b0c-5c9a-4441-9784-bccaf0a63a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3aceb2-c728-44ad-adc2-240196345d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0f71cc-be10-4943-b3f3-cfbba053a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a51ae8-6faf-4eaf-8fe1-255cf7757938",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f745a-9bc8-407d-a61b-812238ef99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa85292-1f94-47d1-8dc8-dcd774a8ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3cd518-7f4f-4a08-8fc5-c7b901e27012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a4be23-2295-49fb-9e47-dcbad2021336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5564d6c1-5c91-4e46-ae65-598f22d04162",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e940f12-87bd-4910-a417-91fdb3148fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2aca0c-7873-4a66-9bf3-7817f419247f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c2b6c-7925-40d6-8015-ecbd53f708b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b524812-0ab9-4a5f-83f3-e0616ba4df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a89904e-969f-4b08-b2df-1ed548be977a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfe4282-b794-483e-a5c0-35dda2caf77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aae1ab8-e1ad-4a2e-845b-dcabe01d712b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea31502-3e77-4346-8fbb-c5682d464359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ef7eec-436a-41d8-b751-7faa11a8bc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabd044e-5dba-4ae7-b260-4c4b3d5c1a2e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f6ef86-c32a-41b0-984c-f661a1d8a870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a454ab1b-4e39-4736-aaf6-f4678cb16416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b749d2-999f-4589-9e0c-c3705024475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f59a2b-2f70-4c91-a13f-8b3d62757129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b8d19e-a14b-4d47-94e1-df5de8ce0fdb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f56d9c6-da40-4c36-aafa-e8b8f95bb5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f309aa-4a65-40a0-a7b2-e3561b11f40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ece619-d4e8-4b96-9f41-419bbeaada0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce2cde-042c-466d-9184-026d735d973f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d60271-d6de-4041-aef4-479dbfc675f6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6521c2-13b8-4638-ad56-fb7369f883a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01297dde-3704-4223-8482-2fed74a2928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eb7890-8492-4595-af81-d6ea226569e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43320b7e-f9a9-46ca-8b9b-251f917b74d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e80d0a-4e16-40dc-bff7-fd5153e6dd09",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b5e8de-cbbc-43e2-90ad-57453d23be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d9b198-e9e2-473b-9a5c-cffe6356856e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ae9f5-28b5-40b7-a29b-a6ed0539664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbec73ff-544d-4979-ae82-4c03007788f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4cf51c-21e0-4cf5-a02e-35b57fb5e08f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e98de-fe28-44f9-8952-2f226cbb1711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3f625c-7cde-485c-bf07-54dddbc33775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfecd8b5-e669-4b12-863d-66733dc860fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f13d12e-5522-4e1e-9422-fe96c1ea670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d186a88c-01ea-4a24-9b80-be14405d9033",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60a251-6c81-49b3-9015-4358c5998fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c761cde-3f72-45c9-9861-6b6ba5e8bf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b5fa36-f5b0-446a-8aea-0e41f7906d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab679e77-2791-4871-9d3e-7111a1d712e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ad874d-de5e-4a92-9f2b-3c7e2d295b61",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ab0936-d1e3-4400-86c9-d4b550eecb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b07aae-a076-45fb-93fd-bc78964d0990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515d9bc0-f152-478c-89a7-a65555d0d4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7310b70a-6539-4d54-a4c4-49397561eb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca45c676-525e-498c-b451-50f5e318b2f7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f03ef5-3530-4398-a9e7-ca0ca0c0c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2882a970-e233-47ce-a57d-58d5d327a8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf69c228-4400-418d-bda0-1b5558cd5ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8b1f6c-5bcf-4501-b5c4-b150d6806bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d197b056-528a-4e91-bc26-10fbf0b0e051",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49426ab2-f24b-41b4-9da5-eee7364a8a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb04f24-c159-426a-978d-5d908bedbc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb493c48-5bb4-4aea-a71b-aa948f6232e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0736b0-4ba5-4689-9df0-fac5e40a9757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e674b34-6c80-44dc-bf65-bff53d7d54a8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bef1de-8850-4616-a4e5-08ebb840077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0032d5b0-8d16-4ef9-8d48-2e06beaa3d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463b7b33-68c7-42c3-8c27-713f156676d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afdfe2ee-4367-491e-b114-35e3f2f79323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efa6a55-73a9-439b-b8fb-c1514b2c9eed",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ad0152-3105-4656-b84b-7aced11447cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf9d004-09ed-4a89-9099-4ca91a9cc548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2462d455-dc04-4761-8fe1-6225ddfc17ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "017785be-5546-422c-919a-2ded5f5e116d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1aa1a25f-e070-42ca-a242-09cdfccc697a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba66c720-5bac-478b-baed-c69beec9fae0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6e4c4-240d-48f2-b6e7-6ca1eed46323",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eac4f098-ffc8-4dbf-88e7-9b9eb40cf3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7a138d-31b1-479f-a5f2-c799a64d169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0759c2c2-7192-4e9e-9f22-d8ce3b57c829"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8497d12-32df-469a-8914-e02ceb20c58c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3333c4b-e1a5-4a3a-a3b5-19d9f3924f52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50ad8444-0921-4649-af3b-d7cc1e9fb52d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1543f8df-012a-4557-9161-d276ab7748d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60290b98-fe16-45c3-bbaa-6b75ceac8b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "469cda72-8ede-4cea-9181-84b6a31d667b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3dcdfd1-cbb5-48f3-acc2-974923c4847f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb6841cf-88bc-4fe7-9eb7-e1d832d3e586"
            }
          }
        ]
      },
      {
        "id": "662602e8-6fc9-4f24-a014-91e017233c12",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c8d5e244-4b8d-4ff8-9150-d458f3d86f29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a21155a6-c0e0-4f0d-a290-1e8b3a8c32cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "827be927-8323-4321-8d88-bae5f640da0e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726ad4d-79c9-4725-a153-9b26ed81d922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153d1a58-c362-40ba-beb2-7625f0ced8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8216add8-ceba-4c4a-ac56-6242b704fbac",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49c5f68-0e95-4adb-babc-9ec8c8c5065b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03ab4cb-57bd-4370-906d-72ca5b39374f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2bc1d2-e5be-4666-b7f6-60f54eb76dbe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2b90b9-7d6a-4ea4-bca2-71a86cf7211b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5ba38f-a4e9-4bc3-9335-7b51bc1d26c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497f4d77-2670-46a6-bb85-106b46191e26",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e37ebb-8913-4754-bba4-479da15d4bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ecd25-7fba-41b1-986a-3bd7a2021941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47372eaa-0aa4-46fb-becc-4d4e08de9f9d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43df088-78d5-4dd2-8bf0-936c560298c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b8dd68-c02d-4f96-9bab-35bdc4c32f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5d26dd-3e63-4ba7-b130-751d976416a1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e66314-025b-4a3f-8cde-e28dc3d568d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779ad308-2c9c-43f3-8359-2cf5881d997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe11fa1-0579-434e-b818-251c042d3482",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131d41d-a366-4201-882b-94bb9f105904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18028648-91a8-463a-9c95-0b382514ae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72661bc8-ed92-40e5-be89-e7a8e54165fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439aabe2-a9f1-4841-bceb-624cdf8cf8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf44210-4b8d-4be3-b8ee-d0109473a9d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bb6ae8-31ee-4432-8d5a-a15855f35cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604bfa76-4090-4416-a5af-a5ce9c2179a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd07d73-98f0-4641-a58a-72ccb96b988b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cd9aff-9f65-4615-afdc-4e3cb9059a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4a23b0-0905-475c-89c2-4463e51c96a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577477ab-96ee-4741-9e5a-f2ba2f742e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c22fd8a-5bb2-4bde-8823-9472166c8a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da8ee57-f428-4486-93f0-6dac919f13c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbe1cf1-3d71-4df5-bcf3-591ebad8daec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca4abe-a55e-4a5a-b8b9-d06d46974530",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde6282-f24c-4324-a509-1c8c6485a799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db13593e-743c-4009-9f11-5ff3c72b9e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e965ef9-963c-425a-aeef-9549f8bae575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5226bee1-30be-4aa0-b2bf-0783252a8cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473a869b-4e88-4855-9546-7d7d19577b55",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f096a9c-93f7-4684-b537-82d09e7dbe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2682a7b-e46f-4e75-a13e-44290485288a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffe5027-5c60-45a5-ba16-2d20ddb2bb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f137b78a-a3a6-44ff-831c-1c1ddbd18688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc49782a-1fa6-4846-8109-b7b4913b1cfd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a24a74-1bd1-4088-9fe6-4ae7035d2189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b7855a-1b70-4a65-b3c6-2d80c2cd2f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2283f582-a190-47db-adbc-941ec5ffd4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f379e92-ec75-4eee-83c8-068cc5b18942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e185f1c-aa1f-41e8-ac48-5406367b8e06",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cdd44b-93e1-41c5-9f00-8b2aad86776f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9b23cf-ce52-4eb4-a900-4c125a7594a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca0567-5d1c-4248-b035-42d782ae5f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a3d2b8-b899-477c-ab14-001a2af27f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd992cf-3bf9-4656-866d-cdfe8bba8bb0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e069c9c4-7fed-433d-b14c-bacdb9f802b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac36f91-2f57-412b-bcc0-407e5936764b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e8b7ac-fcd8-4932-a76e-b266552a38b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87601dbd-d273-47d5-976a-2e8f11f84f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf8a2d6-a7c5-4442-9cb2-985230adf5da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372770c7-f087-4fb7-a98c-e593323d0c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1864ff9a-1d84-4f5f-abad-2de58f81ecd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90558daf-e412-4ade-8fc2-ed005d3407b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5ed3d3-55be-4a74-a5fa-dcc4f4b7a918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb266c-f3ff-478a-a7bd-4f83bbc20425",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8838da6e-5d96-4ff8-87b4-29eaf68dee85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc20a29-ed0d-485d-9972-c89676c6674d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d6be08-08d6-4481-9c14-4670a62bf0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2c281b-0425-42e2-b242-7f0dbd6f834c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875b0483-7bf2-4c01-b815-8899817d754e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324986ce-e70e-4812-9981-2f893a5801d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8379d3-4ebd-41a0-a8ff-3ea86691159b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d5498-1553-4f4f-b4f3-4bf27619a1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d6124e-293a-4edb-8623-646b219be7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcbcbec-7b1d-45bd-b236-7decf157b7d2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d757e-2d4d-4503-80ca-ec76e26e3579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1991e900-c3f7-4809-a0a5-9b4382dcf9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a730bf4-44a6-4b7a-9ed9-5888adaf29f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1632317d-bc60-4ebc-b347-824f9c60caea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b067ba-20a3-49f6-85f0-71ddfaacb57f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976369f7-e677-442d-98ac-dc84a900d3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2492b98-533e-4b9b-a863-3f66b8d6534c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b7634d-5da7-4916-a431-325e39904f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cad6066-d7b2-48c0-a242-3bd862ebaff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e084d1a7-db98-42d3-bd9f-70211bb0e041",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165a5713-f2ec-41b7-9d94-1a54ca2ac9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b8346-89a1-40e8-8d85-27ee3bdf7c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86461f5a-4450-4203-a6bd-3ec8817ea4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb452b6e-5dac-4f9f-bd12-3252e6df19f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4c39f1-2d5e-4ecb-a46d-d798270c7b64",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f69c84e-97c8-4f40-96b5-bca7a72a2aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40993021-e9f0-43d8-b03b-acca2f11e413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b81d637-0d15-4e4c-b43c-f39fc8b302a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9df25b-6f48-474b-bb29-2a12bc2f5a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81790ff-7a7b-4d42-bf3f-9e2c829c424f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287458fe-8dd5-48f7-940c-ea6c5f9d596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0eafdb6-88dc-4f36-899e-eaf909c703e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9b5230-d44c-4b81-8e5a-f2d85c5065de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af2612-f7ca-4e83-99b5-ee41a95f1f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea0010f-bf18-401b-9e61-a763f515517b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609e3886-b847-421d-9456-9271d9f24ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb036a2b-1a85-41a9-a4e9-0197cab2e944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca31e43-896d-4335-b59f-614a24de35ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981911e4-02fa-4fc5-b052-ed3a87cf8b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a12bed-330e-4ecb-880b-11a1ec8573ae",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d7a0bd-f337-4a05-88fa-162d24ef171b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2667ea-09d0-4d33-989e-fd5cb879d37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a4354d-e084-47d2-a278-dd42ef9b74f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff8a452-0726-4afc-be37-8e5eb9eb8829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73e115d-d3b4-4747-ad89-77830eb1f031",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d592d3dd-d215-4c5b-b63c-ea24939bd871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "642dc880-d19b-4f6a-a3f0-99be1910c8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d888f4f-36a7-4501-8bfe-a574d833f40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30087adc-c161-4cc6-a588-bf190b01216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3923ce4b-424c-418d-8d5d-a4046fb3d65d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5493f7-49a2-49e2-a98e-8b3fb8d8980c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbe13c0-52c2-438a-9307-7d2a33e7e09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e9eca-d903-4ce0-9638-40bd71c07a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363c23e8-1759-4a86-9f84-8af6b7b51fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495cb2d1-7488-4c04-bc3f-df0588a5a2bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6758071-c57e-4251-955c-116fdd3d19c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f609f6b9-a1a5-48de-aad5-c50d7dfe3797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e367e4-871c-452d-8b86-8285c29a2b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344be670-b30e-498b-9496-7f8c5955c704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb326f7-9e63-4e25-a379-44febbca9eb7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60069271-cb4e-4f0c-aef0-b3a04d499f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34997f0-e396-48ed-8883-09aea4ba7a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449c565f-5b52-46c4-900e-6b9558e8ca31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa6d9b2-f164-407a-9fa2-04d7d8fb5141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ce3666-634a-4f0a-892e-d91d2cdb8577",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8944560-3514-4eeb-9208-c18d55245810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1efc95-371d-4f0b-911a-976734737ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f55910-5504-4030-b104-f6d80f23ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaddf5bf-f797-4412-99b0-171a8d94fd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f006777-a0f2-4462-af48-b4139eaf5dd9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39072b3-34db-4716-b03f-889b496a6efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9e36e1-a9e6-44eb-a7cd-1a62a903e923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12da5a5-4802-4c9b-b432-71c3e63d92f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151de6de-14e0-4824-a8d0-a7da75987148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35721b03-abaf-44c9-9834-53bb28203b35",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a71a1a-7468-4a24-a156-48844f157d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1f855b-5a7a-4094-80c3-55c76ba7489e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380ab431-4c92-42b9-9fa0-af7cfd9635c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a01c7aa-ce98-44bb-8291-4819372c7176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35148b1b-cecf-4af2-9ac9-bdeecc7ac81d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30288f-7810-4e7b-997a-d4052d480df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca1986c-bad0-469f-ae0d-5253583cb71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20cd61b-f313-4950-a2d5-b3f5f70cd2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1c25a9-0240-4f39-9279-be7f31524850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065b358a-5956-4f7f-9359-7402f195c724",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ad225-7c0a-4f15-884c-4fffa321d216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f5f182-d536-4c56-b025-92501f58ecc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604fdcc6-7c33-4d0f-b13e-5e6c42924270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089bee50-e607-4837-8310-43be53c0aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d478f86-858c-4e01-9af8-673fa1853f86",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080bd428-3a2b-4e42-8ca1-4508e6ecbc72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1531a4-c009-4e57-9be1-a11e21e94fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc09dca-8929-4a1d-bba9-702e5e96a179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22413b4f-331a-4c8b-8f0a-f53493bc36c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169526fa-e8c7-42d6-bf25-50d7a48f8248",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ec7cd-0b28-4a48-9d5f-8e19d556d77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb5f1fa-98da-4191-a621-c41554927f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df638ba9-7cd4-464f-92c8-a84670b79dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c903034c-8104-4c30-bf01-94cf5046e654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7df37d8-3ee3-4735-bda8-554e3e9843b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31afbd0d-c66e-490e-b166-1c2749ef4c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07abf1a-3175-4733-bd9c-e70192ac8b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb0f6db-d53c-4bd5-997d-a94f150d58ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41047279-4b91-4cd7-9475-0f4edfa6b0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17770d71-5b49-4500-bf9a-f9e7fbe331ce",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1fa72f-cf02-405a-b3c8-3c0193c152d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8099b76-b98c-4ae9-ad75-de3d6fe814da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2b6f02-5017-4600-868b-bb35abf5bba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0528cf0-62a3-4e83-8a95-69f70b9bd150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de880097-8516-40a8-bb75-ae14b7d16f5a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6382988-2927-4b73-b599-bcb156abf18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3a6e6e-1061-4f5a-b3f2-dd4712f44b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056a7b67-41f7-4df9-a134-423cb897321d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a787355-df20-4e9c-bafc-5749a070be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f5d405-1eef-4257-82fd-06dbc39d26ae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0a11c5-e333-4592-afc5-455d7671f0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aa49b4-c624-4f4e-9fc5-a8e8417cb3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46a6e88-2685-4020-888a-410eaf7de0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4a481-4e0f-49fa-9b1d-8cf2b81e0ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c37177-8d9c-4acb-9f3f-a854e5315d62",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc22cf89-1e12-4741-9af9-d0d372eda037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ce90bb-725d-4a7c-ab64-fa9944689c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4932735-084f-4dcf-a31d-3231219264d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14778b34-5ac8-4ddc-8dea-0baeb7b0ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa11577-d5bb-460f-9b8f-328f130b3a65",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cbc324-6e3c-4fac-b734-c54c7324f6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7059055b-c903-43cf-a3ff-93a4b677bf34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749f484e-feb0-4367-8bf1-78fa6eb9cefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890206cc-cfba-419e-944e-961e5ed87896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012d6c92-aa13-4997-acb4-220684fdb5d8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bbcb0-a436-41c1-9edd-bc89d7bb4c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b543caff-ed32-470b-96a5-cccd5302462b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0dd21-e4c5-4e4d-b920-ef6ebbf8dfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be616090-20a2-4143-a0d8-daf0609d96bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03409921-927f-4d64-9ea7-321767dd0e2c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6332f92-d44d-4ef9-b22b-688b29cf052c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a08083-6f94-4ab8-9705-4b7bf93d8761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998667c9-15b1-4a85-bab3-88a0b63848f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e2f4e3-1572-4830-87c1-652c07178d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69c624d-24b7-4736-83a3-225c1ad443cf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeae330-88f7-4b9e-817e-82daf436d59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440dc451-5700-4da4-a563-e067d8382cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758cb1f6-e982-40e2-a316-a2e928babdb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9535bb-583f-4665-a9ff-fa7fd389f199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9cceae-ae31-45bf-bba0-7f60199e374c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c410288b-1da6-4369-b7bd-e4f55720c960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b8857b-6bf0-47ed-b1f4-cb3c91f0f22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8a5677-985a-4b90-87e1-49b8dda9b83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16011a2-3bdc-4def-9c88-226fff3ba3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aba4da-a2c3-49d0-bb13-aa4358bc10a9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4e457c-96f3-4692-9e6f-a159d7c59299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14c1e52-4c8f-4ad6-bf85-26610cf5bb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d49b05-53d4-4125-a1c6-b0fbfd422e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba93e88-fa9b-41a9-940b-bf6b116983b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f35c6-cfd0-4a0d-a210-e295e7d67d4d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45083a9f-9743-49fa-a46f-3b74baddb4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71838755-cef3-44d1-829e-f5a540b6c3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6193d0-6fd4-4c0b-8a9f-2697902b9900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8659af6b-4de9-456b-930e-ccaebff6b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46903d-31e6-4431-89f3-17a56baad949",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e0e59b-ba06-4cf3-a792-2ccbd134a049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50ebf5b-c6ce-4d1d-a61d-18de36d560d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c34548b-842e-4f77-986a-2725bd1eb7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68db8f61-007b-4c75-92fc-3d2ef6ea3e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c3289b-cc5f-4fbe-9356-2791f1b20ba3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e5fe65-a395-4e3e-a0b6-3eab0a41c595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb90eb7f-bd18-442b-a6d1-57b030ad1c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacbdb1d-df6e-43f9-89bf-f752d04e395b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b576fe7-fa88-4179-959a-776e14d3774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2dd119-c55b-42b4-ad27-0ced836a8579",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c21447-b7cb-4921-aaef-cb1f73d31cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff57450-662f-425e-8030-c46440a983e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1981879-83c0-45f9-8bcc-62b277c177ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdda779f-d7e1-4782-8af0-20520cba1c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15729de0-31e8-4ff5-8d3e-acbd0b362ba6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6a91ee-2387-47b0-aaea-a9c12c2030aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c24b4c2-768d-4f65-8645-70df9e4c643d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35761de3-5dd5-4ef4-909f-59460f58008a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fe5e96-4915-401e-8cc0-c5d2298102bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6577b68f-23b8-4d06-a402-54b63e95b7d7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee216985-4d1b-40e4-9db7-516dae28285c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d7597a-904b-4723-a04a-0cadfbf6f78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb4486-fa99-4979-a0ef-7b391729cd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d97e643-7ea3-4791-b309-1f8632537997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dddf2ec-a0bf-41cc-adf3-d87d28bffe29",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de37cf9-5a4b-4f9c-935d-22a578adc3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28caacf-dcb2-4c4f-98b4-ec8a3892f15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2342b5-f09a-4a6d-85ea-ff590969da68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef48ad4-33bb-48c1-9c9e-6cfce60bafa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ca6c0-7d69-4962-935a-d37eda685ea9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea246124-5771-42a3-8b2a-c7c2d9a2277d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c167b4ef-f491-44d2-9efa-5f253803a0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb608e-94d7-41af-87ad-e06eca0a4663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7b19df-c786-41f9-aecd-d9f46cbaeef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fdbabd-81af-4730-a4a1-865eb357b5d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b87398b-fac6-430b-91c8-7025720637d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffaafe1-68cc-412a-a212-a349e2b5e74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a3086d-86af-4a59-9a8d-841f5c66fe87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c079f6f-9727-4714-9b87-9f496707e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f238f4-d0fa-462f-95c1-66078aeb4ed9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4e9324-6e7a-4e26-bd4c-0ac9db3e8625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b5b147-f272-43ce-99ae-38713c6c3363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5f6423-e6d6-4d8e-b026-575c3f1f1cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a441fb-d1bc-4f6d-a126-4a209f72047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cee943c-0af3-4f97-9999-e0af24d1c76c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fceacc-e20d-4328-baee-07f5442747f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2205c869-90c8-46cf-b539-04b8892d127f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39845d5a-8b12-49bc-be2c-00b0519c7648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2acd20-c4c3-4d20-808d-12bae814fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6452e6c9-e333-46f8-b83d-234046ad1fde",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e05a55-b852-4f0c-8529-bc075fcc44d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9902b27-21e1-49e4-a814-b370a624f3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f011928e-a3ec-428c-abbc-1e546723f2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea1cdf9-a879-4618-823e-235486dd4018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12b7683-c5b7-4891-a94d-fa6f2ed9e9fb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162a6839-3d85-4d41-8b3a-00a17670826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7ddbea-c1a2-4f74-8745-89d37b514d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8f1bef-031f-45ab-936c-1b45f6d2981e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7a32a6-2689-4cc1-a8e9-b07a4cc719d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26a0c0f-d21d-461e-a4ac-1fa76ceaafd8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5669fa66-e590-4807-bec1-10b9576350a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3865465c-6a2d-4144-afd0-7dabdf1de27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac887742-648d-49b4-bf98-91fff70e1606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08aa3266-111d-4039-8ab5-47a413809157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e689b4af-f6e2-4695-beb9-a870a6d25e5d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de31d865-ae18-437b-9915-9c563ae290ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be93789d-7011-4f4e-9a9a-2bf62018ae9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636f02ca-aba7-4f89-8c71-e4b343b621cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64f52ec-f0e3-4b7c-b48c-26dd5cc82efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5312f9f0-f3fd-4b26-a70d-96195f18c5aa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52308434-f334-4505-b1de-26f114fe0402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8b59ed-322d-4b2f-881c-e7b437ca90eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c33dff5-777e-4156-9a07-1d0ee1137026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0829b67c-f53c-492a-b8a3-1117775f4f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f020cad-eb7b-4948-8d28-60d49ebf89bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f96167-1154-4d90-af6d-27745dc09718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838217e1-dd1e-4362-bf21-d0514786f508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d878af4d-40af-4e3a-8621-e101f2805d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2a9ddf-c154-49d2-b57b-8f1fe2a5e7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c3eb22-b13f-4757-8957-7c51a160e894",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11897b24-782f-4016-ab4f-a519b0614763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80285829-3408-4dc9-8e66-bb994c4aab00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc68f2b-a5c1-48dc-90d9-fab3d9150df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00213955-07a2-4f62-a13f-5eb40340992e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63800dcb-a7c1-48a6-acd0-3f9802e132b7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a658f3a-702c-4058-8abd-7d307873e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63501df-250f-4be5-a5bf-130e1f333a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783500a4-2bd6-4067-86bb-d15674bc442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2cf0dd-5651-40f5-b7fc-aa98e68aef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e3297-0101-4695-98aa-8db5b92f7adb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf57f06-d22e-4eb3-9038-a2aee21a503c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be141123-ee62-490b-a4fc-fc95b93c8f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb3a3b3-0dc3-4efa-af97-e5a6805c9b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1872abcb-1f48-4d2e-9c01-6188d0f84c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b4d4b7-1a63-42f5-a020-92b2d0ce3422",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686778be-cb8f-4894-81b3-c9cf10f14c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02e447f-47ed-42b7-9493-def7354b5ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d391f86d-9f54-4ad9-9160-878e108ce10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed7b5eb-8420-49c6-936f-3afe4dffa0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbab4e39-aae0-4916-afc9-824b227266c3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635de4b1-c48b-4dba-b59a-a612401d2e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5599930c-2522-4fd9-aa56-d03f3dec2667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eb8573-081f-40ea-94ec-ac64df06fa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47664f61-d3b4-4ed5-b7ba-92866c3407a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8cd8a3-9c60-4ae0-bfe5-72571213f80f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4816aec3-2ee6-4189-a96d-5f8b9e9ae01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b013e9f3-ff62-4a77-82f5-0ce373b02257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c96e80d-9c8f-4db3-ad84-2b2cac6e8dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a063e93b-3131-42d7-b66b-3c011733fe73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb37959-2072-43a7-8baf-38f31eae29e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3192b5cd-938e-4496-b38b-827bce4e4b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7bec0a-9687-4dc0-8e04-a07c3d97fe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b4adf8-783c-4a7f-ac3b-52554c9d66cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d11fbc-4d05-4133-b332-b08f9fd6976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847cf94f-1afb-49ba-abfd-d948701c08e1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c79f69-e647-423e-b743-53e1b8b4d056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7792a529-a520-4f88-87c3-a3e51baf65a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561f74a1-fb5e-4e04-97c3-3e552d6093d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e25483b-9417-4f7c-ba67-fee4c8b97b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3fdc6-eb7f-4b40-a092-a10d2119d71f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5964eb7d-886d-4b1b-adbc-75bdf103654f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8ac66c-1279-412c-b7b5-f9f41c64e395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bb304b-a00c-47d1-a34e-3dd540b477a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d39d8a-1bb5-43e2-94cf-659e533aaedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6805b70-96ce-4aa3-87a5-8085216f396f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351ac3c9-3adf-44bf-9cda-d9b9fa831ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e398d5ba-3519-4963-af6b-782c9c6c6d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87146509-1655-4997-8ce9-06c3de9ff2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b6a2d1-1ccf-4787-9146-857aeef3f436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0367db50-783f-4358-ba6d-5c5de4b484b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b5abe-c0a2-4dc0-8e12-a4783b261906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a19dd59-af87-443c-9213-4d861e29b17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232ef39-adbe-4886-ae27-346db00d2e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f359e8-ad5d-47f3-bd7b-548c6f10856a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acae055b-164c-4d2b-a075-a5a5bab7d895",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7585823a-25a2-495f-b7e5-d608dbc2536c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde7d09b-b4d4-49a0-979d-b74fd66edb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1299371e-6e1f-4d08-b59a-44e262c7f4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b870667-fa01-4d95-9770-8b5515e9a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2e3a10-312a-4c21-bb9b-a8c870b127e2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59c07c2-7d29-43e5-a42a-3155cdaa1ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816e9497-1c99-4e63-95e8-a7bf8506bcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd51501-8ead-49f5-a13c-f4176be6d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789fef56-f915-46fd-a9ab-835b3de86935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5f03d4-6125-443b-a125-4c3ec33edccf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7559470-7be4-4f7d-a444-1c4b3f4aeafd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6fe2c3-ebb0-41d8-a0d0-c8f3d43424a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b1a7b-4f08-499c-9b11-30b347b2741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e98ddd0-38e0-4802-88d8-f483cddb3134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a43240-bc22-4a56-968d-8f84e991a4b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7f84a-bef4-41da-aa37-588b265746bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ddce70-5fbd-4319-a147-cf8a15edf268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f65459-b8e2-4a34-afee-7ea4818eae43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34599ebb-f2bf-4809-b947-b4d93f0d6f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5678193e-96f8-41b2-9fe0-f3f8bba27d82",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0367c402-4906-483e-8541-43a6eef552bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2cab21-52ff-4364-b941-318222cd54f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed6e9fc-9378-40db-912a-23dfae5ba1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75e5f8a-dd4d-454f-a24b-985c6d4bc48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e924037-51d0-4a50-a9f2-3d10eb5f4859",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348bf346-0d90-44f7-b65e-2cafb587e134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fff4e98-9137-4c67-a850-3d915a10d642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b5a9bc-4286-45bd-b486-c5a04eb7e701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cd99f9-3a00-4f09-8d29-9ef3a84c4af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b1d59-f2c0-4e4d-8015-91a961c4ac40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a844d0-09f3-4378-bfe7-dc9ab3c122e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570eadd0-562b-49e9-b6ef-672ef96580af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcde7c0c-5804-47c5-918b-23d46d81f901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcf49ca-b6ed-487c-94b5-3134f76b9be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16cc625-7a51-4754-b78f-760ddc26a2ad",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e988ad16-315a-42db-b8cf-7dc5a54e0045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451d6961-e2f2-4208-a471-ea3673136f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eca8e3-6a35-46bf-90dc-1921300cb059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0af06a5-88fa-4001-bea9-00ecb8a98d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cf7909-7ec9-41bc-9f7c-913d956c1586",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc45cbc-20dd-4711-8876-158fe75439f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2be721-863b-4ac7-ae39-98f3a253cb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db28d9-e336-4189-8458-b002fe9c42ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec03aaed-bfd5-4c06-8f96-1cc6ab978eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448171c1-1a22-4e74-b9c3-959f43a66426",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c4d095-0fcb-4be9-a191-0a80b574fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b4351b-974a-4963-8442-0f2cde50a52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c3d27-3dd8-41e6-be2f-b78c4ba2dd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d18094-aa82-4997-bef0-6ddc314efcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d0ab62-ed50-424c-b063-48004bfa8924",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058dbc3c-d3d3-42b1-bec7-45f430213deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b348634-006c-4c6d-9c95-b8341d08a96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cc7eb4-f70b-476b-940d-179c2dea0de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1c84d9-8396-4f37-9559-fe56a8f1dada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d89165-058c-4faa-bb9a-af5911b1da7b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e56d316-9d24-49df-a7e8-e3f30392c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4d9045-39a4-4e2f-a79a-c222529aef6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9cced9-65cf-44fa-b808-c9100ff0af36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899939d8-f4fd-4a98-92c3-153ca5dcbec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a5705-9a2e-4837-be6c-064c01bf8ad6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ad9427-c6d2-4cec-9c37-c1d250d95d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072515c0-7c96-48f5-aab6-6f8deb05aecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b61d3e-94bd-45b6-9c75-dda9809d8c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0560cf2-238e-4b26-9658-9a4ace4c66a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de5df7b-6a34-4058-8300-1244b74a0433",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf673605-0af3-44fc-95d4-729bab67fdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e8b698-1f4f-4d5b-aebf-07aa50b5ebfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b4c15-f82a-4a40-ab3d-956f11bc1241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ef887c-fa5f-42a8-b96f-ba22ea47db06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c9a039-c099-4e7e-8a83-3aec68d43694",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab887c9-6b21-4e67-9963-5458f8628415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb52c45-1fdb-4215-9d79-6f3bb4914470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57195f7-151d-43ea-bcb0-0b6c0289da52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b4a9b1-3ce5-495b-88ec-a395187d94a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f20ef6-13e2-4260-ba4e-b55a94370340",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eec227d-1276-4c58-a13e-4ed2055f3a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03843ed3-0ce3-4cab-a2e1-c9917a3aea0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216303a6-d0ec-4c22-8821-f03b39c12483",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57edf18-ab67-4e88-9d16-0f904e2b8d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88779b29-f212-4efe-b85d-53b1e76bd5a7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52671268-776b-429f-a96c-39ed3d534dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29fbb65-74ba-4970-84c1-45a65ffdc1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d7b127-ac22-4f2d-872a-e945b8166a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea97740-7c4f-4cef-b733-8957c212468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ec5c51-d11a-410d-949f-2d429743ba40",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73051371-5c1a-4324-babd-f344f8692be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a553281-61ed-4618-b88c-c9791bbb4d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e654678-f3d8-4b7a-a594-b103844d6013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dd38d6-53c2-49b0-b9dd-373c146a834e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817c9b73-0702-43c1-9813-70ec7d8fa80e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b59c625-b17c-46b9-9342-fdabdfe79740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce171e7f-db6c-4b01-8b3e-12339dfb05ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5c408-4fcd-456a-bb20-e34184afd0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea62a99-e5ab-4b5a-a28b-bfcc7e336426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d78739-4c68-4482-816d-ccb89e65f5ee",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30256eff-8f8b-474b-be27-ed78e2674502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d26de09-d379-4f96-aebc-cbbe2affed5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfe975-2b6b-41be-9141-d8617288ed47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a13832-265f-4905-a8e9-afff70984b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51314964-d12a-43f9-98ca-66713b254123",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426c1dec-f2f7-4808-8e84-0bb4cf7f917f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9590fb7a-1af0-466e-9d6b-e9df702a297e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9971f513-a6a5-4ec3-9b62-1351e8bc1e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ce170f-594d-47c0-bc55-eb36e8b7cf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eb5a5f-fa17-4d14-8fc6-40962f2bd7a4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e6f753-7139-40c7-8a9f-804eb77dfcb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc474c9f-7cd4-41fd-b9ce-57dcbd08bd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b03810-f4d6-466f-9675-9854e6ad11b1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fad4a4f-d3e6-4924-a757-59d19e240a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ebd2ab-ef1d-4f06-b0e5-bc9f6f2669a7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4438bb-3154-4829-8c5a-7c5831eab14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cea345-20a1-4f68-b9b3-b665d4e25bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f26fca6-164a-47cf-b191-ce184eb311fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d861ac-1949-4955-ae0b-01feb15bf0e3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab72dbd5-035f-48df-9684-e10a444534ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7944c449-0e73-4e0e-832d-1a43ed5c773e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f91190f-e216-4a6d-870a-455c7aa700a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53993c7b-2d26-4783-927c-be07c3efdc94"
                    }
                  }
                ]
              },
              {
                "id": "7ebaa9b1-548f-4eb4-ac40-d4eaa4b009a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9196d124-8010-43ce-b2dc-1ff3b1898abd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7eb4a4-66a5-4bdb-a6d7-c2e40224db66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "37a04d5e-a179-48e8-b3b1-c85b7c4dfc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e82ddd-35ad-4046-bfe9-ace5aa9fbb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6567289b-2aa1-4b0c-9522-bea1e0278399"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39bd5f77-17b6-4ef5-a9b2-c67f45064224",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f85b2317-2b11-408d-950d-f927cafb1b7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcaecccd-bd73-4ef5-af7f-435652689571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb8c14f1-9b20-4337-9f41-522354bdcafa"
                    }
                  }
                ]
              },
              {
                "id": "33cb0dde-5198-4de9-9797-22913aa12361",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "919f2a15-086a-4af0-8bb3-0c26094f5719",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e34804-13fd-4f84-a8ec-ab8998f5ba06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8bef4d27-0a38-4b6d-9702-04b9c65bdff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c087e2c6-04f7-4f0f-8f26-ee9a36a463fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2ad087-23b4-4c10-b610-3427609c2e45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f8e3f86-c8d4-4bbe-8bfb-2e43cf594b2f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b8ec1b8-803f-4af8-b636-cbe7fa91972c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b90d3596-f788-4ca2-ba25-c7606d085441",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62b74748-b3a0-4bb9-8b4f-179cb890b8f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "684f0ea1-47b0-47ef-b1b8-9055ad4c247f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e918fef-630a-4bf9-ac7b-6ce35d1be27a"
                    }
                  }
                ]
              },
              {
                "id": "839bdf18-72f0-4661-b2e8-e5376a772659",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be4b3154-d03e-4e06-83e2-74a02ae7b73a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b41d2855-69fc-4ef9-8af0-25c0bc80084c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ea14918-caa7-4b6d-9e5e-77e92a5dcb68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bda93c0f-2977-4969-834b-4b011d30fe2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cc89566-184b-49d1-8bd7-d4e3f5549e99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2174299f-d6ca-4c4d-8bd0-3fef8002cb21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed107b6c-f4dd-4ec3-8d6d-948017d422e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77d10db8-803b-464a-b1f9-fa39f3d4f8ef"
            }
          }
        ]
      },
      {
        "id": "8bb0f1cd-4c3c-4c31-b074-6219d9f0d112",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "00b2d280-af4c-405c-b40a-5fd4a33ee4bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d65a687-f466-4ecd-b4ea-e42ea39b0b88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44a2b8fb-9cb5-4a2f-acc6-780fde7fcc35",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc907ed2-0d5c-46be-93e3-95f92204734a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dff1b304-c34f-4e33-8837-3ff78a5ae3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe5552-eda0-4e78-8234-01f7a7bf84fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40be85ef-78dd-4f4a-af93-a48a669e4993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e850e132-2c4b-4bb5-be32-b75735474131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a8f1a7-4b2f-4cef-8b8e-f17d0eaca561"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "837ef326-4ac8-4419-9733-3b2720cd30a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76312139-355f-411e-8b2a-dcabe7fe026f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d00b5fb3-0035-472c-a503-f8bd08a81b87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05825f29-c623-4de5-b52a-d39053c9dc43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "588befac-b4d4-4ab7-bcf4-93be99e8cd82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e31e8f8e-b246-4111-b16d-1d24c0f7b3e9"
            }
          }
        ]
      },
      {
        "id": "c057a432-cc6a-426d-ae86-8249fcb0ade7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fd6194a7-afea-4cb4-8d70-7ade7f2b7469",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c48e6bd3-c096-4e2d-a0a9-911c830a8b41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5047993b-2461-48d3-b994-a1c745c2913b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb62684-268f-45de-b946-5510aa0d7393",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab89fa1b-c8fc-447e-99fe-5e5a0cfc4088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02a1954-e289-4199-a072-64b7e855e448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f4b9f65-a053-4e6f-8719-334368fe821f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddbd5ce3-3b1a-4d41-83d8-311357245cad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2486108d-9522-4fb6-8a3b-25a37f1b1cfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ed2073e-5f31-456c-8e99-efa8df9261b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd852c31-3ec4-4ae8-8d03-0a6f801a3919"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85cbeadb-e3d6-4827-ab39-eb7f8924069b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72c21c62-a8ad-4f67-a640-fafa017c1b10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58c7333e-a884-4244-a3c1-746d1b6cd637",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cbea4ff-7ec4-4449-8035-7f168bd8f423"
            }
          }
        ]
      },
      {
        "id": "e55e9b46-cc5a-4b72-861e-5c4259ded173",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "991fbd42-f73b-49c1-af36-31b281fb3d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af11e4e2-7d9e-4339-9458-ef1a29e3cc99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5af7d10d-4384-4767-86b3-90a02cd7da0c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075dce8-2b69-471e-bbcd-311295d66cd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "993403f0-b4ec-4864-9c27-1ebe5b891efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc422ed2-27a3-447b-aa68-251cd07ac064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75029390-a237-4c27-972e-8be0c36994a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7719f9b-b859-4e20-a4ca-db562b05032e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc6089fa-3e8b-423e-9cda-510f089c76bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "644f2dee-8fb8-466d-aea4-e65c56198095",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d20772b-72e5-47e3-96b2-4f6042ccf208"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5bbff13-3597-4ef7-888a-7dc3bb37723e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a99ce576-0c58-4df7-a947-482d060b6d53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f9b9536-c59a-448e-95ae-5bce8bf4bdf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31e16f5f-d643-4dfa-ad32-14e79427efca"
            }
          }
        ]
      },
      {
        "id": "8328f96a-1fcf-4330-bcc2-ee883acde2fa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3bc34c9-a088-4a6c-afa1-07ada6de7d2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50fdf6e0-a800-49a2-81a9-db8198255f99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7ecb70b9-548d-4fa0-befc-a0b36d2232ca",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4995d4ef-1d6f-4cfc-ab48-0f7a6d090cbd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83ff07bb-6c51-4bc4-9711-e79931b898d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.81052631578953,
      "responseMin": 5,
      "responseMax": 9662,
      "responseSd": 615.8109295407388,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707784474882,
      "completed": 1707784516804
    },
    "executions": [
      {
        "id": "45b2ef69-d3fa-4814-87a3-4c6d1aff7e5b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1ba8cf91-e1e4-48b8-b7a3-4bbb9813515a",
          "httpRequestId": "912ead05-67d0-45ee-b8ae-be1481a477d5"
        },
        "item": {
          "id": "45b2ef69-d3fa-4814-87a3-4c6d1aff7e5b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66f44d3c-73fe-4d20-b1cd-e1224e6aba01",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "db725ecc-055b-4185-b0cb-32d784706b2d",
        "cursor": {
          "ref": "358bdc26-15af-4c4a-a6b1-7fb98086d1ab",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "578bebd7-e54f-452c-8544-58259df1a9ae"
        },
        "item": {
          "id": "db725ecc-055b-4185-b0cb-32d784706b2d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2a31dfb2-4fe8-4c9a-bf3e-ce01b12b2fa7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "76dc5989-d436-4257-ad57-7e07012c63c3",
        "cursor": {
          "ref": "a3ed5eeb-8bd9-4e50-8aeb-991b04f4cac3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3a4a07de-ac4b-4cb7-b6e2-efccf59d4ee8"
        },
        "item": {
          "id": "76dc5989-d436-4257-ad57-7e07012c63c3",
          "name": "did_json"
        },
        "response": {
          "id": "4950a7d3-3e42-4210-9a82-c2edd8335d6b",
          "status": "OK",
          "code": 200,
          "responseTime": 689,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ee1e7f-c68e-48dc-ab3a-22eb54ab573a",
        "cursor": {
          "ref": "48e7ae30-0ae2-464e-863e-83bcb74d2d63",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06785ebc-5659-4f21-9713-f3f54e5d1ff7"
        },
        "item": {
          "id": "f8ee1e7f-c68e-48dc-ab3a-22eb54ab573a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a27eea41-7f5d-40af-b459-2e41c14eef64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 545,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ee1e7f-c68e-48dc-ab3a-22eb54ab573a",
        "cursor": {
          "ref": "48e7ae30-0ae2-464e-863e-83bcb74d2d63",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06785ebc-5659-4f21-9713-f3f54e5d1ff7"
        },
        "item": {
          "id": "f8ee1e7f-c68e-48dc-ab3a-22eb54ab573a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a27eea41-7f5d-40af-b459-2e41c14eef64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 545,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559e8ea8-b527-4d5d-ada5-a5148dfecca1",
        "cursor": {
          "ref": "afc39ace-c212-4904-9750-b9232ad00d1f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "43a97322-a435-4fe2-ac1f-75bd5228d6bd"
        },
        "item": {
          "id": "559e8ea8-b527-4d5d-ada5-a5148dfecca1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8613ea9e-bafa-4f4f-8329-1376457779b7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21aedd73-8bf4-4c9c-9672-d9ec0f0915a8",
        "cursor": {
          "ref": "51d8604b-f46f-4e97-8265-1b54ad1ad3a1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4bbc173c-2a35-42ab-9af4-e61185615715"
        },
        "item": {
          "id": "21aedd73-8bf4-4c9c-9672-d9ec0f0915a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "63c71bd2-c399-42ea-949b-cc06f401ff09",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7483dd84-a700-4f81-9509-bd9019dd3495",
        "cursor": {
          "ref": "960985cf-e164-4d80-9811-d084b0c13145",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "365b8107-dc5d-417c-a509-0d93de31ced8"
        },
        "item": {
          "id": "7483dd84-a700-4f81-9509-bd9019dd3495",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "959a11b0-eb19-4dbc-969c-c6e1c9f04490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24af9e06-fe3d-4aa1-b82f-88853e6fee6a",
        "cursor": {
          "ref": "804684ad-58e8-4784-a125-0e457a2638bd",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c3005e7-acc5-4384-a142-7a33bcd7064e"
        },
        "item": {
          "id": "24af9e06-fe3d-4aa1-b82f-88853e6fee6a",
          "name": "identifiers"
        },
        "response": {
          "id": "45d7cc25-4b82-4a3b-bf5d-9b8e50f1b631",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61654ac0-3837-4add-902d-afcd562fc0ef",
        "cursor": {
          "ref": "5e27d4e5-cefb-4ccf-bc3d-44759b59cfc9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af245de3-9689-4b49-9ef8-45beff1f66cf"
        },
        "item": {
          "id": "61654ac0-3837-4add-902d-afcd562fc0ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f3e5dea6-cec4-4de9-af71-ef235328c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b30d19-1f42-4a02-a45e-5b864d7944f2",
        "cursor": {
          "ref": "0c719e49-d258-4f2a-a335-6cb068cf5c1e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9826d9c1-b305-459a-9f69-ad343f085621"
        },
        "item": {
          "id": "c3b30d19-1f42-4a02-a45e-5b864d7944f2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "10001bb0-1f6a-47f1-9fc9-96b55ea27688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d177762-4a91-47c6-b876-7e33a040ff4e",
        "cursor": {
          "ref": "ef16662f-46cc-4bf7-9559-4c5bcca1aacb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "239602c0-5fff-4372-a2aa-18e6ee918c2c"
        },
        "item": {
          "id": "9d177762-4a91-47c6-b876-7e33a040ff4e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5da5ed29-d154-439b-8015-3b7a25bca1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3ab6c-1dc7-4677-91df-4423c9467313",
        "cursor": {
          "ref": "84fbf384-f52a-4db2-a45d-ff48477bde74",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e0e2d69-b9ab-458d-9407-a730d7e89c24"
        },
        "item": {
          "id": "8ab3ab6c-1dc7-4677-91df-4423c9467313",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d148c20c-66c0-4795-9acd-c7067fb86e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13315aa7-95b3-4c3b-819c-b86dc933173d",
        "cursor": {
          "ref": "8409097a-19a6-4020-a348-da6165ef28c9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "27608777-532f-4b60-b787-8cd34c17c3d0"
        },
        "item": {
          "id": "13315aa7-95b3-4c3b-819c-b86dc933173d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "164229bb-e376-4d42-ab76-e7bf1ef8de43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d8e5f2-6795-4d97-9758-392a882aca06",
        "cursor": {
          "ref": "0c035107-b74c-4e32-bcff-0a53d4d6972e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "96ed4e64-4f72-4b3b-a9bf-d3459e539cce"
        },
        "item": {
          "id": "c2d8e5f2-6795-4d97-9758-392a882aca06",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "338b64d6-1f46-4a8e-a45f-c1c101c8338e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477d4637-b2c7-4476-a8ff-1f3717a65329",
        "cursor": {
          "ref": "0b9ae2c6-6b7b-4168-81fe-ea1beb42c8c9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "751e75d9-af46-40df-9952-64901da3aecf"
        },
        "item": {
          "id": "477d4637-b2c7-4476-a8ff-1f3717a65329",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "90235aad-080d-40ef-a6fc-d3146a41a8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcdb3c8-ea0d-4774-9ed5-f015f89f3bc3",
        "cursor": {
          "ref": "7f4e4a7b-b20c-4e46-adfe-a966f6ae2685",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "07beaa50-ea6e-4074-b88a-4bd3f6032d1b"
        },
        "item": {
          "id": "8dcdb3c8-ea0d-4774-9ed5-f015f89f3bc3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7808b779-2b6d-400c-aaf6-0a7b38e8c918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4780919-873c-4ca8-bb37-b84e9420bb98",
        "cursor": {
          "ref": "2de23fd8-1cd8-4058-9e06-3f8c9fc16d61",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9fa861f4-5666-423f-80e1-a91ee1d18ff1"
        },
        "item": {
          "id": "b4780919-873c-4ca8-bb37-b84e9420bb98",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7ca9b93f-3505-441e-8a68-7761b409382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c783fd-08b3-4a98-8205-237ec7787402",
        "cursor": {
          "ref": "9e8b4587-581f-4c23-a62a-9da8d660f985",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fe7753c-456f-4d4a-9646-5a1d9e9d2197"
        },
        "item": {
          "id": "c2c783fd-08b3-4a98-8205-237ec7787402",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e2e959a0-2f23-4e7d-8d44-d4114802320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9a20f2-46b1-47ae-86af-bc92139efdda",
        "cursor": {
          "ref": "5460d72e-490b-4298-907e-2963ed555166",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9ce3a348-8af5-441f-bb05-71e2c82481ff"
        },
        "item": {
          "id": "4e9a20f2-46b1-47ae-86af-bc92139efdda",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6a564e22-675d-467f-8ded-ef6e1000c431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb51d36a-a451-4d77-a490-7c4fc2214d03",
        "cursor": {
          "ref": "bd042966-a63b-4765-9c3b-219735c8e108",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c3adaf14-b2bd-4049-b666-291c9e5ac3ae"
        },
        "item": {
          "id": "bb51d36a-a451-4d77-a490-7c4fc2214d03",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f74f2c99-8677-4787-8303-37836fd1e0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d7baa-8976-4b33-8eda-e80b4f667ce4",
        "cursor": {
          "ref": "021145db-e4d7-49d4-b08d-271fec0b5a2a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6dcfe777-d57a-44a1-ad28-29c54b1684ba"
        },
        "item": {
          "id": "8f0d7baa-8976-4b33-8eda-e80b4f667ce4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c2adacd4-d5fe-4c7f-976c-aeea94c4792e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c348fa57-89e4-40ed-8dee-d7106813ce40",
        "cursor": {
          "ref": "0c78b644-7359-44bb-8fa6-4a453a01b980",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b07489e-dea9-4825-bece-18e61c1c41ca"
        },
        "item": {
          "id": "c348fa57-89e4-40ed-8dee-d7106813ce40",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba2c1cc0-4b69-48b4-9cfe-36e92ece23d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb7ac9-b31b-4c0c-82e6-801280c202cc",
        "cursor": {
          "ref": "11d7a46d-e0f2-4bcc-a8f9-cbeb1a2d11c5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "641e3a6e-5aac-4c94-9722-801f72ed0baa"
        },
        "item": {
          "id": "d8cb7ac9-b31b-4c0c-82e6-801280c202cc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b881981-3d6c-4ed4-b3c4-affacbc18b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea139651-cf10-4111-b24b-cb4a18531922",
        "cursor": {
          "ref": "7d89abce-132f-42f5-8c97-6a606c972b1d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "39beb1df-4ddd-41e7-b0ae-5cd63f0cedd1"
        },
        "item": {
          "id": "ea139651-cf10-4111-b24b-cb4a18531922",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb671ee7-b07e-4594-87a1-84d6101f1412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338f43b8-fb7f-4947-a0e6-8dd6154b58ea",
        "cursor": {
          "ref": "de64f7a6-10de-437d-894b-c59456e8d5db",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d590873e-d299-4770-b63e-279d107a4997"
        },
        "item": {
          "id": "338f43b8-fb7f-4947-a0e6-8dd6154b58ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "847cbfa9-ec0a-4fad-a146-74d9f6411b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6db607a-340f-4cc6-bb20-677c536c6b69",
        "cursor": {
          "ref": "0680b775-5729-4c9e-9ad8-bdedf4566827",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cca96518-eaf8-4868-acbe-03fabc73d944"
        },
        "item": {
          "id": "c6db607a-340f-4cc6-bb20-677c536c6b69",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cbb951aa-89f1-436e-8d38-59b64a538107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae045c77-b9f4-4ccb-af4e-783bdd5ed9eb",
        "cursor": {
          "ref": "a8105339-5315-476a-acfd-0d36ebf443ff",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e094d80f-245d-4e0b-9ce6-3acc529a04e9"
        },
        "item": {
          "id": "ae045c77-b9f4-4ccb-af4e-783bdd5ed9eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e0c8035d-8bf5-4b04-848e-9f35cd8ee814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddecb40-3c02-4352-90dd-bef7ff7405de",
        "cursor": {
          "ref": "784fa9ef-165b-4326-9b0f-9af6e16183ed",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7dabc22d-c2c8-4ad7-a83d-2b41bda57c1a"
        },
        "item": {
          "id": "fddecb40-3c02-4352-90dd-bef7ff7405de",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "917bed84-3818-4385-8800-e1f86a354651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2342cf2b-5edd-43d4-98ab-7f47e2dd7efa",
        "cursor": {
          "ref": "d614f910-8997-4e48-b44a-71e7ec3d8321",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eff62a0b-8a58-469a-ae06-435648ff655d"
        },
        "item": {
          "id": "2342cf2b-5edd-43d4-98ab-7f47e2dd7efa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d02cd364-2c2a-4c0c-a86c-020a6fcdcb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4372e82c-a656-4a39-9290-a6e77cc3c1f7",
        "cursor": {
          "ref": "485059de-4ee8-4817-a7c7-bce78ab7dbe6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87175478-3a95-49f6-8b6e-a96c2d344c97"
        },
        "item": {
          "id": "4372e82c-a656-4a39-9290-a6e77cc3c1f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "49ef2ad4-58c7-40b3-9760-cd4a8828cb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5460a1af-ee6c-4af0-a28f-f9fe61575f12",
        "cursor": {
          "ref": "e641fb2b-cc6a-4878-bf23-40d046c183ee",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "55eec586-3b88-4c9f-95f8-b3ac2f5a5f64"
        },
        "item": {
          "id": "5460a1af-ee6c-4af0-a28f-f9fe61575f12",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "54d57f38-7b3a-4ce6-b91f-ad5917922993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac1cfb1-2625-486f-8554-cdccda6546ed",
        "cursor": {
          "ref": "68cd1868-f8b4-4688-aac6-883726a08cda",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "82010638-b55b-464d-8273-5d6c816fe043"
        },
        "item": {
          "id": "bac1cfb1-2625-486f-8554-cdccda6546ed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "957f15dd-9ae5-4b6b-8014-e440875289e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fe4000-eac1-4ea4-8e5f-02dca6743c25",
        "cursor": {
          "ref": "6643697b-5aab-4f3d-9b11-e8d8d8236771",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ba7cf744-4958-4ad8-b6c6-3c339445fdff"
        },
        "item": {
          "id": "a1fe4000-eac1-4ea4-8e5f-02dca6743c25",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7d493036-cfb5-4417-937e-087dc3d86ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56be4b05-363c-40a0-89bc-7e8bd70407ee",
        "cursor": {
          "ref": "1f059a5e-02dd-49ca-9804-64e58fe6af7e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "96d0b6f8-9945-4824-84b9-4b5382924f5e"
        },
        "item": {
          "id": "56be4b05-363c-40a0-89bc-7e8bd70407ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0be6cee0-d319-4635-80b5-af53af0720ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7d9a4-04be-480e-abf5-aeb34d07a17f",
        "cursor": {
          "ref": "eaebad37-9450-486b-ac31-6abc98952d59",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a884427d-bc1f-4e8c-acdb-fff061451b40"
        },
        "item": {
          "id": "8fb7d9a4-04be-480e-abf5-aeb34d07a17f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8e12127d-7ff6-4304-8af4-222bc7cebbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daa88c7-8bdf-4493-b977-cc8795148eed",
        "cursor": {
          "ref": "55db7209-d84f-45fa-8ed9-4995576bd33b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b4aaac94-b1b9-44fc-8df9-61756a2cec89"
        },
        "item": {
          "id": "6daa88c7-8bdf-4493-b977-cc8795148eed",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9cdb9930-b4a9-4f39-bb25-3f1cc391addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd45c561-a5ec-484d-8bd1-ade5a21f389a",
        "cursor": {
          "ref": "4ac36fd5-c402-4999-b8ba-ee954036e7b5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "66c0107d-bf9f-4b6b-898c-9b8fdfd9ccae"
        },
        "item": {
          "id": "fd45c561-a5ec-484d-8bd1-ade5a21f389a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "954101ef-0eeb-456a-aa53-c2cdc5d15abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474984a0-b7d5-4b08-bba2-63798b4f860f",
        "cursor": {
          "ref": "aef3316c-16e2-47d9-acb2-51c295a06710",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2f627e1b-2e24-49aa-bb89-ea324547b31f"
        },
        "item": {
          "id": "474984a0-b7d5-4b08-bba2-63798b4f860f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "45b43eae-a0b7-4cc6-8a31-90d7873f2ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67983ad-c478-4a40-9fc0-76b2fae1a7b1",
        "cursor": {
          "ref": "27431142-cc65-4597-a882-a1a90c66d671",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e9c37730-4646-4bc2-b359-870af88218f0"
        },
        "item": {
          "id": "e67983ad-c478-4a40-9fc0-76b2fae1a7b1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0e881754-4b7c-43de-90c9-f904f1c91aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf95938-525a-42fa-ae4a-1e42452e4734",
        "cursor": {
          "ref": "3128e84a-e8e9-4f71-817e-909624782579",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6ac1f89f-3f5e-4b94-aa59-6287b0097197"
        },
        "item": {
          "id": "fcf95938-525a-42fa-ae4a-1e42452e4734",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "68263b2d-0f35-4aee-b117-c396eff2315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547cdff-01a7-4bef-82af-7ca0557c42d0",
        "cursor": {
          "ref": "1fa8eae4-5a9d-42ce-b77e-c0d2ea883709",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d681d24f-2653-43b9-9dcb-ee4d16d1ced9"
        },
        "item": {
          "id": "e547cdff-01a7-4bef-82af-7ca0557c42d0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "06b0a7c8-f3ae-4342-9ead-e4e1655aaedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400285b7-945a-4aad-be48-944ea4eb048c",
        "cursor": {
          "ref": "99b9b8c2-752d-461c-a12b-6fb462259cb9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bbf4abd3-40d2-45b0-be28-b1f9a4540599"
        },
        "item": {
          "id": "400285b7-945a-4aad-be48-944ea4eb048c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c37fa66-7d90-42f9-a496-e217308518b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b36a2d-3769-4bdb-b699-6c520994b2d4",
        "cursor": {
          "ref": "657fc618-6687-4326-853f-20227ed009a4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c141d9e9-faea-428b-a564-e6bf6cf46d24"
        },
        "item": {
          "id": "82b36a2d-3769-4bdb-b699-6c520994b2d4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7254ba88-bdb9-49be-b162-c65a61aa0eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5752626-8aee-4ac7-8861-560c42db1350",
        "cursor": {
          "ref": "f6592044-db67-4b02-bef9-4fbdf6475c8b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c69ef0d-a7bd-4a9e-8aea-c115d1a5e518"
        },
        "item": {
          "id": "a5752626-8aee-4ac7-8861-560c42db1350",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6cd5109c-cabe-4634-a454-f56a7a4fb80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51aea7e-f3f0-4350-8a9f-ee0b0f4a2e16",
        "cursor": {
          "ref": "0a082bbe-2271-469c-91db-f48112637762",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "37920b18-f3b6-4be9-b5e7-6671751e1653"
        },
        "item": {
          "id": "d51aea7e-f3f0-4350-8a9f-ee0b0f4a2e16",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4ccb6771-89ca-4364-9698-df4b7febf483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80963b2b-5429-4273-94fc-4246b8b09a0e",
        "cursor": {
          "ref": "512d1878-d392-428e-9403-2c009c251771",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fff1f115-340f-4099-8fbf-e08da393a770"
        },
        "item": {
          "id": "80963b2b-5429-4273-94fc-4246b8b09a0e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ad7b2230-0c43-4027-b2ba-acbc3db7d729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c45452-a332-4283-ac10-2a64206afffe",
        "cursor": {
          "ref": "59348c28-95d7-4d35-bbd0-081b7252e366",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "014bd289-1265-47ca-8faa-63bce3ac2ced"
        },
        "item": {
          "id": "02c45452-a332-4283-ac10-2a64206afffe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ae7e7ddc-96dc-4c4b-b871-b7480155c01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb83701-45b8-49d3-b865-33f54952a2c0",
        "cursor": {
          "ref": "b6d8a773-4901-42dd-b28c-0b275c711fd7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce8e5b99-a7f1-4233-9bf2-924f5088a102"
        },
        "item": {
          "id": "eeb83701-45b8-49d3-b865-33f54952a2c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0477046d-ed3f-445a-8ca9-4cf122f40a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db93774-fe37-4f0b-8987-fb6e53b62f80",
        "cursor": {
          "ref": "c4a994fe-45c0-42f7-af99-678201f750bb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "712a7d28-b35d-4ac0-842a-b971fe84af56"
        },
        "item": {
          "id": "9db93774-fe37-4f0b-8987-fb6e53b62f80",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6d845a7b-a63e-40df-afc0-6c76e22f24cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b48e643-dab1-4cd2-bb65-07909248eb0a",
        "cursor": {
          "ref": "5f9631b8-fe39-49ba-9f51-ffdc46a7edfa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1593b71e-586b-4f40-a108-5f3788fceadf"
        },
        "item": {
          "id": "7b48e643-dab1-4cd2-bb65-07909248eb0a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21e70236-06d2-45cd-b9e7-7a84fafe3161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fc7ee-d677-490b-be91-b35c9102c556",
        "cursor": {
          "ref": "5d71b4ea-c164-47d4-b7ba-77f8def5d7c2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "17a4dc6e-43b0-4b62-ae12-b7dbbaec72be"
        },
        "item": {
          "id": "986fc7ee-d677-490b-be91-b35c9102c556",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aaaedf28-337d-4a79-93b3-1eb2cebbb5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbdb06f-154e-44bb-baf7-d320a074ef3a",
        "cursor": {
          "ref": "36a893c8-acbb-4350-bfb9-e03d14b07fbd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "17db6cff-b91c-4424-ab94-9941628a2d0b"
        },
        "item": {
          "id": "7dbdb06f-154e-44bb-baf7-d320a074ef3a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a2bc9ec5-3c62-4288-9146-eff7a0fbdf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232ed400-69f1-41bc-bfbc-7c1226e1b5d7",
        "cursor": {
          "ref": "020afbbe-18ce-44cf-8a31-ab6f1d3a31fa",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e25f7b33-70b6-4a8e-b526-6716f4e3a903"
        },
        "item": {
          "id": "232ed400-69f1-41bc-bfbc-7c1226e1b5d7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d095f026-3469-489d-b84d-19d9db3c7bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f23a9ea-d5d7-4882-af6c-30aa840e29b4",
        "cursor": {
          "ref": "2048ecfd-b106-42e0-856c-b39fb65500c1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "175e58e4-39ac-41b7-9e82-ebc344e7da08"
        },
        "item": {
          "id": "5f23a9ea-d5d7-4882-af6c-30aa840e29b4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6f4c5812-4713-490b-a862-739882d25918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a9e7b4-5779-41fd-ab51-091343b4253a",
        "cursor": {
          "ref": "de7af42e-1f01-4ab3-80e2-9d23eaaab4f2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "008ac325-e2c0-4c3d-9147-6004bb5c4a2d"
        },
        "item": {
          "id": "98a9e7b4-5779-41fd-ab51-091343b4253a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36def480-a063-4fa1-849f-5d3197614b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8878c5-2f5d-4d06-b4a4-0c1288b5b631",
        "cursor": {
          "ref": "201facae-3fc7-4b52-94aa-0f0159e7a992",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dc500a91-9c81-4a3e-bfca-0f1496c4c3a5"
        },
        "item": {
          "id": "0c8878c5-2f5d-4d06-b4a4-0c1288b5b631",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9a70277e-aba2-4cd6-b297-c258626ae213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f8b3bd-a130-4555-a5c3-53d9d47571fe",
        "cursor": {
          "ref": "0f3a6d43-fe75-4bd8-b202-96633845246d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "977e4508-fbd1-449f-a365-5b1c9f5bbdd3"
        },
        "item": {
          "id": "02f8b3bd-a130-4555-a5c3-53d9d47571fe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8f70cd3c-d821-4e4b-933b-9c10e225792b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9579a913-6c0a-49c9-9d76-97c076a622a1",
        "cursor": {
          "ref": "16b93ca6-97af-4c75-a7a6-8720df317294",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a306fb93-45da-46d1-99f5-5d01ee65dadf"
        },
        "item": {
          "id": "9579a913-6c0a-49c9-9d76-97c076a622a1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c55072ee-1138-4ac6-98a3-3bb4fdbbf224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f19a8d-8ed9-4ded-b04e-0dba9f138aa7",
        "cursor": {
          "ref": "34a3207f-d9ac-49a0-8ac4-c57beada0f32",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c42560e9-375a-46d0-8dfd-b4cc04b42c7f"
        },
        "item": {
          "id": "d8f19a8d-8ed9-4ded-b04e-0dba9f138aa7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32f11043-6278-4c82-a72f-613ad161a385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750064db-8839-4efe-a396-1ac2d36ca1aa",
        "cursor": {
          "ref": "d92e54b8-b43a-4888-81ea-7e272932d397",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ecbf03a5-ba69-48ac-bcee-5e1983a8a86c"
        },
        "item": {
          "id": "750064db-8839-4efe-a396-1ac2d36ca1aa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "95b1b3a1-39cf-4181-b8b6-3c5d2594b6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2924ce-6819-4dc7-8d6c-2a20015147a5",
        "cursor": {
          "ref": "2372add5-e0e7-4601-83f3-c358157c149b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "570df7a0-f256-4c0c-ab36-6d7ad73a2c50"
        },
        "item": {
          "id": "4c2924ce-6819-4dc7-8d6c-2a20015147a5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6dfeac1b-fac9-4915-8eba-6a283384707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cba530-a656-4450-81df-aef0e2d81aa0",
        "cursor": {
          "ref": "ea9a7183-0c76-4df8-b863-9076e65adee4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "45ad5c95-392c-428f-bc96-e5aaf848c7b9"
        },
        "item": {
          "id": "55cba530-a656-4450-81df-aef0e2d81aa0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f2ebcbfd-1170-4f24-90d2-495054bc15b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb186931-a4eb-4526-9789-b1854142ea0d",
        "cursor": {
          "ref": "85c073ea-7bc4-405e-8f39-325bb7f8f38e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f0372d24-ae7a-42ba-9b92-0cf7ba0d9c6c"
        },
        "item": {
          "id": "cb186931-a4eb-4526-9789-b1854142ea0d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31188f47-48da-42e7-a6ae-097a8813487d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd53310-9794-4099-b981-0f71aa5c8595",
        "cursor": {
          "ref": "51b6926e-7f91-41fc-acf5-bb1472981467",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "351ccffd-2cdd-4bf0-b6b4-ebd5d7e85466"
        },
        "item": {
          "id": "5dd53310-9794-4099-b981-0f71aa5c8595",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "111ed382-e5d5-4a1f-a2f6-6e604a8a7783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8045549f-c899-4783-aefb-8f4c98a6a4bc",
        "cursor": {
          "ref": "e3a39a43-a24e-4bd8-a394-ded52b2c18ea",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8140f922-110b-4fa0-bf3f-3a489b0e1ff2"
        },
        "item": {
          "id": "8045549f-c899-4783-aefb-8f4c98a6a4bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "14efb844-6bc2-44ea-9582-c8f9fb9ad69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0974a7-ebef-47d6-ac64-2cf42b0d5042",
        "cursor": {
          "ref": "c2a5e2a2-50cc-48de-96a8-c802afbdc266",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "37d5edaa-0c8f-42cf-bc18-073290fa68b6"
        },
        "item": {
          "id": "8c0974a7-ebef-47d6-ac64-2cf42b0d5042",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aa387c84-92b3-42c7-93ca-c68ff1852f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0c3769-ba35-4731-b83a-2d05a7b3fe35",
        "cursor": {
          "ref": "7ba232db-c800-49de-b0f4-9c8250b3a96d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "57ca578a-0d64-4cd3-859e-c01ac64ed1d3"
        },
        "item": {
          "id": "ca0c3769-ba35-4731-b83a-2d05a7b3fe35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ff09f83-fb4b-4b5d-9c5a-835a54af58e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7629d2-9836-4225-978f-f7a348b2ca54",
        "cursor": {
          "ref": "d52012a9-8b57-40d6-8b06-56c0c761942a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "789bf1b5-2e44-4186-8a91-020a42a4ac71"
        },
        "item": {
          "id": "eb7629d2-9836-4225-978f-f7a348b2ca54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "32eeea63-aee4-413f-a910-011051e6482d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a780598-74bb-44fd-960a-8bcfac1cd4df",
        "cursor": {
          "ref": "b17cd004-c419-4f5e-b08f-64147fe93ea2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a4d32220-f24d-4023-88c3-10a88b4b9d8d"
        },
        "item": {
          "id": "2a780598-74bb-44fd-960a-8bcfac1cd4df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "43d2d9de-d5d8-4b6e-9077-88bcf911076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef319b39-4416-4a60-9a7b-4149350814b7",
        "cursor": {
          "ref": "3b893041-a3ad-4674-82d5-9a6ca62c175f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ed60009d-8466-4f96-a4e1-a996fb4b0348"
        },
        "item": {
          "id": "ef319b39-4416-4a60-9a7b-4149350814b7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b931a94-c7a3-4136-bf9e-6e8e6bde818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4b91a-3a17-483e-9f7e-f4639cf2ce4c",
        "cursor": {
          "ref": "775bda77-bf07-4d03-8ac2-bcb22c6d7d5d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4f5abbb-1f6f-4316-a56b-683c7a91a766"
        },
        "item": {
          "id": "c4a4b91a-3a17-483e-9f7e-f4639cf2ce4c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "48aa8d90-7d32-49dc-a61b-6407aefff662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558e8e2d-3925-4977-b6ff-61a108c58442",
        "cursor": {
          "ref": "da747b61-b431-44ec-87ac-48add1a3a19d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "178a3e64-c2cd-48a4-ad9a-94127f45feab"
        },
        "item": {
          "id": "558e8e2d-3925-4977-b6ff-61a108c58442",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bab4d7a0-fa82-489c-8ec1-eb0a5632358c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af5aa4-3da1-41ae-99e8-153f2c0e15a2",
        "cursor": {
          "ref": "b0f8e162-93d6-4bfa-915e-4dfd34d317f4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0147f600-f95e-43b1-93f0-54be710d388e"
        },
        "item": {
          "id": "78af5aa4-3da1-41ae-99e8-153f2c0e15a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2f3bd846-a6b0-4519-aa2f-8e11b67d2e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661b5c02-e594-4a53-ae3b-ee257a3985eb",
        "cursor": {
          "ref": "dbe3f6ba-be30-4361-b219-f9a04c4fbc14",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53786dba-2f6e-41cf-84ae-e1eb7bde51b5"
        },
        "item": {
          "id": "661b5c02-e594-4a53-ae3b-ee257a3985eb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c1d9427-b533-40a5-90ff-5f26fab6ceda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736ad6a4-0f14-4c39-8ab7-ccb2381e2299",
        "cursor": {
          "ref": "c461067e-bc91-42b2-bee9-948e71f0b599",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "00512e0f-1eb7-41c5-9cf2-d6b0c0c09e87"
        },
        "item": {
          "id": "736ad6a4-0f14-4c39-8ab7-ccb2381e2299",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f9eea262-9b78-4f7a-8587-47eb7f62b216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eff8a8-f061-4959-b960-3ba6901e93bb",
        "cursor": {
          "ref": "22d96f31-3ab7-48d0-8385-2ec9c56a20e6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bffcfebd-0ec1-4170-9306-a789b4fecae8"
        },
        "item": {
          "id": "05eff8a8-f061-4959-b960-3ba6901e93bb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a80f8f9-5547-4711-89f7-8a4adb31fdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c240f451-2168-43c9-81e5-e4315ad3937d",
        "cursor": {
          "ref": "ae226ef6-c3b5-4587-96ca-a08824741cf5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0ec83139-8f7c-4c01-9abf-6abc79e5ed36"
        },
        "item": {
          "id": "c240f451-2168-43c9-81e5-e4315ad3937d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "22295f82-978c-4c2a-9cff-f008b3bb617b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd33abed-6230-4ce7-96d0-549ee1cf02ed",
        "cursor": {
          "ref": "54f50d92-e978-49b1-b17d-6563e04c6311",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0f782164-6109-4f35-b831-849f4b87e56a"
        },
        "item": {
          "id": "fd33abed-6230-4ce7-96d0-549ee1cf02ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "10187858-40fe-45cd-bb65-4ce70eaf8ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4419ac24-f222-4b9b-8995-19f56c673274",
        "cursor": {
          "ref": "15014642-7b5e-470a-97ab-313d0755ae42",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d99afabd-d82d-4b22-9717-08af9e1b8c67"
        },
        "item": {
          "id": "4419ac24-f222-4b9b-8995-19f56c673274",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dcc7a812-1876-473b-97df-8b19ce93d614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfeaa44-91af-4d4b-b0cb-85f7f5ee0b83",
        "cursor": {
          "ref": "c32ddd53-269d-47b0-9def-06b67cfa063c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fcdf1c16-ce03-4279-92cc-616a1348bd12"
        },
        "item": {
          "id": "1dfeaa44-91af-4d4b-b0cb-85f7f5ee0b83",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02113599-3883-4188-b24b-b3e7d5eec907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ee698-8064-422f-9390-192ee2e49f9a",
        "cursor": {
          "ref": "63a724c5-76c2-4162-b997-01fc0c168034",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5684f7ff-7d2e-457a-808e-446a194bdbb7"
        },
        "item": {
          "id": "398ee698-8064-422f-9390-192ee2e49f9a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb74dbe7-3795-4ee7-bbde-81e1e4218e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643f00b0-143b-4a54-85c7-371c336eb02d",
        "cursor": {
          "ref": "d6ba5240-7d56-481d-a482-6ebb2515f897",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "346839c2-404f-45dd-b3bd-c447c6372ae8"
        },
        "item": {
          "id": "643f00b0-143b-4a54-85c7-371c336eb02d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c2e123c2-df9f-434a-9f1d-fe6288aec72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2f32c-2597-401e-9816-205cf0ee1342",
        "cursor": {
          "ref": "671a8a8e-655b-4e26-899c-eb8d9cff2a6d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3b3d75f4-72c1-4ad7-a3a9-130594b6baee"
        },
        "item": {
          "id": "3fd2f32c-2597-401e-9816-205cf0ee1342",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c57e08b3-9498-491c-8bde-61b1af9f71fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e618785-bf24-4d71-a306-f2ec090ce000",
        "cursor": {
          "ref": "b928494d-9ddd-42a3-8a3a-cfd2ea405a59",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7c71e3fa-3cd0-4b80-9237-b736e9e2a20e"
        },
        "item": {
          "id": "6e618785-bf24-4d71-a306-f2ec090ce000",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "21ee59f0-677b-40e1-a720-aebf9892d1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447b90f-e1f9-4780-9c4a-88a2f7b66d09",
        "cursor": {
          "ref": "37f7fa22-791e-4545-8d15-9288377ea151",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e1f0c190-a37e-4041-82ca-4c270346c42b"
        },
        "item": {
          "id": "2447b90f-e1f9-4780-9c4a-88a2f7b66d09",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "414c3082-c258-4baa-a441-c9a2bb620179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63c768d-dccd-4247-a7dc-1ec2f82273c8",
        "cursor": {
          "ref": "2ac67015-693d-4077-aa91-5b14d1a10f6b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5183e153-a01f-4cdf-9dff-18dfd456ead5"
        },
        "item": {
          "id": "c63c768d-dccd-4247-a7dc-1ec2f82273c8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "552950f6-43eb-48f2-a4bf-f5f2db6a7090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0423a5d1-f6f6-42c8-983a-eff6f3c2c32f",
        "cursor": {
          "ref": "5813cbaa-dea1-45a4-a949-323f1299f1fb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "26629ab4-f0a9-4458-ab9e-9a6e57de59e4"
        },
        "item": {
          "id": "0423a5d1-f6f6-42c8-983a-eff6f3c2c32f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "99177daa-610a-4621-a885-905598a5f79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0f282a-daea-4178-a585-66990efcc920",
        "cursor": {
          "ref": "a0eabbe5-2527-4ab2-a7ce-c5378b12d65c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aa9d1cbf-91ba-4794-9a25-e53889264b77"
        },
        "item": {
          "id": "9d0f282a-daea-4178-a585-66990efcc920",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "65adff91-48e1-44fe-b298-9a6865851489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1c49df-002e-4f38-bc7b-048cfd436962",
        "cursor": {
          "ref": "0e49a75e-4232-4c31-8dd4-73dcbb7fa4ba",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "edb6c02e-6570-4951-bea1-d032a83cedab"
        },
        "item": {
          "id": "cd1c49df-002e-4f38-bc7b-048cfd436962",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7042daf3-8c2b-4679-b09c-d58eb62fe78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e0dba-378d-4602-9d6f-427a14d11091",
        "cursor": {
          "ref": "a5ee0926-bbb2-451c-b84d-8e593d937c8c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ba058574-2e7b-4c90-b114-45a72d389025"
        },
        "item": {
          "id": "446e0dba-378d-4602-9d6f-427a14d11091",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a78277d-9b9d-4fa6-90fc-bbdaa811c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a4af22-c9a1-413b-b178-d6d51384d84a",
        "cursor": {
          "ref": "320fb901-c066-42e4-b9d6-cab23308aa72",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d554cc4-355f-401c-ac3d-e7fff209b7e3"
        },
        "item": {
          "id": "92a4af22-c9a1-413b-b178-d6d51384d84a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "40c9454d-072c-46ca-ab99-308128c84272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce48e8e3-62cd-4261-87d8-2b69b8906957",
        "cursor": {
          "ref": "790ee960-9276-4bdd-9193-251abb351991",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "345209a6-e256-401f-8204-2a6e2046f5e1"
        },
        "item": {
          "id": "ce48e8e3-62cd-4261-87d8-2b69b8906957",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "af0ec327-1d35-4913-91e7-49a1449b692d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63b8a8b-2860-4f7d-96e3-3972effd9e73",
        "cursor": {
          "ref": "5e891bea-431a-4fbc-89c4-e9792b330827",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5b853d7b-5fea-4ebd-88b1-634414186f22"
        },
        "item": {
          "id": "c63b8a8b-2860-4f7d-96e3-3972effd9e73",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3facb23e-cd99-4083-89e7-098dad9d23fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e0937d-d5b7-41eb-8652-0c2542232942",
        "cursor": {
          "ref": "60be441c-03a5-4814-b9fa-7f5489cd6f0a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2c888be0-728b-436c-9a66-d41dbc08c99e"
        },
        "item": {
          "id": "99e0937d-d5b7-41eb-8652-0c2542232942",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d84465f5-45be-49f7-8d7e-4258021eb848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da5f1fc-d989-45ed-a395-7b8566ecc573",
        "cursor": {
          "ref": "f5e645c8-7369-4d96-ac14-9420e73bfc5d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "99d6fcb2-110c-4661-8260-5e33cf8df92c"
        },
        "item": {
          "id": "2da5f1fc-d989-45ed-a395-7b8566ecc573",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bae1a5e0-01c5-48fb-80ee-0f7a115f1547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455598e0-baa5-4dd2-a14b-b92252f31fc3",
        "cursor": {
          "ref": "021b6324-2546-431c-b89e-8a4304689aac",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6f627f44-632b-418d-bba2-261e5b339c2f"
        },
        "item": {
          "id": "455598e0-baa5-4dd2-a14b-b92252f31fc3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b5f9204c-6dcc-431d-af28-9b59a3b4eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b537e9ef-b5f6-42b7-bd27-c33b3addf820",
        "cursor": {
          "ref": "3899e8f0-32ee-46ac-ad76-0274be0e6848",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "574a50f3-e3d5-4701-81dc-220803b2842b"
        },
        "item": {
          "id": "b537e9ef-b5f6-42b7-bd27-c33b3addf820",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea2e74cf-c320-4dc6-a421-3c5b45dfd838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d477e310-3c79-4693-bc95-310aa4dae6e3",
        "cursor": {
          "ref": "87a7c68d-530b-4b99-9c11-d0f2ef173f9c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9451e44-12d7-4077-998f-00b0a154f47e"
        },
        "item": {
          "id": "d477e310-3c79-4693-bc95-310aa4dae6e3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "de7ee4b0-0ccc-4ea3-a20e-5702bf466cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e7b54e-df29-4c2b-baa9-bc775f524bea",
        "cursor": {
          "ref": "f31a401d-e2e1-43d7-82e9-5604747625db",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7ae801ba-76b6-4935-9d24-56c07c6e58df"
        },
        "item": {
          "id": "45e7b54e-df29-4c2b-baa9-bc775f524bea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98b04def-af98-4f0a-820b-37dd60c9b183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b541f047-4b55-4152-b8e4-9a2d32297cbe",
        "cursor": {
          "ref": "7542a258-7ea9-412f-aadb-b4562ca2f0c7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "50b9c289-1e1a-40f6-905d-fe647e5679c4"
        },
        "item": {
          "id": "b541f047-4b55-4152-b8e4-9a2d32297cbe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dddd8681-5be4-47f0-8fa9-48de26ba0e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6cb30d-3294-4437-a5b3-7e66b2e4fddf",
        "cursor": {
          "ref": "2c824f13-c0c0-46a1-bf9c-5da1c3b43e8c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dde42d13-4d98-4581-9dfc-d580aba18206"
        },
        "item": {
          "id": "4a6cb30d-3294-4437-a5b3-7e66b2e4fddf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8ec43c10-74a1-4b6b-82c8-7f65ae136b32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f385750-9b5e-4492-9454-b363646014ed",
        "cursor": {
          "ref": "d73c084f-8568-42b1-80f8-a55f7245c0f8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f85b457a-448b-46ce-8198-caded622907b"
        },
        "item": {
          "id": "1f385750-9b5e-4492-9454-b363646014ed",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a8fc38b1-b9b9-453a-8cf3-1eaa9dff6ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee37becc-b975-4d1c-b06e-5c5010f19efa",
        "cursor": {
          "ref": "97373d63-dc99-4f9d-9c6e-ed67c92078bc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "965dfdcf-7b93-4302-b854-e7ef6276e9ff"
        },
        "item": {
          "id": "ee37becc-b975-4d1c-b06e-5c5010f19efa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d6ce0028-1b22-4b21-95c5-3d5bf03b499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "47a833c0-0697-42b8-94db-5b74555adef0",
        "cursor": {
          "ref": "f2bc33bf-39e3-48a7-ba84-fba1fda6a440",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0081612f-ecb1-4f13-b57e-106d686cc535"
        },
        "item": {
          "id": "47a833c0-0697-42b8-94db-5b74555adef0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "152fca36-ee71-4e50-afd1-ab5edbaac6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "252ba04c-dba7-4339-8a06-6e1b2b6c72d9",
        "cursor": {
          "ref": "b6756511-54fb-493b-9124-b789bad9a796",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6f59f0f8-ad32-41e6-8d2e-defa113c5b36"
        },
        "item": {
          "id": "252ba04c-dba7-4339-8a06-6e1b2b6c72d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4acdb5a-e1c9-4b03-8f38-c091d15134ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9c0f1bdf-cf75-4e15-9030-b7edfa11ee04",
        "cursor": {
          "ref": "4569ed89-ea4a-4c20-9b47-c5ba26d9eb4f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "181f9b9a-d6ad-432c-860a-4108d6e1d4e1"
        },
        "item": {
          "id": "9c0f1bdf-cf75-4e15-9030-b7edfa11ee04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "980e580b-a840-4440-b436-909eb648d9fd",
          "status": "Created",
          "code": 201,
          "responseTime": 9662,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2c0b5d-3220-4367-8b7b-22c83033345a",
        "cursor": {
          "ref": "8a60b17f-5c38-4883-9ce6-dda0ec60b76a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "84a13807-d5b3-4294-9623-d6e22c092014"
        },
        "item": {
          "id": "0a2c0b5d-3220-4367-8b7b-22c83033345a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "926849d0-3630-4cd8-996d-08a1f797ad20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1acf24a2-1e0b-4f0c-a7b1-d0a99c4b9f17",
        "cursor": {
          "ref": "e52d01ea-5389-4684-92eb-8d5823096388",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1314ab61-3ddc-4821-957e-2ab0fad3dac5"
        },
        "item": {
          "id": "1acf24a2-1e0b-4f0c-a7b1-d0a99c4b9f17",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "52816fa4-7f58-4a13-affa-04ada3a9235b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f8ce76dd-7daa-4bef-9730-69ebfc3ae606",
        "cursor": {
          "ref": "b405c110-4f35-4fee-9839-d64cfc2c9e56",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "115bff7a-ec13-4087-bd2c-91cd765d4e8a"
        },
        "item": {
          "id": "f8ce76dd-7daa-4bef-9730-69ebfc3ae606",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d93305e-d6f6-4198-847e-a221c3d2353b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c837e632-a522-4e53-a92b-7aa948a46269",
        "cursor": {
          "ref": "6a7619f5-af7f-4fb3-848c-915d106929cd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d7f57bc-7978-4dec-b0b8-7e00ff4a9301"
        },
        "item": {
          "id": "c837e632-a522-4e53-a92b-7aa948a46269",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5bab7eb8-1f95-4459-b99b-4c7abe24bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7ff0d6-27a0-4928-8231-f61d1105d1ce",
        "cursor": {
          "ref": "4f8d2683-43c0-4d0d-9de4-2df8b9c89eee",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "06adad6d-53a3-4c64-b662-97224ea51cf3"
        },
        "item": {
          "id": "8a7ff0d6-27a0-4928-8231-f61d1105d1ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a2f1f11-043d-4f3e-94bd-2c301b004332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbff7ef-941d-48d0-a4a8-524eea82dfd5",
        "cursor": {
          "ref": "b2c72b55-86aa-4f15-9850-71bf4106646e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "90001718-9710-4ad6-9416-7499d922fee5"
        },
        "item": {
          "id": "bbbff7ef-941d-48d0-a4a8-524eea82dfd5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4a7b8b45-7bd9-4bbd-bbf8-e14a5e517142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5031b9f2-faf8-4c0f-a6db-cb53edff9c72",
        "cursor": {
          "ref": "4dd45cfe-a82a-4c2b-ac80-61918fa85997",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3882dec9-081d-4f2a-8d42-1b144b3206c5"
        },
        "item": {
          "id": "5031b9f2-faf8-4c0f-a6db-cb53edff9c72",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "620b6124-8a7a-4ebb-8b1d-2f457c5a9209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbd401e-bdcc-4c00-883f-865be0f5bbed",
        "cursor": {
          "ref": "582da510-4c8c-4199-be0f-2a7696df9857",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "72e32723-c7dd-413b-ad04-2efb1f914842"
        },
        "item": {
          "id": "efbd401e-bdcc-4c00-883f-865be0f5bbed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "295aef77-397a-45b7-950e-9a48638f623b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2972050b-482a-4be9-b2b1-538392d93f4f",
        "cursor": {
          "ref": "5e55f506-210c-41e7-83aa-724bdb5ae68c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "54f16184-9348-4baa-a6d9-ade34d3a414a"
        },
        "item": {
          "id": "2972050b-482a-4be9-b2b1-538392d93f4f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1bbfe1a-0bba-41ea-81c2-c77b560bfe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca39b294-26c2-48b3-a003-efa6bc88b94d",
        "cursor": {
          "ref": "c51c3764-3950-499b-b498-9d4807749c68",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2ab42946-6c62-4e11-9e50-4e3eea1093d3"
        },
        "item": {
          "id": "ca39b294-26c2-48b3-a003-efa6bc88b94d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92e2af8a-dbcc-4243-9214-96c455ed74f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a26f27-4b99-492a-a5ce-ba2098f041a8",
        "cursor": {
          "ref": "7c4e1832-1c28-4216-a97b-d665d2ddf8eb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "605a44e3-20b1-4d2c-975f-0677d3a49f92"
        },
        "item": {
          "id": "c8a26f27-4b99-492a-a5ce-ba2098f041a8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9083a528-630e-4d4c-b800-e7145ff4abb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e768bd8-b3e0-479f-87ef-78ec7cce3638",
        "cursor": {
          "ref": "fab73a8b-4747-497e-bd31-acaff959b0bd",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84f2aecc-1b56-4ef7-9655-9740e97c8573"
        },
        "item": {
          "id": "2e768bd8-b3e0-479f-87ef-78ec7cce3638",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2422a77-b263-4031-b9d8-74d6ce1c2b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d82935-042e-4a26-87ac-d51373a0f8cb",
        "cursor": {
          "ref": "31676683-6233-4858-8af1-92af0323210d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "44647b9a-8507-4351-86d6-9ffa449e684d"
        },
        "item": {
          "id": "45d82935-042e-4a26-87ac-d51373a0f8cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "484ab2d9-fb41-46bd-83ff-88180b9f9776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd95ea8f-47fb-4676-aeea-70978f0ef761",
        "cursor": {
          "ref": "e364665c-1edb-4726-b89d-5fc5129207d0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "47f7a061-b31e-4471-9547-e8392efb6d69"
        },
        "item": {
          "id": "bd95ea8f-47fb-4676-aeea-70978f0ef761",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "691247ed-662d-4fbc-9656-82ed8c5a29ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70417b29-b2f3-4593-b439-84ae58f400da",
        "cursor": {
          "ref": "9ee4ff91-2daf-4044-b6e4-337a48b9526d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a6c9ea1-9787-40fa-99ec-4932d1ea789c"
        },
        "item": {
          "id": "70417b29-b2f3-4593-b439-84ae58f400da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3f93435-f0db-414e-b877-e0947167c84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171dc5e3-7961-4c26-a5c6-c642fbc6da7c",
        "cursor": {
          "ref": "2812e666-1754-4e5d-91e4-97bd5d3f50ef",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6c96103-5c1b-43a9-85e1-466476c5f2c6"
        },
        "item": {
          "id": "171dc5e3-7961-4c26-a5c6-c642fbc6da7c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d4a0eae-4532-4d76-aef5-9c1d95827e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690d37f7-0843-4f1b-b9c6-f3fe6648981c",
        "cursor": {
          "ref": "943fc25e-2ba0-4f08-859d-47f14c15686a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7265e4e9-7f01-44b5-b1b8-b71b735b94bb"
        },
        "item": {
          "id": "690d37f7-0843-4f1b-b9c6-f3fe6648981c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c487dd2-3d13-492a-9957-b1b9ea3ad8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b038099-6d46-4ac8-bff3-4017980418e6",
        "cursor": {
          "ref": "7991f89c-2be3-4a6b-829c-a96334d61dfb",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f4e70fa8-0ce7-42cd-8a0c-1df75d6b8193"
        },
        "item": {
          "id": "1b038099-6d46-4ac8-bff3-4017980418e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86e684a5-c81a-450f-b1cf-d30f0c8caa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0589f94-8c7f-436c-b67b-e209e5cbcf93",
        "cursor": {
          "ref": "0992c9bb-47ca-4a73-ae5f-90147ad58b44",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47507fd9-9579-4a1f-8571-b0bcaa69ad07"
        },
        "item": {
          "id": "f0589f94-8c7f-436c-b67b-e209e5cbcf93",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bbd055ec-a24f-4db0-883e-69458a749337",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f8bad04b-3108-4e6f-8b3d-4b16b495fe8a",
        "cursor": {
          "ref": "dae082e9-6117-4de6-a71a-204a9d7833db",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d6c0ab18-8b89-4735-944e-6ee6111b71d5"
        },
        "item": {
          "id": "f8bad04b-3108-4e6f-8b3d-4b16b495fe8a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "16483b00-69ee-46fc-b3a5-33915f3dae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfe2b18-784e-46a1-8515-5120e9e8f140",
        "cursor": {
          "ref": "1f019f64-f5cf-4786-87f7-b00ef44a17fc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d33457cf-0417-4ea4-a648-b0cbf0c90ddf"
        },
        "item": {
          "id": "2cfe2b18-784e-46a1-8515-5120e9e8f140",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "226a2770-e2d4-49f9-8a83-d9e6e220d64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d57a2d-26eb-4d31-abde-b569b685b99a",
        "cursor": {
          "ref": "4ed7d206-a484-4140-a1dd-3f85ec350fd3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cd18b4cc-d38c-4295-a754-95aa0d0ab0b7"
        },
        "item": {
          "id": "f8d57a2d-26eb-4d31-abde-b569b685b99a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "08ece879-88ea-46f3-becc-b587c0d1f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc9837d-fc04-4c33-9795-0b7a941eb284",
        "cursor": {
          "ref": "61c9c8e9-de50-43da-acd7-9fca2e28316b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4e5fbba9-e063-4434-914a-ff296a1d1c91"
        },
        "item": {
          "id": "6bc9837d-fc04-4c33-9795-0b7a941eb284",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73da7681-2b97-44e1-9717-bf75753fbc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a314cfa7-33db-470e-a687-d161f102b2ac",
        "cursor": {
          "ref": "74bfdd9d-019c-4f44-bc67-808953a4d019",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1d815cfa-52f5-44fc-add4-a04bf3ca64d7"
        },
        "item": {
          "id": "a314cfa7-33db-470e-a687-d161f102b2ac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cd1fbac-b34b-4dc1-a6df-8c34f7a3ef58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd94d2d-dd23-4e42-93e4-00db3587910b",
        "cursor": {
          "ref": "32c5d6ed-3565-4feb-bef3-dad02661b3a3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "825eeb12-f312-4dbb-a1cd-b31f851a75f7"
        },
        "item": {
          "id": "0bd94d2d-dd23-4e42-93e4-00db3587910b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efe33f95-3e88-44a3-a326-8a56cc3e8b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eb1297-ee50-4756-a501-11bf908ea7a4",
        "cursor": {
          "ref": "fb146e63-eca4-4439-988b-20d6cb82e357",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3581304b-1b6d-4846-9e33-79cf8553d587"
        },
        "item": {
          "id": "33eb1297-ee50-4756-a501-11bf908ea7a4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "419945ec-e885-4e81-9e36-de66623b4877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7032b1-8b7e-455b-8265-f7c79be7bf5f",
        "cursor": {
          "ref": "e4faf6ef-43a7-4bec-bb68-d539d7686d0b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "11ee0cbb-c66d-4783-a5fd-20f18e99b56d"
        },
        "item": {
          "id": "9d7032b1-8b7e-455b-8265-f7c79be7bf5f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0001637d-cd87-411d-bf81-68853dd3bdfa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 147,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1d9df584-de0a-448e-83c5-aa1d73d07960",
        "cursor": {
          "ref": "d997bdae-0dc8-4bf7-b1c3-8fd7220609f5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "74de9e22-f723-4954-9706-44db8608dd71"
        },
        "item": {
          "id": "1d9df584-de0a-448e-83c5-aa1d73d07960",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b3186a36-500b-494c-8305-9e100ea9e31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d492075-2f62-488c-8979-b9db6f4bf158",
        "cursor": {
          "ref": "26fdbd89-7a89-48af-9f50-805f49e54ba2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c116f12d-ee29-4cec-b168-a246c1f4c1b9"
        },
        "item": {
          "id": "2d492075-2f62-488c-8979-b9db6f4bf158",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ee68439-3974-40c9-b5c1-d8ab1c4417f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d5e24d-c28f-4644-bdce-59829a7397d7",
        "cursor": {
          "ref": "975fcd9b-9245-4cf3-a5b8-bd34faed29f2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e4db12b3-e5a4-4e12-9baf-218c8172fa39"
        },
        "item": {
          "id": "58d5e24d-c28f-4644-bdce-59829a7397d7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "73896868-70da-4073-9859-4db0a9adff38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220db737-f8cb-4f58-be14-c03be143bc86",
        "cursor": {
          "ref": "42220a83-06c0-4531-92ff-1508a99d0266",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "11719a72-9f25-408f-b0df-cedaaad726f2"
        },
        "item": {
          "id": "220db737-f8cb-4f58-be14-c03be143bc86",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7929cbe5-d3e9-4c03-9217-cac1eafd2ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd43548-da6e-41ab-a572-88be00669493",
        "cursor": {
          "ref": "c21daa46-598f-4a92-b0d5-762f1a4e68da",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "390a6412-65ed-442a-bc04-f0a52b5f4f51"
        },
        "item": {
          "id": "6dd43548-da6e-41ab-a572-88be00669493",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89f7cdbd-e048-43ef-8d63-490c26509b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbb5555-97db-4f7e-841f-237a8a9e2f38",
        "cursor": {
          "ref": "ac9fd980-feb9-476c-ab2a-a6f2e913db45",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d53c35c5-0871-419a-90e8-9faf3bbd1350"
        },
        "item": {
          "id": "acbb5555-97db-4f7e-841f-237a8a9e2f38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68d95bbb-3864-4f4f-ae19-e22442183cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf0579-61f7-4fe5-8416-cac0e5548c1e",
        "cursor": {
          "ref": "ee2047a6-acb5-44dc-833d-7891645199de",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b2731b6-7a3a-4e06-b2f1-e3a8e461b241"
        },
        "item": {
          "id": "0dcf0579-61f7-4fe5-8416-cac0e5548c1e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b256663c-321c-437f-ad0e-cac49848cbb5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 147,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "325a8322-1cb6-4ff3-b500-8c4e554149b0",
        "cursor": {
          "ref": "752aa5b3-3475-423e-aeca-e02b0cd80a39",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "73363593-57fb-402e-91b0-ad81a1df7bfd"
        },
        "item": {
          "id": "325a8322-1cb6-4ff3-b500-8c4e554149b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "57c27216-dd57-4c5a-b67e-87d885996063",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ffb79a-dbaf-4675-bce4-afe1f7a46995",
        "cursor": {
          "ref": "58f53ac9-cfc8-4710-a96f-8891acd61548",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0f11e8d-3310-463c-930b-7f1e74c27501"
        },
        "item": {
          "id": "b1ffb79a-dbaf-4675-bce4-afe1f7a46995",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75c913f1-0103-4c28-b46b-6ffa42768588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587f89d-fbf7-4866-ae32-5f0f42d509ab",
        "cursor": {
          "ref": "0833b6ed-3aa1-43a6-a425-32877f83d686",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f8fa7470-e153-4cc1-b298-0e644c23e7bd"
        },
        "item": {
          "id": "4587f89d-fbf7-4866-ae32-5f0f42d509ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35a4f26b-4959-42fb-b62f-513000227e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c96e607-57b3-42f5-b276-61b1b772a570",
        "cursor": {
          "ref": "1cced61b-78a2-4aaa-ab8d-5b9e534cc401",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "594b2a5d-a4ea-4e96-bd86-4cf9481d55cb"
        },
        "item": {
          "id": "9c96e607-57b3-42f5-b276-61b1b772a570",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b6dc97d-845e-4b6a-b9be-52ab27cd81a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c0684a-8b8a-45bd-b940-858cc960323b",
        "cursor": {
          "ref": "bf52021e-e10b-43de-b0ff-e4cd59057a71",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "071d2246-974c-44c1-90a3-a439d8b72cac"
        },
        "item": {
          "id": "01c0684a-8b8a-45bd-b940-858cc960323b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b61320d5-45ca-4809-b70a-30e76ce8c137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3cc8a0-6c83-4870-9b69-ea6162c47b63",
        "cursor": {
          "ref": "56f33742-9951-45c7-bd94-8e21bd499c65",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "58d24bb4-da81-45e0-927f-9ad619e06109"
        },
        "item": {
          "id": "bb3cc8a0-6c83-4870-9b69-ea6162c47b63",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7b445006-2a5a-427d-9a5b-725fa7047793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f310caa-db45-4100-9ba8-ef08db9fa95a",
        "cursor": {
          "ref": "c95ceaa3-8325-4e98-9c00-b3656c9d32db",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "294ed627-3249-4ad6-98bd-8513a92c5c53"
        },
        "item": {
          "id": "1f310caa-db45-4100-9ba8-ef08db9fa95a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e2d5bae0-de67-43bb-a9f9-c289a37f8875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4363bf-9909-4f57-a4e8-9526dd403298",
        "cursor": {
          "ref": "7270437f-eb1b-40ae-9a5f-64ce2069ca55",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e2420fe0-a972-42e5-bce9-6712f51d25f7"
        },
        "item": {
          "id": "af4363bf-9909-4f57-a4e8-9526dd403298",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a27e1a90-063a-4446-bc9a-b23c9eb58c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92111931-5e09-4d2d-9248-452126c26524",
        "cursor": {
          "ref": "1e4b958e-6e76-4205-b6fc-a7ebf6e5aa4c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3772d0ff-1d79-485b-ae87-657e87c4aae0"
        },
        "item": {
          "id": "92111931-5e09-4d2d-9248-452126c26524",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f36e56e-4d67-493f-a23c-c0a651c3701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd3a7c0-4467-44a8-8902-d0a035f94848",
        "cursor": {
          "ref": "7f7127be-2301-4252-9b2a-3f8dfa687ee7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "406df025-9b44-468c-ab27-647f975f16c9"
        },
        "item": {
          "id": "9bd3a7c0-4467-44a8-8902-d0a035f94848",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1bc12298-7485-4540-887b-a4dce49aab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d7f56d-eb60-4942-ad5d-d6f47f087ae9",
        "cursor": {
          "ref": "77d7e085-db07-486a-ac3c-03b47e9042cc",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "24784cb9-9e2b-4288-b3aa-2532f32b9064"
        },
        "item": {
          "id": "93d7f56d-eb60-4942-ad5d-d6f47f087ae9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ecd7462-a33a-457e-84d3-ae62b0ad11bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2912e5-c361-4d66-91c0-53e161b7fc05",
        "cursor": {
          "ref": "d11ed7db-661a-4466-a0bb-bd63f447abc4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9886628d-fb10-4cc7-837b-a5fb63ff0379"
        },
        "item": {
          "id": "4a2912e5-c361-4d66-91c0-53e161b7fc05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ca27df08-d716-45a9-9f5d-d946db6cf02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11874d8-0f13-4d6e-89af-9c1a596b6868",
        "cursor": {
          "ref": "7c427623-7d72-46eb-8338-0c09a4d80863",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e5432672-2f7b-4df2-87c1-64136d325ea8"
        },
        "item": {
          "id": "c11874d8-0f13-4d6e-89af-9c1a596b6868",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "606ba3cc-21d7-4778-800b-316389f20808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae84f1d7-ece8-4803-a80b-a6340d42111c",
        "cursor": {
          "ref": "3597ee45-a97b-40d0-b517-d54f8dc9eb05",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "acec4300-a34f-44ba-ac39-76c8f0973b89"
        },
        "item": {
          "id": "ae84f1d7-ece8-4803-a80b-a6340d42111c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46de37d5-dd9c-446f-b652-c19eac78758f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de8bc1-bc5f-48f7-a972-d6393d6b9175",
        "cursor": {
          "ref": "77ef0bb0-7b14-4ff2-a657-b63a73442e3f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "17ea0411-9f6e-413c-bdf9-7dabcf6a8e03"
        },
        "item": {
          "id": "37de8bc1-bc5f-48f7-a972-d6393d6b9175",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "46729469-722d-4e7f-a5f9-0883d699838e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91a50bd-5e8a-4c82-8ca2-aa09ea612828",
        "cursor": {
          "ref": "31512097-df1c-43a0-b392-778056dfbf05",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b6662fd8-ad84-4eb8-aeb8-d2a8588c9211"
        },
        "item": {
          "id": "c91a50bd-5e8a-4c82-8ca2-aa09ea612828",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e28746c0-89d6-4082-b65e-9affaa2f7fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c9ea6a-ea43-4304-9658-4a6b9a7aeb69",
        "cursor": {
          "ref": "f9af7c05-3da2-4d17-b5a3-e1913550ef21",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "52597bd6-45a2-43ce-82d9-fb726e4c69b9"
        },
        "item": {
          "id": "45c9ea6a-ea43-4304-9658-4a6b9a7aeb69",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "878a7efd-ab63-4f8d-ae45-45979482f578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96acf222-33a9-40d5-8483-627e9b46ff34",
        "cursor": {
          "ref": "1efbcc4b-8c49-40d3-8802-1fa6c0bac5c1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dfc278d3-4b8a-498d-9eb0-084d301ccbda"
        },
        "item": {
          "id": "96acf222-33a9-40d5-8483-627e9b46ff34",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f4737be3-b8cf-40b7-a511-2cc2440c64da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "29ca7ff4-cee0-4bad-baf6-d3d791ba84aa",
        "cursor": {
          "ref": "e3384447-2d5d-4df7-9eab-73c8a1b11063",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ddb0bb41-e5b6-4407-8114-9a3f4eaf1b52"
        },
        "item": {
          "id": "29ca7ff4-cee0-4bad-baf6-d3d791ba84aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01b429b9-0a32-4d73-963f-7b0845e4fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b5648e-7745-41af-af1e-7c27b6f4113e",
        "cursor": {
          "ref": "b306daf2-6605-40f9-89d8-97706e0ddfd9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "baf3cf87-c1ef-4160-8b10-430232bdb139"
        },
        "item": {
          "id": "a3b5648e-7745-41af-af1e-7c27b6f4113e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "69222979-b184-464d-9c2d-1a193736420b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef03cc-9890-4a57-9095-10ffc9f37dad",
        "cursor": {
          "ref": "2c0581dd-015e-4419-9239-500010156f64",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a2c493ab-b24f-416c-b95f-7684d2b29825"
        },
        "item": {
          "id": "b7ef03cc-9890-4a57-9095-10ffc9f37dad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "866f07ad-a164-43e7-9a49-a06eaeb16d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d76e6cd-de9e-405f-8c3b-7234354cb4f0",
        "cursor": {
          "ref": "842c71d2-e64a-4aad-ae2b-23126b8e5364",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8c29e847-18ae-4cd9-82bb-cc770b69845f"
        },
        "item": {
          "id": "7d76e6cd-de9e-405f-8c3b-7234354cb4f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "caeaef76-8588-4bec-85b4-7212bb96592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b33e04-4ba8-4347-82be-3e4a6843568e",
        "cursor": {
          "ref": "d102fc00-76d5-42ee-ae6d-8a84a023553b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "afc5dd43-9ffe-4ab4-bb15-6ff36d7fbd8d"
        },
        "item": {
          "id": "97b33e04-4ba8-4347-82be-3e4a6843568e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ee3a668d-7154-42c3-abdd-2d06416e3a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d40733-0d27-4332-aeb4-4289a868ec81",
        "cursor": {
          "ref": "e5637d63-3189-4e42-b086-092beeb38005",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "236df6b7-98ce-4ea7-8ecd-62a448018349"
        },
        "item": {
          "id": "c5d40733-0d27-4332-aeb4-4289a868ec81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad09bae2-7488-49e9-9c3e-971f05e33d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a51ae8-6faf-4eaf-8fe1-255cf7757938",
        "cursor": {
          "ref": "5d40e659-9366-4249-aedf-d811e85713a3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e22bd157-3e69-4f44-914c-f5f1c862484b"
        },
        "item": {
          "id": "95a51ae8-6faf-4eaf-8fe1-255cf7757938",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "775a6fd8-a576-46e4-b14d-9dae71111f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5564d6c1-5c91-4e46-ae65-598f22d04162",
        "cursor": {
          "ref": "5bbf0639-9050-403c-8e3e-8c04e1347284",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "32d7b486-5452-4f70-9411-db449beed7d6"
        },
        "item": {
          "id": "5564d6c1-5c91-4e46-ae65-598f22d04162",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c899649e-a038-4d61-8e75-5baecaed35bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "4a89904e-969f-4b08-b2df-1ed548be977a",
        "cursor": {
          "ref": "12286305-9121-42ff-9bef-4bcb178702fc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2725f9da-1d99-4aad-8e1c-dac04c805252"
        },
        "item": {
          "id": "4a89904e-969f-4b08-b2df-1ed548be977a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0aad1bb9-c810-4c81-bee5-6aa1086daa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabd044e-5dba-4ae7-b260-4c4b3d5c1a2e",
        "cursor": {
          "ref": "5faff625-b773-4e50-888d-af9bbfd06b4f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "28d2d8fc-6281-4c3f-b2c1-c2e47c361d62"
        },
        "item": {
          "id": "fabd044e-5dba-4ae7-b260-4c4b3d5c1a2e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "492f52a9-6870-489c-920b-ed187c098e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b8d19e-a14b-4d47-94e1-df5de8ce0fdb",
        "cursor": {
          "ref": "0b126290-1046-48be-91aa-163141d50e03",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d335d39-e93b-4cbe-a9fa-ff2eaec579e3"
        },
        "item": {
          "id": "b3b8d19e-a14b-4d47-94e1-df5de8ce0fdb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4bdfe935-181c-45e2-9930-3afb2ea3c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d60271-d6de-4041-aef4-479dbfc675f6",
        "cursor": {
          "ref": "979666da-78bd-4fe0-bb3c-d5bc32e86a04",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b98e1008-efe2-4b02-a78b-9c0a5a87d1cd"
        },
        "item": {
          "id": "b6d60271-d6de-4041-aef4-479dbfc675f6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5183e741-6f8b-4c9a-935d-c0669e1493e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e80d0a-4e16-40dc-bff7-fd5153e6dd09",
        "cursor": {
          "ref": "de63d004-343a-4384-a393-9b1a99a17f7f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9f46b5bf-28b2-48d2-a1d5-a089c729beef"
        },
        "item": {
          "id": "b4e80d0a-4e16-40dc-bff7-fd5153e6dd09",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d7d7fb8d-4823-4612-87d2-1a15363cfbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4cf51c-21e0-4cf5-a02e-35b57fb5e08f",
        "cursor": {
          "ref": "0892d594-b436-4296-b163-aba5700ae73e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "26c9315c-019d-4ebb-9880-8b66b1004a49"
        },
        "item": {
          "id": "dd4cf51c-21e0-4cf5-a02e-35b57fb5e08f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e4376ca-1305-4382-b4c5-8acbe5b37303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d186a88c-01ea-4a24-9b80-be14405d9033",
        "cursor": {
          "ref": "865b2fb6-644f-4e68-a898-1d4102c5bfa0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2efed51a-a089-4175-8f3c-daac7f231b9d"
        },
        "item": {
          "id": "d186a88c-01ea-4a24-9b80-be14405d9033",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b3b98a2c-f22e-4b78-8385-064bd36e4fe4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "b4ad874d-de5e-4a92-9f2b-3c7e2d295b61",
        "cursor": {
          "ref": "8b44109d-e1aa-482e-beb3-aec0ddac27ec",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "75090c0f-de12-4d1c-9aca-fd08c5314fe5"
        },
        "item": {
          "id": "b4ad874d-de5e-4a92-9f2b-3c7e2d295b61",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7b3fc99d-81ee-4cda-a71a-3891476cc223",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "ca45c676-525e-498c-b451-50f5e318b2f7",
        "cursor": {
          "ref": "72405340-910a-43a0-abcb-3f13a221d5a3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f24dc18b-1d22-40d8-8ab4-4362dcb99ef6"
        },
        "item": {
          "id": "ca45c676-525e-498c-b451-50f5e318b2f7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "460df588-539a-4e1a-b584-0fd73ded1366",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d197b056-528a-4e91-bc26-10fbf0b0e051",
        "cursor": {
          "ref": "7b35b094-52fd-4c20-af63-59e236ad132f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5ee5f9de-099a-4ffd-af44-69e1c558e5c4"
        },
        "item": {
          "id": "d197b056-528a-4e91-bc26-10fbf0b0e051",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c895a64c-601c-45ac-938c-8b4d39348e1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "5e674b34-6c80-44dc-bf65-bff53d7d54a8",
        "cursor": {
          "ref": "a751e3ce-18f0-4857-adb5-916151735163",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "973ce084-aa64-4d72-8e4d-20312efab45c"
        },
        "item": {
          "id": "5e674b34-6c80-44dc-bf65-bff53d7d54a8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "30805ad6-451a-4453-84ad-760248f58d41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 598,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8efa6a55-73a9-439b-b8fb-c1514b2c9eed",
        "cursor": {
          "ref": "e59031be-0414-44d3-a708-4c666811f3a0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5b8e299e-74f5-4b81-9c08-ed475c5e834f"
        },
        "item": {
          "id": "8efa6a55-73a9-439b-b8fb-c1514b2c9eed",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4ae8e5dc-2171-4199-aa0e-78da6ceb3db4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ba66c720-5bac-478b-baed-c69beec9fae0",
        "cursor": {
          "ref": "0f5f72f0-00c9-48df-bfea-b496c80e73df",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9f312c88-f8ab-4d6f-9cc8-15158e63bbf8"
        },
        "item": {
          "id": "ba66c720-5bac-478b-baed-c69beec9fae0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb5886d6-332b-4ff5-a63c-96698cae24fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827be927-8323-4321-8d88-bae5f640da0e",
        "cursor": {
          "ref": "dc6f399f-46cb-4b1f-b574-997a011240fe",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3f4750dc-85fd-425f-8299-d008c367a7dd"
        },
        "item": {
          "id": "827be927-8323-4321-8d88-bae5f640da0e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c41b2341-520d-4775-a985-46885e04ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8216add8-ceba-4c4a-ac56-6242b704fbac",
        "cursor": {
          "ref": "cb83e617-2c6c-408b-81f6-1709fd65b784",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "34585379-fb83-4d1e-b3f3-7a2c344b6849"
        },
        "item": {
          "id": "8216add8-ceba-4c4a-ac56-6242b704fbac",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d137f466-7c57-4555-905d-fd03094537b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2bc1d2-e5be-4666-b7f6-60f54eb76dbe",
        "cursor": {
          "ref": "39c9d259-b132-4107-8695-5bae138f1b4e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2b2fef93-0eae-4acd-b64e-a0f6e81f901b"
        },
        "item": {
          "id": "4d2bc1d2-e5be-4666-b7f6-60f54eb76dbe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9ca14fc1-3aa9-4a8a-8e2a-dd6db9745b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497f4d77-2670-46a6-bb85-106b46191e26",
        "cursor": {
          "ref": "01ae5f16-d581-46d3-a1dc-e2769d66a7ca",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f5b90fb1-52be-4506-a459-59cbb2a2cbc8"
        },
        "item": {
          "id": "497f4d77-2670-46a6-bb85-106b46191e26",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ca1f0e2-0858-40c6-8ac5-fc6b652c0d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47372eaa-0aa4-46fb-becc-4d4e08de9f9d",
        "cursor": {
          "ref": "e6776cf9-eb75-42ff-a5bf-71cee2411093",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "09fd24cf-1c76-4a1f-9b1e-64d2d1dd742d"
        },
        "item": {
          "id": "47372eaa-0aa4-46fb-becc-4d4e08de9f9d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9cacfad9-48af-471a-b43d-ee30fb213407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5d26dd-3e63-4ba7-b130-751d976416a1",
        "cursor": {
          "ref": "5b5f8568-c678-428e-aba5-85990a37e822",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e86604eb-0b2c-45fb-9d62-5f265bce99f2"
        },
        "item": {
          "id": "eb5d26dd-3e63-4ba7-b130-751d976416a1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4d122d11-3392-48e8-b3b0-1ca76906097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe11fa1-0579-434e-b818-251c042d3482",
        "cursor": {
          "ref": "b96a53c3-5b28-40ce-935d-f4c0ff18cdba",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8a27c84e-a7a5-467e-ad4f-e24b58ff34a3"
        },
        "item": {
          "id": "ffe11fa1-0579-434e-b818-251c042d3482",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1f03c8a1-e014-4330-bb0b-d8405c108f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf44210-4b8d-4be3-b8ee-d0109473a9d6",
        "cursor": {
          "ref": "3ba2203e-9d14-49f6-8190-48596068ab3f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "627dedd5-ba92-4217-a192-340343200bb9"
        },
        "item": {
          "id": "2bf44210-4b8d-4be3-b8ee-d0109473a9d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eccb1eed-d007-4964-b707-a365a2fdefe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4a23b0-0905-475c-89c2-4463e51c96a2",
        "cursor": {
          "ref": "b9ad30de-558d-463e-9ec0-41b3a29ee713",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c7590e3a-c426-4269-b412-450776c5e152"
        },
        "item": {
          "id": "ab4a23b0-0905-475c-89c2-4463e51c96a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12629482-96f6-4b37-b4df-d29f9c03a492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca4abe-a55e-4a5a-b8b9-d06d46974530",
        "cursor": {
          "ref": "7964ede1-75c5-4bec-8e45-4ee91f7f8bfd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "45863ba3-566c-414f-be6a-9d425720a828"
        },
        "item": {
          "id": "f3ca4abe-a55e-4a5a-b8b9-d06d46974530",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7bc46b19-f69e-417d-8265-da03932a4d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473a869b-4e88-4855-9546-7d7d19577b55",
        "cursor": {
          "ref": "6e25193b-8225-4980-a70b-b4e3485a42bb",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c417df3d-e29c-48f2-a536-52c993a30439"
        },
        "item": {
          "id": "473a869b-4e88-4855-9546-7d7d19577b55",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "585d7922-9213-4623-b246-06fdae9b5c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc49782a-1fa6-4846-8109-b7b4913b1cfd",
        "cursor": {
          "ref": "0a6c4670-c408-4a09-8434-b1069058084b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2830d158-5a4a-4294-85ae-5528fc80b417"
        },
        "item": {
          "id": "cc49782a-1fa6-4846-8109-b7b4913b1cfd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f87dbfe4-f308-4afd-bba1-7f959721cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e185f1c-aa1f-41e8-ac48-5406367b8e06",
        "cursor": {
          "ref": "50274ff4-0641-4ef8-ba61-8db51c0ddad0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dc66fb5b-1eb2-41c4-b23e-d14c6df10b58"
        },
        "item": {
          "id": "4e185f1c-aa1f-41e8-ac48-5406367b8e06",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd492adb-4583-49f7-aa0f-9d8a42fcadbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd992cf-3bf9-4656-866d-cdfe8bba8bb0",
        "cursor": {
          "ref": "5a75c8b8-9d62-4eff-9da8-b710bdcf3f8a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "798d86f5-5b80-48ba-8e9f-9eda7b91638e"
        },
        "item": {
          "id": "efd992cf-3bf9-4656-866d-cdfe8bba8bb0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69a049c4-113e-4e48-83b0-4d42867669d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf8a2d6-a7c5-4442-9cb2-985230adf5da",
        "cursor": {
          "ref": "556b8703-6d53-44fa-b2ab-50bc39da5ddc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6be6aef3-31b3-44a6-a8dc-f1f137907476"
        },
        "item": {
          "id": "daf8a2d6-a7c5-4442-9cb2-985230adf5da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b9605e4-ef3a-4cdc-9d4a-9a7acda40563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb266c-f3ff-478a-a7bd-4f83bbc20425",
        "cursor": {
          "ref": "d11023b1-70f3-4991-ad71-36aa004f813f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ab41aa9-c964-4492-b62c-8fd1378c3519"
        },
        "item": {
          "id": "b4eb266c-f3ff-478a-a7bd-4f83bbc20425",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5d9c9418-9e96-4cc5-a305-ccaff98df563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875b0483-7bf2-4c01-b815-8899817d754e",
        "cursor": {
          "ref": "b9f00e24-9363-4b4b-86c6-484006ac1d9a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56e870bc-4554-47ab-93a6-9910448b548f"
        },
        "item": {
          "id": "875b0483-7bf2-4c01-b815-8899817d754e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c23db5aa-4049-434b-8ac4-c9408b6fe6f4",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "fbcbcbec-7b1d-45bd-b236-7decf157b7d2",
        "cursor": {
          "ref": "f20f6f91-bf0b-4fcb-9c30-420025b85155",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d5c2c65-399b-47cb-9491-6768b5ff61b5"
        },
        "item": {
          "id": "fbcbcbec-7b1d-45bd-b236-7decf157b7d2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b532759e-cf84-45ef-88f3-b3669abd1e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b067ba-20a3-49f6-85f0-71ddfaacb57f",
        "cursor": {
          "ref": "f171de1c-f77d-40c5-9e1a-f3959207b68c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f1709930-6316-47a4-bb53-408507ee656e"
        },
        "item": {
          "id": "42b067ba-20a3-49f6-85f0-71ddfaacb57f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fad055a0-3b9e-4490-8cd2-4e4aa5ba3340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e084d1a7-db98-42d3-bd9f-70211bb0e041",
        "cursor": {
          "ref": "b34eb2ba-3403-4c96-abcd-68ae8696b7d0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "834b0fb7-b8b6-4cd0-a450-53500370d2c8"
        },
        "item": {
          "id": "e084d1a7-db98-42d3-bd9f-70211bb0e041",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "81aeb4e9-8638-43d9-9230-e7870b59523a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4c39f1-2d5e-4ecb-a46d-d798270c7b64",
        "cursor": {
          "ref": "7c57c067-6a45-4932-a511-7bc7c9943ea3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9bae4b50-a886-44f0-967a-b6f67671befb"
        },
        "item": {
          "id": "1b4c39f1-2d5e-4ecb-a46d-d798270c7b64",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d93176d8-e2c5-409a-903d-bd42bda48842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81790ff-7a7b-4d42-bf3f-9e2c829c424f",
        "cursor": {
          "ref": "e6743467-dced-4aca-b2da-96618fcb8aaa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1d4ac9cc-9c86-44ca-8dfc-fb503061ac38"
        },
        "item": {
          "id": "a81790ff-7a7b-4d42-bf3f-9e2c829c424f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf2ba399-fd7c-4d5b-83de-8d863292b936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0010f-bf18-401b-9e61-a763f515517b",
        "cursor": {
          "ref": "cba3705f-d1e1-4bb1-a456-0d26db6f6ca8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d927bbd7-12cd-4148-b14f-3401f09b0607"
        },
        "item": {
          "id": "dea0010f-bf18-401b-9e61-a763f515517b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a30187ee-8806-45d4-a171-63f161dc9bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a12bed-330e-4ecb-880b-11a1ec8573ae",
        "cursor": {
          "ref": "1ec1d986-5962-4577-9dd9-a669026fe986",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a921974-5145-402b-8bde-6d7cc67b0d51"
        },
        "item": {
          "id": "96a12bed-330e-4ecb-880b-11a1ec8573ae",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "715bf01e-a437-44a3-b7ea-c82b142e4265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e115d-d3b4-4747-ad89-77830eb1f031",
        "cursor": {
          "ref": "6750162b-c96a-450c-b47b-23a1ccfa378e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aeb558c8-9e7c-45b4-bf29-aa7264d2d2cf"
        },
        "item": {
          "id": "f73e115d-d3b4-4747-ad89-77830eb1f031",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4489cfa6-c44b-47a8-9dd7-66a67cac1e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3923ce4b-424c-418d-8d5d-a4046fb3d65d",
        "cursor": {
          "ref": "652d1cbe-64a5-4d4f-b742-abe4e5e70db0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1294f198-1fb7-4aa4-8fb2-0fc9520389c0"
        },
        "item": {
          "id": "3923ce4b-424c-418d-8d5d-a4046fb3d65d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "abbf8dd0-738a-4359-acd3-afee46bc8d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495cb2d1-7488-4c04-bc3f-df0588a5a2bb",
        "cursor": {
          "ref": "e0be4fdd-d955-464a-8ce2-d516afb4f689",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "310ed1aa-9408-48e9-b738-09a5bca143df"
        },
        "item": {
          "id": "495cb2d1-7488-4c04-bc3f-df0588a5a2bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "461b206f-9294-4876-83d4-a45731585e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb326f7-9e63-4e25-a379-44febbca9eb7",
        "cursor": {
          "ref": "f96f4ad5-2f63-4c91-b6e3-a58208645d70",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b8ce1701-306d-4448-bd95-7517f39036a5"
        },
        "item": {
          "id": "9bb326f7-9e63-4e25-a379-44febbca9eb7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "42e5a560-1bb6-4132-9a7a-0f2e8a846bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ce3666-634a-4f0a-892e-d91d2cdb8577",
        "cursor": {
          "ref": "7f7fe373-343b-4533-8293-144dfdaa2ebf",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18250777-72da-4069-b7fa-237a43831533"
        },
        "item": {
          "id": "c0ce3666-634a-4f0a-892e-d91d2cdb8577",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "951903d9-3d5a-4833-afc9-7702dd4b7570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f006777-a0f2-4462-af48-b4139eaf5dd9",
        "cursor": {
          "ref": "ccff7fad-dab2-473e-a69e-e046634333ee",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4e36f681-7f76-4c9b-9c23-2d75e1e9c34f"
        },
        "item": {
          "id": "5f006777-a0f2-4462-af48-b4139eaf5dd9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3178889d-5b7c-4b45-91be-08dc92c16df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35721b03-abaf-44c9-9834-53bb28203b35",
        "cursor": {
          "ref": "ac188c70-9d31-4926-b4d1-a0ab6608dae2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2450c961-b907-445e-9791-ab13de301d33"
        },
        "item": {
          "id": "35721b03-abaf-44c9-9834-53bb28203b35",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c665f108-88e4-4872-b264-0fc72cdc6d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35148b1b-cecf-4af2-9ac9-bdeecc7ac81d",
        "cursor": {
          "ref": "12ac59ce-4448-40f8-9e56-59d0442f01ed",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "447c86ef-c8cf-4f08-8f37-c259c76a484d"
        },
        "item": {
          "id": "35148b1b-cecf-4af2-9ac9-bdeecc7ac81d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a09d7ef3-89a3-467e-8eab-b4a5988b1a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065b358a-5956-4f7f-9359-7402f195c724",
        "cursor": {
          "ref": "0a94a048-d27d-4ab2-8fcf-bced30da6d5a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "340042cd-6330-47c4-8783-c4cd97c1bc8b"
        },
        "item": {
          "id": "065b358a-5956-4f7f-9359-7402f195c724",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40cb72af-7766-4ebb-a283-9a989ba71daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d478f86-858c-4e01-9af8-673fa1853f86",
        "cursor": {
          "ref": "dedd9916-18c7-44ee-9ebf-95b6ae9ed389",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5286257c-260d-45c2-bbd6-c86305a9426b"
        },
        "item": {
          "id": "7d478f86-858c-4e01-9af8-673fa1853f86",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9d815e1b-37a2-486e-98d7-fd3fade26262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169526fa-e8c7-42d6-bf25-50d7a48f8248",
        "cursor": {
          "ref": "93c8a58e-4ab6-443d-a36b-bf67c92a3c60",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "44f3e35d-0040-42e1-9be5-4cafc044b449"
        },
        "item": {
          "id": "169526fa-e8c7-42d6-bf25-50d7a48f8248",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fd338d18-ac5d-4faa-b5c7-0b47eadde2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7df37d8-3ee3-4735-bda8-554e3e9843b3",
        "cursor": {
          "ref": "9cdbe19b-8b59-4875-bb38-aca0d058938b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "485d3f4a-70c0-458e-982b-9a6264f0117c"
        },
        "item": {
          "id": "b7df37d8-3ee3-4735-bda8-554e3e9843b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4c449ec5-3c2b-42c6-b7a0-ed1edfd05508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17770d71-5b49-4500-bf9a-f9e7fbe331ce",
        "cursor": {
          "ref": "f2361850-1693-47ad-9889-7ed522c961ac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "77209945-0379-4123-b78f-2a9c5549e952"
        },
        "item": {
          "id": "17770d71-5b49-4500-bf9a-f9e7fbe331ce",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d02f1cee-a5ee-4a31-a1a2-c251ca07146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de880097-8516-40a8-bb75-ae14b7d16f5a",
        "cursor": {
          "ref": "40bba51d-639b-4926-ac51-859cba72a846",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "701cccfa-8850-41a5-b443-c6d5828a71d4"
        },
        "item": {
          "id": "de880097-8516-40a8-bb75-ae14b7d16f5a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9facf645-858b-49e5-a338-2eb99d130e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f5d405-1eef-4257-82fd-06dbc39d26ae",
        "cursor": {
          "ref": "c2ab829e-2811-404d-811b-6ee5c8be6415",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9cc7e0b5-6b67-42e8-95d9-712ec82272fd"
        },
        "item": {
          "id": "65f5d405-1eef-4257-82fd-06dbc39d26ae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1c88358f-28dd-4f3f-90c5-993565b24bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c37177-8d9c-4acb-9f3f-a854e5315d62",
        "cursor": {
          "ref": "f5d5e046-e747-49d9-8634-baed4ac9972f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "29070c38-8af4-4124-b2f7-afa71dac650c"
        },
        "item": {
          "id": "b5c37177-8d9c-4acb-9f3f-a854e5315d62",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5f8106b1-aa55-42ed-8c14-20a562cfb1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa11577-d5bb-460f-9b8f-328f130b3a65",
        "cursor": {
          "ref": "893b22e6-7a10-4a1b-b3a8-ab118f99038c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a6b7b6c4-de06-4c8b-8cf7-e629100a7e68"
        },
        "item": {
          "id": "baa11577-d5bb-460f-9b8f-328f130b3a65",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f177a2c1-da72-43b5-8eb7-430aea6fd433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012d6c92-aa13-4997-acb4-220684fdb5d8",
        "cursor": {
          "ref": "d2294449-da64-477c-92a6-63f518f26f43",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cdac2035-f4bf-4379-9038-368149f9b1c2"
        },
        "item": {
          "id": "012d6c92-aa13-4997-acb4-220684fdb5d8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "55dd1ea1-81a6-4270-b931-77b90a146d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03409921-927f-4d64-9ea7-321767dd0e2c",
        "cursor": {
          "ref": "e6f94f93-154d-4c0a-a541-003ac795cb33",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e6bd0a2f-4b29-45af-96cf-5c8decc53b62"
        },
        "item": {
          "id": "03409921-927f-4d64-9ea7-321767dd0e2c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a65c92a0-0724-4f48-b245-e47961eebf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69c624d-24b7-4736-83a3-225c1ad443cf",
        "cursor": {
          "ref": "3d7f9623-0647-43ed-b19d-1bdcfeeb2d09",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "212c4c0f-8c6d-43fd-90d3-4345b5e3707b"
        },
        "item": {
          "id": "f69c624d-24b7-4736-83a3-225c1ad443cf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f41fed96-b94c-4bda-b517-b5c98e048d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9cceae-ae31-45bf-bba0-7f60199e374c",
        "cursor": {
          "ref": "d4d9f4f2-6659-4a76-803d-76d38b6f9dee",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44d4358f-bbc5-4edc-8249-19d7c9df1471"
        },
        "item": {
          "id": "7f9cceae-ae31-45bf-bba0-7f60199e374c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "14590498-651a-49ee-9414-23e2d835f165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aba4da-a2c3-49d0-bb13-aa4358bc10a9",
        "cursor": {
          "ref": "66785a89-f1e0-481b-8f81-3a733b56f58b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b03b676c-1be9-42ed-a874-dacdf612eef0"
        },
        "item": {
          "id": "87aba4da-a2c3-49d0-bb13-aa4358bc10a9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3b370843-806c-4a93-be02-defa8a877647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f35c6-cfd0-4a0d-a210-e295e7d67d4d",
        "cursor": {
          "ref": "be81a451-b55d-41a9-bfe9-66d6ee62ba99",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7664f039-f537-4c25-ae12-833110c5618c"
        },
        "item": {
          "id": "1e0f35c6-cfd0-4a0d-a210-e295e7d67d4d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "16b229dd-ac0c-4ef6-9a26-e46f84cecd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46903d-31e6-4431-89f3-17a56baad949",
        "cursor": {
          "ref": "1cae1800-000e-404f-9b54-a714c39ded4c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a6cdbeb4-113d-48b8-b3d3-04d245f8968a"
        },
        "item": {
          "id": "ad46903d-31e6-4431-89f3-17a56baad949",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5ad97437-3850-4b84-b4a0-6f1eb62f1e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c3289b-cc5f-4fbe-9356-2791f1b20ba3",
        "cursor": {
          "ref": "710e96eb-aedd-4ec7-a489-bb6cc70d384c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "04fa5755-8e11-4b08-bbd8-10de3cdb8d45"
        },
        "item": {
          "id": "f5c3289b-cc5f-4fbe-9356-2791f1b20ba3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7cd17653-7dad-4cb8-97e6-c8ed923df40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2dd119-c55b-42b4-ad27-0ced836a8579",
        "cursor": {
          "ref": "598d9880-f40a-4d8a-9c91-b57626f8b2a7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b8d1d25d-fc46-42a4-9ad2-edd5b097fda5"
        },
        "item": {
          "id": "2f2dd119-c55b-42b4-ad27-0ced836a8579",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "893a5fd3-537f-4ebc-abaa-f8d2c79c0050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15729de0-31e8-4ff5-8d3e-acbd0b362ba6",
        "cursor": {
          "ref": "3630907a-99f4-4450-932b-d8802b1b7af1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b1856e2d-db82-4421-b0c2-0b736e668d19"
        },
        "item": {
          "id": "15729de0-31e8-4ff5-8d3e-acbd0b362ba6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c5998fa0-da70-42a8-af20-ad32dbc727ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6577b68f-23b8-4d06-a402-54b63e95b7d7",
        "cursor": {
          "ref": "02f0fe36-9de0-47bf-8229-7b27677ca69a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "588d69d8-5e93-4d9c-a611-8001db0f3b19"
        },
        "item": {
          "id": "6577b68f-23b8-4d06-a402-54b63e95b7d7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ec11a3e7-34d3-4cde-bb01-a25f7c4db725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dddf2ec-a0bf-41cc-adf3-d87d28bffe29",
        "cursor": {
          "ref": "de770ed1-1dbc-4d66-aa87-379753b34092",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2f949cb-b555-471a-b23e-88bbb7bfc720"
        },
        "item": {
          "id": "1dddf2ec-a0bf-41cc-adf3-d87d28bffe29",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d25934a7-8ee8-4aba-bcbc-c98b2d187537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ca6c0-7d69-4962-935a-d37eda685ea9",
        "cursor": {
          "ref": "14c6fd50-b785-48cf-8b46-12d475a24ce1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "469325ea-a232-4b9d-acad-7383d85b8538"
        },
        "item": {
          "id": "717ca6c0-7d69-4962-935a-d37eda685ea9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7c78c1a0-1efc-4d7d-968f-e62e55ed623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fdbabd-81af-4730-a4a1-865eb357b5d7",
        "cursor": {
          "ref": "900448b7-43ef-40ed-8346-059079fdb1c2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "74f63067-0424-420c-a0e3-c696fd3e70a3"
        },
        "item": {
          "id": "d9fdbabd-81af-4730-a4a1-865eb357b5d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d6bb0816-92b3-4b49-93b0-f8ff9f96954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f238f4-d0fa-462f-95c1-66078aeb4ed9",
        "cursor": {
          "ref": "bd0ed407-1f14-4d91-aa89-38f8c2bc8e62",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0cbe92ed-915c-4d1f-8c46-7a40b79359e1"
        },
        "item": {
          "id": "92f238f4-d0fa-462f-95c1-66078aeb4ed9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f98c2c92-c1e3-4508-ba75-5757f7514fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee943c-0af3-4f97-9999-e0af24d1c76c",
        "cursor": {
          "ref": "181a3468-64ce-46b0-8fce-8d3597c3a9fb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4cf52896-55dc-40c3-ad21-e9a261a6e8c1"
        },
        "item": {
          "id": "2cee943c-0af3-4f97-9999-e0af24d1c76c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cabb9f7e-cca0-4944-b878-5c7727cc4047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6452e6c9-e333-46f8-b83d-234046ad1fde",
        "cursor": {
          "ref": "7cfc59a0-fff9-480c-9652-8797abee5088",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "78e1af12-7f7b-4507-857a-563c86ccd5b8"
        },
        "item": {
          "id": "6452e6c9-e333-46f8-b83d-234046ad1fde",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "35986caa-6b61-49a3-910d-999be8e9dea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12b7683-c5b7-4891-a94d-fa6f2ed9e9fb",
        "cursor": {
          "ref": "671aa077-d256-4aae-9427-e6928309d850",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b23cc095-af2e-4878-8e4d-a26df2f86ac3"
        },
        "item": {
          "id": "c12b7683-c5b7-4891-a94d-fa6f2ed9e9fb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e0fd222e-e9f5-4d57-8bca-aec716c78ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26a0c0f-d21d-461e-a4ac-1fa76ceaafd8",
        "cursor": {
          "ref": "3082c688-ccdd-45a0-9b8c-15c9d9d0a008",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75c1ff6b-0a71-4097-8523-b50ecfee5487"
        },
        "item": {
          "id": "d26a0c0f-d21d-461e-a4ac-1fa76ceaafd8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c560afd-e4e2-40dc-8b59-9e2618924717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e689b4af-f6e2-4695-beb9-a870a6d25e5d",
        "cursor": {
          "ref": "9e6ac4d1-5992-4c6c-b80e-f89396c200f1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5f187d80-d71e-43be-b1e1-f8d242973d67"
        },
        "item": {
          "id": "e689b4af-f6e2-4695-beb9-a870a6d25e5d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3a99c213-7d85-46b8-a2e7-96809a7929f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5312f9f0-f3fd-4b26-a70d-96195f18c5aa",
        "cursor": {
          "ref": "cfbb7677-dacb-4c5f-a7c0-9f5c79e53c27",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6ad6485e-fb90-478a-a79f-c89da82f1616"
        },
        "item": {
          "id": "5312f9f0-f3fd-4b26-a70d-96195f18c5aa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3c260029-5d47-4679-914c-799cf5dcfec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f020cad-eb7b-4948-8d28-60d49ebf89bb",
        "cursor": {
          "ref": "1de90487-afc7-4838-993a-7337686309d4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "734507cd-8d9f-4128-b139-2980f02f10a6"
        },
        "item": {
          "id": "1f020cad-eb7b-4948-8d28-60d49ebf89bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "973b633d-9f6d-491d-8f6c-2ea8d87bccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c3eb22-b13f-4757-8957-7c51a160e894",
        "cursor": {
          "ref": "4ec9267c-0d96-4f61-b31d-fdd75e9927af",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1dfb5267-b1dc-41d3-8fad-19466a451bba"
        },
        "item": {
          "id": "75c3eb22-b13f-4757-8957-7c51a160e894",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ae746e0f-41a4-4393-a918-12b81e52519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63800dcb-a7c1-48a6-acd0-3f9802e132b7",
        "cursor": {
          "ref": "a07acde9-5702-49d5-ba56-66e07c337172",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "50a8abaa-d5b7-4442-b129-e1b62210978e"
        },
        "item": {
          "id": "63800dcb-a7c1-48a6-acd0-3f9802e132b7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1606ec96-0064-4a20-aa68-fe93f81443ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e3297-0101-4695-98aa-8db5b92f7adb",
        "cursor": {
          "ref": "b297cbda-ca9e-48c6-9141-d5520e9a55cf",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6d6c703c-eec1-49bb-9b1c-698da34bb5de"
        },
        "item": {
          "id": "797e3297-0101-4695-98aa-8db5b92f7adb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "65a12033-d0ec-4c66-87f7-de7c035bc914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b4d4b7-1a63-42f5-a020-92b2d0ce3422",
        "cursor": {
          "ref": "5a260443-cdd2-49ae-a203-0c43631e03e3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "33ad1564-87c3-4777-8a9f-061750218dfd"
        },
        "item": {
          "id": "69b4d4b7-1a63-42f5-a020-92b2d0ce3422",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f8e5d306-5687-4fed-889d-9d4f39460486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbab4e39-aae0-4916-afc9-824b227266c3",
        "cursor": {
          "ref": "dba37c10-72f4-49e1-9bbb-1c5410ea69e6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3e1e1e10-d783-463a-9c59-3897fc991ba0"
        },
        "item": {
          "id": "cbab4e39-aae0-4916-afc9-824b227266c3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "47153b04-77fd-47e1-8398-04d6bf4fd2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8cd8a3-9c60-4ae0-bfe5-72571213f80f",
        "cursor": {
          "ref": "f5297077-c47e-46bc-830d-484693d8653c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d9d0e1d-5565-48a4-9ab0-5435831495aa"
        },
        "item": {
          "id": "3c8cd8a3-9c60-4ae0-bfe5-72571213f80f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "09e629d5-54e1-43fa-9c66-8a9dc950e370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb37959-2072-43a7-8baf-38f31eae29e6",
        "cursor": {
          "ref": "fc4ef1b5-d64f-4a2c-a117-f42822e97aa1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "948d09f0-9dae-4b18-8031-6140c3d4cb3a"
        },
        "item": {
          "id": "9cb37959-2072-43a7-8baf-38f31eae29e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "645672cb-5940-4aa2-b73d-e319eddac7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847cf94f-1afb-49ba-abfd-d948701c08e1",
        "cursor": {
          "ref": "223232b6-7828-4b3c-bf0c-e6f1cbfc2ff4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9926ef0e-a0f8-4cad-b731-77bb2095762b"
        },
        "item": {
          "id": "847cf94f-1afb-49ba-abfd-d948701c08e1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "28d679c7-d5d3-4a94-a1d0-0306bf93a589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3fdc6-eb7f-4b40-a092-a10d2119d71f",
        "cursor": {
          "ref": "1f251567-cfaf-4632-b234-2a5aaeefd149",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0ea18efa-af1d-469e-b00b-3f31f4cc8cef"
        },
        "item": {
          "id": "8cd3fdc6-eb7f-4b40-a092-a10d2119d71f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4879d958-bcc9-4c8a-a8d6-4b24ec0b2b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6805b70-96ce-4aa3-87a5-8085216f396f",
        "cursor": {
          "ref": "2499efff-dcc4-434b-8a44-011417e57c72",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "800ce3d4-652b-4e98-b221-8def646cc4ee"
        },
        "item": {
          "id": "c6805b70-96ce-4aa3-87a5-8085216f396f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "492a0e1d-dae3-426d-b3d0-0e1fa34140f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0367db50-783f-4358-ba6d-5c5de4b484b9",
        "cursor": {
          "ref": "74ce84ee-5a9c-4692-b900-9b2240b5351e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "37ea37be-f136-4021-897a-6b3f71ff6b62"
        },
        "item": {
          "id": "0367db50-783f-4358-ba6d-5c5de4b484b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ebb93385-2a07-49ca-9c8f-d4de2bd8f539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acae055b-164c-4d2b-a075-a5a5bab7d895",
        "cursor": {
          "ref": "1a9c6c27-f634-41c1-86c5-90e0d5f2bc18",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "653f97b3-c35f-4dc7-b868-a243701682d3"
        },
        "item": {
          "id": "acae055b-164c-4d2b-a075-a5a5bab7d895",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "23423603-2aa0-42aa-8468-fb309e39af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2e3a10-312a-4c21-bb9b-a8c870b127e2",
        "cursor": {
          "ref": "2d23f21c-ae7c-43ff-97ea-c529970916de",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "590fd6e6-383f-452b-8174-d8b24118334d"
        },
        "item": {
          "id": "8a2e3a10-312a-4c21-bb9b-a8c870b127e2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4700bd64-a1b6-4760-8cd3-05f36e1f8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5f03d4-6125-443b-a125-4c3ec33edccf",
        "cursor": {
          "ref": "7789219f-7b71-4d97-9875-ac782c83a4d4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4d9b0e77-3b31-4213-a1db-bcf843bf43e8"
        },
        "item": {
          "id": "4c5f03d4-6125-443b-a125-4c3ec33edccf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d78ed015-c166-4b22-a1d7-35e4e64636ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a43240-bc22-4a56-968d-8f84e991a4b0",
        "cursor": {
          "ref": "74891244-84d9-4967-87b9-be0f00b7c3d8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c201c177-9e48-4722-accb-7568a980782d"
        },
        "item": {
          "id": "20a43240-bc22-4a56-968d-8f84e991a4b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8ed5adf2-7b61-41e9-9a75-45382abeeaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5678193e-96f8-41b2-9fe0-f3f8bba27d82",
        "cursor": {
          "ref": "53686023-b279-42fa-8382-1f5c5f05e058",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1ea1a165-0fcb-49c1-aa78-9710c0aa869b"
        },
        "item": {
          "id": "5678193e-96f8-41b2-9fe0-f3f8bba27d82",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5a5a5dd7-7c8e-4681-af71-9bed142e158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e924037-51d0-4a50-a9f2-3d10eb5f4859",
        "cursor": {
          "ref": "e1bb956b-5202-4a04-9143-0e1be5ba36e8",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "172f4b26-7422-48df-9b95-215b2ad7c003"
        },
        "item": {
          "id": "2e924037-51d0-4a50-a9f2-3d10eb5f4859",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "37d68a7e-eabd-41f3-83d7-2cfaa848d0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b1d59-f2c0-4e4d-8015-91a961c4ac40",
        "cursor": {
          "ref": "66602bbd-3bf7-475b-8d7b-8a2360fb2ad0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "eb7bb6eb-91cf-4c9d-8194-da85b2488d21"
        },
        "item": {
          "id": "c62b1d59-f2c0-4e4d-8015-91a961c4ac40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a54b5577-f973-4829-87fb-76b668f1d473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16cc625-7a51-4754-b78f-760ddc26a2ad",
        "cursor": {
          "ref": "f0e8d79e-352b-4e35-a0e2-22e1aff607e1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f6c8d905-9411-4612-a4bd-5dda8fff0a01"
        },
        "item": {
          "id": "b16cc625-7a51-4754-b78f-760ddc26a2ad",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fa46cf4c-a4e0-41fe-acc9-0ba623849bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cf7909-7ec9-41bc-9f7c-913d956c1586",
        "cursor": {
          "ref": "8059260d-f5e1-4865-9c28-0ffc88d563ee",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "81d08a66-51ee-4127-8b73-47cc1c466d51"
        },
        "item": {
          "id": "00cf7909-7ec9-41bc-9f7c-913d956c1586",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2711fc94-fedc-4e21-a037-19bafdcda321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448171c1-1a22-4e74-b9c3-959f43a66426",
        "cursor": {
          "ref": "9ed6c263-4fa7-4e55-9de6-7a1f94157f9a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ca89d380-fdad-471d-a678-ad6046481302"
        },
        "item": {
          "id": "448171c1-1a22-4e74-b9c3-959f43a66426",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "544f9bec-4b99-414a-82a1-f40afc3395e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d0ab62-ed50-424c-b063-48004bfa8924",
        "cursor": {
          "ref": "422d382e-5547-4222-a904-a4318bad219b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ec1e5b7c-11a4-4ee9-9c5a-2505c6b96f07"
        },
        "item": {
          "id": "48d0ab62-ed50-424c-b063-48004bfa8924",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c2b29130-38a6-45fb-a295-0dbbbe045926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d89165-058c-4faa-bb9a-af5911b1da7b",
        "cursor": {
          "ref": "4ec5fa88-4924-4b04-9500-ab3845ece98a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5bb429a9-44b8-42c5-b7ab-f4f532de0e0d"
        },
        "item": {
          "id": "87d89165-058c-4faa-bb9a-af5911b1da7b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6b4c910a-d207-4643-8158-dff1aa8b2d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a5705-9a2e-4837-be6c-064c01bf8ad6",
        "cursor": {
          "ref": "907d6ba0-cf38-404c-8563-995665f83db9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "454b8220-87ad-4d65-bad3-4031091d70a1"
        },
        "item": {
          "id": "414a5705-9a2e-4837-be6c-064c01bf8ad6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "07587847-8cce-4977-bf12-3b8b639c343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de5df7b-6a34-4058-8300-1244b74a0433",
        "cursor": {
          "ref": "b01d9e41-cacd-4455-92ef-8d435efed59f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ad2a5eff-baf8-4df8-8dd8-abfb41759f81"
        },
        "item": {
          "id": "4de5df7b-6a34-4058-8300-1244b74a0433",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00df20fb-67e6-4a0a-a86c-586ae97476b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c9a039-c099-4e7e-8a83-3aec68d43694",
        "cursor": {
          "ref": "44d08386-7db2-4846-8e6d-8bcbd30f75cb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "41cfffc1-5898-4077-9a97-359ea3a85a83"
        },
        "item": {
          "id": "98c9a039-c099-4e7e-8a83-3aec68d43694",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac059fa9-78dc-4123-8b1b-87e4af8d45e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f20ef6-13e2-4260-ba4e-b55a94370340",
        "cursor": {
          "ref": "94ef134e-4af0-46b8-a60a-56c71de4d2aa",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "75d0988d-df36-496a-90c8-df95367825f1"
        },
        "item": {
          "id": "a0f20ef6-13e2-4260-ba4e-b55a94370340",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5e2c5a74-b62d-4a90-b774-d9bf0c0356be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88779b29-f212-4efe-b85d-53b1e76bd5a7",
        "cursor": {
          "ref": "8bcab388-8258-48cc-83c1-4d52da30502f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3ad73fcf-9aaf-4c1c-b872-b4851264bcc3"
        },
        "item": {
          "id": "88779b29-f212-4efe-b85d-53b1e76bd5a7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c6879cc3-f087-4f30-865e-94c9930dd61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ec5c51-d11a-410d-949f-2d429743ba40",
        "cursor": {
          "ref": "5f92d687-400c-48db-9601-2c4c5b2f4e94",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d3cf07fb-635f-4c8b-8f16-da6c0050fdfb"
        },
        "item": {
          "id": "51ec5c51-d11a-410d-949f-2d429743ba40",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "67c898e1-7cbb-49a4-866c-40af55cc7df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817c9b73-0702-43c1-9813-70ec7d8fa80e",
        "cursor": {
          "ref": "78689d66-7be5-4427-92ce-93564a10ca49",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5f8b075a-613d-4cba-b1b5-173be3504a4a"
        },
        "item": {
          "id": "817c9b73-0702-43c1-9813-70ec7d8fa80e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e085560f-b547-476d-aa82-fa10086f25b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d78739-4c68-4482-816d-ccb89e65f5ee",
        "cursor": {
          "ref": "e084c8e1-2a12-4d79-a749-bafc25d43dff",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fcd35436-e167-4572-86e9-db23372d37a9"
        },
        "item": {
          "id": "14d78739-4c68-4482-816d-ccb89e65f5ee",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "388863a8-e0ca-4e34-9c3a-c6b8581cbbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51314964-d12a-43f9-98ca-66713b254123",
        "cursor": {
          "ref": "60680802-a1ed-483c-9dbe-f816666507a8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "411458eb-0477-4707-bfe7-c2731b77f3de"
        },
        "item": {
          "id": "51314964-d12a-43f9-98ca-66713b254123",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1887681-8c95-4600-9ecf-8d761231c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eb5a5f-fa17-4d14-8fc6-40962f2bd7a4",
        "cursor": {
          "ref": "feaf57b9-e1fa-4420-991b-cefd93c020bb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9c056c72-b5e4-418f-8ffb-0f8baff44036"
        },
        "item": {
          "id": "a7eb5a5f-fa17-4d14-8fc6-40962f2bd7a4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af4e059a-9874-49cf-bc07-98770267f73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ebd2ab-ef1d-4f06-b0e5-bc9f6f2669a7",
        "cursor": {
          "ref": "0e6af359-8b7b-434c-bd5a-22a1811a98e2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a4aaf6da-2c21-4005-a9d2-d84860910bd5"
        },
        "item": {
          "id": "b7ebd2ab-ef1d-4f06-b0e5-bc9f6f2669a7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5c284d95-f066-4f4b-b21a-0b75ffd7f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9196d124-8010-43ce-b2dc-1ff3b1898abd",
        "cursor": {
          "ref": "caeecf8b-70de-4952-82ab-9cab009fe257",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8fd92dfd-5d8d-4774-b2c1-d37ea6b39586"
        },
        "item": {
          "id": "9196d124-8010-43ce-b2dc-1ff3b1898abd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "853fbcb4-5024-4727-8a77-5b2165befa0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919f2a15-086a-4af0-8bb3-0c26094f5719",
        "cursor": {
          "ref": "ca2b38b7-9b8b-4f6b-8fc9-767b72467afb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "41ff1773-75c6-4fb3-afd7-c6993b13e2d4"
        },
        "item": {
          "id": "919f2a15-086a-4af0-8bb3-0c26094f5719",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e14e9910-134b-499d-b74a-6f25e14e7b09",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8ec1b8-803f-4af8-b636-cbe7fa91972c",
        "cursor": {
          "ref": "921ebc40-1003-4168-870c-afcc07931676",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5c427ec1-3134-42a2-90c6-5fda57692d92"
        },
        "item": {
          "id": "9b8ec1b8-803f-4af8-b636-cbe7fa91972c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f3fd3126-c57f-4b5d-a17b-7985b38bc873",
          "status": "OK",
          "code": 200,
          "responseTime": 2144,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "839bdf18-72f0-4661-b2e8-e5376a772659",
        "cursor": {
          "ref": "b15f46db-6cdb-4091-8d40-fd29d2e03b5a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae5c1b4c-bdc2-44e3-b5bb-380bb59a5c08"
        },
        "item": {
          "id": "839bdf18-72f0-4661-b2e8-e5376a772659",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b1d76e14-0eb1-4076-933b-def09351dcaf",
          "status": "OK",
          "code": 200,
          "responseTime": 2810,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a2b8fb-9cb5-4a2f-acc6-780fde7fcc35",
        "cursor": {
          "ref": "42aa2297-f906-482d-87e6-01b88a102a71",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5c3b386-8930-4803-843c-877bebaa91a8"
        },
        "item": {
          "id": "44a2b8fb-9cb5-4a2f-acc6-780fde7fcc35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a506747-16d6-4fed-ae38-b3f73f4562b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a2b8fb-9cb5-4a2f-acc6-780fde7fcc35",
        "cursor": {
          "ref": "42aa2297-f906-482d-87e6-01b88a102a71",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5c3b386-8930-4803-843c-877bebaa91a8"
        },
        "item": {
          "id": "44a2b8fb-9cb5-4a2f-acc6-780fde7fcc35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a506747-16d6-4fed-ae38-b3f73f4562b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5047993b-2461-48d3-b994-a1c745c2913b",
        "cursor": {
          "ref": "59f85bbe-b72a-49d4-8e4a-c7ac6d7df36b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "60764ffc-b80d-4f46-94d6-6ec227c4786b"
        },
        "item": {
          "id": "5047993b-2461-48d3-b994-a1c745c2913b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3f4f0acd-9b7c-4b16-add0-2fc0a0cbcc69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af7d10d-4384-4767-86b3-90a02cd7da0c",
        "cursor": {
          "ref": "1154fe41-6dc8-4c29-9a3c-796423af8c9e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d95f6c87-eb5c-4c47-9324-e680c4b91410"
        },
        "item": {
          "id": "5af7d10d-4384-4767-86b3-90a02cd7da0c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "76854bab-68ff-418b-abbf-1663199cc7b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}