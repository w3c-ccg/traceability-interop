{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5486ec88-ad56-49ab-8c24-de15ee1b814b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "af25a809-3a87-4d8b-a032-ee91bd84439b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76eb870d-7d18-4afa-b5a0-5601eb2b1459",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70647071-5edc-4104-8eee-cea00ea8210e"
                }
              }
            ]
          },
          {
            "id": "b26e1f5b-5739-495f-b74e-850a67a0cb38",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad052e45-294f-4cfe-a92d-7ed85aad2061",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cd4f367f-ab05-447d-8bb9-cb1df293f187"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "46a866e4-c8a8-443f-94dd-c2d883532e86",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "33b38266-dfaf-4a54-ab51-6491ca1e6619",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d781ecd2-47ba-43b4-9e20-0336020363dd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b338829e-524b-4120-9f78-d504780f2d48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb371945-7ccd-460d-9772-b57b6166f1b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89aee311-a91b-4ecb-b63a-64868edd86e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f083b29-0841-4738-828f-cc205f4d8e65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4da0bb6d-bf1f-4eac-8525-b78569405a95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6faf6704-5aea-45e1-bce9-0cb1c5c6a310"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b1cb8e7-3547-4726-91e3-0e7146e51cb4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f108b6a5-4bc1-4993-b836-a560ffb40a66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fea0d57d-84c0-46bb-9ec4-e58c3ce58898",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6de95ffa-117b-4800-8465-a427035e0d32"
            }
          }
        ]
      },
      {
        "id": "9a208140-bd3b-4b5b-bfb2-39d0963e5a88",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3fb2de0a-0676-448c-94c4-fdb3ca780930",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f527f04-6454-4825-8f0f-2cc9652352fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69cd8d79-3699-4745-a798-bcb3aab89506",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d3ed83-2bd9-4559-9fbc-0060fc9bdb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39267989-0dd6-4e95-b6a1-8213fff2de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0ddbe7-2dca-479a-b097-e5f675b4a991",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd868a0-0266-45eb-a260-2f353713fa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2a69335-a5de-46c5-868c-be262f370788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f3f307-5606-4865-b187-da09d951df91",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3db621-eb6c-4c07-9349-fee6217abfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6636de37-4734-4b7a-94f9-3cb065f4da31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2edf3b6-6fae-4cb1-a0f2-b2509f96b34c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6134318-3dab-4a95-8008-2719c3db9977",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd2dfb-a428-47d0-9df5-6e7a1afb40bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b57d0731-d650-4d8b-9ffd-b836a3cb4dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559514d4-d9c1-4706-8525-1b2897cc7818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10c5bd5-4346-46a3-9137-aad7a6a61c58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "615abf82-2f48-4970-9b09-253b932d5031",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1464ac84-2a8a-46c7-a3f2-3a003666599b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7415e976-8229-4140-bd33-59a672a7c5e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1fe47e59-af6e-4ee6-8979-41348329c220"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4217106-3581-442d-89ce-ef38ebe27314",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "74508f84-a2b6-4827-86a1-87358cd872cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5806200b-8f07-42d7-8bf7-4a58fcc84353",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "250b6806-2fe8-4268-a21c-8ace5475f8b5"
            }
          }
        ]
      },
      {
        "id": "15a020ae-3e4c-4b40-8f9f-00ebaaaf68d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8542de19-d902-4cb7-b708-a4e4aa2577c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf454d6-175a-4380-9377-a7590681da54",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7a9c7bc0-1fc5-45e6-aa6d-39a4f8f5b7b3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84ef948-ee58-4388-945a-96395ea38f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a00f20-aeac-4551-9ea7-f0c1a46e5c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba785b5-bf37-48ae-8b94-9cf377081785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4904d2b-16c2-487d-90a0-a9c918826502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b2dadb-fcc2-42d3-9267-683fe694ed7e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7bc044-118c-417e-a4d2-c204d6a3338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eea3b7-543b-4f62-bb1a-77e29eaf1d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d3f83a-42d9-4625-ae8b-971cb44bb23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17d307d7-9169-47b9-af49-3ffdd1a7ad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc9e8ba-20e3-4361-a6d1-661b72156f60",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6671101f-a3bd-41f8-ae7f-0be2099c5bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebf1ea2-338b-4d3c-b9a6-5b69d0ccfbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81cefdb-a02e-4b1e-bb06-474aa697bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f25b3e-cc26-4c0c-a51b-ee7ead5ab673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a04964-a054-4e5d-bd2e-c239279abb94",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503f0e07-b697-43c6-b577-cc89faac1969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bab665-64cd-41e9-b142-b6080f57da50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca5cbca-4eb3-4c2e-8095-cd4ae39aaf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c601854d-72ef-4867-ba12-cebfcb5f7de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f00aa-045f-4c59-a5fa-cbf6436d5ae6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e54041-7e71-4dcd-97f8-31a575515d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a6d5a-4db1-4905-b2f6-f38e8e6eb605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1bff35-13cd-4294-9709-95e94f23f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b9aea2-374f-460c-9e9f-35a755a89d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d91838-a0b9-4549-8e69-4c0f8e13a0e9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d202410-ad9f-403f-9d4f-f40714975946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf52f011-40cc-46d2-a360-996c06c5d5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43d5e23-fca2-4333-8fcf-147a1f697b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d438a4b2-8cdc-4ec0-b27f-68b3810ef701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b5a56-0640-4eae-99e7-25127bddb342",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f514cd0-cdd7-4343-85ec-0e3d2963da20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89b38d8-6662-4367-8c1a-134984377c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50994e4-8353-4746-b472-b47ab02c6fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736d0acb-7757-4f8e-ba66-c695a0429591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24da594e-58c1-48b0-8ef6-95318fd03782",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63405a4-9104-49f2-bbc1-bdfdd01867f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4edbb7-222e-4e6c-b5c2-4dc8f9e5d736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed486226-9503-41d3-b35b-3c79ac82ffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ada8dcc-424d-42d1-acbc-076ce34deb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c3421-c6c1-4cc2-89b6-ab8c16f28be4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b11da3-dcaa-4a28-8eba-10877a219609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e02373-6c0a-47ac-b95f-9c10a694ad11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c78bb13-13e6-40c4-9ca8-08d21a0c922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeeb6876-6a27-4cd5-8dcd-7b52f2a0771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd978f9-8784-445a-840f-3e9aa5c5af7c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8051370c-bb7c-4046-ac4f-06b0d629c99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93238687-b0fb-4930-9938-3c07e82c3103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f9bd1-29a4-4828-9fb8-b760d56cab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fbaef70-d21f-4581-868b-58bbfef5726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67736b-1eff-4c42-a696-d0b3de08c56e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d0b43-4092-4d4b-a759-44c1ece9424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612ed4b2-19d3-4c51-934b-ae8368c22a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa19098e-614d-489d-b359-7273360fdfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036d835d-6b56-4956-b94a-46da3e5830a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f00a15f-69c5-46fe-91e0-34cb29432a10",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba256c9-19c9-4802-98c3-157021f0d766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c7c10f-fe66-408d-9fc9-72da5b9c2db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c750345-581b-4717-8b3c-2255827ed95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01e21abb-443b-44bf-a02f-f8ac57aea9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc216f98-d1d4-48a8-9748-8375b4ecab9a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cd85e7-173c-4807-ba20-909b5ab3f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f952e5c8-2ac4-46a2-8da7-a8db8e3b3daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fdb0ad-7c47-48bd-ac99-c1111747f7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32032cfe-e5ef-47fd-9a7c-1de6ad24a413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16364872-d52a-4d53-9312-27d070b6d5e0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b802839-c3e2-4ba9-bc3f-9b190e097dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9076b97-c05a-49ac-b041-734b534ca5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd813b-a8d4-45ad-9aa9-14c24b4eda4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3b786b7-3d87-4eda-bceb-614238fdd56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf77e596-273b-4537-b5bb-4eff346d8981",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48672d6-dec5-4cb4-aae6-50694565e4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1dcefb-a428-4879-9265-7009d12c8a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525c4c09-391f-49d1-94fd-248e2e1d9569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8afa3d94-3b0f-4d45-95e6-b2b09ade415f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a22e2-c012-4400-a7d4-2f11dcb82727",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528432f9-68dd-4db7-a3e6-3fc26d6c55de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a037190-a7e6-40fc-937d-0b7903cd5777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac5c453-576f-4c3c-b7ca-bc6e6f6841bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "598f1947-89e4-4cc6-befb-34599f0d15ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af235c-12c1-4ccb-8418-a8516ff15134",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3159c1db-5cea-460f-a9db-a793f40621bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f053cd-8a43-4cf8-99db-54cf77658be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d478cea-a4bf-44dc-bcce-4933fc2b42e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c52c0541-4442-478c-8c7e-0a13bf71a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5d658b-4189-4a35-93d6-72d63cb1367d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba898a3f-383a-43f8-aa58-c600cc4b599e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155a4e3a-332b-48b1-84f8-e6337bc56740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f010a99-8764-40a3-a846-a37491c7b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e75416b-25a2-4a47-b218-bd9a82bf165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547e9a24-b3ae-41a4-acda-f7100ced82eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0539e004-bdd9-4e78-bf2f-cd74bd3a197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f56e2d-5167-4f1b-bd8c-c10780bc8c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043562b-e6ad-4ca7-91c4-d00a76596e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3883d04-ee63-4509-bfa4-53f1c5672cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd938103-c626-4574-ad8d-c8c8d649c817",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f739b3-1cd2-4b38-9b5d-a75e9f666d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727f04eb-3bfc-4012-8ccb-020d5c3a2207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd91e12-d8d1-4489-b7c2-246638e40ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b670dc-1b99-4b78-beb1-4d47a8fb5a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39543f9e-1156-46a8-be32-14815b4b41f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c087d8-f7e1-49f1-9716-adcc1b02dff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaf0753-13c3-4ad6-9d64-76053135fbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8625afba-92d7-402e-b14d-a994f512c892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f173bd-6baf-4735-a2e0-0e45eb1a844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b95a2-2adc-45b6-ad76-f46b06595103",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308d1575-fc72-413b-b36e-6d93f0f5227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33b4a5f-445c-4958-bc09-451cb4872d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5141285b-3a64-4f5c-b6a7-0c6ac56273d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45ead64e-8639-42e9-ba42-503f3fbe6a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e26bc-0c14-47ae-88df-bafca60b6291",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26846e8-0abf-4639-a278-823c5f8e9d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2b3d89-d465-41e1-b670-35d5298c53d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2af66d3-b8a5-48b0-b906-4d9dd3bd18c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9155bdab-707f-46c5-ac44-ca848428ad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aca7dfc-67b9-45d2-938f-362cfd28b9df",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c40ff35-0bc5-4b5a-84da-1ac79f2883a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3389deb8-138c-40bd-b7c5-1db74e00765a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcc4b11-a280-43d4-ab42-0e09d080ad5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db572f17-e423-48f2-8a2d-6b7bce19670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61805ac7-78e1-4101-9418-4ee89cfdcbfd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e265d39-02cf-450e-9de4-91fdbb9630c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a297b4c9-0858-45e3-8b63-b1047ecaaf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbc63ba-cabb-424e-a871-4d8f507fc3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9650f3d-51e7-42e0-b59a-111130c6e363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e54989-1198-4d99-98df-078b67d95677",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56066df1-797c-4ca4-b462-a9f9ce88dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bde3c2c-8011-49ab-b31d-84c62a4abc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ffa28-5f14-44bb-95e8-0aa7b83bc39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1822f55a-f647-420e-b2f5-8ca0704b7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55244c4f-de8c-4c33-9eb4-a09d151a8fa7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53346bd-07c1-40a9-bf5a-0118dcfead8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc231fbe-dba2-4d7d-9cd6-e334a9afe7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54284292-a333-4a7f-baeb-1508e2336896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c019ed92-5c39-49f9-9c31-c4ced4106b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d28f73-d054-43d5-80b3-bad5898353c9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f72b35-28ea-49c5-817e-2e11bbc19bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6804747-12b4-4eb9-90e6-ce0df2753c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3247fffd-4dc8-4fb8-b67e-aa79a073c869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c910ba-4707-4249-89a3-031a015bda03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b9a5c2-aa61-4232-81e6-3052af49492a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff66402-c41f-4e59-8735-1e1c5f8b17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c8c855-6fb7-44d2-a771-c856179a0cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f022e-d89a-45c4-b943-d1d51fbea367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd8c002-4b2e-4c62-a613-684b12e0af65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764356a2-b44f-41e6-929f-335422a0dae4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a394d681-e609-4acd-a1ca-9ec090befc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c42ea5-3000-4ee6-bacd-3f8e4f344e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b4d70-4a26-4855-8a2b-54358e10cd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "235f02a8-1990-4049-a036-d5d037d9b4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba4ce5-3b9f-4ff7-95d1-ab4aabc252a7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05209871-2e69-4836-8c5b-c415aee5b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7659436c-f98d-447c-a553-7610217f2781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ea823-45e0-4577-b011-a393f0549428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "168dc900-fd23-48d4-9376-f80851f006a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525d07ec-fe0c-48a0-97ce-4633889085ee",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c246bcb6-d80c-47d6-82f1-502a590903ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a852c8-ca09-49b5-bb0c-fc94d61f5b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a7913f-ebf4-429b-8e33-cfe6721b6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2bd890-5782-46ec-89b5-9f97264478e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf31eb5-e31b-44f2-86da-dce770c6dd4b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46f04bf-1a65-4df6-8692-26241c939bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1df731-48e2-46e9-8276-f2bf27cac945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc67cef7-9dfb-4c3a-b49e-1640a2699a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd511df-a0b6-472f-a09f-8603d8558593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6195946-5fb7-4d55-88a7-ba0e9072cded",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eab51df-92d7-478c-9daf-6cb67303493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267baec4-47fb-40b8-abdb-82fec74f3610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e8fc7-260a-457a-8da5-25f4f833bdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c408175-b4c4-4b8d-855d-413eccf755c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfe6d9b-704b-4cc0-80ca-9d63cc2f2f94",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd4376-2541-4fef-ba2e-cf488c2f52f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee28cb20-aa2d-48d6-884d-71da01ac56dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032821d6-0c4e-4c3a-87df-191d5d5b3641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58d13137-8f36-4fee-b622-b023d2edc604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2fb266-d0ac-43bd-9e7b-6b5a884e2b2d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c630033f-6bd9-4a9a-8a43-9a14c60b3838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b140790-4619-4296-a265-9992b68c2920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff940eaa-01ed-4d0c-8ce0-7ef7c359ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f771820-2a3c-4be9-91d8-6ee1df00a18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d605de8-62e3-4069-b1e3-11b74ccea50b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64857711-caab-4eed-ace6-b59b6069c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6609802-6ed5-447e-bd78-bba1bc3e5034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611b1747-1ca9-4f8d-a3ac-36e5762a3003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea2980b-3bc6-42be-85af-d13a81e194cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffaae57-0378-4f34-bcee-4e02e550a0fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4415c068-5dc3-4d59-b5be-d2ed68b04a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067698b6-a161-455d-a377-75fee0deff7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96849113-a577-4e4c-9e18-fe2bdcd2ce48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ef8881-1e2c-44a9-81bf-274b06c7dc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b47918-354f-4f8d-94ca-a19347d778e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546599f0-d597-4916-a991-04a8e5e77fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f26fec-90d1-47ed-b438-17b3689ad6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc17053b-98a5-4017-83d3-0a17e5c88c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48dadb86-2fb3-4f57-b72d-d5fc2041c45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc039b2-3042-490b-89fb-3db55f624101",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0812a0-2cdd-4dd7-85ab-6a7509e72efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb30f5b-df25-4862-bccf-e50c10ece417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f324e911-e6af-4b78-a38b-12c93318ee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b19e23ea-038d-43e8-9595-57a996ed89c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c6e200-948b-47f3-8830-ed1038868414",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d70240-cdf1-4f9b-990e-3d91453be770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5d209-f3c9-4ac0-8f1a-da6aec7f7e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c01bb77-e5e1-409a-8bd7-c5950442c969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9e19dc-7c1b-485c-a5b2-c4033d3d285c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32272c95-b0be-4af5-8ab9-fb1389924dea",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb09745b-2ece-4f1b-8296-2b45986c64d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd88cf5e-4fac-4c4b-871e-cf154d18702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3d9483-7f74-48f6-87aa-2b9a21b39779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "79efdf63-6bab-4d76-b4ee-e91a68ad8903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41006949-8e49-4c4e-b125-b31d071ea1e6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e23a3b9-04ce-4955-8d19-35b0afdbab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d505c3-6846-40e1-bd9b-a06099be65ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb425f-1141-436d-85a4-517bff2a7f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "287a1986-262e-4cb7-84ee-62c8d00ac8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae95851-50ff-4519-b797-140c1647e9d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4373e-529e-4692-a0ee-a24b9397365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c68b17-4c42-47b5-a0cb-ea82aed3b957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569ecce1-1f58-49f3-91a3-ed42d04da0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ec7dc3-ad39-4c60-8330-5f32f0844cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56792de-3e24-4855-a85c-9422719b105a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3877e6e-96a6-4653-aee1-fde1131c0cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b5986-c644-4a44-9c75-fffd0fcd9d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2466ad04-0040-4b24-bd75-4bda747700cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6914ec-1ae3-4099-91a5-60eab7c0d331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2366c15d-4ec2-4ef6-a4c6-09f8f71e34f0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb319d78-6896-44a3-af8c-bbcef173ed9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94df8409-174a-44ad-8327-9306dfaf703d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e444ae4-b6f2-47da-a0ce-6157afd6587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "281552cb-08aa-41ce-99da-7f5ed15c3a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eda9d3-bb6b-4655-91a1-2ed321e4bdab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060941c5-2590-4da0-bc6b-604a6b5c09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4011a7d-ee70-400e-b3fb-c300faa297ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028c94f-3571-4be2-a803-68997f0ce5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55e1669-c7f4-4369-98fe-892b32467b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe73e5f-2a0d-4c9b-b6e9-3855f56da4a3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2297abee-32d5-42d3-aefa-efe405381662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef0f40f-66fd-4b74-9f1a-ba482b97043d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e8212-55db-4113-b27d-dafd2dd8a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a415bf75-a8f3-45bd-aca0-74f93676d252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9a1b60-456f-4c00-b2dd-65472c8c566d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5c4543-fb0e-4430-aa58-4b94119cd808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696940a3-ce03-4a70-a114-ae74a447de55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84cecce-0c6f-4444-aa12-4faa46cdfeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f48ad3-1709-4c9d-b274-4aa185b1acf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e31d8d0-b506-4f11-bed7-287a955dcf35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a27b297-aee2-46e6-bdca-98ddcc21c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c7dae4-1ccc-4c5c-893f-5c083dacbbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e77d1-4398-46f5-b104-098b67a7f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27a08901-b59f-47cb-9ce9-98c4781e9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f58ac-5b5d-40e1-92a9-c325916c952f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9631872d-a116-4968-b06b-88ccef7f8cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f144eab-f9c8-4de4-93ee-313b34badfcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffdecea-48ff-4fd8-ad29-cd30db9d1c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef9ddc2-cf31-44f7-adad-7d519f235656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9774a9-075b-4b61-984c-7febb0139e1d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb6364-a7ea-422d-8d9d-db7e291083f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a346682d-d9fc-438d-a105-99cbcd7884c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8d7c77-0d74-4780-ba39-fd2d82567a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d2fdfb-363f-4701-a15c-2588adab90f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cebb33-0f00-42ee-a66c-a7e73c62587e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbbb1f4-3baa-4c32-a0e7-d1719a46ce56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf182a0-4475-4180-99a8-8831d2f9f32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b72230-3a2b-4338-bc29-81dd70569099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5d25ee-9d23-4760-b279-e910737ddeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c00b0f3-c64b-4f99-ac6b-eae8c2792c4b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe75e72-27bd-4324-8819-27e4f65e56fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8000c3-f4a1-4f14-bc14-aa7079dd513d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d95d8-226a-4dd1-b8dc-094b1ca0bb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35dad930-aa8a-4d39-9646-1542628c4a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af892cd2-89fe-4782-b5b3-f403bbc048d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef700fd0-c2dd-44bc-b115-cd543c083a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c164d84-3e02-409e-b133-5de43baf2143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af75da71-d3f9-43cf-8e36-826e94e381e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "921bfd9f-73fa-4546-a993-178f92028814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4116c64-a0bd-4f8b-a1b5-f427b8e42ebc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d49ee2-5d75-4f70-87d0-10399d14e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb470287-7849-4697-ae93-548574ab00d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6bf1b0-229b-4398-93e3-4570c64c29ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a721e7-ffba-4442-960d-2818bfb4b267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c0271-52db-4d06-b675-a72c5c677520",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f49b1d7-a02e-4102-bf50-c283a2cf485b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004a8370-40ba-45bf-8e51-40e3e91ab563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a9248-e363-4dd8-88de-158070dc6666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd01812b-3bdd-4bc7-b4f4-2eb2312ef66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f15dbb-8a85-4d5e-9d12-461395377454",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f65113-8c2b-4226-8e39-f277dc58be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8fbd22-12e7-40d2-b255-c464df6cfbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da86132-8c74-40c5-b725-6ba91e715b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29927e8-eea2-47f4-8ae0-ab9b143f7963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343f5bb1-5859-4a11-b2ae-05b949a51c05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e19af-5714-40bc-99ea-b86474ed5627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff60a6d0-3a3d-4e82-8c35-ea0023fe4d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c22ce9-cbda-419a-9266-a57365c35e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2697eb-4f8c-4965-a7ac-7688d8893ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfb3d0c-eaec-4cc3-a814-52fe033364b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b01c60a-6334-4b4e-8216-cd2fdced241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db589d6-ac5f-4f30-b04f-c4f1efd56559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c46e398-e3b7-4770-80ac-eac9e534ab85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "655e6941-6758-4967-b183-7969c99878ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cef52d-9f78-4a3d-9229-ba9521ef953f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d63835-c7fc-417b-9b81-d26ccc6eceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29d1abe-32fb-45cd-ba65-a5b2dbfeee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d13e74-11b5-4025-b067-68462a5aef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2793c30f-38de-4c6c-80b7-d0f5e044a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b7341e-e926-473b-bbe4-1b7f59c8439b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7010c89-580f-4274-bdb1-11962f9527a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8c6709-c7f1-432a-8307-30f6ba87fe4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16615dfa-01e2-4585-bc6a-94ff8dadea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ddd3c0-7fc5-455a-9b3d-7b78461bcd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb147e-34d6-4393-8f44-a487638a783d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fa626d-0bbb-4510-aef9-3dd6eadf0c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf24c570-a3f7-4dd9-be62-b403149a18bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbd7041-6122-4247-ae19-f4e6b260e705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e49050-ee12-475a-ac0a-878730eaad16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323ec2ab-ce53-48ce-a37c-d58fcb8bbe8a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167982f1-a45a-42bf-ba45-9674dcc8f291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01ed273-6308-45e9-b432-12315a1e4560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51709b3-aa82-43c0-9392-a65b144bd2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73211db8-f22a-4502-a5ce-2da8dcd95ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752eaa6c-3d90-4ad5-94d9-ca736b8860a0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaceac2e-4c3e-460d-83c8-a053fbd1ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd87da7-5361-4fb6-b22f-1985c7582d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831906b4-48f3-40b5-89da-c2165e444276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b13ca78-0094-4433-aa00-cc3a5038fab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a7d05-2ace-4a4f-ba9f-7d93a2b5eeca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caae34b4-220e-4211-b4bc-88a31802cb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233b8684-42c1-4b6c-99d2-e2c87701e75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d2bc06-7f9e-4bdd-8782-0105ad018e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3808f8ff-2e51-4c4c-ba67-de32f48acf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9991ed8-9074-4fb7-bc80-44bbc2a97f3f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95cb2e6-3b7d-4df9-a15c-d84c116af41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20749622-59a0-41b0-a934-67554e81efe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c07f6bd-3f56-4d0c-83d4-d0da20ac8e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62c70fde-3acd-411d-97ca-9fec231d4ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec84a2e-5796-43ec-b846-253386b4fdfa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819f4884-fccc-4e72-912d-93f83871be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39b91c5-e087-4ebd-b9d1-1ef0ac631019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8607669e-b88f-42e7-84ab-4728523ebe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4b6740-8559-45c2-8745-ff41f3f2fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8406a31-ef51-4f40-8d29-fb2188b5aedf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eea274-5af3-4e7d-a2cf-a88fd521f520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24125e52-4560-469f-91f0-1ce6f3d24c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1969a67-35e0-483a-a5b5-8eaece7087a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9135823-bd08-4fd6-b48c-6fc2d84d754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abab139-e1bf-4078-86ba-279738c294c5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7075424-877c-46d6-a09b-19009218f454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b32d44a-30e3-4e3c-ab61-1dbf0476f7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e93886-06e5-4167-b4a3-81278c3a82c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6857efd2-d833-4ecb-8c3f-5a4d4290ff77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b382c-a893-47dd-8a8b-ed717124c291",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a939c9-6ee1-4a49-8a15-147746bc7746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ae2df9-f4e5-4379-a6a8-f3e01418de7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f17bf9c-b4db-4a9b-a799-d1e1e197ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64d9464-3248-41f4-a407-10da4f5f7206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb6d4a2-d914-41c9-b814-cac61d881143",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191ce3f5-75da-4fbe-ac75-9b327440d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fd5746-c6b7-47fe-853d-90f00c8e6a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca25b7d6-e2ce-4ab3-9fad-8520fbc71baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0539f6-7152-426b-812b-36db1f866aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18db82c-f8fc-4925-8d27-69c88e52def9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57bd500-20cd-411b-9050-576e34c51ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f503ead1-aec5-4d6b-9784-d04136a48a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cade558-01fb-43c2-8f60-cc8fde3164d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b120b32b-7abd-4bf4-b26d-c698f3a899b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c593f9-a3dd-4524-958b-531d6801b44f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610fed64-f0b3-46b0-b961-3f058511b6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10380c1-5543-4193-9f88-5c3db890fcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d659862-2142-4f73-a3b4-3e39c14af923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a229e5d-2bcb-4d3c-a045-5751479d23cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93989ba-bd47-48da-aabe-bfdd2e48adbf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f30f709-1491-4a0d-a5f3-683cae19652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9150cf-3d2a-4472-aebe-a0d3b5422ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39a788-7295-4e28-882f-ff0215acc621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c29c6c9-a6c5-428b-9733-9a32ddef64e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b667ad1-4390-4e3b-88b3-efef6cdfcc09",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db92fd32-c037-42cc-88e0-04af19613887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fac8f2-b545-4329-b796-8ce505f48b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e95b739-97d6-4f83-93eb-cc67cd15a886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe5a743-6292-4bd3-a849-45073436aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c3e99f-3bbb-4288-84ed-cf8b1812e3b5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f6300b-3e8c-42ac-bdcc-e4fb800d0e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8004fb81-ccfa-457b-9700-fbc57ed01194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d2115a-37a3-4e3d-a677-d5c5424441b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7f3598-dd13-47e2-9c54-80f42d0c8403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e28ac58-eda8-4959-82cd-d07795d425cf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b92484-7c87-4617-ac23-e5633011210f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2326b14b-45cc-47b0-b9e4-86d3d72c7e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc94f4d-bf65-4237-8f22-d7b6b7351b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85420430-a052-4986-ad9b-bbbac652a713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c4d645-b712-465f-9bba-0d116e2650b8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd011a-9594-4139-8e3a-a935fcf2ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5b5708-6592-4689-91b3-2a7777e36b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c435ea-a23c-4fb7-a658-8dc8c86dac7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65893e2d-6b4e-4467-ae29-74906562bb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2c01cf-cd99-44fa-be09-c630974d16bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f8476b-6ebd-491a-8af8-8deab10a50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4736c2fd-a8d8-4efa-855c-f45802970f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5548b3-97fd-4b68-91ba-df163b935271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c057c37-1a71-40e4-9f7c-4b34e6bfe649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac62fb31-ad75-430d-969c-05925a4fcbb0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7d2268-4d59-4a12-a23e-9510119fac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4111bab-bf7e-4711-b8d5-85e08258abfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edaec44-285c-4785-8068-72b20565011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c9d27f-7d74-40a8-a213-4e2e45541175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d17a46c-c722-49be-8608-7b14c9d20685",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6df067-13ef-4b94-aebc-f9ecc2bf72cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bc4169-c831-49d4-9569-f4be650d91fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0f05b2-d32e-454f-b167-f3966e0776ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61648858-b78d-4bb3-ba51-fdedc0959d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee7f77e-825f-4090-80d3-a351fa59f72a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7344a5-8627-4e83-9ed7-324e2ba290f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d1c80f-28b5-401e-aeaf-936f28840beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3036830d-a636-4bf1-8603-741df9b390c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2bf527-f805-4a02-8d48-42df53dbf294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231c3da6-90a6-4257-b76d-8cca8c4ff061",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c64e4a-6195-45dd-8211-ec4916e7e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e32e08-2d3d-4e0e-9ced-461852c369fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd45f008-9b1b-4632-8bd5-0c061e383789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fddbc80-13d7-410d-bfa5-9ca26b6c18c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ea463a-3e0f-404d-8a6f-bd2517a93b74",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d39fe-033a-4ee6-8bf8-2b41cfcf68af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0ce316-c475-4cf9-a045-817a8bef44d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7981908-a773-40d6-9d4c-fa6625eb7a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7db228f-da7e-4c64-ac0a-bed66486131c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca69505-0b6f-4bdb-af06-a2cf26bb0a56",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674b90a8-4be1-4068-ab78-a44583d6d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6122414-c7e8-427c-b0be-7b5a2064a5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac82b582-8c7d-4159-b032-fa84dafaced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3cfb8-0382-455c-8851-015eb17089e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82003b0f-fd5a-45df-a0d6-db37ce33419b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b539ac-c29f-40be-9c4f-450317d2f1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef004804-70ff-41ed-88c7-d6c932751507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e15eea-e842-4cd2-937a-8c05738c19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "712e8aa2-a0b9-46d7-9b0c-f188ddbd237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed66b0a-dd7b-4111-b70e-8b6ccde53c5e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c454142-f9a2-4d27-b9bc-07105b4e55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c145e72-94d6-4366-ac4d-30a2197aa253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a161cfeb-d98c-4d51-aa11-776c1a09957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06dd6028-6d5e-4daa-add2-7c490379a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dde7e8-bd1e-4c66-a30f-318ff96c4f15",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e378550-cfca-45ee-bd7d-d0401ac31d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d585f-f35f-42a4-b0fc-1a116c344076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2d1d6b-0e82-4a57-8940-6041f09a11ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebb5220-bf0b-4473-8b91-e5fb54a3facf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f92c00-ef21-4c9d-9aa4-d06d7c541f67",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b48b509-3097-40d3-bd3b-6643a5ca7b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573607ba-aac1-4e78-9594-165398d11372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93818291-4c5c-4a1e-8b11-c08f922386d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e586b4-f57d-4922-8305-5d3f595799eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b775ff0f-150a-4642-be57-d843d67a6720",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792b9ee-5354-4dd5-82b6-374aa6d6252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b782415-0e8c-4511-9063-44c9c9bf3e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baec166d-be6b-4064-a9ff-7c833ba982c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbbdfca-dbda-4154-96f5-9deb234ab43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb235cb-c096-4c26-88f7-268a2230f683",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32d2e84-8379-4540-9975-aa996d1750eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d663402c-ec8e-434b-b0b8-90fa70c58f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba098dcd-8134-4559-9d50-be2b5df3de27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4159f7-5967-4e7d-b862-55738dda897a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4282b4c-245f-49b0-8ddc-2eacdfc8def0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1cf68bd-693a-4634-95cb-01bcee53ef8b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5da5068-0965-4146-be55-db225b85fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c98279c7-7232-491f-b19e-d777d76b8157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5754833-d346-4239-b15f-304b06a6b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94957d7d-f9b1-4254-83df-759f2caea40d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56cd8ddd-99be-4b34-afd7-3d61f94350e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbe47de1-5f63-461f-9060-66f76c42d0aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65239d70-17a5-4e11-9f4d-4138f9459689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "926f3705-8e5f-449b-a035-8831ffdec174"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06de984e-3c88-402e-b212-30e339e77d1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7b23c04-12f2-4e84-a462-7d722034487f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78cb86b9-5d7e-497e-bfdb-afb19724ddd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "271b7316-a522-484d-8767-94cbb5933664"
                }
              }
            ]
          },
          {
            "id": "f4c40ce9-554e-41b2-9c19-ee06d66aaba8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd18bf15-8f36-4f8d-88ef-da91af552bad",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9473ab27-7876-45e7-b4e5-9236b7a7beec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36223bd-de2b-46c6-aa2b-625615b5a256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebb5592a-db64-40ca-85f2-cf168db7efdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2eacdf-8954-44a7-843b-e146d3e3c057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bcbee0-8ddc-425a-b396-65f16e6a5fbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee0ad99d-9f22-4808-bb4e-0f2c97450fdd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5ea406f-f516-449a-b5c8-dea5483653eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f7964ad-c3ef-4802-875c-09187f5dc881"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3e62b55-8da5-47dc-bda9-8d890ecfafc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1cc4661-d162-42b9-81d8-8da54f9fb1a7"
                    }
                  }
                ]
              },
              {
                "id": "4a12e67d-fd44-4069-9609-958042d25394",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8db48d61-7ba1-471c-a434-60c685226f4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fbb3aba-c458-43e2-b47c-3dc47c4fd4fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3179ea8-3953-490b-a668-3173393cbbbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16ae44f8-8f55-422c-830f-959872c45082"
                    }
                  }
                ]
              },
              {
                "id": "daafcd9e-adcb-44b1-ad65-f3c4d49d0a24",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdf2fb52-c278-42f3-bd98-132a0e26c9df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87f4572a-7ec5-4fe8-9ba4-13913df64a47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28cd7582-e74b-48ad-b77a-7f12b486c82d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8c8ef56-057e-41c8-becb-22e1c8c326c2"
                    }
                  }
                ]
              },
              {
                "id": "c6e46eec-a464-43be-bcb9-167738b25e64",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7570a2e-28e9-4bd1-bed5-fc305ccbddd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4da5fcf0-61ca-4015-85db-cfcfb4e036c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3301834d-7229-4e3c-8731-09d83105b407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5e38b83a-0249-4efc-bcf4-d09fcab38ea2"
                    }
                  }
                ]
              },
              {
                "id": "fda3e291-1971-4552-88c0-9b5e219de63a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a0542f4-f615-4358-a913-3b7fa32a94b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaab8196-2c41-4cdb-85bc-18302fef19a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b012da55-cc23-4bf1-b57c-622aa57c5605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "84d42b15-21be-490a-88c5-f35b125e5fce"
                    }
                  }
                ]
              },
              {
                "id": "cf9878b1-fca3-460c-8e54-d9657eb6d067",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85883523-18d8-4172-99ca-1a688a9c3317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab50b011-37ef-476a-9f5d-96d5c12ccb87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80c82a46-f051-4b83-a3ae-b2e0771438d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6974d686-619e-4851-82bb-5572e8bee26d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "654a9f40-de6c-4266-8c83-6d8e962eb2a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba5b410d-6049-407f-ad10-3de58e95b754"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c92d263-6dc5-403c-a8b9-3ad0eafcc15b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe24b82b-4f02-425c-bf98-9e2c2bf09629"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5ab6948-6547-49f1-bc05-676d53af7d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b18b3e58-9597-4ecd-9778-93df83392594"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c4f2d5e-6754-411d-9f72-7fc07f58a442",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1509b7d3-232d-48b8-850e-1a7d87a0fdc2"
            }
          }
        ]
      },
      {
        "id": "089cc3f2-8ea0-4294-a05f-55b696d44bc6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e7b8dfc-c021-4644-a3fe-c7ff6dc31d92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10ecb432-2229-49bc-bf98-8ea86a1e2d79",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ad683b1-40ae-4b02-9dae-3abd18153f21",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8834ce0-911e-4b01-bcb9-9421c45c0885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387a7a89-4e3f-4577-8308-6b02fa44fc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09349f41-3f70-400e-a3aa-00fa849d7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7b7da9-04b7-4e8c-9e71-c59d587e761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c039c25-2ce8-4b11-83fa-d564c23239fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06425a22-0dbe-438e-9c23-cace3daf17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c854147c-7b29-45cd-95cd-ea695115236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4290c480-169d-4def-9ad1-47077ebde99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f884aad-4845-4650-9f6f-5f622b180de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36fc3c7-bde2-48d9-af1e-baae978d526a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaeac22-7b64-4344-a1f8-b16833336449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e43721-24eb-4ad0-9acd-304d5a1d1130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7002571a-9fa8-4b11-bb51-7915f6ee7034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3150215-5d74-4737-9c89-5e97492e0d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29b50a3-887a-4939-8a1e-b921848ad660",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a424107-3d8d-48ca-8fe0-a1f8428c50c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca77fbc4-277f-4baf-8348-9dbb89cf13d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b03e9c9-50e4-4e09-a5ef-d73c8f0a08be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c1bfb4-6784-48fd-b44f-6517d106003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479ad081-ec03-411d-92ba-675e3959f091",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2674955-bdbf-4080-9fdd-256c6d090df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fae98f-56e4-4cea-b41a-e1ffee552a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09de9f81-97fe-45f8-b086-c3129b642f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de5908c-0d17-4ffa-b264-520673d6a00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91e4ce6-4c0d-448c-966a-6c23385e6dd3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f9bbb-e40a-4327-9b13-b97aa303c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bb0e38-f9ca-41c6-b721-6fc9d3c9d8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7133ed0a-0af3-4ab9-bdd0-176111c45847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47d477f5-8c8a-4a9d-9e5f-fb2c6983a9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486b0151-8dac-4c19-bf4a-2623af391226",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f731a7f-8e0e-4d5b-86f6-3648fa0a01a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc35aebb-0cd2-4ad6-9f95-d063279db835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed57b9d-ec75-4562-8815-bf08a98a4769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9435eb1b-3e04-4193-a1e6-1a6ce9d2f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc38c78e-c818-48fd-b1cc-264f9d9e85b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec330ab-faff-4c84-99f1-043688eed74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcc473b-cdf9-467d-b0e0-8263b03194e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405963d3-ad81-4eb9-9487-877ae7cf26b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6680ccb6-b644-4b4d-b4ec-b98cc945d832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9c42b3-d306-4d1e-ba91-6d21bc570f62",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afe22d9-39b6-4ac3-8d67-f0902db14e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186fad5a-1f83-4ee5-977f-1acb6599b161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b990db-c8d7-4273-9c91-b4972fc7d6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "820767e2-b762-46a4-90fc-1cb89e85939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ba7cb8-bd32-4f12-806d-6e09509b8bbe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58af3e37-3f65-4d6d-a364-9ad729d4a4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e77948-8dbd-441e-b17e-674c311c7a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1be4b-9a3b-44b0-928e-1639345137c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8363df06-1028-4fe1-99da-593007f15660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af31cb-2522-4661-8c9b-a80325f9f9cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d305c9-1048-4088-9cc0-6777a7721304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b60c6a6-1cac-4028-89d9-b6880f5ff42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa2c12-cebb-4c70-8e4a-8d26d13ccdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "296f26e7-f965-4536-b3df-2a085a863bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54233b5f-bf23-40a5-b348-5569447c0884",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79323f47-b3d7-44f8-919e-e79eaedfa0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657ac5e9-4b7f-400f-b673-9b3f5c130456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b92bbda-1e20-4e6a-9b18-8dfe7ffa9176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d569051b-03be-4d19-8096-fcc309970b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e43ec1-3241-4a51-b873-306815546fc3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88748dd9-060a-4380-a820-7a9b6bf87403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2d79e7-62c8-4c46-b206-71704b415155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b1672-cc4f-49b1-8c35-5868065b27fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78e4b76-8c7f-4e93-bacc-0dfac487d884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d459ce4-5d63-4c8b-aa95-243c9bc831ee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d14745-32a3-4d1c-b420-6a2f9da65cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48c1bff-8aec-4a4d-be74-3123916dd246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd7f8b-9e56-48b7-ab7d-ea755bf2aa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb0463c-f22f-433e-ac13-213264eddafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f590c06-dc6c-4d2c-a5a6-9c9ccd22d909",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022ddc4-5618-4d87-abb3-8defaff09ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c2d5cb-818e-4121-bf5e-195b35660719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e014c8-fc41-4231-95fa-e34e6fb3fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a09e98-c637-43ec-8ff1-be865a0f9936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d02839-2bad-449c-9625-1cbf1ab1cedc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf93798-8f09-4542-b456-a375bf840477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e69cab8-5ad4-4462-9aae-a772ec719dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c03b1c-89b2-45e9-a3fc-7f4ed35a8abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5128978-8dd5-453f-940f-f77a72c6189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca631911-41ee-4c6c-9287-0f3b8c1054ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4425b819-9058-41a7-ac40-0d5feecc0e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77254c0-57cc-4f57-a05d-ba4f52edc286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5dc1b1-6da4-4c6e-b00e-7320d3acc08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c6310b-4ec2-40a2-bf53-b47b32f23596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aaae96-82f1-4af6-8d60-7d7c1dc5b662",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9276a6c5-0c46-41b3-9a19-08281ec26942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada26ea4-272c-488d-ab1f-850596ebd2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117f78a6-e13a-440b-8c1a-adc0030d074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "346d3705-9323-462f-b8d8-12b60eef9396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d3c5ac-06e9-48d5-bf66-87b8b03aacee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8ca8fe-7788-4b0e-82ea-4acae2bb5f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907b27be-364d-4b3f-9d29-917363321128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c2976-a01e-44b5-946a-4cbc6b125a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71dee6ea-7cb5-4146-b206-ea2384d8d770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185ac849-e636-4882-af67-cb74f580cad1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e3468-1c23-4aaa-87f4-842f67b159bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0fb9da-f112-47ca-b1d0-3c2227135abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e73d48-0aa3-4621-a4d0-5e134142dcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba20bf0-4bd2-420c-b1d5-edb6368731a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f28dcc-a96c-4a4e-b1a0-0359e3980a65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e3921-2973-424d-b530-c98855154105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f78d61-4abc-4376-814f-138cec085198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc208fa-e89c-4130-8375-6245c1875b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23c1b30-65e8-4c14-95a1-56edb9ee6f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0079be0-355d-4be2-b72d-49e6209f1a2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ecfde3-ba1b-4a75-9466-499b9ee2e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31abebb-1da2-47a1-9b86-d0c6d1f22901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb65846-07af-4ca8-bbce-33a61826b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77caca59-0031-4fdd-b7e1-04c53859b1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa32fae-cf4f-4f6f-b5d0-3222225e1bdf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31921ba-1565-4346-83bd-3c415aa1b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90abcb6-a590-4782-91d6-59466d461e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99998e15-59f9-414d-b72e-2b53bf2a1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c69e11-8dd8-49fb-bfc3-96a5f0732dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea337c5-cc0b-4e4d-8f31-9fbb9b2662d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85048d44-867a-40b9-b420-6ae3dea7eec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f3bf87-1112-4a6e-b81a-4ab5a14d71be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c79cd68-67ad-447e-ab9d-1adfee82e8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78397c33-1e90-4163-b3dd-a63ee98766c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4379d878-82a3-405a-97fa-b301172bdbcc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b02814-86d1-4537-a6fd-51fb1c7e0700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199eae7a-c23e-425f-8720-650b6b28bc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37e4cc5-f641-4dfb-a8a1-97c845f933bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6455bc2f-fe42-4604-a0a4-f2c02952522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22483434-ceae-410e-a22c-f7ac0fdb359e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6b6375-539f-43e3-a144-6db8cec274be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a73ed8-e78b-4dd5-b24f-b63c333ec47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986f236b-4efb-4617-b015-a9dc2869c04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c856c1e-b45b-4962-8222-d89e03a2a36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b68959-42e7-4a56-8120-f5f5f9a4c29d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bac713-4d3d-48ee-83cb-53e2ef73ab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5382bbcd-34e1-42a9-bd98-2d03d9127cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393b1f8d-2068-4eb7-b3fa-756bf079d835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ac81d7-f97b-4f82-90d9-afe58b8f368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca23847-be19-4134-826f-72b039b80f3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a685ac-5411-4543-b206-6fc45aabcce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a9ecce-bdb5-47d9-b668-8fcf10c49362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224e0a54-6f3b-4495-a701-082f9c280eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a754593-550b-4a8f-8371-091c42c4050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c8e0cf-cf2d-4966-9dd5-49e86ff2045f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afcc83c-c547-43e1-a976-59a17051b546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6a66f9-34e1-4236-bd1a-0b00c3351bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b66db-c417-43df-8fbb-0d28ae50e3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48576476-c1a6-41f8-8450-10378e038afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fa6a42-1407-46f0-b7d6-7da87269a4c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27effc8a-0d36-42bf-9f76-ebb3550d1465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be48ee4-7c87-4960-b857-a6b76ff77411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1cfe8-0812-4d39-874d-75b7d1b0014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fff82af-d2eb-4673-af18-ed5aceb73667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af99ebf-183b-4525-9789-3ff7237cf1b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1881aeed-482b-44f8-8016-adbef2aceb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934e9161-4475-422a-8a64-30724fe1d7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a85882-9382-4ced-b6ac-785e7ef3c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e89d4e-2acd-4dcb-8600-41514622e5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aea929-57ea-4faf-9a20-71d1f2f4989e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bdfe1-e605-47f5-8792-785df36abf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab1bbd6-b5fc-4999-b441-cec4e2368f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cceb237-3443-415a-b6c5-1ed539d98822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dff4b5-d9b7-4824-bc79-7b80d204f1c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "915924ce-956c-4068-9578-6938e194b0a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19e08b04-8b52-4fe0-8ab5-13b8b3d3ab79",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca2b03e-a118-43e3-9c64-1618259ed4e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecb7529-5f39-47e3-a9c1-3c8a00a459f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38647f1b-bdbb-41b5-bf1f-224166ea2fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78c0a594-bdf8-4694-a21c-3e13490e45a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "612c232b-eeea-47b8-b4c4-863df7a27fee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d972d150-ed04-445e-ad62-5419b2c83b94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33d36101-1fda-4bbb-8cbc-ea6704d0dc35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4fd1da2-d865-42ac-8103-4d5564fb353f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4431bed-e7e4-443c-8dd0-3a2afce41964",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a190618-b6df-4cf8-853e-786dfb75dbcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02ec72d9-cf4e-4ca4-91bf-5dd6054e6bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02efee9d-c30f-4321-a88e-62b4e8f3f21d"
            }
          }
        ]
      },
      {
        "id": "6906844a-be0f-4644-b358-2e5b908cdbc5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce6713f6-1444-4013-9bc0-1fa9b0f6171a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95e7bb75-10e6-460f-89bc-f766d9e69f75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5252909-c153-40b3-b466-aca4c6c9e4d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22cf18d-30cb-4cf9-ba5d-6242d506b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950ddcb1-50a3-4ed8-a668-7abe89533a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974d8a0-454a-4e23-bc86-a39a376c640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f3ab90-403c-4098-9526-b1f256da58a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e69160-642c-4500-b2a6-57ce6b2fa173",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604a891-be68-4a65-a3e2-75c2f4ee704f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312e45bc-cdfb-4d22-a8a4-ac4d725fa5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c94a4cf-46cc-49b9-9813-6a69127a4706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9148305c-0f0a-41df-9163-4d06be1f44dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d678e22a-3d1d-4929-9a14-1fcede0757ea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68abd0ad-1920-4a82-88b8-ec3887ed01d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c256de27-8d79-4245-99cc-f30f02f7e4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92ccb44-e0bc-4c41-ac24-d78f9f23d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3276c9-8440-437f-804d-8bdbd9d38d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149ccf6d-502e-414f-b0b4-9d3132372787",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d75f147-5850-4baa-8ad1-ceb57c2dbba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5cbe48-2f66-4e21-81fe-879e6b447135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce91f5e-34b0-4f74-9115-840daf7ed389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e271a6c-6f90-4c9c-a0c2-a772042f275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6eeabc-6f21-46c8-a983-adff123350f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf9ebf9-7fa5-4c9f-88e6-e77823ad5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db27389-922e-4b25-b5e7-db3a19be28f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6060ac63-ca65-465f-b1de-7ea781f5ec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5547b66-e29a-4d02-8171-dc65823b635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d87aec-39c4-4340-ab77-dd55e1ec1014",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2717c6e-f41b-4752-8610-26cf27d9217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c2414f-e466-4295-a4a9-25dc9c9ca193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f2655-baf9-4364-a24f-70dd9ae2408b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45f80a9c-ab8d-475e-a00e-c9b7d7ad83f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d8a620-3e99-46d3-8a55-35e0acca8de5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00805ff5-c6c9-4cfa-9c61-ec9f5c51b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dbfa8c-f086-4db7-9462-5af4a2f48557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e656b5b7-37f7-4c23-885c-7b948a7a8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "631b8135-19d8-4d40-a677-dd65b00c16fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49f2033-bdb1-4b97-8f81-bbde8ab7ceb8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f15601b-e799-4e18-9a99-05685c7c8bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271d1671-c96d-47f6-b1ed-29a2a6880582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc55e3a6-ba29-4c44-aa82-76f842e3ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3530103e-16cc-420c-a86d-e5d346ea0a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f6c21c-5dcd-4461-addb-b17bb363340c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450c5488-0d5c-4860-9c30-6d5756634a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5024d9fa-d2f2-4e24-b630-47315d6643ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822549cf-efd4-4d77-8d6c-7c287f0fa9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93cc7f8e-7c59-4bca-9965-d54dffb6ca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba847b1-246b-410b-9796-bfa261c2f490",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4813c4-2101-483d-9723-0f61419b4d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f511ebd5-8e10-4eee-84b3-76702d873c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfe26fb-7976-4104-a351-92a39bf215f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c20919-3c02-4d76-a52f-be5617af2d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6317fea6-a021-405b-b3d1-f65c2f41c468",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c88b3a1-d559-4ab9-b40d-d7bec0658e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b720a-66e2-4d50-a323-56ef6a217538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b351b600-8a3e-41c0-baa1-829f7ac601a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "36bc7d6b-5ff6-4ef4-a2b4-b79eb1e70286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38375220-6660-41fd-bd80-b21b4c18c493",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5beb6cb-0c23-4e56-a9da-e15d42db7e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05601ac-8896-4d92-bbef-5f2d15be36fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc43f7e-33ee-446b-be10-6a298d7c93dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2de7b1-7c48-4eb7-9805-ed0cd82aadba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f0ee11-e32b-4b22-978c-699c6c1a7f41",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3769374e-0013-4378-bdac-b5d8a4376ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5337ded5-445f-441d-886f-6304eb0914a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b0f1fb-8c06-4a14-977d-124cbfe847c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "685cbc9b-7b3c-44cf-9acb-3d9c31fe8ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed7e2f0-f6c2-417e-a72a-f146fe90eb53",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627fa08f-b66b-4b0c-8d60-885c9abcf928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36af398d-e231-4dba-a034-fd3b6bcd772d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a938c1f-4710-4c32-89ad-d8d2a65f362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d683109f-52a6-4bae-8842-744c151140ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6039cc4b-8f46-48e1-9a97-4db45e528b4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c657f6a-7cd3-4e93-adfa-e2460e1152ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719e2b07-81dc-43cc-a643-8a3a9c7b596a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c51bfd-b4a7-40ff-89c4-3572d8bd24cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7453fb-69fc-4be1-adf2-b4086a6c9699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd21016-097c-4b0f-98a3-7288ae697031",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe8995a-4fcf-44d9-8a5c-fa5732b25987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2fc683-1902-4bf4-b221-8fcd29a7c986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce5e70-28a0-4d78-9cc2-05d59576797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5391d01e-dd09-4a81-889d-f6530e5ff603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc9af9b-878b-4bd1-a969-6999a43d9e4c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d283b-1829-4c9a-be23-4584ffda58c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2392561-fccd-4875-800d-0a5a6471f913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3037bdaf-74e1-44f8-9b74-078b534b97db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "356033f7-b96f-4aef-9d0c-fad0da4f222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6612594d-0589-4744-99e8-60da075bb798",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c206e-50cd-4270-af70-5244c89f8803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6ffecb-0bd3-4d1a-9268-66f32f0cd9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeed097-f072-4372-99b1-b748ae385929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1568e5-2196-4d47-a7a8-8a28d044403a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f30ce7-82ac-4f7c-b01a-5df948e7aa1a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49227b1-e83c-4ad0-9147-498539708496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1267edd7-51f0-41dd-8b03-3c89f9c5cb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ace9c22-8a22-48a0-a662-b61c5e9ab1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0375b-8b5f-4cbb-adae-dd6a3c0efd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e18ad1-06af-40e5-a040-e1ba731df033",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c689d514-47ef-4720-95ab-28e2407cae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7522a0dc-5b95-404b-b26a-9b98150b15bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142fa647-6ac7-41f5-ac74-6a3f6b8b31e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eb9644-d0b6-41fc-8236-ba1403833103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3ba23b-33cd-4381-862f-560c46e13f39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952288ae-6586-4846-8589-d703fb261d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7d67d2-088f-486a-aadc-67431f360860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cf3549-dcde-461a-9251-f2e03ce260a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed901e00-d0ba-4aa1-8210-caaeb265214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e62bb-b0db-4b09-90a2-c36d703cf523",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1334864-b194-41df-a7c3-a1e83241bd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708d1cca-a078-4a6b-b068-3d1c9d484898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e431ac50-14ed-4250-821d-a313174d64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6534b8a0-5edc-42b3-b57d-584fe2880681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d31de-a436-4650-a2eb-388348e686ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452e0f1d-5ff7-4929-bc0e-e33fe3f18e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0812fdd1-2100-427b-84f8-6eabf544fd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d983aec-80c0-480e-85fa-241155fbc9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6fc510-52fb-42d5-906e-77e145bae16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593e6212-190d-4b36-9743-8a9dc0e3aeb4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f1df70-469e-4c1f-a55d-4dcb0bd92c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd06be0-7bce-4fc0-ae06-0da39d0bfbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d99475-e50c-48df-9d12-44a797bd0c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2d91c6-b664-4302-827c-6626dac7d605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df996d2b-0054-4532-babf-bf730afc7b51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a052fc-53d7-4590-a1d2-af49bcec4e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0885fb9a-d864-44e2-bb95-38730e3b163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeb4c19-479b-462d-b0dc-8c671ad09c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d81402-234b-471a-b268-6972521dcab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d1abe-307e-4ff2-9668-05af475aaa50",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b335d01-33b0-4cc8-bbcd-84fc94b00548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3c068c-d858-42e3-a754-2c60f1ea56ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b031d956-b024-4485-950a-d05aa3aac643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ece0a4f-9e77-45b4-a192-0955178262e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0224a5-87bd-4db1-ad04-f1ba645019c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a76a7b-3bc3-41d3-a678-21149cc6d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df4edee-88b7-44ed-9e85-212c7b7afc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e70d58a-6a95-48b3-9628-a61eb1e4466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f52f57-1620-490f-8ee5-73440c671070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445edaeb-b268-4293-b114-d4ea8ea02a93",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8a35cf-07fb-431d-9adf-de82f78f9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e61d039-4178-4486-9025-0180f6ad9ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab05ce9-6e3d-4886-a5ee-63dd234f763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4981ead8-864c-43f6-8481-504da3d8d28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9719368-4c66-46b1-bf19-a41093a4198b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a4b73c-099b-4b93-b4ce-1ca9b5dfb0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f072744-4c43-4229-bcfd-5d9ea0a442ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375b5d4f-6be0-49d8-a9cf-6b6ed90d9d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6406cd8-45f9-4adc-be95-b0127932f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30deaa87-01db-44d3-a6ae-308f643d3bca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262231c-18f4-422a-8619-bf3016452cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb560bf-43c6-43b6-9de4-c71ec96b5034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deb712a-161f-40fc-99db-173d95178708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5907568-59ad-4903-b49f-2f297af7c47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb37ff3b-a8b4-4f8b-a262-e14fddf2b75f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a33052-0598-4f5b-ba5d-df6c8368435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c59518f-2100-45c0-a9d5-cdd946b26aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2213d524-a4b1-47b3-82a1-2e78eea61e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6212930c-91d3-4816-992f-a88288d50f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a3cf74-8628-4377-9357-729bc10695b7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce8d4c1-85fd-4ab3-8615-49af6d26fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd4a388-d7e4-43e7-aa87-7682b524cabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900354ae-bea4-4579-8894-6f7b17cd1b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34a643c-cba1-4986-aec3-de72de32331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68901cfd-0a4a-4334-a815-bfe738af00d7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7312921e-cab9-41d6-b65a-ac81a1f532c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f789c5d-cc02-4d72-bd46-0a0dd0b963b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02eb639f-8379-4411-9779-7f93c274cf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca1dd83-a533-41a1-acea-2309ba5f3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d281df2-6f7e-4617-ac32-f50769ea40d5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09610bc-2c2a-4dc6-860f-b2ed41f0e203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4b24e3-52b0-452a-ad5b-eeb6d328f567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d10f74-010e-4d9d-8d64-8b2ba9829246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3180da-41f1-48f8-b523-42cdc7f5d67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef873eb-11d9-49c6-b663-ecc0c835ef38",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7c749-f212-4620-b3a2-50d8020dff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0f35ba-6aca-4359-9fbf-2a8a6d87d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40f82d9-b785-4085-ad20-be986757b07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6faf5f8-83de-473d-8775-da8187648a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dbb893-93b6-479e-b5f4-5460a87168f2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edfd5e6-fcc3-4412-8b69-bc560fe11cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fb6a76-f445-4ac7-9463-028bc2ebb231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded2a3df-e2d9-4ef5-8981-afeee5d021d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b07555-c940-4b98-9536-e2c6eb502600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6bbbb5-a94e-4c54-92b8-10a586ecc103",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf3441-878b-4b1b-80d4-8cebe12cebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc23197-6898-4c62-af8e-75b2fc5554e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36f5f4e-31ad-4172-878f-ca4cb1bead07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4502f720-70f1-40e6-859d-1b5fb02c9519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b38fe16-b7e4-4755-9bee-fe22931eba78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "512e08ba-1db5-4b41-aac1-e24cb25dcc96",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb0163f-b192-41c9-ba24-2c0586f1934a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a099c6a6-092e-4d42-a754-8500f490090e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2554865e-bc18-4443-84e8-6cbd618f841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7b6fd45-8083-42bf-b8e2-727ce31a914c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0785ac34-ea52-435d-8d58-4cda7d01e283",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df705e4-f93c-45d9-8d63-6386afa92c9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e73601b-9e59-46ef-8acd-ea908e194f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe10882a-dfb4-4ebf-a658-343600e9e995"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "defc8293-67f0-4a52-b8ac-7173e58eefe5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac3aa8fd-d706-4b1b-bfeb-6a70cccd5db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c9fa029-5d96-4d61-9af3-67bcb3292499",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01bb50c1-17d0-42c0-8158-47647e598993"
            }
          }
        ]
      },
      {
        "id": "a5bdfcb2-1349-400a-a343-ad88765f0e2c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "357d4c9c-5a6d-48c4-95fc-48e69f1dfc0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d0dc795-492b-4a39-9645-dea0a89948be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ea55769-2373-4769-9033-727262c52849",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da452750-3aea-4c17-a4a2-00414bd0e802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c140f9-81fb-4434-91d4-eb542980fb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ebad3-7a34-473c-9524-cd9acda4cf3e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d12450-6fdc-48ce-a8e9-2f8038fd569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df69f328-57d3-4c6e-bdcd-6ba3ef4c4943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124fae5d-2b32-4f86-97b2-125fd6bb1dfb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc06c6-df01-4abc-b89f-16690f8d3f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a60dc4-b509-4b54-8b56-c4b2c11be7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a643934d-ea4e-41d5-9342-49eec5c5947e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4bbfed-c348-4fd1-bdf0-100013f8ab8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdfea16-a3d4-4acd-b83f-884c97c24e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb60021-c55d-4f58-b8e9-7e8e8d067af0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af22d6a-35ef-402e-8501-d3fdada52014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7154b39d-2b2b-4c83-9907-cf49f173d744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e43a11b-ba3f-4247-8fd8-832e94ea369d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eb13db-9607-4fa5-b069-49196ff0dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8950c99e-c53e-4f8f-902a-bc166606e0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fff63a-635f-4f86-b8e1-003f52d3e8a6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f3561-b95a-47d6-a820-f378f493d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c759ee6c-17d2-436d-b2c8-db623150c1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525388ed-78f6-4c4b-b628-319b63ed78ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fcd4b0-e9d7-4c6a-89ce-7629f29164d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1865065-e090-4552-9cab-bb33fe86add8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5efe5f-ff46-4939-8191-6b299bda17ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca155771-7f6e-4f5a-9e95-27d47917c495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adea1a5f-ef48-4797-8159-bbf603da306a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bfc737-4757-4965-884f-f3512bf3081d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f128687-cea3-451c-a15e-3606fcf92ff9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327edc25-37df-4d82-8f3a-dc494167fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0fc373e-017c-4794-bff9-5203c0b521f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6abfea-a8a1-48f4-aabf-4939236e84d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee04f76-3608-450e-b1d2-8eae06dc9dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26db5740-94d4-4ba1-ba7f-5b8415ea5a5d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75e4f2-7537-405b-9815-7c0608ed79b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7115b23d-b4b2-4a01-9fab-1be749f8ce98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c9310-5a64-4d54-8de6-8ab06b505aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b08420-7bd5-474b-a856-f146ac64a7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9299d54-51ae-4bb8-a407-f5ff175d0ef5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9afd935-c06c-43a1-ae9a-1575a40ffdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec3bd5c-d83a-479c-bb51-2f4541dab9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39016df2-14eb-4ef1-b418-b5ca47548b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e7e953-ce1e-4716-adde-2b9fc2ac134c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0255666-5675-4509-9fd6-2a3448034cae",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eee37f1-61df-4aee-97b2-ad9b867307dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf38561b-c631-4f51-b194-313260831cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fb5115-598a-45b4-be8b-29e4af7786c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f618e040-96a9-4513-9b16-d410a0d5e4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f3e4cd-d771-40bf-ad60-63a21df1751a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b80127-1316-4687-8fd7-9e47f32b9a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b9bd32-bc2d-411c-8688-569f412fa737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24da8beb-1059-4b43-a5b7-0732d874ba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42cda23-716d-4f0a-84dd-00df28b26eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3541390-6455-4c49-aefc-92894e50a7cc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7157f448-66bc-43e4-a601-b42296c7615b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75276836-a90f-4325-a7e4-d1fa462d420a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7eaf89-d503-4116-a551-20adefbed8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc8e12d-9ff9-468a-bf29-bcc1c3cb6091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01751bd-3d2f-47d3-86d6-ee3e4dc38765",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66950d29-c476-4dd1-90e0-dcb05d731f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ffadee-9b2d-4a6b-b049-d555c5f6ae70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33a6174-9ecd-4a03-9298-74dfb333f8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808afb0c-9304-4cd1-90ae-400f3050201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530361bc-e77b-4638-8cdf-92c673992dcb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74181c68-e0b6-42ed-ad66-6f7974581e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc3443c-01b2-4eeb-8c34-ab31a885fb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbda4bb3-7fd1-4a13-b2a6-a9d1aed4545a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62fe287-eab2-469d-b5a0-03710dd5b06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ddcec5-c0b2-4ebe-9179-77c6e5b01d06",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c9615-e4cd-4e65-8593-fab3a7f6d936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eca2161-f5f5-4894-8396-e6029f33d00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e50e43a-e071-4d65-8261-1473af952952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14574da6-6543-40ff-b910-408e3780c275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d720d04d-4d45-4355-9b49-3b31cfcc37fb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f514c234-c8d6-4def-903f-78fa3293a70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7b43ac-b513-47d0-aac6-fa05615f3ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd2feb-e228-4125-a6c1-26ad6dddc38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bbd676-780a-4ad9-b1f1-13e9e65ce333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f829e99-ffdf-4498-bd0b-e4ba4f902b57",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f25457-640d-49ce-b380-3cdac8f18f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707238b1-95b2-4ec8-8283-fdf2c904183c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c8bf3f-156d-49ec-9be0-530d9a3c2961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c99842-38b2-4bb3-bfae-2c631b5123bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fd6b70-2ff1-487c-be98-8fcf2e35dfdb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb1910-7a31-4ccf-b8a7-0677e83276d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46dfa75-e7bd-4c1f-be59-7613cc6a7d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8bcfbd-afc3-42ec-8668-95ae31894212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c50c521-6774-4705-a4de-ace41831d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff29be-81d6-451e-b765-37cbb6f99431",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c2370e-d9d4-4962-ae18-9ad5fc37d5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a618f0-d06b-416f-a651-8935fb45c50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f9b497-1714-47bc-8fdc-6e15ce39e82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c38529-e581-438a-a956-ce147ee0539f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c3441-e04e-4c48-a144-532a56f1b038",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7371a5-eb1f-4ab1-95bd-ffb09ae4f6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb75efa-17d3-476b-9781-bef88e1db8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5a8794-1232-4533-9951-d6b3cfe48b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92eafc8-cfd9-423e-8f24-c817220e06ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93408086-ce3c-40af-83b9-0f85acde14ae",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88fd96f-cf55-4d42-8bc0-d99d6719a7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9327803-b6f4-422e-baa4-70c6485147b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fd741d-e6f7-4aaf-a815-45d6ec12845e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95859a80-42f9-4eb1-83e8-69f8d532ab6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b47965c-bed6-455f-88a6-220b7269f730",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c09ce4-5216-44ae-9803-89059b58c45b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29eafd37-f710-4887-b2f2-5186f3237dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2438c-122d-497a-a007-d1024e88037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edffb5c4-009f-4c25-ac24-e4c118e36e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a3cae2-bbf2-45dc-9bb3-5cb4d3dd1998",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea27e8-496b-42cc-9682-153635578b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "183647f4-caea-4305-8b87-c4d82ba9759b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea75115-b509-4e54-8bf9-2ea155e73a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6abbd-4f31-4e97-a97e-080a3927b3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67400b6a-918d-402b-8802-b76ce8fc7354",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0e238c-a5b2-458e-bdc2-e366780a6b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6552049-982e-4320-b04e-5681aa1bc869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd16745c-6467-4d1f-9946-3aa496bb0109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8854ea5d-ac10-4300-8bc5-90ef9907da45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0e5c46-4b82-464e-92d1-28846834bb06",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bab45f9-d74a-4272-99fa-915cb641265a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37272648-adbb-4ac2-9297-b08080aa6dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07082f7b-5d37-4b7d-93ce-bd7b47180332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ca9ab3-6ef4-49d4-8f83-fa9fca54ce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153b96c6-90e0-4450-8253-902251f3e966",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046df7bd-149c-4165-ade8-fd2dfc61807c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1abe86-ff9b-4039-a2ea-8524cc106fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3ff8c1-e4b6-42a9-996e-b90f5d53fef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2de82d9-f52b-4cd7-9dc2-daa3bd2c1e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b20348-4c09-44fb-b23e-97377653dbce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adb1b54-ed51-48f7-8530-7a54799c9706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5da7adb-50c0-4fba-92b1-5eff7f342d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8821502c-9bc7-472f-9d1b-de0b196e2aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1475bf19-6ebc-4233-901b-ecbfb6860328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2201134-9d46-463a-a0f1-baeacedc0526",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7ee36f-c543-47f6-a02c-31d2ed1f072e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7851fa2f-a8a5-41ed-9f87-46977a4b1bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c96577-faf6-48a2-b4ba-61fc58d75733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ef2c54-abc1-4adb-9aed-4106e2872099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b111978b-361a-490f-9656-c1fa3abd9a3a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d42980-879a-4412-bc61-bd09102930e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0babff0-dd43-456c-a4f3-50c5fe779132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407043d5-ea5d-43cc-af98-6cf34e34a78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173968c3-7e76-4c4b-8d4f-82447bf64e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54477a3-0579-4448-bc8c-7f1818c78298",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7dab29-a725-4225-a76b-2142f24a36d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69adf5dd-f141-4a62-a04f-1f553e332de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8303d3a2-147f-4c57-8bbb-208cc9e67a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f893d98-fed9-4ad3-8e2c-c1c7c97f77f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd7f027-2ade-4247-876b-c3285ea9acd3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd12f2c-701a-46da-9a48-e6f792249cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13af222d-0ac4-4327-a26d-a6bf06ecf4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa18d1fd-b4f3-4f49-b20e-e1f8ff55feed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a8f73-5916-44a5-8ced-32a45ce15659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1245bd48-703c-411a-877d-299600e47153",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a6b14c-f243-481c-8da3-e17b05df7c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c6ab1a-4b5f-416f-bb18-ed0e6baddf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcdac0b-3bec-4c67-8488-5a3c8a2bbc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bcd032-d521-47da-9add-9fdf86fd6eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f175df79-ca0a-46ab-9e30-ae14c14e59f0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc9deb3-1af7-4b81-b44e-757929e9897a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcc4ad9-a056-4d07-9e79-170df3dac445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75082ee-2c8e-4076-9ddd-966c5f5aea95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6b17b2-3f81-45cc-89c1-2cffe7532a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9fdd1a-9f15-4950-b384-069805ae4aca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da347a8-8fcc-4a6f-82f1-4befeaf5f7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c7647-1604-4797-b424-41700be6746c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72060f1-0f79-4d06-810b-a134d2cd1633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bd91e8-7b96-4161-b9a5-30d628d4ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6456f14-0048-43b1-929a-e5880b002d32",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe63c420-e2d7-4b83-bff0-bfd821e2f2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb275839-10b5-42fb-bb7d-d4c6848d2683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d29ed1-33ed-463a-b8e9-c7ccaa499760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71a3ca4-aca0-4174-8c09-a40bb9f4852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993df1ad-44cc-4ac6-9534-14a7cb4b7421",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38bebd3-7fd3-48dd-af29-511ad24de487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d4e23f-5c22-4d7e-890a-d5da4a6d0820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd753b3d-08b4-4d84-92a2-ee560fa18eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbb9dd3-64f6-473f-a20b-6368a6079d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e785e591-3b32-497c-b16b-34e7ef59845e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24814d2-0f89-4d11-9542-9d0553e5c8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37159119-c5f0-4961-92d8-56f00e1ab265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d4e630-fbf8-47da-98c5-9d23af1f82b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55eaa0b2-a8ee-4133-a580-c1c93cc06a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6633e8e-264f-439a-8a79-e1b2ffdda8cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641c1489-50e9-41f1-aab2-56294266c932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb1e952-bd97-40dd-896f-faa7c3610f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51693656-c0fa-47e9-a9f8-11b42b338efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fa09ae-07a3-422e-93b8-43f5a24e2ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1901e0-35b7-4e94-90da-63f5ae692e3e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518e9cf5-0510-48d7-b32f-4826ea964658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dea024a-eb44-45bd-afcb-771a4d5136a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443e355a-0e67-42bb-a7dd-2183aba9f0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7ec734-926f-4d4e-a935-ffaca0d4b174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc548dfd-dde4-4b56-87da-e1db04f3b4f1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65170639-1a07-4673-a09b-ac3a01ce6105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a0d6ad-7fc6-4548-8e6c-515cedecb38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1e4b0-841d-4f46-b429-bcd795aa5ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bd11ed-169b-43fe-8326-61f76f35274f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61640532-be3a-4c2e-be4e-cbdd982b6479",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb5c895-dfc9-4626-a821-eefe9bcba17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7474c4-87ab-4f05-ab4e-24f88ee32ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd227a6-8906-4954-860f-011ba8d774bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fed5b0-c649-4058-9a8e-86d87239c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321931d-00aa-455b-bc1e-2fb103cde14a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c4c366-b4bc-4155-92e0-851e31f77c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a82754c-ee0a-4727-a99a-b73b4a506697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd715ee-14cd-4917-962d-ca6b20f9023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b592da94-0b97-41a0-91b2-7d4ce8812989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c83ab33-ff20-4d42-9ae7-c677f09f0e8a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b49503-3dbc-4906-ae4e-72c97a6c5506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0c7713-da7f-4244-87f1-2d2647943332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea37b9b-e98a-486d-8c96-310ff5005864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6155e8ab-e7d2-47b2-9518-3bb4a5aa81d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1def992c-96d3-4b78-8b44-461cf5f0c978",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8d7516-e8a6-4669-b32d-0c8447bc5000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e288b793-ba67-47de-b067-88f67a211382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7370f2-db92-4137-aa54-5d78b7f73b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2f8a8d-6c84-4d9a-a6a5-2be928e9c6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012c1d66-8015-4743-a1ec-d5215cc70d94",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b1aafa-cc67-434e-8286-15ad4b4d7a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd55361-2c47-46a4-9c8d-99eb616516d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ee822-7d89-4bba-9059-8147dc8bcbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3975a8b5-6dce-4096-87b8-7c93988098e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8371124c-b28b-4cab-ac07-db42254bde1a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e0e077-7eca-4f70-b663-22c42c23ff53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41b4623-031e-4a64-bf19-13a36eb5330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2252dd-baf8-42b4-bbb5-e85dc82f6824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a3a481-59c9-493f-929c-4a9f5a5602b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18220d19-1b49-48a5-8e15-0c6d7ab0f614",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea52fa4-b06c-4ab7-9290-a275cefc024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b350af75-2482-41ab-bf0e-e05e579eadb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5f200a-f4b5-4ab9-99c5-87b836422de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dd27d8-d29c-4b5f-bfe2-15383defa4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc52ef0-ef0b-4a94-89b0-0e650e00c858",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ccb83f-6d26-47c6-a41c-69352d4ae530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd53c91-35f8-4738-93b6-06c5bcfbe9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11319549-366c-4fab-a77e-e3584983973e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5f5cb3-5c50-420a-a072-8e3e71fd3c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a56c037-fb35-46d1-b0d7-f1c328bca5fd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11192afc-89c6-4e1c-81da-0c47d2cf6a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb4984a-c10b-4351-b418-ca506b778cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b608eee-1d79-4c5c-9340-1b7b24d9aa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0a7084-065d-44f9-adf1-0d47c7fabbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd53420d-304d-491e-ac57-18cdecbfbcc0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b949fe78-1838-4c9b-bec9-8c8383560496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe36a954-4f3d-4479-adc1-45535d773d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77892d33-d418-498f-89fc-4cc5b81ce150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890f4d4a-91bb-49d8-b8c1-78b83ce31ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f27358-7c81-487e-87f9-5af6269d2f6a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd9c219-35e2-401d-aaf9-f69545da8a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fc3b86-9e78-4057-b1fa-22006a08492c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643cc796-6967-4814-8975-d8b7680b53f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687e32fd-04c9-40de-bcfb-e184b6ae2bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139395ae-ebb5-4cba-a8aa-897657c9a50e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10284a48-1af9-4bdf-8cce-d33309cb88f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2274f680-fab2-4c45-8d48-79374426e10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418ce17a-85c9-47a5-96e6-f33da51367fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a900005-7cdd-4b59-821c-09f67c15bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e72254a-75dd-4ab8-8c19-809c2c580910",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e413667-0c9f-41c6-a10c-8bf9522da60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8a0376-6019-4839-818f-e6a5e8348920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77676fe3-2ac4-445a-8d30-ecda55210d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501ce647-3751-4474-9cf4-a023d15455ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a3fe3b-42ae-4de8-b29d-132834fe739d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7d54ee-8962-490c-a7a8-f92c289e0baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5afd72-21be-4231-98ee-3457a54cd806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085ce7f3-6ee6-42fc-8060-bfa2fc69901a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45969191-b0b1-48dc-a061-fb5841d01f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d763b4-c5be-404e-b269-fcb6f88777cc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8780fce3-a9b2-4be6-a652-c70d8ad390c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a22f5d9-ade2-4823-953a-2fff82a94e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcb6109-eec2-4193-9734-a7ecfc10d3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2feb7895-e3a6-40f9-bdae-b7ec95e981d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226feb4f-a284-48a9-9e30-7dc216840b29",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618930ec-9cfc-44d9-91b8-9d37551d6be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5c29fa-0c22-4ba0-a373-706d34f61010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bee1025-bdf4-41b0-bea1-2995d1bf345f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e488c4-dd29-413e-87e5-008ace2e3fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81800c28-014b-48d2-a184-9db57e79b221",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3b5c95-1d5f-4ea8-b62b-8f63bf4134e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26a6f2b-7975-4b47-b114-42e6dc6dc767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5907d798-6e13-479c-9acc-77dd44c1a589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b931ba-b5f8-485f-b0c1-7058c4f82bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae4363c-8f94-43a8-a6c4-9d4565369252",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a53735-5b76-4b57-8752-dbe3869fe71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97d8ae7-32a1-4602-abd0-34353ed6642a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d5c1be-f2d5-42d1-ba34-17e8a5f91b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f9d66e-7c59-40d7-a787-dfafcfa00784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac83cd97-70bd-4ab5-923e-402f85809954",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf55ad-36b7-42c7-9e80-951ea14fead5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f518f3a3-ae2c-46f3-92e9-548bdb7a86d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0b1a82-be11-4319-b964-44b5717463aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d256f9-4fa4-4683-9c5e-bedb90f32077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf55977-9962-44eb-9bc5-6f01a6549fe3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fcefca-9e6a-422b-81da-763eaa61ff14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee3e2b5-d29d-4344-ab30-cebeaf1d4b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5716a6-f07b-4ed2-8c11-8584699d5f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb29edfa-c170-4550-9501-19791641843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0a3f0e-da18-45b5-840a-dc71bf6feba0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbcd59d-a3c4-4b48-8f72-ba679cea6981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c05fce-cb29-496e-8504-b476a329ebe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece2d9fd-e135-4430-b47b-d5bad36aad6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9072559-9547-44cc-a58e-e372e18d0fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc93ba9-da38-435f-acf4-8cb63c3b6d0f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b6f0da-b66c-4261-b0d6-15d58f9ab8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9156a9-ad62-44c6-9b58-a87b3b0030e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ad3132-4d0f-4150-a644-3e92a1289da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772cc308-eabd-4476-b2b1-d359d5b1b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7587db40-e303-4732-bc58-b17691efbcfb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c58ddf-7bee-4c0b-9163-96d5df89d898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc84bb8-ea12-4718-94c2-b32a087f27b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db23a3-ae3c-4de6-81bd-4d9093389fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a66157c-02ee-46d7-99a2-54d3ea7bb6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e18bdb-37b7-42f1-b974-bbf78de591d5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6df534-f9b3-4cbd-8ee8-d54e4542fa72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09a85ae-ac85-4c4e-8394-d678397b031f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135775d8-eefe-42fe-b083-8c7298592a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1730aaa6-797a-4313-99ec-4e6ff4c122b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f8902d-7599-4f59-aae4-ba70e50c5c56",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421cda50-40e1-4e11-b69d-ddbd21a1f95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18100459-63b6-4260-9451-2a395b55a440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b012d8-356c-43c6-82a2-c6b2193b6e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b283479b-d3a7-4684-89fe-f23c9fcb0840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408177c2-41ac-4847-b0a4-271d3c503427",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e956768-f294-476a-9096-9a5bd2a885cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cc3ddd-b72a-4de6-bc66-0edfa70bd31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742be2b-b548-405f-a546-ec735acc6051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad34858e-588e-4d94-97df-9005fca9bb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578b93c-0e7c-4fd2-9a8f-6ac744bca2ef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893b62a0-11a0-49e3-b271-0a74fc5fb4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a51ff66-cb1f-465f-9530-c02a3a8a3d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0828fe5e-b64f-44f7-a65e-eb6627433556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632c2c2d-8d4f-4abd-8bfb-fcd63842dd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362093b8-2d74-4681-a538-52af028755d0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf67845a-4dd6-4c08-b30e-49172d669b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278078ed-e83f-4fdc-b92a-37b3069f9496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894c9a79-e270-44e4-b544-00871124aa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a706211f-81ac-45e1-a66c-45875325a2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae2c0e9-6f36-4675-b1d3-dfd828b659db",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60f5e7-272e-4473-920a-468f372125a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b5bd86-b1a7-4c4e-853e-34ed6eeda201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973cf1ef-9969-41cd-9694-de0963c598aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875eb6c4-9c9d-4b0d-8afb-a5dafef6f184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c22caee-b988-4f1f-b686-30caeac5ea79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb7355-fe8d-455f-9034-7bd398504e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030a88d6-428d-4107-b7d1-0626e3aa1ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9579dc-3e58-45a8-86c3-9a7cfeb8d05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70cd03a-4355-49ca-b7a9-dbe66b89bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acc784d-ed7b-47a9-bda8-f28269aae318",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1843c1e5-4a26-4608-9c47-235b79f876e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee785d3d-c6d8-4c8f-a059-f90b1070f3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23fa452-a901-439c-8fee-23224ef241d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259bded0-fa40-41ae-861a-8baceb1c174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0536b-5a7e-449a-a0c0-3239cd3a4e28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae99f93-3b01-461c-ab61-a6e06c628bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01d5a84-14c6-411d-9eed-34532963666f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee9092a-cebe-4458-82fc-66729d078520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842c703f-10ba-40b3-8fc0-ddbe935e8053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8065c0e-dea6-4cf7-8913-3c0d2335035a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955f71e3-dc11-4bd9-aeb6-fba7398db7ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5f8beb-645d-4299-bc7f-5049396554c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cbc02a-4efd-4156-ae4a-571e2b1b3b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f84c808-19e1-40c5-b004-5a7236d320b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7175b176-7c81-45c8-aba9-a039129439bb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a7877d-f90a-49ff-bbb7-a0008bbf8ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d471db9c-962b-4054-9a49-bc248d406531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3a58e6-6c1f-4b17-9308-40e33c6ec725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9cb6c1-4db8-446d-a3f0-2cc6138c4c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6c6487-7e29-46af-9d94-3e5131e4ab11",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d472e963-d0ae-4ac5-a671-73176089a45e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d26dcfc-b3e6-4daf-b0b6-5737e2c726b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceeaede-6ac1-42d3-b40a-60943f194240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ec1af5-5e2e-4228-9547-86bd0303d5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c2a6e4-91f7-4fa9-a909-2f7400892b6f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230c2893-41d0-4d46-9004-7be241514ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e310ad1f-fd25-4d63-9199-e3953647436c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeb6488-5648-4527-8869-26823eb1996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35557f18-62c8-40b4-ba52-40bb88f0ddf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc7e820-21bc-41a3-bbbd-c55da31f21af",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c0d4cb-1c57-4711-903b-1a5f7305e3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49783c95-98f4-4833-9083-cec85fa8bcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2d6236-7c17-40d0-927c-2c8281d0239b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485a1e37-7312-4e86-ae8b-1f91b5f0c7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb72cdf-5bd9-4bd4-a4a2-2cfbec4dcc7f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267d275c-5531-4f9a-add4-e2142ea736c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233ac138-c645-4630-9ea0-53ea50ce22ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa3dd17-5b32-460d-8d8e-b13d42327de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1c4c3d-1d0e-41ae-a870-15683e371810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d85c237-2ae3-4180-a901-7914e32e8a02",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef52499-865a-4f1a-8bc8-577c057aa9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828fb0a4-a19e-4bb9-871d-13fdb26586a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3f5c1a-90dc-428c-b246-1358cd8e0e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ffbfdb-93b2-432a-96cc-2efd4b18ecaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc1ce94-f05f-46bb-a8fb-a225213034ca",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b1d02-cd8c-4a04-800e-1edfcfe9e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15238053-3731-42fe-b2fa-1988c5d08035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53c01b-6cec-4eec-9eae-fc8dfe64d89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1402d58-be26-4d3e-a045-e108bfe6daed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140ecfe3-cd67-475d-b33e-bc33cba4e8ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2327cf-1218-4cb5-bec5-f309ec64786f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f993cb-74ad-47c6-a71b-b79f940e948e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022ee002-329a-4188-a4b2-f19dd5c615cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd44ba43-abf4-4d86-9014-daa4503679af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dece03-b1ad-41c3-9557-d017f09c05ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29536224-82c8-47af-bdf1-4369678875c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56901619-e853-4630-befd-8f209e910f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fb1738-175b-4721-a07b-884ddeee2bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d175a5af-b52d-4fa2-a6ea-f590bdf7ce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec7588d-a1a1-43ed-a332-75837d682a21",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243bd3ac-871b-45c5-948f-8dc69964b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85bba8e-751c-41f4-bf4c-4bfc4b21d162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948d0e7e-8df5-4791-afd9-7f09ea8db892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dc029c-17b8-4d97-9c11-ba350085dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abba85a4-039b-4083-bb4e-c860641fc8ba",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb78f1-c368-4d59-b438-315de282e088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc205e6-2dc7-4a08-ba6c-9bd95c4aa1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267ac01a-1747-4587-b61b-b7d14282ed02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df982f1-b8da-4617-89a5-9dd55d0adef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ca3b7a-166b-488b-8e93-3fd69edbd23f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfed0e9-2dcf-49f1-b31f-5cc35660cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5957441e-80be-4c14-98d6-b6bba39e0b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376487e1-810a-4bee-81ca-574ab0ba9f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483c6cd2-40a3-4871-afe5-a7417430151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d22b012-c17d-4181-ab2b-598f6c272e62",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8053195-e8cf-4a9a-bfef-178d9e73ebfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c9d015-f144-44b4-b7ff-8f0371a233e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be407c2-ddbc-492b-aa47-25710a451918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dacf9d9-486f-4e5e-b503-bf3039f7857f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c08682-facc-436e-b181-6b7e03cc61e5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b395a22-c537-49a0-a34c-1c934d4cfc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e37c2eb-7dbc-441e-a352-c4418a0d82b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4705ac8-8dda-430b-8d10-ed7dd0a34d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b57f66-043f-409d-bbf3-d304690fddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e459b2-7c48-4b08-be3f-0ba808aee5c2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec51e0ff-f539-4b61-b6fa-33d94950e681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29c2fe4-acf7-4d41-8027-06d256729385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc66d2-a7e9-4b1f-956e-afb3805f98b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75aabc5a-3671-4d20-aee9-c3e4c4e16ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8a71a-20a9-4837-be0f-ec3fd09603e8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e77d8-8d96-4846-84a9-dc52dae8bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d4fa0c-1996-4712-a09a-870c7924e551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9976641-05eb-46f2-bb85-2a7634dbcd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617a602a-389f-4be0-aeb8-9c7f46a525cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6349c2-7b28-4193-8672-e70f426fb742",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61903506-dab5-4ba9-a201-e57f374396d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc50af06-42ae-41ae-996e-6d25521b3e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaa1221-c57f-466b-8853-c228bd932995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16127766-13a9-4a89-b5b5-34a6f063a5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a61386-46b8-43c2-a9aa-c5ec47584fb5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e67183-f739-40ea-9990-43fce053f299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0851f49b-0ce7-4784-81e0-2342ba0000a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a889e39-c4cb-4456-8415-a9b208aad19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f0cc16-822c-46e9-a9b1-3048dd0cb612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1369af1f-8814-4ddc-8c4f-4538393a7a73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3365858-acb7-42c8-866f-810c199d1104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5afdb130-55a1-431d-afb4-f6de2302fab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8913d414-1a35-4585-9835-3100ccce7866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451f5af8-891c-4516-b7f8-b12021f44f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c411fdeb-ee63-4ae0-9c25-4511672b492c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f8019d-6c1b-4af4-a591-4ed2cacb8b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7010660-7508-4949-a6a9-eab0c3fe964c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3dc7fe-7478-40a8-a136-3e6575ab42b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72105745-a356-4e70-81a8-4292c0a9e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c706c5b-ac74-4d18-92f4-e9115c4434a2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9a71c5-924b-4dfd-8589-d25300e1f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54b4c07-7718-4690-bb0d-1fc19b513d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc74311-d1e6-4c1f-8c8d-1ae09c5522ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee0bc95-47d3-45b6-a22d-a70855e86028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42b85a-9499-45d8-9ae9-4d88348861c2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022a0415-4109-4d45-9832-4099a1ba4443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1083936d-7079-4da6-9c98-d86faf8225ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad8138d-6c16-407e-9145-d9a0e7712f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85151ee-57f7-4d9c-bd2a-c04b0858e8dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd5f32a5-c21c-460b-9fda-cc2729fc0575",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a666615-becb-42a7-aac2-5214301aa288"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5a0922-fc75-468d-b608-294edfc4890e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5816762a-bf69-4231-acf7-6c02505f2847"
                    }
                  }
                ]
              },
              {
                "id": "91c82b0f-739f-4699-9010-5e8b73f851e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae9ba36a-0c4b-47dd-90a3-0aafad055d85",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0203be2c-01fb-483e-82df-4c1ae062884c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "edb9876b-51f3-4d47-b945-03155c573282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e55af5-da56-4600-a614-9330dbbbd813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af3e2a07-ed08-4f9b-9c0d-a2ae1b5043c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7058e93b-07c0-4c3c-baf9-a3fbf4cf320b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9542585-69cb-4979-be45-64c5ee305c21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eff1906-c7eb-4377-bf42-c967bc3b6d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e09328-b0cb-4d66-838a-254b39abdd10"
                    }
                  }
                ]
              },
              {
                "id": "4b5a43e4-e558-4864-9a20-6ff3c65d8b4f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0001d18b-0e9c-4a85-9493-a60d3a6c6bae",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3016d73a-39b5-48dd-9e76-2fc7c59bfaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49a9b322-96cf-4e37-801a-54a18d514591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07468d5-a108-4778-8f7b-b56af15fdac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0389e3b6-7f8d-41b8-bf8a-8c75b59b8784"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11314f7c-1f93-42a9-ad0b-b44b0d81dd79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfbd866c-fc1a-458a-8d77-32acace33875",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b75191cc-144c-4018-8b89-0ddad6149709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5da1683-1e0b-4a07-ac1d-18f01a7f3efc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd673962-04bf-4230-9f15-93c9ae0d840c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c0378b8-2ea5-4c57-ba50-948c9f7b5490"
                    }
                  }
                ]
              },
              {
                "id": "f462eaf5-a9b5-43b4-9a12-58a8bfd70c12",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a627ad9-2658-4865-89d8-35a0cf874278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4564ebab-cae0-4124-9737-8252625cfe03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a3041d2-499f-46df-ab07-61520f0d2e73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9056e3e-ee16-461d-b193-bdde7abf906f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "217cf9cd-8ea8-49ba-b90b-18f690bf62d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f43cf87a-74b8-423e-9f36-906ce8397eb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9693289-7fc1-44ef-8715-ad4e1270f65a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b00baa61-8d2f-42e7-8862-0ef25f473a5f"
            }
          }
        ]
      },
      {
        "id": "7e78aa29-4937-4c37-a46f-a7c21af3f6b9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "92e1dccd-8606-4eb9-ab7d-bd7e6dc21e34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd9bd65-4106-4684-a9b7-7aceba777ed7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c74d1423-11c2-483b-af28-b4afff63456e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4303947e-d02e-4f3e-8cc3-df3a187fd628",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bca661cc-1b28-4699-badd-683826f7e079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e4bd6-211b-4f85-b24e-9b2b5db4a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a23cd7cf-8c9f-4361-95f2-281b453f410a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8a27f44-f77d-40ab-aac4-ec0afbdce945",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e9cd84-2bee-46b1-af8f-f7ae40112fb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f474efdb-f4b2-4fc4-a6dd-363852810d25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8c84ca8-d68a-44c6-a852-a905d51ae86c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39658948-4b2a-488d-a5c9-a860a7c24ce4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "abb63303-ade2-4fb4-8eb3-2f1c43f148cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb2e4272-f874-41d8-aded-7e9f181726aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95023e70-ca18-45d0-bbfc-d57daeab9eb4"
            }
          }
        ]
      },
      {
        "id": "bcd032bb-c742-493d-b03b-5947b896519b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "388fd66c-91ec-4376-a787-c743136cd9ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c638116-2925-4bab-8c62-c922c9780379",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a6937c9-aed7-4d30-9bd6-e021988afe5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ab44b8-26fc-4b31-b61f-5c87b70bb138",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091371ae-162a-447b-a70a-6b02aef56d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b313acc-9ea8-487a-878a-cf4fbdbd5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "707ff4bc-21e5-463e-afd9-74e686a960e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "698a9bac-8845-4912-b056-4480ae2963d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d7a18c-e4a6-4b7e-a805-ae3bcc47e2fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a8ab1f-bee7-43e4-9ee0-60113d1ef66b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dfd061e-ad8b-4e88-b2f6-ae69de57e1f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6603e8c-8a9b-4fad-83e0-4920059c1ed5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1da72df7-ced4-4624-8bea-d5d571edaf18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e67a03d1-88fc-4896-bb09-a35386a28eb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "743872c2-11d7-474f-8dc1-33b370bea57e"
            }
          }
        ]
      },
      {
        "id": "f3ed4cf1-1bb1-4ad5-ae9f-f7c4a6556fda",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8708e6e3-b71a-49ce-abc2-a8b393380085",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c340efa8-4d7d-40af-bf25-c97cd4bcc273",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38da384d-0ccb-4052-90ac-2eb616f91055",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7453c1-c2ab-4dc0-a67e-ab47c473d09c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2997a221-5cf6-449b-8f19-a19c7eff4a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c02424-7ce9-455e-9e9c-4582efed5e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "055011d5-e566-496f-96a3-797ff7dec841"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f373026-566c-4401-9142-49b243061bd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9c8e194-ab9d-45f9-a010-a5b31aa1112c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5999f6f2-44a7-44e1-a637-3d5fc6eb0893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d667877-b67e-4db0-90f1-c5f6bd3b73b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a2a76e6-319f-43f9-9389-136887bb77bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "737b34de-9ea6-4900-beef-11cb0994383c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e423d8b-0b6d-4c64-b6f9-edebea7a1227",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "024982b4-9a00-45b1-a95a-6f9b1d7506b7"
            }
          }
        ]
      },
      {
        "id": "654098f2-12d8-4f29-88ab-0251bd030277",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90120bc2-9a9f-4b02-9712-8fbf1bf3ca72",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f44af93-3a38-4931-bb81-87d16baeb91f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9c12687d-0227-4352-a5e3-3baa56b58bed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "615bb436-8f55-46c3-b633-4021c843a536",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e43c4b6-6983-419c-82dd-7bd550fe0cb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.2701754385965,
      "responseMin": 5,
      "responseMax": 11000,
      "responseSd": 692.8533684432279,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703983099283,
      "completed": 1703983137950
    },
    "executions": [
      {
        "id": "af25a809-3a87-4d8b-a032-ee91bd84439b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "964396f0-b252-4d90-afd2-5adf667695bc",
          "httpRequestId": "7c7fd809-3e3f-45e8-bcb7-815624269b7f"
        },
        "item": {
          "id": "af25a809-3a87-4d8b-a032-ee91bd84439b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "22cab2de-0016-486a-b97b-cf890b43e278",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "b26e1f5b-5739-495f-b74e-850a67a0cb38",
        "cursor": {
          "ref": "27ee8e5d-6e5e-451e-abf9-b0133b7b804e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "353e9dc6-aed7-46fb-a8b5-d85df55a4356"
        },
        "item": {
          "id": "b26e1f5b-5739-495f-b74e-850a67a0cb38",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ded165a6-a0d0-4265-826a-782ee82aac8d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d781ecd2-47ba-43b4-9e20-0336020363dd",
        "cursor": {
          "ref": "1af5c994-45de-466a-9424-6044174decd3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ac64cfe-05d8-4a37-8522-6e64fdaa401a"
        },
        "item": {
          "id": "d781ecd2-47ba-43b4-9e20-0336020363dd",
          "name": "did_json"
        },
        "response": {
          "id": "e575d833-45f2-4694-a472-7bcef5406051",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cd8d79-3699-4745-a798-bcb3aab89506",
        "cursor": {
          "ref": "fd9d989b-13c5-477e-addb-ad95e9f32397",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43d60abb-87b7-476d-bbe1-a9bb93f912fa"
        },
        "item": {
          "id": "69cd8d79-3699-4745-a798-bcb3aab89506",
          "name": "did:invalid"
        },
        "response": {
          "id": "4eb0b2bb-2c7d-427f-b116-03a96494d000",
          "status": "Not Found",
          "code": 404,
          "responseTime": 897,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cd8d79-3699-4745-a798-bcb3aab89506",
        "cursor": {
          "ref": "fd9d989b-13c5-477e-addb-ad95e9f32397",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43d60abb-87b7-476d-bbe1-a9bb93f912fa"
        },
        "item": {
          "id": "69cd8d79-3699-4745-a798-bcb3aab89506",
          "name": "did:invalid"
        },
        "response": {
          "id": "4eb0b2bb-2c7d-427f-b116-03a96494d000",
          "status": "Not Found",
          "code": 404,
          "responseTime": 897,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0ddbe7-2dca-479a-b097-e5f675b4a991",
        "cursor": {
          "ref": "e0c9229f-0274-43b3-9dbd-6ea49f48008a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88135a3a-b5f2-423c-9c50-22997309a117"
        },
        "item": {
          "id": "9e0ddbe7-2dca-479a-b097-e5f675b4a991",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3106e900-fc3b-48ee-9f79-62694dd4fd06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f3f307-5606-4865-b187-da09d951df91",
        "cursor": {
          "ref": "14bc03b1-5f82-4493-9f55-db92f8e9b4fd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1a4dfc5e-519d-4cb3-82cb-d45524ee2646"
        },
        "item": {
          "id": "76f3f307-5606-4865-b187-da09d951df91",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3e537889-2fc4-4274-949a-e056c5dbd4e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6134318-3dab-4a95-8008-2719c3db9977",
        "cursor": {
          "ref": "0dc39443-0961-4bc3-988a-a72144d3faae",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0edec263-c88a-45fe-a396-0660207088d2"
        },
        "item": {
          "id": "f6134318-3dab-4a95-8008-2719c3db9977",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bab0dff6-0033-4155-9e95-e11d5849902c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464ac84-2a8a-46c7-a3f2-3a003666599b",
        "cursor": {
          "ref": "b03ca8b9-965d-49cc-819e-a1daa22843ca",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b08b6a32-a77b-4b46-8031-91ef70412e3b"
        },
        "item": {
          "id": "1464ac84-2a8a-46c7-a3f2-3a003666599b",
          "name": "identifiers"
        },
        "response": {
          "id": "9f2e65d6-62d9-4a41-b553-5241247dc98e",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9c7bc0-1fc5-45e6-aa6d-39a4f8f5b7b3",
        "cursor": {
          "ref": "7ab5e468-28ba-4b4b-951a-24547c22e911",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2e21e462-58d3-4119-b5ca-7079e59e3306"
        },
        "item": {
          "id": "7a9c7bc0-1fc5-45e6-aa6d-39a4f8f5b7b3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b03050b4-8378-4864-a743-cff40c86d877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b2dadb-fcc2-42d3-9267-683fe694ed7e",
        "cursor": {
          "ref": "f5d18410-da28-476c-bfe4-98f063dc52f1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4c598668-aaed-4128-9836-e8c1b54b07bb"
        },
        "item": {
          "id": "53b2dadb-fcc2-42d3-9267-683fe694ed7e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bcab84fb-a887-4048-a5fd-1f164a0645d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc9e8ba-20e3-4361-a6d1-661b72156f60",
        "cursor": {
          "ref": "a8d84882-0d44-4c37-82f0-2c2cd7b09de3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62fe2c07-5734-44fb-807b-8ab9db0eab0f"
        },
        "item": {
          "id": "efc9e8ba-20e3-4361-a6d1-661b72156f60",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "beac3652-d482-4296-a984-68aae488129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a04964-a054-4e5d-bd2e-c239279abb94",
        "cursor": {
          "ref": "2d01c7ea-1258-4f3e-9588-f294fb48455b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2848e0ef-7c2b-4929-b5b3-f403b9ec3bfc"
        },
        "item": {
          "id": "e0a04964-a054-4e5d-bd2e-c239279abb94",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2eba6615-1c0a-4eb9-905a-cfd57d5ab1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f00aa-045f-4c59-a5fa-cbf6436d5ae6",
        "cursor": {
          "ref": "dc6263a8-93f0-48b3-b643-2e9bda6fc3a1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c272c191-f6ba-440e-ad05-277d7c0aa001"
        },
        "item": {
          "id": "cf3f00aa-045f-4c59-a5fa-cbf6436d5ae6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9bdee0dc-8501-4b16-893b-b290e2dcd955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d91838-a0b9-4549-8e69-4c0f8e13a0e9",
        "cursor": {
          "ref": "995d0b65-9595-428a-a4eb-0514e99474df",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6cd16819-7ac5-41a3-925c-889a3bcd0caf"
        },
        "item": {
          "id": "50d91838-a0b9-4549-8e69-4c0f8e13a0e9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d9c87e38-1072-4933-ae3b-ad2b651721f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b5a56-0640-4eae-99e7-25127bddb342",
        "cursor": {
          "ref": "2b9134ac-66af-4d82-b814-b0ae0861110c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dfc4f3f9-cfe4-40bf-8e0b-f5334467dcc1"
        },
        "item": {
          "id": "380b5a56-0640-4eae-99e7-25127bddb342",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "61bd5f53-6adf-4366-bc5a-3a58a4287ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24da594e-58c1-48b0-8ef6-95318fd03782",
        "cursor": {
          "ref": "2c798a3b-2864-43ee-9660-671728959350",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "16afa11e-5cfa-4c7b-b71f-c7d1cf79beb8"
        },
        "item": {
          "id": "24da594e-58c1-48b0-8ef6-95318fd03782",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1aa5cccc-9e45-4fd6-a8e4-fea1d779cd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c3421-c6c1-4cc2-89b6-ab8c16f28be4",
        "cursor": {
          "ref": "e6245993-7b7b-487d-a360-0c14a67b1f7b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "de0675b4-a672-4506-bbbd-1a75e3e0e0eb"
        },
        "item": {
          "id": "750c3421-c6c1-4cc2-89b6-ab8c16f28be4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f48fae85-cee3-4ddf-a8ba-d518e9d9da55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd978f9-8784-445a-840f-3e9aa5c5af7c",
        "cursor": {
          "ref": "d751d927-9812-4787-9f81-7721c3dc50ac",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2070e63b-0ffb-47f1-a952-2fbe89c7748d"
        },
        "item": {
          "id": "dcd978f9-8784-445a-840f-3e9aa5c5af7c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "78df8ef9-cebb-424a-b1df-78da91c6de93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67736b-1eff-4c42-a696-d0b3de08c56e",
        "cursor": {
          "ref": "e5231bf6-8d1c-4e52-b4c0-e04aec434106",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "893ab3f8-63ed-446e-954b-6ffca3f60d08"
        },
        "item": {
          "id": "8f67736b-1eff-4c42-a696-d0b3de08c56e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0381cd94-735d-4710-a18d-93e7341aa616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f00a15f-69c5-46fe-91e0-34cb29432a10",
        "cursor": {
          "ref": "74268352-c2c1-4975-b6ba-e2d7424bd2a8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "13a71a58-80e4-464b-9bef-474617c4dcca"
        },
        "item": {
          "id": "5f00a15f-69c5-46fe-91e0-34cb29432a10",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a0f38d5-b73b-4de2-b899-4fedf0273b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc216f98-d1d4-48a8-9748-8375b4ecab9a",
        "cursor": {
          "ref": "1cf92252-f6c9-4255-878c-09cdd228eda3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bd7999c9-b6f0-4749-9121-81baaae09785"
        },
        "item": {
          "id": "bc216f98-d1d4-48a8-9748-8375b4ecab9a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4702b284-45e2-4ee0-9034-6418783a78f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16364872-d52a-4d53-9312-27d070b6d5e0",
        "cursor": {
          "ref": "2960bb1f-0019-41b9-8f70-442e0249905e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4e994647-a1df-4886-956c-41a22915e9b5"
        },
        "item": {
          "id": "16364872-d52a-4d53-9312-27d070b6d5e0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "61876e51-e6f2-4164-8ee8-32f02f6e99ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf77e596-273b-4537-b5bb-4eff346d8981",
        "cursor": {
          "ref": "8eb3c6d6-0acb-4268-8206-861ef183766a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cbfcdbcd-4f61-4ef7-8e42-5aef8206f984"
        },
        "item": {
          "id": "bf77e596-273b-4537-b5bb-4eff346d8981",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "238b5481-2b42-4fbd-8508-95f18565c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a22e2-c012-4400-a7d4-2f11dcb82727",
        "cursor": {
          "ref": "5d4d4510-ab17-42fc-bf18-e847584783f1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "df9851a9-abd8-499a-9b28-4d7cfdb82853"
        },
        "item": {
          "id": "638a22e2-c012-4400-a7d4-2f11dcb82727",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "217fdc3a-904f-4a65-bf45-25849bb77293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af235c-12c1-4ccb-8418-a8516ff15134",
        "cursor": {
          "ref": "b74d4b86-2b15-485c-9048-2f4d2bbdf5a7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4454863c-f3fb-4b72-9747-8f7de4809404"
        },
        "item": {
          "id": "78af235c-12c1-4ccb-8418-a8516ff15134",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2e8b07a-33e3-4962-84c1-2adb59ebe896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5d658b-4189-4a35-93d6-72d63cb1367d",
        "cursor": {
          "ref": "1a29bec4-c924-4dfd-ae5f-336ac6c2138f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "42b041e4-64a1-4342-ba59-d393d3ab8c41"
        },
        "item": {
          "id": "0c5d658b-4189-4a35-93d6-72d63cb1367d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79309406-1401-45a2-ab09-f76f655dccbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547e9a24-b3ae-41a4-acda-f7100ced82eb",
        "cursor": {
          "ref": "75bef688-79f1-4bd8-ab9c-9fd7086261fb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b2be4b29-9f6b-46e9-89ff-a0f09b15db91"
        },
        "item": {
          "id": "547e9a24-b3ae-41a4-acda-f7100ced82eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "456e72ab-574d-4ef0-98f4-9571f8af05fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd938103-c626-4574-ad8d-c8c8d649c817",
        "cursor": {
          "ref": "786ee085-3081-4e2e-b35a-872564300e02",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0c6abe20-042c-4d9a-8dd6-a5ea14b8fb95"
        },
        "item": {
          "id": "cd938103-c626-4574-ad8d-c8c8d649c817",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "196ad749-cd96-4e6a-8e36-79fd44e937de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39543f9e-1156-46a8-be32-14815b4b41f3",
        "cursor": {
          "ref": "44fb605e-3387-41c7-8885-b52a470b723a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2435386f-25e0-41f9-82ad-383f02e93ad4"
        },
        "item": {
          "id": "39543f9e-1156-46a8-be32-14815b4b41f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ecee24d4-1e82-4bf0-a4ed-9460af88b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265b95a2-2adc-45b6-ad76-f46b06595103",
        "cursor": {
          "ref": "9bad2785-aa03-4653-9c84-c361d66bf9ab",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c228a09-4cc2-49d5-977c-7922c602fa45"
        },
        "item": {
          "id": "265b95a2-2adc-45b6-ad76-f46b06595103",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "20dacc98-4926-4545-b302-8ab6879f4f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e26bc-0c14-47ae-88df-bafca60b6291",
        "cursor": {
          "ref": "49d345fe-0c1c-4b0c-8a29-7e5463e698e0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3d74e24a-a4ec-4ada-a4e3-c7122a0f7c78"
        },
        "item": {
          "id": "bb6e26bc-0c14-47ae-88df-bafca60b6291",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4f447dd3-d3ce-4e2f-bfae-30f33ccbe156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aca7dfc-67b9-45d2-938f-362cfd28b9df",
        "cursor": {
          "ref": "84b7c5bf-1b35-473b-b8f4-c36b132970c3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a286e67e-57e0-40d2-81b0-87e53de32f0f"
        },
        "item": {
          "id": "8aca7dfc-67b9-45d2-938f-362cfd28b9df",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80a69acd-af5a-40e7-b9e1-2b28f242a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61805ac7-78e1-4101-9418-4ee89cfdcbfd",
        "cursor": {
          "ref": "b1f31a5e-da52-44a1-a148-98133ef97a74",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0dd69d34-0f92-4357-a63d-4875e9a0da25"
        },
        "item": {
          "id": "61805ac7-78e1-4101-9418-4ee89cfdcbfd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bb09f42c-bad1-4afc-a74e-e1abd427a9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e54989-1198-4d99-98df-078b67d95677",
        "cursor": {
          "ref": "0b2ca396-3971-4cf1-98e1-e3c52c312391",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "36d678cd-a028-40c3-bce2-aa3af48ce70b"
        },
        "item": {
          "id": "37e54989-1198-4d99-98df-078b67d95677",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "11fdf6a1-d9d2-4db4-ac12-d5defbd8ceb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55244c4f-de8c-4c33-9eb4-a09d151a8fa7",
        "cursor": {
          "ref": "d0d0a061-6b61-446b-ace5-468deb8ba9da",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cbaf6745-29a2-4b0f-aa66-df5cbe8749dc"
        },
        "item": {
          "id": "55244c4f-de8c-4c33-9eb4-a09d151a8fa7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6981817c-a51f-4730-80ab-1774a1db57b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d28f73-d054-43d5-80b3-bad5898353c9",
        "cursor": {
          "ref": "6cc9ff6d-61c1-494b-9571-a3fcbe1a2abb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "201c7e73-1c47-4b96-bca5-a686f21898bb"
        },
        "item": {
          "id": "81d28f73-d054-43d5-80b3-bad5898353c9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "835af969-2b56-4e25-9145-ddfefb51431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b9a5c2-aa61-4232-81e6-3052af49492a",
        "cursor": {
          "ref": "a5b35b74-e205-4974-80ef-598af202086a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1b00d38d-93e1-426c-a61c-7a0c7e0bac2d"
        },
        "item": {
          "id": "94b9a5c2-aa61-4232-81e6-3052af49492a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3e699385-74b6-4953-9316-b90bda9e855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764356a2-b44f-41e6-929f-335422a0dae4",
        "cursor": {
          "ref": "e8956220-04a8-477b-9291-7aabc83329b3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd8060fa-a849-4991-ae06-b0ae5681accf"
        },
        "item": {
          "id": "764356a2-b44f-41e6-929f-335422a0dae4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "adcd9582-37ba-46bc-8493-cf109f50c182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba4ce5-3b9f-4ff7-95d1-ab4aabc252a7",
        "cursor": {
          "ref": "286e59ea-2479-4555-a67c-8eae4f68d742",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6af55bb8-639a-432e-b31b-b0fbdbc94656"
        },
        "item": {
          "id": "95ba4ce5-3b9f-4ff7-95d1-ab4aabc252a7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3a8d92fb-5570-48cb-8236-ccfec3a8e7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d07ec-fe0c-48a0-97ce-4633889085ee",
        "cursor": {
          "ref": "48e9aeee-d343-4138-8a09-ef368ac6ac8e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "05eca45d-b292-498a-8ac1-3c044c99031c"
        },
        "item": {
          "id": "525d07ec-fe0c-48a0-97ce-4633889085ee",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f26b5699-3669-4294-9a71-619373d37126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf31eb5-e31b-44f2-86da-dce770c6dd4b",
        "cursor": {
          "ref": "6a63648c-0f0b-484e-b712-2bc0063d696e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f0d186bc-a826-4e8e-b40f-981f175064fc"
        },
        "item": {
          "id": "7bf31eb5-e31b-44f2-86da-dce770c6dd4b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "16ea0789-3e60-4c2c-b636-f7949b525c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6195946-5fb7-4d55-88a7-ba0e9072cded",
        "cursor": {
          "ref": "f6f142a4-9c4a-4884-9c8b-8fbdb1478903",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a1c8aa9d-6b87-4ec7-9f02-5578a1ea2d45"
        },
        "item": {
          "id": "e6195946-5fb7-4d55-88a7-ba0e9072cded",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "34daacd3-91ec-4767-9d70-ff5fbf5d0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfe6d9b-704b-4cc0-80ca-9d63cc2f2f94",
        "cursor": {
          "ref": "10ab1842-30b8-481e-9b6c-2ed5be4e3254",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5cad8a03-1003-4604-a29c-1ff0cae2791d"
        },
        "item": {
          "id": "0bfe6d9b-704b-4cc0-80ca-9d63cc2f2f94",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "efc27dbd-e0be-49d7-8024-36f460f37aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2fb266-d0ac-43bd-9e7b-6b5a884e2b2d",
        "cursor": {
          "ref": "dc38f708-5468-4f4a-99cb-8d1fb951290d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0567790f-717a-491b-98bc-02ee560598b9"
        },
        "item": {
          "id": "7e2fb266-d0ac-43bd-9e7b-6b5a884e2b2d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0a8bc7d1-c1e4-44a7-b535-900eb8b3ffa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d605de8-62e3-4069-b1e3-11b74ccea50b",
        "cursor": {
          "ref": "a66582b7-d5cd-4255-a97e-688e017e13a5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8198b66a-2bd0-4725-bacc-09adbd07f801"
        },
        "item": {
          "id": "6d605de8-62e3-4069-b1e3-11b74ccea50b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "90800b8c-4e93-43ff-811a-e4bbaa330dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffaae57-0378-4f34-bcee-4e02e550a0fe",
        "cursor": {
          "ref": "2094b2e9-e9a8-485c-b04d-e584247f49ed",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4312632f-dc28-4905-a36a-fca45334b731"
        },
        "item": {
          "id": "fffaae57-0378-4f34-bcee-4e02e550a0fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2765673c-ae48-4738-898d-a0ff47f87a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b47918-354f-4f8d-94ca-a19347d778e8",
        "cursor": {
          "ref": "128dc6a1-ae34-4fc8-b640-b3ab9807dbb6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2cc230ef-967c-4571-9686-aea0ab8c5e0e"
        },
        "item": {
          "id": "f7b47918-354f-4f8d-94ca-a19347d778e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "02a6c9e6-d8a6-4dc6-bd00-ed4c65378ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc039b2-3042-490b-89fb-3db55f624101",
        "cursor": {
          "ref": "befa810a-6799-4e2d-8f71-09e112a234a8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4db8377d-5782-470a-83e5-85240f2a5689"
        },
        "item": {
          "id": "cbc039b2-3042-490b-89fb-3db55f624101",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "51e731b0-a82e-4407-bca7-6c46de63143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c6e200-948b-47f3-8830-ed1038868414",
        "cursor": {
          "ref": "924fad0f-7a86-489a-b409-8197e1bbf1a7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e942b70f-4a0a-4833-adc8-32b2c64c9523"
        },
        "item": {
          "id": "61c6e200-948b-47f3-8830-ed1038868414",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e50c750d-131a-46ae-abe5-36e67b2c6d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32272c95-b0be-4af5-8ab9-fb1389924dea",
        "cursor": {
          "ref": "e56fe83b-6fec-46f4-b538-ab0b427beedf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46183fa8-bad5-445a-a917-3cc10ebeb02a"
        },
        "item": {
          "id": "32272c95-b0be-4af5-8ab9-fb1389924dea",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f7fe0579-e4a1-4bcf-a006-25b78ab0a965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41006949-8e49-4c4e-b125-b31d071ea1e6",
        "cursor": {
          "ref": "7607d26d-bac3-44c9-a631-ef1d34840515",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d03a2f42-c732-413a-8d5f-728ce6ad5985"
        },
        "item": {
          "id": "41006949-8e49-4c4e-b125-b31d071ea1e6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a2f911b2-25cc-4dfd-b423-23256c63f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae95851-50ff-4519-b797-140c1647e9d4",
        "cursor": {
          "ref": "7ce5c68c-58b9-4b98-8da2-32b7d1ccb8b1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "89a8cbbf-582c-4f57-af51-69e029572a44"
        },
        "item": {
          "id": "6ae95851-50ff-4519-b797-140c1647e9d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a98dd2c8-79e9-4f47-8d4d-f66436e3e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56792de-3e24-4855-a85c-9422719b105a",
        "cursor": {
          "ref": "eacc823e-5a2d-45d0-96d0-fece5a7e4622",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7b441182-c8eb-4430-9fe5-3a111fcf69a7"
        },
        "item": {
          "id": "b56792de-3e24-4855-a85c-9422719b105a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1a4f0c32-a31c-4db1-aa25-5006c1904137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2366c15d-4ec2-4ef6-a4c6-09f8f71e34f0",
        "cursor": {
          "ref": "f7de145d-aed3-48e8-8503-7b8d00b2f103",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "00eb88ba-cb91-46d9-bf1e-cdd82b8bb293"
        },
        "item": {
          "id": "2366c15d-4ec2-4ef6-a4c6-09f8f71e34f0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37e1a2c1-0715-464d-8071-2af6d556877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eda9d3-bb6b-4655-91a1-2ed321e4bdab",
        "cursor": {
          "ref": "53d19784-132a-461c-88c9-c08b7f35f560",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d2ac16a3-945b-44b4-9a72-c33e211e84df"
        },
        "item": {
          "id": "59eda9d3-bb6b-4655-91a1-2ed321e4bdab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4bde17d9-4d69-4367-aea6-2270777b9519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe73e5f-2a0d-4c9b-b6e9-3855f56da4a3",
        "cursor": {
          "ref": "44528f7a-0a95-4054-a02b-68ee3d111088",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fdc08e6e-5161-43f5-8bfd-5a3f2d8b0558"
        },
        "item": {
          "id": "1fe73e5f-2a0d-4c9b-b6e9-3855f56da4a3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "afabfe89-8197-41f5-a9b2-02a3c2eec4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9a1b60-456f-4c00-b2dd-65472c8c566d",
        "cursor": {
          "ref": "0fb94c33-9180-4b98-8fdf-de1d1bc9abeb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee357d91-f03b-407d-8e65-2a8840411ca1"
        },
        "item": {
          "id": "bb9a1b60-456f-4c00-b2dd-65472c8c566d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c00d6864-e098-41d9-82cc-4c4115060b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e31d8d0-b506-4f11-bed7-287a955dcf35",
        "cursor": {
          "ref": "37f61f28-dec7-472f-acce-f87de21b390f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d91a4390-6303-4bd8-bd1a-28a77cff6473"
        },
        "item": {
          "id": "1e31d8d0-b506-4f11-bed7-287a955dcf35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "630bddbd-4349-414e-a60e-1065fc0d48d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f58ac-5b5d-40e1-92a9-c325916c952f",
        "cursor": {
          "ref": "5bcdadcf-7f60-45c5-b133-3807d2b793fa",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6eae34e2-4109-4da6-bacd-0417fba359ea"
        },
        "item": {
          "id": "d48f58ac-5b5d-40e1-92a9-c325916c952f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32c5847a-0020-4f3a-806f-ab15c6fb7724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9774a9-075b-4b61-984c-7febb0139e1d",
        "cursor": {
          "ref": "f2c72123-21f4-4344-abbb-50dee93317ac",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5397604d-6f7a-43f2-93f1-e6f4edce029c"
        },
        "item": {
          "id": "7b9774a9-075b-4b61-984c-7febb0139e1d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "555ca8c9-afc5-40fa-992f-8bed17824950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cebb33-0f00-42ee-a66c-a7e73c62587e",
        "cursor": {
          "ref": "396c5ea3-5367-43d2-bc73-b5390b32d237",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d263ead6-59d9-490f-b17d-ceb48b71ab0c"
        },
        "item": {
          "id": "78cebb33-0f00-42ee-a66c-a7e73c62587e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "995701e5-9878-4fa9-b063-9464c69e22fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c00b0f3-c64b-4f99-ac6b-eae8c2792c4b",
        "cursor": {
          "ref": "2379ce4f-c497-4ec7-b940-68e7aa8907f2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0ada0e0-151c-40e2-bf33-ebb32dd52788"
        },
        "item": {
          "id": "2c00b0f3-c64b-4f99-ac6b-eae8c2792c4b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6a220473-990c-425a-bd71-44a115a96814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af892cd2-89fe-4782-b5b3-f403bbc048d2",
        "cursor": {
          "ref": "e07c45fc-10b3-4f9c-9e22-1a584d492195",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "83453322-6a38-422b-9d66-003df1f2f7f1"
        },
        "item": {
          "id": "af892cd2-89fe-4782-b5b3-f403bbc048d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "864f1a53-e846-42f4-9ccd-fdeca29df5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4116c64-a0bd-4f8b-a1b5-f427b8e42ebc",
        "cursor": {
          "ref": "43e638c7-c66f-4b90-8fc2-ef7aca8ebba0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ebf84ed2-a80b-42a3-8805-550f014cab15"
        },
        "item": {
          "id": "e4116c64-a0bd-4f8b-a1b5-f427b8e42ebc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1fcae0ba-ee6c-4ed9-8aa5-4e6b85c08ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c0271-52db-4d06-b675-a72c5c677520",
        "cursor": {
          "ref": "9e4dacc5-275e-4ccb-b796-49139e05b1a6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0748df26-f4ed-4c47-a769-420137527c04"
        },
        "item": {
          "id": "424c0271-52db-4d06-b675-a72c5c677520",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fbed7715-2069-4ce4-b050-103650b44120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f15dbb-8a85-4d5e-9d12-461395377454",
        "cursor": {
          "ref": "a4816c0d-0417-478f-b033-182fa9489930",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4bbe3bc7-380c-471b-96ae-0287109c7a47"
        },
        "item": {
          "id": "38f15dbb-8a85-4d5e-9d12-461395377454",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fc8f96b3-8da0-4a5c-aec7-8c2f98f5feda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343f5bb1-5859-4a11-b2ae-05b949a51c05",
        "cursor": {
          "ref": "a5f57296-b995-4097-abe1-a57295ff479e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ee485f5c-a9ca-4d0c-916c-3c0d1e7fd3fc"
        },
        "item": {
          "id": "343f5bb1-5859-4a11-b2ae-05b949a51c05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6edbf17a-445e-4632-9c51-f1bc04f57cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfb3d0c-eaec-4cc3-a814-52fe033364b4",
        "cursor": {
          "ref": "88807bca-bbcd-450a-a0da-55513a10ca74",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "995110da-feeb-4464-9eda-efa55ed92f4f"
        },
        "item": {
          "id": "0dfb3d0c-eaec-4cc3-a814-52fe033364b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "424a78cd-26c0-46f4-a2fa-739f55551a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cef52d-9f78-4a3d-9229-ba9521ef953f",
        "cursor": {
          "ref": "b9783201-695e-4a15-a470-429c21383ed1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2c2a6cc-ada2-4fff-b0a9-04cf139e25ef"
        },
        "item": {
          "id": "e5cef52d-9f78-4a3d-9229-ba9521ef953f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6b84dce7-aab6-417d-b5c2-60b8eb3ce4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b7341e-e926-473b-bbe4-1b7f59c8439b",
        "cursor": {
          "ref": "086cfa83-dfff-42d5-9b26-32d8cf4ecc8f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ad1c29db-116d-4906-ad2a-bb12e61b7b27"
        },
        "item": {
          "id": "e6b7341e-e926-473b-bbe4-1b7f59c8439b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9d576c9-b4ea-49f9-a510-4b0b7740a706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb147e-34d6-4393-8f44-a487638a783d",
        "cursor": {
          "ref": "f40ac1cd-ee55-41ae-a77e-8f722777fded",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "46aef1ec-7a14-4ed0-8ede-a2b9796ec5f4"
        },
        "item": {
          "id": "f9eb147e-34d6-4393-8f44-a487638a783d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "328dcc77-c4b0-4b29-b4ed-43c63a785c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323ec2ab-ce53-48ce-a37c-d58fcb8bbe8a",
        "cursor": {
          "ref": "da07575d-bbae-4888-80ee-cab21af030a7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "43120043-4efd-4953-a898-592efe9c9613"
        },
        "item": {
          "id": "323ec2ab-ce53-48ce-a37c-d58fcb8bbe8a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "39817833-1f78-4987-9b6b-116b1cda759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752eaa6c-3d90-4ad5-94d9-ca736b8860a0",
        "cursor": {
          "ref": "06de3ad1-1abc-45d9-bf92-0bb9f893a580",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb5029cd-54bd-4263-9e77-a14449c09376"
        },
        "item": {
          "id": "752eaa6c-3d90-4ad5-94d9-ca736b8860a0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1dd85978-e281-4a3c-a28e-2e49c304f1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a7d05-2ace-4a4f-ba9f-7d93a2b5eeca",
        "cursor": {
          "ref": "0ecbfdcb-9a10-4c8d-b10b-379b15562b0e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0a9bb756-610c-488d-9404-9c6f5deb6031"
        },
        "item": {
          "id": "148a7d05-2ace-4a4f-ba9f-7d93a2b5eeca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "95cd00db-2685-48fa-84ca-d354e1880a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9991ed8-9074-4fb7-bc80-44bbc2a97f3f",
        "cursor": {
          "ref": "c5ece685-0e9b-45a6-9c1d-5833828cb183",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2aa99263-03d1-4577-8d65-55f3bc83875a"
        },
        "item": {
          "id": "c9991ed8-9074-4fb7-bc80-44bbc2a97f3f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a6e805d-744a-47f2-af22-78187b487601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec84a2e-5796-43ec-b846-253386b4fdfa",
        "cursor": {
          "ref": "9f4dc7a7-74ac-4f50-b56a-c489c1b24d10",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8c28de95-ecf5-4fb8-bcaa-e26c95f14630"
        },
        "item": {
          "id": "eec84a2e-5796-43ec-b846-253386b4fdfa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "de652aae-23eb-45dc-af85-7bc700825186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8406a31-ef51-4f40-8d29-fb2188b5aedf",
        "cursor": {
          "ref": "184ec38e-b747-4675-a693-c711e832a40f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6c68bb5d-a5ed-4ed1-8761-83434c8c5587"
        },
        "item": {
          "id": "e8406a31-ef51-4f40-8d29-fb2188b5aedf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "91498dea-3340-4027-9016-690b51539690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abab139-e1bf-4078-86ba-279738c294c5",
        "cursor": {
          "ref": "6fa28cc2-4bdd-48a7-9d6a-6a967930fb72",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "db3c3c7f-485f-48ea-a9a2-51e7ddc1484c"
        },
        "item": {
          "id": "5abab139-e1bf-4078-86ba-279738c294c5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d2ddbfe0-e5e8-4c39-9ae7-78e544fa0d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b382c-a893-47dd-8a8b-ed717124c291",
        "cursor": {
          "ref": "f0c2bdc8-81b6-443f-ba19-2d17cee38b58",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "68b647f5-f1e2-4abb-8702-fe332a5a5441"
        },
        "item": {
          "id": "4d9b382c-a893-47dd-8a8b-ed717124c291",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3d26d990-b8ef-4959-a316-35517a391984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb6d4a2-d914-41c9-b814-cac61d881143",
        "cursor": {
          "ref": "7e7639ee-0eee-46ac-8aa8-795ac4827cfd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be5953be-7858-4e70-8edf-5abaeda3fe09"
        },
        "item": {
          "id": "fbb6d4a2-d914-41c9-b814-cac61d881143",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac359e54-6bf8-414b-9c0d-d1f81d2310df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18db82c-f8fc-4925-8d27-69c88e52def9",
        "cursor": {
          "ref": "362b56ab-6c26-4098-a6dc-55f51c84ae29",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dc1148cf-eba4-4ee1-bd76-246bf9a6458f"
        },
        "item": {
          "id": "a18db82c-f8fc-4925-8d27-69c88e52def9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6eb72d6c-81ba-4daf-9d13-596ecac6a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c593f9-a3dd-4524-958b-531d6801b44f",
        "cursor": {
          "ref": "91973ea5-ac5f-4356-b2e8-8b639486204d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6cc3e87e-2f85-41a0-8f2f-e07330cc2199"
        },
        "item": {
          "id": "e3c593f9-a3dd-4524-958b-531d6801b44f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a718ebb7-2ef4-4e8d-b7ae-b9ff02136437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93989ba-bd47-48da-aabe-bfdd2e48adbf",
        "cursor": {
          "ref": "dac07356-1567-483b-bd9f-1242c08c2842",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1878a204-ab4c-437d-8956-ceeb7076e927"
        },
        "item": {
          "id": "f93989ba-bd47-48da-aabe-bfdd2e48adbf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "90ae5bd0-7663-441c-afb2-efacb0cd3d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b667ad1-4390-4e3b-88b3-efef6cdfcc09",
        "cursor": {
          "ref": "a816c1cc-fc45-4491-a887-544493552ac0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dfbb3fe4-1c9d-4791-9d3c-ae8d40544246"
        },
        "item": {
          "id": "2b667ad1-4390-4e3b-88b3-efef6cdfcc09",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "76fa4dfe-449e-4deb-9c6d-6ecf5f203c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c3e99f-3bbb-4288-84ed-cf8b1812e3b5",
        "cursor": {
          "ref": "88b198fb-9d3a-4ecd-bbb8-122c5b8f0f32",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0af34769-c928-4542-894b-b5eb3611b4eb"
        },
        "item": {
          "id": "89c3e99f-3bbb-4288-84ed-cf8b1812e3b5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d172d116-d2d1-4b46-b8a3-acfd6b1ab3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e28ac58-eda8-4959-82cd-d07795d425cf",
        "cursor": {
          "ref": "7e54bd33-075e-453b-9d3b-02562f61fcc1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6ffe8a4c-96f4-4f31-8927-9edd49741dc2"
        },
        "item": {
          "id": "1e28ac58-eda8-4959-82cd-d07795d425cf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a73faec4-ee15-489f-9d06-b64137da02f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c4d645-b712-465f-9bba-0d116e2650b8",
        "cursor": {
          "ref": "0095a59d-a5a3-4545-a8d0-4f408dc278e0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f88c07b2-eafb-4150-98bc-60e1e8c427d5"
        },
        "item": {
          "id": "c1c4d645-b712-465f-9bba-0d116e2650b8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "80bd7bdd-790b-4dc3-875c-8c65f45f6151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2c01cf-cd99-44fa-be09-c630974d16bb",
        "cursor": {
          "ref": "3f694bba-82b4-4f18-800a-9bea2b60b359",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "986e8e8f-27db-4792-a360-0a508271b79a"
        },
        "item": {
          "id": "9e2c01cf-cd99-44fa-be09-c630974d16bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "185f00c0-d53c-4846-a8c9-eb9aa56b47a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac62fb31-ad75-430d-969c-05925a4fcbb0",
        "cursor": {
          "ref": "0571645c-d201-42e2-b6c9-5a7db85b080a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0e008377-a77c-4c33-92b0-7b1bce4014e6"
        },
        "item": {
          "id": "ac62fb31-ad75-430d-969c-05925a4fcbb0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ce1d0330-6efa-4e88-88b6-11d56ae2391b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d17a46c-c722-49be-8608-7b14c9d20685",
        "cursor": {
          "ref": "bc78868e-2ca4-4762-86ac-ca45960beb39",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aedd2448-682c-4314-be2b-f56731b24c3d"
        },
        "item": {
          "id": "1d17a46c-c722-49be-8608-7b14c9d20685",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a93ab966-0224-4ad5-ba18-354726c15156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee7f77e-825f-4090-80d3-a351fa59f72a",
        "cursor": {
          "ref": "27c41c66-ce35-41d6-a9c3-990af8e113f2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8e2d154d-850a-461b-91ec-09efad00729e"
        },
        "item": {
          "id": "bee7f77e-825f-4090-80d3-a351fa59f72a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4a681d54-ebd8-4334-8e2f-36730ea54350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231c3da6-90a6-4257-b76d-8cca8c4ff061",
        "cursor": {
          "ref": "e55f3c95-4832-4e85-96df-8e283d9cfb7f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d15a389b-22dc-4f12-a240-15c884dd3626"
        },
        "item": {
          "id": "231c3da6-90a6-4257-b76d-8cca8c4ff061",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e963624c-073b-4f6d-9d11-f45275929c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea463a-3e0f-404d-8a6f-bd2517a93b74",
        "cursor": {
          "ref": "0d139356-593e-40eb-9eb8-7f40c03a5709",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b95330b-8bad-4f8f-86c3-3e9058fe82a7"
        },
        "item": {
          "id": "e2ea463a-3e0f-404d-8a6f-bd2517a93b74",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1724e014-b012-47ce-8d4d-7fc762efe376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca69505-0b6f-4bdb-af06-a2cf26bb0a56",
        "cursor": {
          "ref": "c6bb4d4f-1fa7-4a03-9551-00b0e5c2a6e9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eff175aa-d8dc-468f-ac08-5734fcce3bf7"
        },
        "item": {
          "id": "0ca69505-0b6f-4bdb-af06-a2cf26bb0a56",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "99063715-1b2d-4eed-b635-e3f380e016b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82003b0f-fd5a-45df-a0d6-db37ce33419b",
        "cursor": {
          "ref": "92b62a66-529a-4ecb-ac94-9a22bf9b5a61",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "41445bc7-4873-4eb6-8f37-5bfd2c572a49"
        },
        "item": {
          "id": "82003b0f-fd5a-45df-a0d6-db37ce33419b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aeb54ff1-cad8-4d5d-a93c-c8f1278dca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed66b0a-dd7b-4111-b70e-8b6ccde53c5e",
        "cursor": {
          "ref": "e86403b7-7b50-4344-a78b-0c04a3932e8b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0a558e43-8adf-43ad-ae10-ccf334f97199"
        },
        "item": {
          "id": "fed66b0a-dd7b-4111-b70e-8b6ccde53c5e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0dd29036-d7d3-4f74-a198-49b44777a2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dde7e8-bd1e-4c66-a30f-318ff96c4f15",
        "cursor": {
          "ref": "b8f2bc17-7fb7-4351-b852-a8315b2eb6d8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d2468147-52f1-40d4-86bc-91a8e1a4dc5d"
        },
        "item": {
          "id": "56dde7e8-bd1e-4c66-a30f-318ff96c4f15",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9e49edde-7ab1-4e2a-9e63-81449b28b034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f92c00-ef21-4c9d-9aa4-d06d7c541f67",
        "cursor": {
          "ref": "4391d743-76f9-43b5-bf58-51c7223fcf4c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e593ea08-35c9-4005-a605-82d0697de0d8"
        },
        "item": {
          "id": "b9f92c00-ef21-4c9d-9aa4-d06d7c541f67",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "088b9128-e744-4abf-8173-cebbbf68fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b775ff0f-150a-4642-be57-d843d67a6720",
        "cursor": {
          "ref": "53a98409-cba5-41ac-b9af-323be25e7add",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7594e75c-94fd-4957-aa3d-4f827856e5ab"
        },
        "item": {
          "id": "b775ff0f-150a-4642-be57-d843d67a6720",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "31e6c784-a66e-4988-824b-b7831e4dfa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb235cb-c096-4c26-88f7-268a2230f683",
        "cursor": {
          "ref": "ad50f20f-84c4-416e-9240-b0dee54fbca7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "55e6cefb-33d5-4107-a1ed-ad1c8d3b0063"
        },
        "item": {
          "id": "5cb235cb-c096-4c26-88f7-268a2230f683",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "65244ee9-5db2-4534-a4dd-29c04aeefe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf68bd-693a-4634-95cb-01bcee53ef8b",
        "cursor": {
          "ref": "21a1c0dd-044d-45e8-8285-163a5a0bc16a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4a885da3-78e1-4350-918e-061bed2d1208"
        },
        "item": {
          "id": "c1cf68bd-693a-4634-95cb-01bcee53ef8b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5abed362-7fa2-435e-88c3-a4a8c767ef0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9473ab27-7876-45e7-b4e5-9236b7a7beec",
        "cursor": {
          "ref": "6a1b1e9c-61a9-4842-9e8a-192fe582b626",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bbc68204-c139-4ae2-83c7-bb82a8a70c2d"
        },
        "item": {
          "id": "9473ab27-7876-45e7-b4e5-9236b7a7beec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a5db3e1e-3f73-47ed-bd42-46e5ad27fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee0ad99d-9f22-4808-bb4e-0f2c97450fdd",
        "cursor": {
          "ref": "7a6d7a60-77f8-40b4-8fea-c94572046c4f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9906c20e-2ee0-4f01-80b4-41db2b9ed472"
        },
        "item": {
          "id": "ee0ad99d-9f22-4808-bb4e-0f2c97450fdd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "187f4c53-d3f1-4674-8850-b95e23ae5d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4a12e67d-fd44-4069-9609-958042d25394",
        "cursor": {
          "ref": "13d3bd2c-9be3-4f18-af84-dc48a2224626",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c44658d-31a9-4589-b368-9d4c14e4dd9f"
        },
        "item": {
          "id": "4a12e67d-fd44-4069-9609-958042d25394",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c16b4917-0fc0-459b-867b-043be49cdf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "daafcd9e-adcb-44b1-ad65-f3c4d49d0a24",
        "cursor": {
          "ref": "6c5f3d4c-04fe-4161-8b3c-2ba9756a7081",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "689067f2-5576-4a12-94ae-db90d86fc769"
        },
        "item": {
          "id": "daafcd9e-adcb-44b1-ad65-f3c4d49d0a24",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "102695ed-dd08-451b-b19f-0d84c8815499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c6e46eec-a464-43be-bcb9-167738b25e64",
        "cursor": {
          "ref": "5be1315c-283e-48d8-afd1-3e37660d7921",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "35d5e8b1-0548-41d2-90a7-854847f2cb64"
        },
        "item": {
          "id": "c6e46eec-a464-43be-bcb9-167738b25e64",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5cfc71cc-5f80-4750-99a9-05026b8f76f0",
          "status": "Created",
          "code": 201,
          "responseTime": 11000,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda3e291-1971-4552-88c0-9b5e219de63a",
        "cursor": {
          "ref": "76ccdbc9-9e02-48e0-b670-dcfa9517d38d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7b000e98-04df-4ec9-a7be-71d0c17fc650"
        },
        "item": {
          "id": "fda3e291-1971-4552-88c0-9b5e219de63a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8b7d493e-d7d8-4a07-a576-4f4871d219f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cf9878b1-fca3-460c-8e54-d9657eb6d067",
        "cursor": {
          "ref": "d6266aec-fb27-4c43-9f90-7d98ceae1973",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "46ae6ac6-53a6-4ef7-b11d-fad95a12022a"
        },
        "item": {
          "id": "cf9878b1-fca3-460c-8e54-d9657eb6d067",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b3c6c513-139d-47ad-b13e-6ebe08920738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1ad683b1-40ae-4b02-9dae-3abd18153f21",
        "cursor": {
          "ref": "bb52f67f-fd88-4fef-a18e-a58d210fb7eb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "87d3d604-2ef9-4422-b3b0-12ab3c5cbcba"
        },
        "item": {
          "id": "1ad683b1-40ae-4b02-9dae-3abd18153f21",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55d64ec6-9a20-4146-baf9-6a01d7b6f486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c039c25-2ce8-4b11-83fa-d564c23239fa",
        "cursor": {
          "ref": "a83add07-eef6-41c8-a42e-7f453047b024",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6afce5d9-7cc2-4092-a469-dfb651c8015c"
        },
        "item": {
          "id": "9c039c25-2ce8-4b11-83fa-d564c23239fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c653ae1a-871d-42e9-aee1-23d140e5f0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36fc3c7-bde2-48d9-af1e-baae978d526a",
        "cursor": {
          "ref": "33ee88ff-d4fd-4a08-871b-d15d2fb160b4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a1ba9141-a4fd-4ddd-a7db-cf56c6e027d0"
        },
        "item": {
          "id": "e36fc3c7-bde2-48d9-af1e-baae978d526a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da6132d7-9485-45aa-b426-7e298c81c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29b50a3-887a-4939-8a1e-b921848ad660",
        "cursor": {
          "ref": "1f947922-c803-4f08-9741-4e16a5efcc2a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3076c58d-812d-45e1-8d82-73b114bc4c21"
        },
        "item": {
          "id": "a29b50a3-887a-4939-8a1e-b921848ad660",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "44cae380-810a-47a3-8e0a-3ede3298f59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479ad081-ec03-411d-92ba-675e3959f091",
        "cursor": {
          "ref": "ede3c4e8-137e-4315-a33c-2829e3cfe13e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5021980a-9a73-46a4-a00e-d5eca30de4b1"
        },
        "item": {
          "id": "479ad081-ec03-411d-92ba-675e3959f091",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55753f56-5f4f-41c6-93f0-da59c37bf28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e4ce6-4c0d-448c-966a-6c23385e6dd3",
        "cursor": {
          "ref": "941667a4-56df-4d13-9764-7b7972ed4217",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f3617204-e137-4b12-95b8-8b9d3e4994b8"
        },
        "item": {
          "id": "c91e4ce6-4c0d-448c-966a-6c23385e6dd3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6d8b0f88-9eb1-4291-9e65-a06348816796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486b0151-8dac-4c19-bf4a-2623af391226",
        "cursor": {
          "ref": "1f91a700-76ac-4bcf-a820-fcae6da43a54",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cf658df6-9aaf-4e06-b2ef-22e362ce57ae"
        },
        "item": {
          "id": "486b0151-8dac-4c19-bf4a-2623af391226",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e170a174-ee98-47b9-a22d-e35feaa707da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc38c78e-c818-48fd-b1cc-264f9d9e85b4",
        "cursor": {
          "ref": "c8748c01-d9ca-42b3-9666-c476c5a9b74d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5b5ab8b9-3038-416a-aa55-685f0ff6a067"
        },
        "item": {
          "id": "dc38c78e-c818-48fd-b1cc-264f9d9e85b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "37ceb632-2a53-4185-a449-d7f80faf71a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9c42b3-d306-4d1e-ba91-6d21bc570f62",
        "cursor": {
          "ref": "bb65af32-dcd1-4cc4-84ad-9df20b6a79e2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f648978f-68c0-4d76-90ac-fc5379a995ef"
        },
        "item": {
          "id": "2f9c42b3-d306-4d1e-ba91-6d21bc570f62",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aea37c51-2751-473d-bf9b-13b45c8d6b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ba7cb8-bd32-4f12-806d-6e09509b8bbe",
        "cursor": {
          "ref": "12aefe96-1a7b-47f5-9cd4-5d100fc9a735",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5351cec0-e1d1-42cc-8411-611ff4c1fdea"
        },
        "item": {
          "id": "f8ba7cb8-bd32-4f12-806d-6e09509b8bbe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2142255c-e70e-444d-b174-b62322a41ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af31cb-2522-4661-8c9b-a80325f9f9cc",
        "cursor": {
          "ref": "c43f49d3-d8b6-4857-a687-087f6d8aa642",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f71e4efe-54ee-40e2-bdf9-94d039d2bc69"
        },
        "item": {
          "id": "d1af31cb-2522-4661-8c9b-a80325f9f9cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb73d05c-531a-426c-9a16-e8fa7991a07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54233b5f-bf23-40a5-b348-5569447c0884",
        "cursor": {
          "ref": "0a438de3-70b4-4589-aeb9-44f39f963401",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e6b581b8-8852-49e6-8708-99d8c64aadc3"
        },
        "item": {
          "id": "54233b5f-bf23-40a5-b348-5569447c0884",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "94e5ad21-ab73-4bfb-a657-4b08b1f3dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e43ec1-3241-4a51-b873-306815546fc3",
        "cursor": {
          "ref": "33b21043-50a7-4795-b67b-a58928a378f1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e60f73b7-b2c0-4ea4-8d74-f2b77680df44"
        },
        "item": {
          "id": "47e43ec1-3241-4a51-b873-306815546fc3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a371110-ab4d-446a-8dfb-d313ee15b452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d459ce4-5d63-4c8b-aa95-243c9bc831ee",
        "cursor": {
          "ref": "039cef08-7f56-4bc7-8800-4f2ead84295a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5be989d3-48d6-47c1-b888-f8cd10ea025d"
        },
        "item": {
          "id": "0d459ce4-5d63-4c8b-aa95-243c9bc831ee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7684b1f-e009-43b7-b112-7ded0ca77091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f590c06-dc6c-4d2c-a5a6-9c9ccd22d909",
        "cursor": {
          "ref": "cb520ccd-8830-4355-9528-b12f5c8a17e0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "665496e5-ca10-45f8-bc2e-526d0bb53f44"
        },
        "item": {
          "id": "8f590c06-dc6c-4d2c-a5a6-9c9ccd22d909",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8da19274-8c4e-45d0-b40c-9014ffc01fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d02839-2bad-449c-9625-1cbf1ab1cedc",
        "cursor": {
          "ref": "a5228be3-ff3b-4adf-ae43-6fedfd898f0f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "88552e81-060d-4ef8-947a-2539de387389"
        },
        "item": {
          "id": "36d02839-2bad-449c-9625-1cbf1ab1cedc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ec388ba-69a4-4311-9b8e-e9abee605ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca631911-41ee-4c6c-9287-0f3b8c1054ea",
        "cursor": {
          "ref": "dd04c8d9-b2b9-4e83-b975-abc7fa09cdad",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7d178256-8c30-4310-88b4-333c952312b9"
        },
        "item": {
          "id": "ca631911-41ee-4c6c-9287-0f3b8c1054ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a0c59fd-b003-4ecd-8e33-9cc1e02cac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aaae96-82f1-4af6-8d60-7d7c1dc5b662",
        "cursor": {
          "ref": "e27c1bab-deee-4605-9219-753a0738dcbb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a5bbee3f-c872-4c36-bdba-85417f8e603f"
        },
        "item": {
          "id": "29aaae96-82f1-4af6-8d60-7d7c1dc5b662",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01565a0a-8b43-46ff-8f7a-143391e3a318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d3c5ac-06e9-48d5-bf66-87b8b03aacee",
        "cursor": {
          "ref": "c0594b0a-969d-4217-864c-7c8334a54ca3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "179841e4-c776-4d5a-848d-f3a9f3a343ea"
        },
        "item": {
          "id": "b9d3c5ac-06e9-48d5-bf66-87b8b03aacee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e78824c4-d971-41ae-8fc7-725e6482b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185ac849-e636-4882-af67-cb74f580cad1",
        "cursor": {
          "ref": "7d5f4b05-3cc2-423a-b7a7-27a4a7c3e82e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3cccb2ad-69ad-44e6-b248-f2def92326d8"
        },
        "item": {
          "id": "185ac849-e636-4882-af67-cb74f580cad1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f02ec99-0095-4705-b5e5-a77c6639c99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f28dcc-a96c-4a4e-b1a0-0359e3980a65",
        "cursor": {
          "ref": "fbb75d5c-ea44-4b0b-a9bb-9c2a333956a1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f86706ee-ede7-49e5-969d-182f8c81cc0f"
        },
        "item": {
          "id": "87f28dcc-a96c-4a4e-b1a0-0359e3980a65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "535e55c2-616a-4908-bf2b-2f4cfa35bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0079be0-355d-4be2-b72d-49e6209f1a2b",
        "cursor": {
          "ref": "8f8a9a1d-4745-449e-92e8-8de1b79bda7c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ff4c1e16-9a0e-4fbf-aa4d-421e4de6de05"
        },
        "item": {
          "id": "c0079be0-355d-4be2-b72d-49e6209f1a2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9dbbe2e4-0d0e-40d7-b06c-ca0a0cfcb661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa32fae-cf4f-4f6f-b5d0-3222225e1bdf",
        "cursor": {
          "ref": "3655e9dc-5109-4309-b666-bd8f4e673b79",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b8079f8c-ffd6-4bd0-9e4a-670dea80a72d"
        },
        "item": {
          "id": "4fa32fae-cf4f-4f6f-b5d0-3222225e1bdf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af2fa013-53f2-4c99-8ae4-fd05d10921c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea337c5-cc0b-4e4d-8f31-9fbb9b2662d9",
        "cursor": {
          "ref": "8cbaa574-5a3b-4cfe-907c-1cc67d0b07ad",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3027bc61-3adc-4a0c-8e56-93cda8e1058a"
        },
        "item": {
          "id": "8ea337c5-cc0b-4e4d-8f31-9fbb9b2662d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cefd7684-a9fd-4211-a446-db35c10a9a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4379d878-82a3-405a-97fa-b301172bdbcc",
        "cursor": {
          "ref": "9f26afe2-535e-4786-a98a-464659d6234a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0f88470-2e51-439f-a288-944b641a4d7c"
        },
        "item": {
          "id": "4379d878-82a3-405a-97fa-b301172bdbcc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f0565ad6-cefb-49df-a997-e964d67feda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22483434-ceae-410e-a22c-f7ac0fdb359e",
        "cursor": {
          "ref": "709d8964-5976-4db7-80fb-0220ff475d93",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a4c4438d-d46a-4de2-8901-de5e00794574"
        },
        "item": {
          "id": "22483434-ceae-410e-a22c-f7ac0fdb359e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "163ec0c0-2247-4623-befc-f995f4d6890a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b68959-42e7-4a56-8120-f5f5f9a4c29d",
        "cursor": {
          "ref": "351ef51a-99b9-4ad3-a051-0fca45b2f086",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4aaf5888-0060-40be-ac6d-8d207240d71e"
        },
        "item": {
          "id": "71b68959-42e7-4a56-8120-f5f5f9a4c29d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "74a135c5-7197-4e2d-9435-634bee0aca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca23847-be19-4134-826f-72b039b80f3a",
        "cursor": {
          "ref": "816b7d2f-e1de-45ae-a8c3-821a5ee00e2a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4a42d2fa-d0a3-4c09-8d6e-2f63fdba26f4"
        },
        "item": {
          "id": "eca23847-be19-4134-826f-72b039b80f3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64d0a574-d540-491c-af55-bbea9561b731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c8e0cf-cf2d-4966-9dd5-49e86ff2045f",
        "cursor": {
          "ref": "09dd9a53-b8da-4759-ac88-77624d4f46b0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "11603e8f-e9be-490a-bbd3-3ba6dac06c19"
        },
        "item": {
          "id": "92c8e0cf-cf2d-4966-9dd5-49e86ff2045f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7c9216c9-774d-436a-9000-b9cf7e594f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fa6a42-1407-46f0-b7d6-7da87269a4c7",
        "cursor": {
          "ref": "1cfe27fb-10ff-40d1-b6c8-63aa6b7a3e00",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "233ec5c7-dd15-4b58-acf4-053f94c5a94c"
        },
        "item": {
          "id": "88fa6a42-1407-46f0-b7d6-7da87269a4c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a2b0ad4c-ace0-4a6a-bf3f-7c786b795dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af99ebf-183b-4525-9789-3ff7237cf1b9",
        "cursor": {
          "ref": "4a245d98-315b-4939-8fb7-070b8ee35ec1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3b436c94-90ac-41e4-8c73-fedfc91b1c36"
        },
        "item": {
          "id": "3af99ebf-183b-4525-9789-3ff7237cf1b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4df9800-e80f-4be5-b7a6-54e09bfc6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aea929-57ea-4faf-9a20-71d1f2f4989e",
        "cursor": {
          "ref": "db6d2b73-9b88-497a-b00a-ebb215f7affb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f933b8b9-90df-483e-94ce-9bc5a33d25ce"
        },
        "item": {
          "id": "85aea929-57ea-4faf-9a20-71d1f2f4989e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f2d36748-aeb5-4293-8e0b-d3c7671e5dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e08b04-8b52-4fe0-8ab5-13b8b3d3ab79",
        "cursor": {
          "ref": "5b93d3f6-30bd-4dcf-b69c-3766016461e2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c1393f66-7111-46a1-b658-fd9f0ab845aa"
        },
        "item": {
          "id": "19e08b04-8b52-4fe0-8ab5-13b8b3d3ab79",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "31a240a4-a7ec-443e-bb5f-ab60c4bfd3e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5252909-c153-40b3-b466-aca4c6c9e4d9",
        "cursor": {
          "ref": "67ba989b-b259-4bd7-b676-4a789ec8824b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3bf4d7ba-d0e1-4ccc-b72b-afdadd935672"
        },
        "item": {
          "id": "b5252909-c153-40b3-b466-aca4c6c9e4d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "51ff68ae-2cd4-4185-9270-1c9732903752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e69160-642c-4500-b2a6-57ce6b2fa173",
        "cursor": {
          "ref": "91669acd-a695-49bb-8a74-3ea1d6d48e8b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "72622ac1-9f82-449b-9c54-070752627723"
        },
        "item": {
          "id": "a8e69160-642c-4500-b2a6-57ce6b2fa173",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "88699d41-39ef-4d85-a7e2-fd19cca9d0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d678e22a-3d1d-4929-9a14-1fcede0757ea",
        "cursor": {
          "ref": "212c22bc-1622-4a28-9288-f8df4f4c4100",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a493f151-a312-4fd1-ba46-6b520a63e7b9"
        },
        "item": {
          "id": "d678e22a-3d1d-4929-9a14-1fcede0757ea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45cddef4-2dd0-40fe-9804-caf1ad8394ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149ccf6d-502e-414f-b0b4-9d3132372787",
        "cursor": {
          "ref": "a8e416d5-693b-4142-b8b1-e354262faac6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ee516b06-6224-4e55-94c9-ec11cef016bb"
        },
        "item": {
          "id": "149ccf6d-502e-414f-b0b4-9d3132372787",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb0548af-b426-4d42-bd1d-f78340583546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6eeabc-6f21-46c8-a983-adff123350f3",
        "cursor": {
          "ref": "f2a5c44e-3a78-46ee-b9a4-60fb4cd1c40e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "55b10bd6-0bb7-4712-8c8c-b40ac7383f0f"
        },
        "item": {
          "id": "2c6eeabc-6f21-46c8-a983-adff123350f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ac70a9e-3de9-4344-8e67-5ce959d75a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d87aec-39c4-4340-ab77-dd55e1ec1014",
        "cursor": {
          "ref": "b12df34e-880c-41e0-b323-bafacd582e4a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d8f3808-5879-4fb8-8285-3a43b4b2b128"
        },
        "item": {
          "id": "a2d87aec-39c4-4340-ab77-dd55e1ec1014",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2c45730a-5f19-47e2-88a1-c3b932d26c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d8a620-3e99-46d3-8a55-35e0acca8de5",
        "cursor": {
          "ref": "1d504f45-f678-4e28-8832-b8d9bb74593f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9e8138a8-c168-4c13-8304-7d480883a72e"
        },
        "item": {
          "id": "68d8a620-3e99-46d3-8a55-35e0acca8de5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "424baab3-66b0-4f6d-9142-0f664d4398bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49f2033-bdb1-4b97-8f81-bbde8ab7ceb8",
        "cursor": {
          "ref": "6a043b9e-c8ce-4fc7-a8da-486a40f86817",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "912fd58b-c504-4ba4-9644-08ae4c449ae7"
        },
        "item": {
          "id": "f49f2033-bdb1-4b97-8f81-bbde8ab7ceb8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "693b0839-754c-449d-9ab7-b25211c0b72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f6c21c-5dcd-4461-addb-b17bb363340c",
        "cursor": {
          "ref": "d0751a9c-9c32-45d3-808e-515201dd6dce",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "362b289f-7d31-46f6-a276-63fa37515fcf"
        },
        "item": {
          "id": "60f6c21c-5dcd-4461-addb-b17bb363340c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c7dfd12-ab71-49e3-b0ad-cb20afe46c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba847b1-246b-410b-9796-bfa261c2f490",
        "cursor": {
          "ref": "b742360a-bf8a-4eab-b36e-f7c35b1acc73",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0189a955-1601-4056-b44e-6b883418d8ae"
        },
        "item": {
          "id": "2ba847b1-246b-410b-9796-bfa261c2f490",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22f2f873-0481-41b1-807f-7ba5d0d89d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6317fea6-a021-405b-b3d1-f65c2f41c468",
        "cursor": {
          "ref": "0b43e512-ea5f-4661-9e48-e45252fc8f9f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e63be184-ec50-4c5b-9efe-d12fee0b4e77"
        },
        "item": {
          "id": "6317fea6-a021-405b-b3d1-f65c2f41c468",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a502817d-7b16-4dbe-a65b-0b6e91b22315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38375220-6660-41fd-bd80-b21b4c18c493",
        "cursor": {
          "ref": "748cb258-db19-4df7-8f8b-4ca233cb4f16",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2aed544a-5c19-4313-9147-e1850137c12b"
        },
        "item": {
          "id": "38375220-6660-41fd-bd80-b21b4c18c493",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "424d6a46-3fee-4ff0-b0cb-26bffa22f294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f0ee11-e32b-4b22-978c-699c6c1a7f41",
        "cursor": {
          "ref": "27f6ff79-3cd6-4124-ab5d-41158bb4d38c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aaf2d5f1-2b42-4c91-b3f5-66710743901e"
        },
        "item": {
          "id": "41f0ee11-e32b-4b22-978c-699c6c1a7f41",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f5ca427f-6c35-491f-bddd-33407376c417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed7e2f0-f6c2-417e-a72a-f146fe90eb53",
        "cursor": {
          "ref": "ad2982ee-776e-4196-bc8a-7591106d582e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "66116a56-6549-4a74-bc1c-bb3241cf532f"
        },
        "item": {
          "id": "bed7e2f0-f6c2-417e-a72a-f146fe90eb53",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6037cbf-8a23-45d6-a9fa-1b463e075ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6039cc4b-8f46-48e1-9a97-4db45e528b4c",
        "cursor": {
          "ref": "d8938565-f8ec-4f36-bc03-30a1a2ef1e2e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c702c65b-74a9-4ccc-a59c-9ce7e954ba33"
        },
        "item": {
          "id": "6039cc4b-8f46-48e1-9a97-4db45e528b4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bdbe9244-451b-41a6-aeac-778424fb846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd21016-097c-4b0f-98a3-7288ae697031",
        "cursor": {
          "ref": "77471695-f082-4783-853d-f5acf9da61c7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65751b74-f49c-4ac2-9ef5-108fe7b012fc"
        },
        "item": {
          "id": "efd21016-097c-4b0f-98a3-7288ae697031",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d7d1d63-6378-446c-8cdf-dcee25ddc7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc9af9b-878b-4bd1-a969-6999a43d9e4c",
        "cursor": {
          "ref": "51c55ad5-bd58-4a7e-8e9c-ef611453e97b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e3a7415-0a96-4c27-b194-e005940d2847"
        },
        "item": {
          "id": "3dc9af9b-878b-4bd1-a969-6999a43d9e4c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b490306c-bcd2-4aa4-a156-8fba86734f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6612594d-0589-4744-99e8-60da075bb798",
        "cursor": {
          "ref": "f4e2d799-e17c-4629-8e79-4b829be6e4b1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "20cbf731-f0fb-46e8-96d1-e7d0a663baa1"
        },
        "item": {
          "id": "6612594d-0589-4744-99e8-60da075bb798",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bae4efd5-a075-433e-ba23-e4de36bd7a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f30ce7-82ac-4f7c-b01a-5df948e7aa1a",
        "cursor": {
          "ref": "0710edfa-53dc-47e5-83b3-15b9cbe99c01",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6a146cc-08fc-4987-99c6-9af4dec1b450"
        },
        "item": {
          "id": "89f30ce7-82ac-4f7c-b01a-5df948e7aa1a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a7bf90d-93e7-4056-9d7b-93c02fa2d454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e18ad1-06af-40e5-a040-e1ba731df033",
        "cursor": {
          "ref": "141f7c86-af45-4fe5-bd3d-9b62cfac9c63",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4820dcf4-a5ac-4da9-8f09-6233ca746679"
        },
        "item": {
          "id": "a3e18ad1-06af-40e5-a040-e1ba731df033",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d6b4d2f-4a67-4c6a-97f8-32e8c9f7cf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ba23b-33cd-4381-862f-560c46e13f39",
        "cursor": {
          "ref": "ced84ee3-4c83-4046-ae44-6c6b03dda089",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae90cb2f-4360-48d3-8247-b92c48d31fd1"
        },
        "item": {
          "id": "6b3ba23b-33cd-4381-862f-560c46e13f39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04c50712-3810-499b-aa6a-199604b5bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e62bb-b0db-4b09-90a2-c36d703cf523",
        "cursor": {
          "ref": "4ccc101c-caa0-4462-99f7-9713164536b9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8920c586-21e4-45bd-b93a-0e640fad3316"
        },
        "item": {
          "id": "3c7e62bb-b0db-4b09-90a2-c36d703cf523",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8e1f0f82-c9c7-4c6c-8524-c8ea1ce530e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d31de-a436-4650-a2eb-388348e686ce",
        "cursor": {
          "ref": "9927db09-0ada-4733-b7e3-ee0e0b7c71d5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5c4e3870-9a43-4de8-8576-166c5fce7891"
        },
        "item": {
          "id": "6b8d31de-a436-4650-a2eb-388348e686ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c757c375-985b-4961-bdb5-51c4860d875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593e6212-190d-4b36-9743-8a9dc0e3aeb4",
        "cursor": {
          "ref": "bc3d2356-b5a8-4168-8538-c50b5c079d83",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf669e97-7972-46eb-a8ce-8bd47ca39b05"
        },
        "item": {
          "id": "593e6212-190d-4b36-9743-8a9dc0e3aeb4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "35f400be-9405-429c-a921-e3a5da191e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df996d2b-0054-4532-babf-bf730afc7b51",
        "cursor": {
          "ref": "c4fe4e7e-ff27-487c-a40e-f6a13c7367fc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d89e128-2c6d-40f5-9186-ebfd32e1d74c"
        },
        "item": {
          "id": "df996d2b-0054-4532-babf-bf730afc7b51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2e34eadb-5e1c-4510-b51d-e14fdfdfdedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761d1abe-307e-4ff2-9668-05af475aaa50",
        "cursor": {
          "ref": "8b074152-39c2-4feb-9fa3-fb73b260fae6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2f800e0e-5fa4-4c2f-b4a7-9188c1ac975a"
        },
        "item": {
          "id": "761d1abe-307e-4ff2-9668-05af475aaa50",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "efbba7bd-d565-4989-a439-0031605bf1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0224a5-87bd-4db1-ad04-f1ba645019c4",
        "cursor": {
          "ref": "507759ff-b253-430a-b59f-1df832f1fac5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "98c73a5f-5e00-404a-9b1a-99081559571d"
        },
        "item": {
          "id": "6d0224a5-87bd-4db1-ad04-f1ba645019c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a0a141a0-6633-4941-8bd4-19291aad8e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445edaeb-b268-4293-b114-d4ea8ea02a93",
        "cursor": {
          "ref": "ab98b660-b3b1-48ee-a712-f3abc9f5c84c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6a19512f-e2a8-4bee-bbee-1f277bf0388a"
        },
        "item": {
          "id": "445edaeb-b268-4293-b114-d4ea8ea02a93",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0ea1101-93a0-480c-b8f6-74472a4e019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9719368-4c66-46b1-bf19-a41093a4198b",
        "cursor": {
          "ref": "aec41913-b1df-42bc-88d3-0b7d81fc9343",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "10ca2a8e-66f1-4f02-9e5a-4805db3c0e94"
        },
        "item": {
          "id": "d9719368-4c66-46b1-bf19-a41093a4198b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de54e307-4627-4209-adc4-475ed93745b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30deaa87-01db-44d3-a6ae-308f643d3bca",
        "cursor": {
          "ref": "c2d6a3e8-e532-4f6b-b5f3-3fa3dd0f3ba1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7ae0dd55-c7e4-49bf-93a5-f32e82584b9d"
        },
        "item": {
          "id": "30deaa87-01db-44d3-a6ae-308f643d3bca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82c7c6bb-95c2-4cfa-a7f5-5e43abbc670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb37ff3b-a8b4-4f8b-a262-e14fddf2b75f",
        "cursor": {
          "ref": "5a55ab1f-3672-48bd-aaa4-66ca817be7e8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ac791c61-e638-4aca-b015-ef3b8e2ae6d4"
        },
        "item": {
          "id": "cb37ff3b-a8b4-4f8b-a262-e14fddf2b75f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "63b24be5-43fe-4c8b-bacb-7bfdd2bf13d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a3cf74-8628-4377-9357-729bc10695b7",
        "cursor": {
          "ref": "b4c69ccc-b08c-4c10-9e1c-511c4dc63ab5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "92119eaf-41ed-46c1-8079-eed491a4493d"
        },
        "item": {
          "id": "06a3cf74-8628-4377-9357-729bc10695b7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b10d82ae-bc44-4fd8-a9c9-782e6a685eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68901cfd-0a4a-4334-a815-bfe738af00d7",
        "cursor": {
          "ref": "5e26907e-fc5c-4f01-99ea-48d8559dd135",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0b1491fd-e341-495e-bef0-3f72a2bb572c"
        },
        "item": {
          "id": "68901cfd-0a4a-4334-a815-bfe738af00d7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ad799002-595d-406a-a06c-2d606228e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d281df2-6f7e-4617-ac32-f50769ea40d5",
        "cursor": {
          "ref": "df247e24-5118-4bcb-b3be-fb3912ea88dd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a6954927-c9b2-4c40-b6af-4288b255bf1e"
        },
        "item": {
          "id": "6d281df2-6f7e-4617-ac32-f50769ea40d5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cd872c65-1423-4a78-b808-0e8ed20acd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef873eb-11d9-49c6-b663-ecc0c835ef38",
        "cursor": {
          "ref": "8a323fea-8d4e-4252-a910-56a8eec48010",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fedfcc88-2631-4199-9967-8a2e60cb65d4"
        },
        "item": {
          "id": "3ef873eb-11d9-49c6-b663-ecc0c835ef38",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6258e36d-0350-43b2-8136-403bb5539af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dbb893-93b6-479e-b5f4-5460a87168f2",
        "cursor": {
          "ref": "94dc23e5-f50b-46f5-b0dc-8047e8545b57",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a7adf0b6-603f-4d6b-b7ea-6d534f204ed6"
        },
        "item": {
          "id": "c9dbb893-93b6-479e-b5f4-5460a87168f2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b0d9e0aa-8862-45cf-9031-520932991f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6bbbb5-a94e-4c54-92b8-10a586ecc103",
        "cursor": {
          "ref": "d89f92b4-683e-4783-9771-d682f0678c56",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5198866e-c01e-4d70-bcc8-63cf1b8fcf20"
        },
        "item": {
          "id": "9f6bbbb5-a94e-4c54-92b8-10a586ecc103",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fdf60a87-494a-4e69-9b52-755ddbfb9926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512e08ba-1db5-4b41-aac1-e24cb25dcc96",
        "cursor": {
          "ref": "08c157dc-8d6f-44a5-a298-4b0327949144",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8d6c71e5-1fab-4706-89b1-de386b857f1c"
        },
        "item": {
          "id": "512e08ba-1db5-4b41-aac1-e24cb25dcc96",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5fd84394-93aa-4300-877a-157c010e7b88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea55769-2373-4769-9033-727262c52849",
        "cursor": {
          "ref": "44b0d49b-153f-49b9-8e40-e79d94b626b0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "85014aac-5832-4f12-8723-24f943def904"
        },
        "item": {
          "id": "6ea55769-2373-4769-9033-727262c52849",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0db26d10-b434-4aaa-800a-8a02d365ba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ebad3-7a34-473c-9524-cd9acda4cf3e",
        "cursor": {
          "ref": "e85d8567-10be-4dfd-85f5-89d60e95233e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "415b0ebb-11ad-4880-9cd7-7534d902ca5e"
        },
        "item": {
          "id": "fe7ebad3-7a34-473c-9524-cd9acda4cf3e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "08a8e830-27c3-4155-b699-db4a1e843ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124fae5d-2b32-4f86-97b2-125fd6bb1dfb",
        "cursor": {
          "ref": "b818faf9-13f7-47b8-8870-0ab881d61df7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "de325141-7a71-4053-add7-52a6f4c31c83"
        },
        "item": {
          "id": "124fae5d-2b32-4f86-97b2-125fd6bb1dfb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c244b0ba-d8d8-436f-9f81-a06c1f17eb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a643934d-ea4e-41d5-9342-49eec5c5947e",
        "cursor": {
          "ref": "847236f6-3dab-4dac-87aa-e3cef3b965ea",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "36b6e9a4-f533-44b1-9542-09fc4f367632"
        },
        "item": {
          "id": "a643934d-ea4e-41d5-9342-49eec5c5947e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8131d889-dac2-4040-b466-e205a533f2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb60021-c55d-4f58-b8e9-7e8e8d067af0",
        "cursor": {
          "ref": "df346723-e887-40d2-8553-c09d9d0cf4e9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "140d4bc7-c0d5-4e0c-8aa4-58c9314f8f30"
        },
        "item": {
          "id": "4cb60021-c55d-4f58-b8e9-7e8e8d067af0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "975c73d0-f91c-40dc-8952-a990fdc252c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e43a11b-ba3f-4247-8fd8-832e94ea369d",
        "cursor": {
          "ref": "3eafe4c0-5baa-45c2-958c-4224e6ceb553",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5a7d622d-165b-4059-bd63-f7e1d2d4aa40"
        },
        "item": {
          "id": "6e43a11b-ba3f-4247-8fd8-832e94ea369d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d9ca3a74-6ee6-44a5-934b-808eedd57b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fff63a-635f-4f86-b8e1-003f52d3e8a6",
        "cursor": {
          "ref": "c9315d21-910a-46ee-a605-ec2e76ca1760",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "10d2489d-1fd3-41f6-96f9-852bc033bdb9"
        },
        "item": {
          "id": "58fff63a-635f-4f86-b8e1-003f52d3e8a6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7120d781-a34d-440f-9c30-659ef87ec2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1865065-e090-4552-9cab-bb33fe86add8",
        "cursor": {
          "ref": "bc838d26-4be0-46ec-b43a-8b366ae418a5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "db8f0353-40ac-4f14-8cdc-e898275f62ff"
        },
        "item": {
          "id": "c1865065-e090-4552-9cab-bb33fe86add8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9bcfc2d8-e7b9-4e76-9214-b8b57f2a8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f128687-cea3-451c-a15e-3606fcf92ff9",
        "cursor": {
          "ref": "628481f7-55a9-4984-937f-2a4a98d83dd8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3b81dc12-b984-4aea-80f3-c95bef9cc925"
        },
        "item": {
          "id": "0f128687-cea3-451c-a15e-3606fcf92ff9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fe7d4578-0764-4a0f-a316-2cb8dca28cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db5740-94d4-4ba1-ba7f-5b8415ea5a5d",
        "cursor": {
          "ref": "e871c5c3-4969-4e46-97ef-82586aa90bbb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "887ff806-a0f8-4299-9fc0-63563546ce1c"
        },
        "item": {
          "id": "26db5740-94d4-4ba1-ba7f-5b8415ea5a5d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3f07866a-2b53-4dba-8ea7-f3d39666ccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9299d54-51ae-4bb8-a407-f5ff175d0ef5",
        "cursor": {
          "ref": "9025f8ba-d624-406b-9714-09b7c1fe4551",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3017b1e0-a14b-45a7-9fc4-a17598405940"
        },
        "item": {
          "id": "c9299d54-51ae-4bb8-a407-f5ff175d0ef5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "178b2f60-0ae9-43eb-be5a-2f64e2c0c492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0255666-5675-4509-9fd6-2a3448034cae",
        "cursor": {
          "ref": "99ac849b-bbfa-4cea-8435-a03552eff802",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f3389bc7-2e79-487c-a096-ccec1a6980a1"
        },
        "item": {
          "id": "f0255666-5675-4509-9fd6-2a3448034cae",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5182a73f-1075-450a-ae2a-5a320d5aef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f3e4cd-d771-40bf-ad60-63a21df1751a",
        "cursor": {
          "ref": "c41b6aec-4606-48c9-bef3-fa488caea814",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "132d4700-1539-46d1-920b-068ed1f589f8"
        },
        "item": {
          "id": "62f3e4cd-d771-40bf-ad60-63a21df1751a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "17b29edc-61a0-4c07-8dbf-aa2273f83886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3541390-6455-4c49-aefc-92894e50a7cc",
        "cursor": {
          "ref": "a3a04935-4ea0-4d5f-bbd4-5d64902cac5d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "187d67de-32d3-4cd3-843c-77e3dceab2b1"
        },
        "item": {
          "id": "b3541390-6455-4c49-aefc-92894e50a7cc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "655a9154-9436-4d4a-87be-54d7aee2bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01751bd-3d2f-47d3-86d6-ee3e4dc38765",
        "cursor": {
          "ref": "f21e53c3-31d0-48ef-b4f7-1c1a1eeb150c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb6976f5-7762-4237-9612-64b4f33001a9"
        },
        "item": {
          "id": "d01751bd-3d2f-47d3-86d6-ee3e4dc38765",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1b52a931-e788-42d4-a04b-1418dcfe0cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530361bc-e77b-4638-8cdf-92c673992dcb",
        "cursor": {
          "ref": "334d537b-a28c-45de-9e0a-2b2a5eedb543",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec4ab8ef-c648-4555-b483-7d10525162e2"
        },
        "item": {
          "id": "530361bc-e77b-4638-8cdf-92c673992dcb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "08f3e6b5-2c9f-48a8-b974-378be72ea828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ddcec5-c0b2-4ebe-9179-77c6e5b01d06",
        "cursor": {
          "ref": "a35fc542-9336-4a9e-903b-eaec32dfbc28",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b896d6b3-10f7-4b6c-b755-f9e8191a029a"
        },
        "item": {
          "id": "90ddcec5-c0b2-4ebe-9179-77c6e5b01d06",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7eb7a693-5354-46ff-844d-d8ac63834fbf",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d720d04d-4d45-4355-9b49-3b31cfcc37fb",
        "cursor": {
          "ref": "426135b2-f96e-4d79-99ca-77b6c30922a9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65fbb645-d49a-4cb8-b7ab-9773de721d84"
        },
        "item": {
          "id": "d720d04d-4d45-4355-9b49-3b31cfcc37fb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7f0848ef-3cc7-439c-88b1-4faa561c2df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f829e99-ffdf-4498-bd0b-e4ba4f902b57",
        "cursor": {
          "ref": "2d9b4b3b-bc79-4152-82ff-4195b6b0a481",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ab28904-6f4f-4273-8f5d-5e0ca7596985"
        },
        "item": {
          "id": "0f829e99-ffdf-4498-bd0b-e4ba4f902b57",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b43cffc0-9431-4865-a66e-cfc67c319d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fd6b70-2ff1-487c-be98-8fcf2e35dfdb",
        "cursor": {
          "ref": "57d81936-541f-48ee-ac98-5a882e280513",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f305c8f2-2882-4ce9-9966-9431880e7635"
        },
        "item": {
          "id": "a9fd6b70-2ff1-487c-be98-8fcf2e35dfdb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ed1b626b-2b2e-4060-bf40-05327334c219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff29be-81d6-451e-b765-37cbb6f99431",
        "cursor": {
          "ref": "91098e57-6472-4324-a950-93faf4d2560c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "819f5533-62fb-4650-b71d-d6cfcb7bf615"
        },
        "item": {
          "id": "5eff29be-81d6-451e-b765-37cbb6f99431",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d7f36f54-1688-492a-a2a6-e3da94b784b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c3441-e04e-4c48-a144-532a56f1b038",
        "cursor": {
          "ref": "c5b3e32d-f631-4c30-bfe0-df31a84869b1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1c42bf36-d8aa-4c7f-9f81-401dac2b9ff0"
        },
        "item": {
          "id": "750c3441-e04e-4c48-a144-532a56f1b038",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5dedef6d-aeda-4bed-852f-172eb4bab289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93408086-ce3c-40af-83b9-0f85acde14ae",
        "cursor": {
          "ref": "3dd6ff55-af05-4ba1-b2a5-66ee3b19a236",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a5cf9e4d-5553-49c3-b800-2f06d8f26ed6"
        },
        "item": {
          "id": "93408086-ce3c-40af-83b9-0f85acde14ae",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "605717c6-7597-4b65-9c1d-9106315a3dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b47965c-bed6-455f-88a6-220b7269f730",
        "cursor": {
          "ref": "5119ee47-84e1-4e42-bdec-6f336c5e567d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6bb074d6-526d-459f-8600-517b49a320af"
        },
        "item": {
          "id": "4b47965c-bed6-455f-88a6-220b7269f730",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "46272ef6-a273-4601-a111-cc30a4634db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a3cae2-bbf2-45dc-9bb3-5cb4d3dd1998",
        "cursor": {
          "ref": "6f992bcc-edae-484e-a12c-44a712d2e62a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dd2e25e0-3740-4b0b-8765-024d3ac28833"
        },
        "item": {
          "id": "25a3cae2-bbf2-45dc-9bb3-5cb4d3dd1998",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "27a3d2a8-a86a-4ed2-8dac-8893783f0579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67400b6a-918d-402b-8802-b76ce8fc7354",
        "cursor": {
          "ref": "0597097d-0519-44d2-9d30-5ccfa6cd39d4",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1d02064e-ddf4-42bf-882b-93526b6c3ac4"
        },
        "item": {
          "id": "67400b6a-918d-402b-8802-b76ce8fc7354",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "704f15eb-7154-413d-8982-97f89756d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0e5c46-4b82-464e-92d1-28846834bb06",
        "cursor": {
          "ref": "8507c581-8344-4f57-9f4c-c1df3a7425cd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5248d27f-7453-4e2e-a5da-dfaa222a4241"
        },
        "item": {
          "id": "3b0e5c46-4b82-464e-92d1-28846834bb06",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cf4e472-e7cc-4fe0-b878-9265f9eff5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153b96c6-90e0-4450-8253-902251f3e966",
        "cursor": {
          "ref": "0a173ba6-bc76-4239-8090-f96d0cbbc9fc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c377b410-ecff-4243-8b0f-d1a72e99c361"
        },
        "item": {
          "id": "153b96c6-90e0-4450-8253-902251f3e966",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5b21a0fa-0dd7-4736-b1eb-085e3c9036f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b20348-4c09-44fb-b23e-97377653dbce",
        "cursor": {
          "ref": "d6c0e4c6-e1b7-4783-bf87-8f9eab1729ff",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "30ab8f93-d2f0-4391-bf0b-d294caa29a4b"
        },
        "item": {
          "id": "e3b20348-4c09-44fb-b23e-97377653dbce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "567e242f-9429-4690-87ae-ef717159e4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2201134-9d46-463a-a0f1-baeacedc0526",
        "cursor": {
          "ref": "0c742e4c-c9a5-4ca6-a2da-eb2c4248ae5e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9002d198-15a6-4e5e-8cb6-362d34290889"
        },
        "item": {
          "id": "d2201134-9d46-463a-a0f1-baeacedc0526",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "76b8b58d-9831-4425-9988-e101b788f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b111978b-361a-490f-9656-c1fa3abd9a3a",
        "cursor": {
          "ref": "dd44e618-23b9-435c-81a4-7a1db6287428",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27ae1924-e363-4d34-80d9-229cec5426e3"
        },
        "item": {
          "id": "b111978b-361a-490f-9656-c1fa3abd9a3a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b19e04c5-0627-414b-b6d1-24f79d9deabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54477a3-0579-4448-bc8c-7f1818c78298",
        "cursor": {
          "ref": "fe8b9c45-e808-49a8-9822-7ac30145f879",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fa260922-a00c-44f5-887c-2a4dec8bc46e"
        },
        "item": {
          "id": "b54477a3-0579-4448-bc8c-7f1818c78298",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ba5906f-6500-468e-baaa-0837e5b59a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd7f027-2ade-4247-876b-c3285ea9acd3",
        "cursor": {
          "ref": "18247c10-3d76-4b8f-a1e3-a5fd276f5fcc",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a5381aca-d06a-49b4-9e20-ecce2c2ba9ef"
        },
        "item": {
          "id": "2fd7f027-2ade-4247-876b-c3285ea9acd3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cc5c764e-19f7-4120-9a8a-8379dd06e2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1245bd48-703c-411a-877d-299600e47153",
        "cursor": {
          "ref": "2378714b-4a10-438b-9e7a-db89a63538ce",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f31d052e-58cf-4afb-8d9a-8b74069f6383"
        },
        "item": {
          "id": "1245bd48-703c-411a-877d-299600e47153",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7db11650-0680-425e-b1d1-f8ee18ca1069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f175df79-ca0a-46ab-9e30-ae14c14e59f0",
        "cursor": {
          "ref": "07427064-d66c-40d0-b23d-6e94e9990178",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfb4d068-86cb-4922-a85d-25a5959aedb7"
        },
        "item": {
          "id": "f175df79-ca0a-46ab-9e30-ae14c14e59f0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ff16e006-523f-48cd-90a6-73bb61f8693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9fdd1a-9f15-4950-b384-069805ae4aca",
        "cursor": {
          "ref": "40dfd691-72a3-49c6-a292-ec417721d82a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7322b267-d2ff-49d8-b62e-73e037160065"
        },
        "item": {
          "id": "8d9fdd1a-9f15-4950-b384-069805ae4aca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8f966f74-9c47-4ec0-b3e8-fa3adf49238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6456f14-0048-43b1-929a-e5880b002d32",
        "cursor": {
          "ref": "1b72c37f-38e4-431f-94d2-5d7f0fea1505",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4fa387d9-ddff-4362-b3a4-7ab0687035f8"
        },
        "item": {
          "id": "b6456f14-0048-43b1-929a-e5880b002d32",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7ccb43e4-18e0-4387-9ed7-d74183944670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993df1ad-44cc-4ac6-9534-14a7cb4b7421",
        "cursor": {
          "ref": "a2e51b5a-5421-43ee-9e19-756013d9fb02",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0fd90cfa-b625-45cf-b5a2-469d86e29ae4"
        },
        "item": {
          "id": "993df1ad-44cc-4ac6-9534-14a7cb4b7421",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8e6e351c-4bc3-442e-a885-836db4409273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e785e591-3b32-497c-b16b-34e7ef59845e",
        "cursor": {
          "ref": "8d6d1796-b2dd-4595-a965-866b2998bd34",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b3004091-7c17-46c7-b210-ef42b9106cd8"
        },
        "item": {
          "id": "e785e591-3b32-497c-b16b-34e7ef59845e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65764aa5-9b01-4c36-bf58-2abca48c20fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6633e8e-264f-439a-8a79-e1b2ffdda8cb",
        "cursor": {
          "ref": "99205c48-fd20-4ef0-9c89-19cff24afc22",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c3d5bbdd-46f9-49a4-9b42-2d3b27ce45cc"
        },
        "item": {
          "id": "c6633e8e-264f-439a-8a79-e1b2ffdda8cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d98c10c6-00c6-43c9-aa3e-35ade944691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1901e0-35b7-4e94-90da-63f5ae692e3e",
        "cursor": {
          "ref": "ddb0f217-b5d3-4a3b-a660-ba0de2690b86",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "42af4047-5dc1-4f3f-9ceb-68bace1fbbad"
        },
        "item": {
          "id": "4f1901e0-35b7-4e94-90da-63f5ae692e3e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a21b4330-a76d-423e-b539-37bb99fbaf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc548dfd-dde4-4b56-87da-e1db04f3b4f1",
        "cursor": {
          "ref": "977a6302-cf08-41c1-847c-8a1210621106",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "044cbbe7-0eb8-47db-b6fb-9126e0200ad6"
        },
        "item": {
          "id": "dc548dfd-dde4-4b56-87da-e1db04f3b4f1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7c24aff1-3456-4b20-909b-6891c9bc7984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61640532-be3a-4c2e-be4e-cbdd982b6479",
        "cursor": {
          "ref": "15da15e2-2e82-4ad6-8346-4ded1471b391",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "40b89106-64f7-414b-9d7d-54004be51337"
        },
        "item": {
          "id": "61640532-be3a-4c2e-be4e-cbdd982b6479",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "540bf895-1856-4e65-83c9-b6d2517154bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321931d-00aa-455b-bc1e-2fb103cde14a",
        "cursor": {
          "ref": "ed9fc1f6-59c1-4bc1-adff-25f50adec11f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2ea9141-8a5e-439e-ae30-13924e9e07c5"
        },
        "item": {
          "id": "a321931d-00aa-455b-bc1e-2fb103cde14a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f33e5a8-001e-49f2-a532-04d33022bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c83ab33-ff20-4d42-9ae7-c677f09f0e8a",
        "cursor": {
          "ref": "2ee3d2ed-e58a-4111-ba55-4e72852679a9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4cb62bb0-0390-4bf6-bcde-6726d39fa5bb"
        },
        "item": {
          "id": "6c83ab33-ff20-4d42-9ae7-c677f09f0e8a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "344b8c06-fc2d-4cd2-8ce5-828c042ab5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1def992c-96d3-4b78-8b44-461cf5f0c978",
        "cursor": {
          "ref": "d63e454a-cae3-41d9-b6e9-430decd68263",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "17df9aa9-fb36-422a-95e5-45845daac011"
        },
        "item": {
          "id": "1def992c-96d3-4b78-8b44-461cf5f0c978",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "019f1554-8a22-4dce-b86d-1654cda7665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012c1d66-8015-4743-a1ec-d5215cc70d94",
        "cursor": {
          "ref": "f817ab0d-44f2-4e2f-bc6b-f300d12d10ff",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ab1ae3f-3c1e-4ab0-a9fc-d247497e1955"
        },
        "item": {
          "id": "012c1d66-8015-4743-a1ec-d5215cc70d94",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c91c0954-0f60-40a2-b825-5b1dd0a9256a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8371124c-b28b-4cab-ac07-db42254bde1a",
        "cursor": {
          "ref": "454975be-74a9-40c1-adf3-75aa34d2818a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7efcf244-0347-4fa8-9bb4-9cd9adfda114"
        },
        "item": {
          "id": "8371124c-b28b-4cab-ac07-db42254bde1a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8f34e5ae-1c42-4947-aaf4-7c89f5fe439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18220d19-1b49-48a5-8e15-0c6d7ab0f614",
        "cursor": {
          "ref": "ef2da33b-ba90-476e-969d-972dfa321493",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fbd79289-bd1a-4438-b90a-e5ade4afdc9a"
        },
        "item": {
          "id": "18220d19-1b49-48a5-8e15-0c6d7ab0f614",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0a919167-527e-45f4-8552-fdb2fa4c8098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc52ef0-ef0b-4a94-89b0-0e650e00c858",
        "cursor": {
          "ref": "fc0455fc-b223-486d-b66f-5563e8c14adc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bf42b750-c87e-4f54-85ae-20a1acbaf99a"
        },
        "item": {
          "id": "6bc52ef0-ef0b-4a94-89b0-0e650e00c858",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5aef4727-ba1d-4be7-8d8b-c9fcf57cfcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a56c037-fb35-46d1-b0d7-f1c328bca5fd",
        "cursor": {
          "ref": "684ac03c-677d-4543-bf6c-d2a66e136e66",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3affd69c-633f-48e4-81b6-afd32d4ef964"
        },
        "item": {
          "id": "3a56c037-fb35-46d1-b0d7-f1c328bca5fd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e4d57a42-02fd-41d0-bc18-fdc782789c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd53420d-304d-491e-ac57-18cdecbfbcc0",
        "cursor": {
          "ref": "2589b79f-9390-4b14-8c46-869e590d660c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3eddf7ad-9cc2-487f-9c5c-15e4888c6f9c"
        },
        "item": {
          "id": "cd53420d-304d-491e-ac57-18cdecbfbcc0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ed131e1e-911e-47cb-ad1b-1841f68fab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f27358-7c81-487e-87f9-5af6269d2f6a",
        "cursor": {
          "ref": "9ef419c8-35ea-43af-bc3f-1923dee49f41",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07276d6d-384d-4aef-a286-742f73c10544"
        },
        "item": {
          "id": "35f27358-7c81-487e-87f9-5af6269d2f6a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "535e1d17-31e3-4a58-9983-cd71d1b4448f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139395ae-ebb5-4cba-a8aa-897657c9a50e",
        "cursor": {
          "ref": "3d246352-ce49-4c13-9e29-ab1c1838b1ea",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4c87f09-5d98-440f-aa71-d717bec66913"
        },
        "item": {
          "id": "139395ae-ebb5-4cba-a8aa-897657c9a50e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7f4ef2f3-f086-46b0-87e7-a26a17198690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e72254a-75dd-4ab8-8c19-809c2c580910",
        "cursor": {
          "ref": "fa8aefbd-5838-4900-9b34-72ca85447ee6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3bfe38a-8801-4979-a656-2735d5d4cbd3"
        },
        "item": {
          "id": "7e72254a-75dd-4ab8-8c19-809c2c580910",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8cc6d2c7-5570-4713-a27b-3d106afd4dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a3fe3b-42ae-4de8-b29d-132834fe739d",
        "cursor": {
          "ref": "341c1aa4-f59f-4980-80ea-e4dbee1d2d81",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "50d30112-a59b-44ca-b66b-464232fd5f35"
        },
        "item": {
          "id": "35a3fe3b-42ae-4de8-b29d-132834fe739d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "18d9e78e-0741-4f62-87a0-cde3663e3eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d763b4-c5be-404e-b269-fcb6f88777cc",
        "cursor": {
          "ref": "d47d7979-0f10-403f-bcd9-f6ac534d1be8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "30002e30-cef7-48a7-b0bd-529aa382f545"
        },
        "item": {
          "id": "06d763b4-c5be-404e-b269-fcb6f88777cc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a2d39457-6f6c-43b4-93c0-38d7047f79b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226feb4f-a284-48a9-9e30-7dc216840b29",
        "cursor": {
          "ref": "93e3bb0b-1b86-4117-ade4-9f8d927f9e60",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "26355712-7319-4b42-9b5b-72a55a83c573"
        },
        "item": {
          "id": "226feb4f-a284-48a9-9e30-7dc216840b29",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1578c2ce-e5f3-42c0-a16b-5d50b79ebbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81800c28-014b-48d2-a184-9db57e79b221",
        "cursor": {
          "ref": "38f10e0f-edda-453e-95d2-b71286e8475a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b91a0c9-e953-4581-b71d-f6defe012323"
        },
        "item": {
          "id": "81800c28-014b-48d2-a184-9db57e79b221",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "68491334-c9bf-4d99-abbc-c0fa9de8f9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4363c-8f94-43a8-a6c4-9d4565369252",
        "cursor": {
          "ref": "14d82b17-291f-4880-8d27-247cb73a2ebc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c3ffdb55-4826-4c38-ade5-c9ac08f88db3"
        },
        "item": {
          "id": "2ae4363c-8f94-43a8-a6c4-9d4565369252",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e1df4123-a059-4580-8382-159e761a426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac83cd97-70bd-4ab5-923e-402f85809954",
        "cursor": {
          "ref": "d35fede6-c99b-4be3-b3c1-de8d9eb38ed6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f6555451-1d2e-4217-b851-2bad68e63d14"
        },
        "item": {
          "id": "ac83cd97-70bd-4ab5-923e-402f85809954",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d04dbfbc-557f-43ac-bf0d-e5473dac4a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf55977-9962-44eb-9bc5-6f01a6549fe3",
        "cursor": {
          "ref": "907faa5c-4d91-4f58-96cc-d03be0b2879a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8ba54635-1904-485d-89c5-0537e37192a1"
        },
        "item": {
          "id": "bcf55977-9962-44eb-9bc5-6f01a6549fe3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5bf982a5-163b-482b-baf8-f955a07ebcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0a3f0e-da18-45b5-840a-dc71bf6feba0",
        "cursor": {
          "ref": "1000c3b8-363f-4589-b254-0cc898afed59",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "23f2817d-a831-4875-8a5b-a8ffd812c1c9"
        },
        "item": {
          "id": "9b0a3f0e-da18-45b5-840a-dc71bf6feba0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d2391a0c-8027-4044-8304-f6c39f3889dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc93ba9-da38-435f-acf4-8cb63c3b6d0f",
        "cursor": {
          "ref": "fca8def2-f892-4b32-9426-fdc9db9f3881",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "83342156-90de-430e-801f-c01040c44f42"
        },
        "item": {
          "id": "cbc93ba9-da38-435f-acf4-8cb63c3b6d0f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50fe15ef-d420-488a-adcc-7b8aabf2c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7587db40-e303-4732-bc58-b17691efbcfb",
        "cursor": {
          "ref": "9083dd27-7b95-4ab3-85f7-37b4ab613dbf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1cb2f9c-1cd4-4570-b61d-f831f83e50e5"
        },
        "item": {
          "id": "7587db40-e303-4732-bc58-b17691efbcfb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3013df2f-fb6e-4dfa-8e89-eb3732a92510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e18bdb-37b7-42f1-b974-bbf78de591d5",
        "cursor": {
          "ref": "e786225b-1ec1-4ed1-ac45-be71bae88c5c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c60db7ec-47d5-4e65-a2c7-e6772814dfd4"
        },
        "item": {
          "id": "b6e18bdb-37b7-42f1-b974-bbf78de591d5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e4a04205-7a82-4337-9ac5-18aacb35a69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f8902d-7599-4f59-aae4-ba70e50c5c56",
        "cursor": {
          "ref": "8dd1ac31-28c9-4f82-9ee1-43468a8019f1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "254b30e4-c3f9-4818-9125-d66cd5adfcb5"
        },
        "item": {
          "id": "c8f8902d-7599-4f59-aae4-ba70e50c5c56",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "00a7cca3-c13c-494a-8bae-3e7447431773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408177c2-41ac-4847-b0a4-271d3c503427",
        "cursor": {
          "ref": "5947c0dd-d4a2-4adb-98fe-083492eafbca",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b366ad58-cc7e-472c-ae52-4f1d9755464a"
        },
        "item": {
          "id": "408177c2-41ac-4847-b0a4-271d3c503427",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "544bfd89-b35f-4d0e-bbd9-e87c5f3b9d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578b93c-0e7c-4fd2-9a8f-6ac744bca2ef",
        "cursor": {
          "ref": "cbabb354-8c1f-48c9-9e26-029ad8fb54ed",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0d65f052-41b7-45f0-9b53-db092185a01a"
        },
        "item": {
          "id": "2578b93c-0e7c-4fd2-9a8f-6ac744bca2ef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "baeb98a5-5de2-4a27-8b65-4ea560671f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362093b8-2d74-4681-a538-52af028755d0",
        "cursor": {
          "ref": "ca4648bb-bb87-42f6-956c-8852d452a5f9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6bee8896-be06-4f0e-8587-40932936ce9f"
        },
        "item": {
          "id": "362093b8-2d74-4681-a538-52af028755d0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6d7a642-65a5-4a7f-a4fe-c3384bdbd380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae2c0e9-6f36-4675-b1d3-dfd828b659db",
        "cursor": {
          "ref": "ebd43c5b-3835-4f1f-9575-ef33296ed627",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f4231738-8e01-40fb-bd72-37c36be2202b"
        },
        "item": {
          "id": "eae2c0e9-6f36-4675-b1d3-dfd828b659db",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ea160902-a904-4a6f-9012-be50edb4e64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c22caee-b988-4f1f-b686-30caeac5ea79",
        "cursor": {
          "ref": "042963fa-65ed-44a0-b297-a5cef18927cf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "afcd81e2-fa13-4566-b973-d9fb193c8507"
        },
        "item": {
          "id": "9c22caee-b988-4f1f-b686-30caeac5ea79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "779ae8db-a156-4872-9e0f-821df4e3a47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acc784d-ed7b-47a9-bda8-f28269aae318",
        "cursor": {
          "ref": "5ed2e31d-2341-45a4-8a5c-0a9a2a8dd1ba",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2862f542-7252-4dfc-8ac2-fcdd8494804a"
        },
        "item": {
          "id": "8acc784d-ed7b-47a9-bda8-f28269aae318",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0f37cbb0-1a6a-4399-835d-1e954044bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0536b-5a7e-449a-a0c0-3239cd3a4e28",
        "cursor": {
          "ref": "06abb54a-3cd3-4dd6-a106-d9a44a0c38bc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1548ba93-6782-4746-bd18-3dd7ba44c0f2"
        },
        "item": {
          "id": "12f0536b-5a7e-449a-a0c0-3239cd3a4e28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a83ec31a-7529-48be-b2b3-214096895295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8065c0e-dea6-4cf7-8913-3c0d2335035a",
        "cursor": {
          "ref": "076fb18f-9145-41b4-82b2-06868f551fa2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0335bc47-6480-4aed-ad9b-8edcf9c26f84"
        },
        "item": {
          "id": "a8065c0e-dea6-4cf7-8913-3c0d2335035a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "471b317a-d3c9-4a47-b589-9c15c2f825ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7175b176-7c81-45c8-aba9-a039129439bb",
        "cursor": {
          "ref": "64b5f3a1-462f-4de3-9eb1-73c111007222",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d9a0a967-f075-4178-9d07-87aee7623371"
        },
        "item": {
          "id": "7175b176-7c81-45c8-aba9-a039129439bb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "26c6fd81-2ff1-4938-b136-a24854c06cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6c6487-7e29-46af-9d94-3e5131e4ab11",
        "cursor": {
          "ref": "ab9d6e17-7091-4caa-803f-8b5e8b13674f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3208d913-7232-4db6-932d-869e6a76e42c"
        },
        "item": {
          "id": "5d6c6487-7e29-46af-9d94-3e5131e4ab11",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "523964e0-45ec-4e63-805f-7f8d63d40074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c2a6e4-91f7-4fa9-a909-2f7400892b6f",
        "cursor": {
          "ref": "6d8ddc7c-b571-4daa-b5dd-13b5faf60a48",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "12bf6652-84da-4f6c-870c-9472bd7b5efd"
        },
        "item": {
          "id": "f2c2a6e4-91f7-4fa9-a909-2f7400892b6f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "264d280f-acee-4b3c-ae03-354a30f7ef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc7e820-21bc-41a3-bbbd-c55da31f21af",
        "cursor": {
          "ref": "482dc76c-08bf-451b-839f-2cac4e0aa40a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "87046dd4-606b-4b65-9f4b-363aa21fb87a"
        },
        "item": {
          "id": "0dc7e820-21bc-41a3-bbbd-c55da31f21af",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1953acfe-fb92-4159-b0a0-ab527e2e89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb72cdf-5bd9-4bd4-a4a2-2cfbec4dcc7f",
        "cursor": {
          "ref": "7c910ab2-b3a3-4c2f-bf93-b85e15713d7f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "46506054-5e99-470f-98e2-3b83e9720942"
        },
        "item": {
          "id": "3bb72cdf-5bd9-4bd4-a4a2-2cfbec4dcc7f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4fa943b8-256a-4730-ab70-ad5c777e474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d85c237-2ae3-4180-a901-7914e32e8a02",
        "cursor": {
          "ref": "c99f42a7-3723-4053-9b48-e6ac9b7d90a0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "599d7f9f-537f-4a82-abc1-3c487b3ebc90"
        },
        "item": {
          "id": "4d85c237-2ae3-4180-a901-7914e32e8a02",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9ddae53e-854b-46bd-8625-365244ed1f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc1ce94-f05f-46bb-a8fb-a225213034ca",
        "cursor": {
          "ref": "f5dfed1b-570b-403b-9bcd-e4c890fd5adf",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "92df33a9-f977-4efc-9e26-c5ed0c833d38"
        },
        "item": {
          "id": "6cc1ce94-f05f-46bb-a8fb-a225213034ca",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3ea3da7e-1e32-42fa-8697-854b871d4460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140ecfe3-cd67-475d-b33e-bc33cba4e8ac",
        "cursor": {
          "ref": "a60f2a1b-fb0f-4061-bc8d-46bdbb49aa9d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7c461cdf-0569-4cad-aaa8-7a9a1c11f127"
        },
        "item": {
          "id": "140ecfe3-cd67-475d-b33e-bc33cba4e8ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d8fff1ac-2221-4c6e-9940-6bbc7b8dc9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dece03-b1ad-41c3-9557-d017f09c05ba",
        "cursor": {
          "ref": "4a4c0b40-fc51-406b-880a-fb57f289839e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9a690ec4-3dd4-4419-b0a3-c52ec8cf690c"
        },
        "item": {
          "id": "f3dece03-b1ad-41c3-9557-d017f09c05ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "615989d7-5113-48af-918f-b8a33e680fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec7588d-a1a1-43ed-a332-75837d682a21",
        "cursor": {
          "ref": "39d517ae-2afe-4042-97db-da4551fc3d08",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6cca0582-12ee-4280-a9fe-9467233fd4a2"
        },
        "item": {
          "id": "dec7588d-a1a1-43ed-a332-75837d682a21",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ec412f78-426b-4223-87e1-e9132dd1ea5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abba85a4-039b-4083-bb4e-c860641fc8ba",
        "cursor": {
          "ref": "bf4be2d6-da98-40c9-aa00-6bcc0fe7eea2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "883d8d38-8bac-4652-9f0b-95509ba22532"
        },
        "item": {
          "id": "abba85a4-039b-4083-bb4e-c860641fc8ba",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "08002095-ee27-444f-8c07-8676d4b846e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ca3b7a-166b-488b-8e93-3fd69edbd23f",
        "cursor": {
          "ref": "d7400dda-1ed2-4aa2-bdf6-8366f1206972",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "36340ac0-47db-4899-b9c5-9ccc8b7ae718"
        },
        "item": {
          "id": "f6ca3b7a-166b-488b-8e93-3fd69edbd23f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e38f5865-081f-460c-a8f1-cca487caf83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d22b012-c17d-4181-ab2b-598f6c272e62",
        "cursor": {
          "ref": "1a6839a5-67d5-45ce-ae98-89d184e27d47",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b3d6e455-87eb-47cc-a4f1-dc3471735f10"
        },
        "item": {
          "id": "1d22b012-c17d-4181-ab2b-598f6c272e62",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6f0f041-3ee7-488e-9ab3-dc585582a907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c08682-facc-436e-b181-6b7e03cc61e5",
        "cursor": {
          "ref": "ff7d2e8d-5702-4086-85a7-8ab6862c83a5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1e627652-1aec-414c-be23-f9c3f136332f"
        },
        "item": {
          "id": "62c08682-facc-436e-b181-6b7e03cc61e5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ae8a870-9d91-4efa-b81b-8cea118bcf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e459b2-7c48-4b08-be3f-0ba808aee5c2",
        "cursor": {
          "ref": "86ff7988-b3ae-4602-9d31-7b3466e8a839",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0e406553-e4c9-4be0-a6ef-ef8ae51d1337"
        },
        "item": {
          "id": "f0e459b2-7c48-4b08-be3f-0ba808aee5c2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f03c52bf-6175-4b31-82c7-87d5ea177112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8a71a-20a9-4837-be0f-ec3fd09603e8",
        "cursor": {
          "ref": "135e0653-3d8c-438c-8dea-b1b41615d31c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "29148d28-0039-4d04-835a-4513ba7d44b0"
        },
        "item": {
          "id": "68a8a71a-20a9-4837-be0f-ec3fd09603e8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d73bf2cd-4e40-4246-9523-6ef7dc069981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6349c2-7b28-4193-8672-e70f426fb742",
        "cursor": {
          "ref": "25310167-aff3-4dfc-8d10-4df60c639764",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "15224381-f996-4abd-b1e5-e9c042440b19"
        },
        "item": {
          "id": "8b6349c2-7b28-4193-8672-e70f426fb742",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4d5a3dfc-c959-455e-a95d-796fd47517bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a61386-46b8-43c2-a9aa-c5ec47584fb5",
        "cursor": {
          "ref": "522c4dc4-1ede-4dac-af4f-d12167c7e952",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5fc9d887-b108-4858-86be-9358ebb7bb9a"
        },
        "item": {
          "id": "c6a61386-46b8-43c2-a9aa-c5ec47584fb5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4eb06337-a6e6-497c-8ec8-af7aebb55192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1369af1f-8814-4ddc-8c4f-4538393a7a73",
        "cursor": {
          "ref": "8d03944a-f64b-4986-ac19-f1ef23281ce1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a79bdfb4-426a-4541-b987-27f465410332"
        },
        "item": {
          "id": "1369af1f-8814-4ddc-8c4f-4538393a7a73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15304b9d-0068-4c7b-9f0c-6652388ba845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c411fdeb-ee63-4ae0-9c25-4511672b492c",
        "cursor": {
          "ref": "f066a879-b401-4dd6-b0f8-d8e2cdac3fb8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1723aefa-26f7-4de8-93cc-65540c3fb720"
        },
        "item": {
          "id": "c411fdeb-ee63-4ae0-9c25-4511672b492c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d4a19a6b-332c-4b8b-a9f6-f480666a4c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c706c5b-ac74-4d18-92f4-e9115c4434a2",
        "cursor": {
          "ref": "83513b11-e62b-42fa-baa1-545dfeefdbef",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6c866115-670b-46c7-918a-b2718f0a7430"
        },
        "item": {
          "id": "1c706c5b-ac74-4d18-92f4-e9115c4434a2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d188927-9cc6-44fb-86b2-439f70c7b379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42b85a-9499-45d8-9ae9-4d88348861c2",
        "cursor": {
          "ref": "3399aa82-27ba-4a6f-8c86-71363467d591",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fc2ffa14-b588-45a5-a4f0-defa02a56781"
        },
        "item": {
          "id": "7c42b85a-9499-45d8-9ae9-4d88348861c2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b0bf847b-7e65-4abf-919d-bd255789189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9ba36a-0c4b-47dd-90a3-0aafad055d85",
        "cursor": {
          "ref": "e56e8252-ddcc-41a4-9e1a-df6db6bba672",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "73612a02-6ab4-40cc-b6f1-57cebbc4adde"
        },
        "item": {
          "id": "ae9ba36a-0c4b-47dd-90a3-0aafad055d85",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ac438601-591f-4baa-b377-1b50eda75ed5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 111,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0001d18b-0e9c-4a85-9493-a60d3a6c6bae",
        "cursor": {
          "ref": "c22488dc-1271-4a27-87d7-601dd78d8620",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d0909a6c-1dd1-43e5-9055-de389e1a386a"
        },
        "item": {
          "id": "0001d18b-0e9c-4a85-9493-a60d3a6c6bae",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df586c6c-28ee-49b4-aacb-af6861cbde21",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbd866c-fc1a-458a-8d77-32acace33875",
        "cursor": {
          "ref": "d54235f5-89ca-4d50-bf62-08cf31480e15",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b45654d8-48b1-4b8f-89b4-83d2ddc7ad09"
        },
        "item": {
          "id": "cfbd866c-fc1a-458a-8d77-32acace33875",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c11dbb6b-c94c-45fa-bf0c-0a4b0e3b5668",
          "status": "OK",
          "code": 200,
          "responseTime": 2820,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f462eaf5-a9b5-43b4-9a12-58a8bfd70c12",
        "cursor": {
          "ref": "18e6cae7-e7d8-4cff-af6e-a08a17e7b8a2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "45d9d1f6-e9db-4cea-b49e-c7a5901c743c"
        },
        "item": {
          "id": "f462eaf5-a9b5-43b4-9a12-58a8bfd70c12",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7103a53d-5260-4797-b36c-41f197b0ebe3",
          "status": "OK",
          "code": 200,
          "responseTime": 2503,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d1423-11c2-483b-af28-b4afff63456e",
        "cursor": {
          "ref": "c575be8b-7253-475a-8e1d-d244ee011340",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "89b1c03f-4d60-4fd7-baa6-ee352d22bfd8"
        },
        "item": {
          "id": "c74d1423-11c2-483b-af28-b4afff63456e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "69cf34d1-da07-480d-8d68-bc5e60054406",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d1423-11c2-483b-af28-b4afff63456e",
        "cursor": {
          "ref": "c575be8b-7253-475a-8e1d-d244ee011340",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "89b1c03f-4d60-4fd7-baa6-ee352d22bfd8"
        },
        "item": {
          "id": "c74d1423-11c2-483b-af28-b4afff63456e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "69cf34d1-da07-480d-8d68-bc5e60054406",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6937c9-aed7-4d30-9bd6-e021988afe5f",
        "cursor": {
          "ref": "fc2f6abb-1be8-4efb-ab83-80cb16699f4f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bdda9579-4291-4b83-9b18-bbcbc1aa8d2b"
        },
        "item": {
          "id": "6a6937c9-aed7-4d30-9bd6-e021988afe5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a557e63a-d103-4350-8111-b11262f3ff6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38da384d-0ccb-4052-90ac-2eb616f91055",
        "cursor": {
          "ref": "b92decff-ad55-4347-96dd-cc026aeb674c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fda307ca-4f60-4078-bf06-abda1e6c64a9"
        },
        "item": {
          "id": "38da384d-0ccb-4052-90ac-2eb616f91055",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2247a3c5-4e4c-4471-bbdc-230a3e71b3ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}