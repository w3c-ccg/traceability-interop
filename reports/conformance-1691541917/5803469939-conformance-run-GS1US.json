{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "de6f47a5-94bc-4516-a057-49125249d169",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dcfbbd99-9095-4a48-9e1a-62605ea13c31",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abcaa110-95ef-4146-a4d5-9b3b56839cee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a86ca59b-6536-43a2-94c9-750784e27f68"
                }
              }
            ]
          },
          {
            "id": "871f04b6-7b3c-4389-a023-f995b11d6c8f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50d6887d-05fb-425b-ab83-74326be46e02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e197b26-d86d-4587-9446-cf26d6d55fa2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b08fed5-7a5c-4b50-a190-13d3afc87a89",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9f975c56-5ad9-4442-9e2c-efbb2cea7c7b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed5fc56e-d32e-4c0d-ab68-a624e79676a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8141df4-328e-46ee-98e8-f90e75616db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6194d6e-4ce9-4296-becc-a158a4740794"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f39bc2b-cad8-43c2-a02b-241790bf6629",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f452b3d-152f-4985-a669-d62f83306a05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0f8dd63-1650-43b7-91e1-14b0671aa096",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0633ff09-ff4c-4db8-bbc8-6ea89d3daf58"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbca40f5-c75b-4542-8b4f-49c387cff5c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f573057f-34cb-46e2-b7f4-a7e85a1f06d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdb5de95-b2fc-4c3b-afac-dffb776e1d57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f839528-5dec-467d-ac25-35a0693c554a"
            }
          }
        ]
      },
      {
        "id": "edb2d243-c9eb-4a3a-961a-d00a239c6b6b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0bc96d7e-f109-4906-9512-52dead66a112",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d90a3a3-a224-4b39-8239-6d9cbc9fa1d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2401b410-ab3f-4ad5-b57b-329466aaec22",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a2a5b8-bff7-48b9-81ad-f5d6ad852d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59fc2061-a14d-4f50-b3b5-f3676f6475cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fbeec7-9920-42ba-8a25-39c47469d213",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a2439d-c7a8-4f36-be45-f40fa11e44b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "931cde13-6a0a-4fca-a1c5-53a0386225d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d321aa09-e3d0-44a9-98e1-fa1ac4ec38ea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dd8376-ec7b-4887-8a41-1ca216ccb334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b514e0d-d08a-499f-9a82-4ecd53525ac9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d048584c-c004-41a3-b597-16c4c326d88c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22cb8790-6f7a-4911-9c85-7cdbea7103fa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8200041a-9db0-4a54-86a3-1ec7746961e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1fc4672-30af-4bc4-9628-1f94d7686957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b2d030-1c09-4938-8b7f-ec922ab79503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e2f66-b608-4a05-b08e-94a8c8481ad3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f408d07a-66da-40db-b461-d8938679dc7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ee6b8e5-1cfe-4026-99ca-549f5c546d2f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba92846-bcf5-47d8-8856-3c490d98a8db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7df3af94-917f-44ec-8e91-415e2b132fbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5599c2b-4405-4b79-a36c-c288c3ac3e43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1360573b-ad3f-47b9-a089-d716e940b182"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "927e6b2f-aee1-4b89-b8db-400b02941e6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c52a58c1-727d-4b09-9776-5e996948015b"
            }
          }
        ]
      },
      {
        "id": "7cea777e-75ad-4b56-801c-07c1f84ba428",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2c5658b9-6cef-48e1-94c6-e77a16efdfd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bc35638-7ed7-447a-b6aa-7e7ad860ef4e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "62bb0889-0e87-488e-8ef0-5b58bb218d53",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37377de8-99b1-40d1-88a4-75e56d0e6eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1011fcd7-2058-46dd-b491-f2318e16c039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4820f2ec-5543-4865-8362-3bd44062f927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41440f74-788f-40fb-a466-1ff9e1f3723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09acda8-6a14-4efe-b73e-9849cc033405",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51966e31-6b1c-4d94-83c3-2f06b59608d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b37299b-013c-4166-adc9-b46fab3766fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c761c95-3dad-45f2-adaf-571bd27874e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887dd66b-bfc6-435c-b52c-a8e456327c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1bbf6a-7910-4541-95ad-5c474998af18",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a92a1d-07fa-49b4-ab4f-5929611ef97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d1257a-9a71-4fd6-8eb7-ead1c0abd4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d9675-26bc-40e9-853b-e2e7837c5698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de841e4f-f31f-4cf1-97aa-f40a61dc1e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c76bcd-8fa4-409a-8000-568ff7aee601",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f421dc-03bd-44fb-80ef-5003962484d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f5db00-0d44-423f-8460-a611728ac8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae18054-2f1f-477a-bda6-5588591df88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e67daa0-f039-49c1-b80d-0bba05f19f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e16e05-2c09-486f-87b7-799a975d791e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5373a5ac-9987-402c-bf3e-d2e09a3f5cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de809418-69f7-445d-b27f-2012cbee0646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae18a453-7809-41be-bc25-be8312e16757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30235ed4-2be4-4586-bf59-7c86acffa1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff6686-1511-4bec-afbd-c0464dceb3ba",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6454c48-1849-4532-8c58-3870c4c491eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbce3b6d-c98c-48ab-a9d1-97f0b927adf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0785b48-c17c-4477-8f6b-80e88f9a1979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8814f09b-c679-4c25-bdce-1342d98f5822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec9b7af-129f-4569-be51-180194de7ae2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5221801-30c6-475d-97aa-fbad17625010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fd8582-24dd-43b4-b80f-4dc59d92d78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c0c3b9-d412-484e-9b0f-2b3788cb75d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a639f8a-94e1-4c8a-a7db-92db5516ffa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729d9cea-1ccd-4689-958c-9d5812925bbc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cf46f4-9686-442f-92b3-bdcb5207457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65f4295-c167-4afa-a6c9-26368fe5f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e331a28f-01c2-4450-8c55-87bed9cc0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c22893d6-06bb-41d9-a357-b4fd4799e695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f19c974-5409-4686-832b-fab01fb7a0cf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d37bb6-a0d4-443f-abd1-b655ade6ce7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb1fd01-e1ae-4962-a4ea-ea83466a4d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28f449f-28ba-4e39-95bc-01a6f386688e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd43278d-aaa8-47b0-9e25-10fdaa4eac44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57487a20-c357-4016-ab4a-414cc3f34818",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a81cbb-6a02-4e1c-86d6-3fd762718cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7479088-e05a-4792-99b4-7a82e02a6a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370fd1a7-292a-4d39-ac94-412da0673a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423f536b-7dc7-4112-a140-32f80532c94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bfbd9f-7e67-48c6-b817-adb49025ea93",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aedad3-9766-47d8-8c32-fbdcb3aa3738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7640eacf-1482-4c5c-bb21-4bb165951710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a442e8-07e9-4b8b-8345-f29c4e09dd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56bd021d-8a8c-4d2c-96ee-03582f65a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7908c0a5-a162-43af-954c-420759b8f794",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea97f906-c9f6-4520-9737-20ecfe00d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0125aa-c86b-4ee4-80f7-321eb46cf5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c018b6e2-c15d-435f-bb6c-f94341842134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f2ba696-90ef-4373-902d-9a9a3042253f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d236e-a02b-4b69-8ba1-2d8a8ed746b8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196facf9-e6b6-442f-abe8-d9969a691905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f313af57-1ab7-4843-97d7-8d702e8b8a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c23626-7755-47cf-8416-74c67e5a1074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e7a478-bdcc-4218-9507-a7c5adbbb52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f1e8d3-23d1-473f-ae67-6a575a142ab6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae783d2a-5ef4-41e2-b9aa-c35e35eafb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1931f47-2960-4d5b-929e-d1cafd1b679c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3b3532-d9a5-46ab-a45d-654d3af3729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6690ed96-b69c-4e3b-b258-8ee796543381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75367219-1464-458a-9e0c-bb9b5ea22b5c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e80bbc5-14c8-441b-8c95-b8a2ac8e89ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d93055-f62d-4439-911a-b0a80e56eae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaaf1a1-ecf8-4436-a68b-808e1dcd3ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eb52b03-196a-4766-a8a3-42fcf1d6abca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae51e82-5022-406d-b678-b9b4e938a959",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8710325e-dc06-4906-94da-1186e8638afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98afb5b9-38d3-437a-9b29-45b8a4890869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3319937-ae01-4fa1-b5de-baa11437cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "697d859b-014d-40ed-a49d-5239b0d817b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20a9eab-cea8-4bca-8fd6-1aec52c1587f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55322a9-cd8f-4e9a-9592-e2f723d9e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74faa933-e21d-4830-b48d-ed584ac0c62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e28c73-a2a0-47ec-a760-e7732c0d2e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "634789ae-4a49-4210-9e56-8e3d3e626cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed86f7-8515-4240-b77a-7c6725504b27",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7523c5e0-8cca-4d08-85ce-51376b16a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cb4d7e-ff0b-43f9-b133-2632d34df6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d1e32-7635-4b81-a54c-3bcbc55c71e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "768147f7-08fb-482a-9d6b-9c8e92573731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1964ee-5eec-46ac-a38a-a85014594977",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2695f67-d7b4-463e-864d-e8462b47d999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f581a6f-f910-4015-9adc-9eba058ad326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bcb333-5607-4b2f-903d-c7a13b823636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9602394b-12c9-467c-8269-8118a93679f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3908961d-a724-4ee3-9388-9655210a91c4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eedad46-79f5-4ba6-a3a0-0a647cf4f4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f66759-66c1-45ab-83d2-905fb3c59d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d377f3d-e8cc-42dd-8bea-93ff791cb3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc02ad8d-c7c3-4db6-8bbc-ae8c28d61a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a25b3e-4e2d-4583-b6c1-cdfe2523e30c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889bc47e-a30d-4825-8fed-be8fd46beb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c746c00-aa3c-4907-ab6c-b24f595fc3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c2052b-b3b1-4317-9f9d-5b89ee63e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a3e377-7bea-4764-931e-e66d5613ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a09e5ab-7430-4740-b3ba-314e2adb68a1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba64fcc-d14a-4327-952c-5f8cc8b3f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813a1a01-8cb9-4b46-a69d-f2c9d9b95e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0350bc-894e-4efa-bd58-59d2c8062dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "665382c6-2701-49b5-8a14-6c2ab8014808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14643bce-7ee9-43fb-8678-ada4f3a4e45c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4163580e-1ec9-4f1f-bc1b-3e4bbceac71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca50952f-0fb4-4879-960c-3925f2cccdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b5d18-5e75-479d-8e3b-794b78e719d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c692c3-fe2d-4c7f-b869-a956df29268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973aaafd-8989-465d-b108-64921bb9e59e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8106743c-016a-4596-99f4-530b71279630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293d6617-faab-4b77-abc1-c4b0db388dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e878031c-3188-410c-8b56-c9c7644acbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc40fe2-6a44-4894-8277-aafda7b517a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2e4644-c9c5-4d40-9bb2-aec191642d2f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa8293d-867c-4363-ab4a-8ac21eca1d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832027f0-46ee-4f6a-8c9c-d18015c1bed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a7188e-76ff-4e7f-b05f-f0f2bfb43cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57736abd-4511-47fb-9e52-30f0a560cd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533ce6cc-0a35-4caa-b0b5-17f82842e20e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcec3597-056c-4d87-9db4-d10e80e4474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d753b26-89e7-4ae5-aa6c-d31ed223bce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9403c73-55ac-4cd7-95d0-36c7026ad373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a6392a-2e7c-40f7-8d1a-6ce0e2fc4eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef19bec8-6f86-4072-a2bb-06f882dfc144",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaf5be9-d75b-4fff-b221-bc5ed042ebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9e605f-da6d-4333-b4dc-fd938e966dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89244e0-ed37-4104-90ef-1887f64a4d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e645e0-882c-454d-a98a-8fa2b7f8157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5672e7fb-d12e-4b75-ac90-b01318a55225",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1c99cf-3706-4b25-8774-d266bb9427ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d366728-7ef7-4393-931e-cd2434d5c7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a59fee-c1aa-4d32-a484-076e2373933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02f788-a792-4e9e-9c90-a61a668df329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22766f7-0f07-47d4-aafa-7f18172ab4c3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e57f6a-2074-4664-b671-1bb24d6026ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8166ae81-c08f-4fa6-af15-2e162159f4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c59cc40-824c-441c-a985-36a026232278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e1f9de-44e7-46c5-9ad6-142e9d747f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecaf6cd-53d0-4055-b396-746190d3b2d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e324c86-dbdd-4f13-a3b1-ad9455873884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c4b255-ab75-4a7c-9dc6-e711ffecfbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3032e6d-584f-44ec-94e2-4dd02b3281cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbd5804-5126-4d18-a038-6c17e49136a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371539b0-1c79-4c15-a6cb-7de745d2664f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eae95e-b824-4e9b-8416-cf804dab9612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249c72b-5855-468e-8b2d-6e69506b740d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa9c577-995a-4371-bf88-3691c5bca64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb0499a-7087-4533-9a8c-d99535a1b3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01655bb-6bc9-4d76-81e8-545084c8762f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdd8a96-b998-4e80-8e88-9d271f94fcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab28abe5-eeeb-4be9-b101-3d14c652b133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1be8bb5-f86a-4f09-a010-f42f0e19b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0845c257-450b-4e28-a663-0df122bf6122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0e2ed-933b-476d-8590-b7b4512d3142",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8766d55-6a34-4c32-ab00-7823fced0cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb796e90-2f96-4ae5-94a7-e56befeaa22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995d5b27-d544-480f-8d4d-36de67ac683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac935693-8bcd-4b7f-accd-6c7e61a4fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6040c17-3ff0-4c19-ba3f-d79b83bd2721",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b411c1e2-43fb-489b-aea2-8549a0084abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff3c786-4885-4567-9119-1f7a0930ed92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e22f2-a208-46ac-bc5a-2e4b235201f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "959dbc90-9077-4e77-9d47-90ffc4e4d778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecf7f1f-832c-4909-a78a-39d14fb6a6f4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d355d-f0f7-464b-9fe1-f2e71159ebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3141ca-77b3-478a-872a-7ea9c402912b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843b7f6a-797b-4a12-b44b-cc261ef89896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4f4d6d-8f65-4145-82f8-3b49f5500dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7395db00-7437-470d-ac87-79f89c0b5258",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf15b8-6cd5-4e94-8c73-fd76d36f116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be3efe46-0ad7-4acf-97fc-1b000130f3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6036b044-3484-49f0-8ef9-ee4d6680076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b9cef-0376-4c09-bcac-b5f09320cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7c2be2-df22-4413-949a-efd17effc0ce",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9285ca6-7c67-4998-b192-891591a3084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b133dde4-2ee5-4b27-8b05-443c4eea6f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b0f590-0291-4f2e-bb7b-5cafad97df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ff6283-9be2-4f6d-aab5-a8fc296897c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5f87e9-bce7-4542-a48e-b518401b6909",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30509844-9b8e-4149-81c8-ea8a69d06c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a3acb1-9cb8-4382-94ba-23fd4eb2e41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec17ddc-5376-4f8e-8cda-f6d6df781c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db505f54-fdef-49d3-a7d9-b009dfe091b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2528ff-d626-4439-a67c-9545fd9ef5ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86051a14-446c-4980-a49d-da2921913e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a24ac30-8674-48a6-bb79-298e4ca7b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e51839-1b72-48cc-bd19-c4e9ca6af166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d6147c-4445-4a1f-a792-40df85d29940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444bfdbc-102c-474f-830d-794dc572266e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153cebbc-90b1-4bc6-981c-dc2915a79c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae61382-3b62-47a0-88c9-2807b37d1d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c7c579-4c97-41a1-9971-1d4ddab2bd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "232f062c-1d58-4ed2-ac2c-e9cb8ee6f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edb4b0a-dbda-43a9-80fa-1f07e798266e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8b816e-d437-4ec8-8815-79933a42d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbadbd6a-42f1-4959-a955-e8858d3d0afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710b6cb-63ee-4378-8622-9d5b39dae6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abfd7f6-4a8e-4160-b9f2-6096a5c2a366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7546559-fa5c-48ff-93de-b5b810b7ce21",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f168fc-559a-46da-ae42-e2782f69e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1e579b-efe6-4cc6-9de0-40434f846ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c17e1d-cc66-434c-b4e0-56ac2ad5c4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b472bd-8ce3-4f38-bb4a-ca3f16a21b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69db67f0-219c-4d5d-9c22-d83f0a0df3ad",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e7497d-ed40-4fac-9f87-cfbca4c77ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b94877-bebc-4df0-9102-c684694055a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6133520-c2d1-49b1-a3e3-1c06680c2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0f8c49-806f-47c7-bbff-b7c018cd4085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90e4bae-38bc-4b77-b694-7203047f61e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f5b6b-e8d2-4124-b187-8037d5ded41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc893a89-9309-45d3-9fb0-72d1a6269ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed14464-9728-4d6e-b358-02710199877b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec48ecb-5336-4a87-bc7b-3ba24a2a2c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ec8f13-fae5-4ec2-a499-5ec86b1be2cc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710920da-ff6b-4cd4-98f7-bee57018019f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf373c5e-7a91-464e-bf04-781176b0ede1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ddec81-88da-46ec-9336-b6355b9a1635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1855d0-e078-4578-868c-2729a38c3e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e94411-3b28-49be-966e-45e1618009da",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35dc2fb-5fa9-4e8c-b631-6f980b5bc5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f507a995-8d5e-4b3c-9f7a-860d4590fcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c303488-457a-44a9-8ffb-fe2c0d3e29cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6560372e-0766-4957-b398-aebcc807c03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7db02e-f170-4927-bb77-1ca34d835b4a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c1f0c8-cf32-4dfd-875f-1af78541c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17da7cf9-fccd-41bd-a7c4-7bdb76451e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056b003a-39e6-4e8d-b45c-55f2266196d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56da6a1a-9b98-4dc0-8bd0-8767a252a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5296278-8f20-443c-ac37-9e6fe042aa84",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0f74f9-d2f5-4dab-8a19-98300ea9bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcae880-d2bd-4952-8b95-68ed495f2c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea9c704-c2fc-4d9b-a688-0fcc18cb6de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13d9ae3-11f2-43a7-9667-78b9768d17e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6aa44d-380a-41de-905d-38bbd6464b84",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3103c53d-fe22-432c-82c6-6cb09bfe75cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1111c204-ddee-45d8-a8d3-d32a674747de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e266e0-4d0b-4575-9072-12107d71c506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e105eb66-8bc3-401b-b26a-b869e24dd8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d786bb76-f6ed-4bed-bf83-7416562b3388",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d44e9d-1f42-426b-a84f-38b8865d3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383d2956-177e-4ec7-b13f-cef8d5d9ad94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7732115e-51d0-46e5-a7b8-5f17a3223803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8307792b-24d0-40c9-b76b-f0be54966d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727935e-7ea9-4e86-b248-d5abab3cefc3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4641ac-bf83-4038-b81d-89cae895493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d584b550-5571-4f8d-8393-715d2f4945c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1febf3d-69c8-4927-a04e-60e5164ae5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd6480b-34e6-4048-a0c7-c4f40edd3096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a63ee96-33e6-476c-bb9d-4c59fe3a3262",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578b0a2-423f-40d5-93c9-1b88246429f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510cead3-da23-41b8-a5fb-18b4dfc9834e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a3d394-7846-405d-9628-e48095df4e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "008d13f8-1220-41c1-b544-abcf1f8d0f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0163a3d6-6944-423f-9f4d-1db117a44dd2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614aa92e-cdfe-4585-a020-9b593e709f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c1b78f-3254-445a-afca-67fb26dab683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824abf52-c3f4-4248-9f60-5603d617247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbf8e27-0383-4ab8-a35f-54b8ba56771a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74088df3-c97f-4395-aee6-c47d5aea8b2e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6942e367-1971-415e-8613-7f8ca5681ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29392aa-bd40-4798-9089-444f888ad4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688cce8a-0f5e-47b9-a402-68abe52e73ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71bb1bf5-3d2e-4f45-81d3-511c2ef97a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e2dc45-274e-41e4-a95f-a9c24f908e16",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0dd3e0-177c-479b-b9d0-ba6badfa313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bafd44b-eed3-42f5-8df1-b69a7f3abc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ada123-8531-48ce-85b2-7d136022db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "512ead75-74c3-420a-9686-8579959bcc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f5da2-bfae-4a62-aa3b-5e4a9d7f9e61",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841c175e-e711-4c87-8c8b-e1e94035bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de569dc-4d4c-4e34-8a59-c4cc11bd7234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ee108-4da7-4325-a3f6-ec9e7fc060e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0a61bc5c-446b-44d2-891a-b1a383bdd24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffff26a-6409-47c9-9120-4718a889fa26",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8146f1-0cde-40e8-94e7-c2a5ba26b108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158656b6-2b03-4bfe-a785-c6eb747a638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2b1af7-2516-4d6a-acf7-d60a446864ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ae0d4-8199-46bc-bb43-39ebdddea8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0986bf0-b42c-4929-ba63-6374208224ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6005422-9012-4e6f-8284-bb962c259d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72924908-7b83-4a69-98dd-0e79f94c1b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea3634-a281-4bf4-abc2-87f694784fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71112478-8639-414c-84af-928806e23249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ad65d7-f5a8-4dbf-99f1-1d65dcb16c97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9183a71c-a1e2-4a88-966d-3c385d3276d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a193a5-bbff-4211-b48b-f2365bb8ea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d778ef-6310-43ba-87c5-3260b80e28c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "862538ea-6ab0-4092-9624-d3ba335f8516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64833e74-b746-46d8-b434-65611607edd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae98068a-2b50-4faf-8fcf-a452c301ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf0b61c-8b75-4781-9dd5-1e273d298534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc765fd-a022-4b8e-8d1a-aba9b56e07c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5831008a-8cfa-4db2-8c69-26bf91663a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534638c-eb74-47b1-9916-79154e70cf3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f018da-765b-420a-8550-fc2c8a2510f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03da2aa-9ba7-4681-85e1-e10039c2f50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9488a9bb-f0ef-4a8b-8480-872c46915870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a2c76b-4f7e-4476-9606-e8316b594ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd820df3-b90c-4799-9d18-0c7c895dac38",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a549e84f-a0b7-4e83-8ee9-31c757df7271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcc629c-179e-46c1-b793-201054e3c348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784248d5-609c-4f3e-bcbd-5ae991fa4737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbb13cc-7c74-4ef5-9c21-dba269150d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f144b4-8d4c-4593-80fb-03b2b65b403b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c024ab6-0991-487a-b194-c1e5008f2ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec94177f-7f8d-4dac-9518-c8b74c1a67fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a48d9-6cbd-473c-8384-03e7124757b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d965f8e-52fa-4f39-876c-27003e542034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd70e2-24e4-4cd2-90c0-77864644ad6f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc92ccc-b503-4109-a63e-9f99cb53bf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dac797-105c-42c4-9bde-f78ce3bb2e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298714b1-5663-414f-9e49-a4a31c422cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17bbb529-dc17-4d25-9159-fdd9d89ba52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7139dd83-349b-443a-bac3-ec1c91207e53",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc07fa49-913d-4829-ad0b-0c8bc886fd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbf4b3e-8d1c-400d-8f0b-62a744787d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a164014-7693-4592-8795-8e300b2ecae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f464c4d6-9a58-4959-adae-709cafbcf38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bba5c20-26dd-4a7e-bbde-7fbfd8b9abed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550247c0-f0eb-4a96-969c-bd2ffef0c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbf4b79-a12c-41c7-8420-5542b3e9d053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c7c42f-1e63-4937-b0b4-7373bef70f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4c4aeb-a8ef-4ece-bdfe-b483b230b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb26b7f5-50ce-41dd-a79c-692458c42d09",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6d9a8b-6e29-431b-8119-0843ba4ec25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b18440-ab76-49e3-a543-ee6bfe109177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2480c66a-f41d-4ed7-82bc-3722ab14f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1629db83-6076-4eeb-b4b1-5ff81d06001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d93894-1737-4845-98ad-da6f23de5b95",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b83512-9d44-4ab4-a108-51bb131efb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca4a15c-2f15-43ea-b2b9-33512063a0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e567b47e-e5ba-494e-9079-a273121cecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f370a206-4dd6-4d0f-b410-068509dd01f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d734d592-c87f-452a-9845-423e0a248716",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9648672-5bdc-4b2f-ad64-65d9ed734ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbbf5b8-7296-45b3-8216-6b66ca86c8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d52864-dda2-408d-8640-7cb73506a959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f162b938-56c1-44c3-ba80-dd894a5a1159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2219af3-8644-42d4-9054-314056ff4d01",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a34e0ac-9770-42e1-a7c9-1f7c83f60cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347ef0a-4ce1-4ded-a715-e547327421e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a34a0f8-fd74-431e-a7b7-0e8061d76837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b892d5-8f88-4caf-9788-e47b3455b966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dae894-e8f5-4990-a900-fc34cb4ee586",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357171b3-32e4-42c2-9d98-eafb568f52ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a73ba93-6fa3-48db-9de8-ff06d131ed8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8a3489-269c-4eb9-8000-90a2259d76f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48967acd-3938-41a1-83f4-0c31853b9a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414ab0d-6d5d-4292-a9e5-14f52fd9691b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c89f52-9880-4d9e-b2da-038aed936bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361e851f-32af-4859-97bf-b06c1aa98caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2922fe4-1dee-4081-9204-a461985f4b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "144026f6-7bcf-47b2-9281-6759898ee096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd31ad68-4fc6-412c-959d-0b08796efb52",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429ef57c-1762-4918-b943-8e7cbd2fd6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec77be2-0f2f-4138-b236-8c078044112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042356cf-8059-46a9-b40c-87bd20ecb9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec468be-bef5-44f6-a0ee-f8b338ddb603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef8ce18-c99d-412d-a433-0d8997c9756c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f68d8e6-7082-4b3f-a648-0f670293fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae40af-9619-4218-9300-88e7c36c81c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2435d3f-4023-494b-bcde-e2f235062ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad25932a-1204-44d3-9fd3-a9b77a2914fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6acdd2-df40-4dc1-aa61-3686ee7565d1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb98029-a567-439e-bb0a-d9431fd24525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193bc238-5ba4-4aac-99e6-2e740d9b352b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a5914a-dc2c-4237-b13c-4acf652a7c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a1b4a8-154b-42fa-9f83-0994cab30f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc61d590-18f8-42c1-a045-9f93bc1b2d54",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18efd2df-5b98-43b9-a32c-c3fb32682105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4811f94-6985-4db4-aac9-4802b6438707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55a36c9-412d-420c-b8a5-0eb05b5ecfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f7bf73-b3b9-4bb6-9df9-fd5991cbd1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdad7be-9461-4b76-9c81-7ff035721f2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ab1ca-8de8-41a6-aae6-9af15d703037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b740070e-e8bc-46d2-b398-f3ed697dcf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148a4eed-33bc-4e70-bd8a-e622232f9e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce75f728-b1b5-437d-beef-7a905565f191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a8d001-0093-4d84-b116-cdfd3c7bbed8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48044963-9deb-4fbf-82e0-ff7a0d99c8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f026689c-98c6-4c3f-b60d-68e3f35a5c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7423a4-c95d-4f09-b0e1-0f0cf0f224dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0619d4e6-b12e-499a-ace3-68975165a151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d44a0-909f-4175-9edc-9a13fbf09fd4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6497ba59-7038-43a9-9c98-73141170791d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ec7903-f195-4f0e-ba39-6df873b3c78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb0c58b-8487-416b-b763-b56479a9ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f63221-91f9-4a0d-9596-5ab6050a9e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d58025-888d-44a1-892d-37bb227edaa3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b33b6b-53ba-4ad0-9344-17b5ab1c57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663df5a9-9676-4f73-a766-dfd4bbc407be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6dfa92-f039-409c-91b3-b54ead6b7b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e21d1854-ead8-4679-b5c1-e31f0b78684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be485b8c-cbc3-46e2-963a-8fce2d46a635",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc11e5e6-2140-4b34-abb9-50d16418dd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e988e24b-8b57-42fd-b928-d8f79d9bf025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dedff4-b3f6-4941-b2ad-27890a7d565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c4278b-fc61-45d9-82b5-e80edfaf754f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332cf3fc-f780-43ff-a241-ec80419a0412",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0626070-9f24-4a4d-a0a1-95aedf7ccc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6071918-7e02-41d6-8334-f9f3cd4f5bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7f3e2c-5960-4155-8c41-d7a16d33df6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "995439b8-e352-407b-bd9b-a17d4a17d248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d5a7f8-4ad4-40df-b5bc-3172626f25bf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c78997-e989-4fb6-a869-ae7420053467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df93a56-f1fa-416c-984a-010c87166984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91db412-ff88-45c2-96d1-59b3ae273c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa636bfa-6dbd-4854-9434-47eb109dfbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05e5a70-0cef-48a1-8a04-58b34bb6ffd2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1550cb89-6a12-4a41-a243-1bda61e44c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dce068-db0e-4bf5-bd6e-2e4557f882b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4209cf-c8f2-4c3c-b746-08b175b59368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b3eb3a-1110-4f91-9f9f-f2ff81f8898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58718ad2-653a-4b10-9f8e-7a1678e5de28",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f95126b-1dda-46f1-b9a1-80ce5d5f202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfa8cab-bfc7-4dc3-8102-d00a780ae442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e49ec-efd7-4038-81aa-081159c161df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae2d827-f217-4675-9d33-427e5e4b7c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac69aef-62a6-4645-a382-364d23710e10",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b76192-90aa-41ce-bc4f-50ac01005a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bd7fc7-5bc1-4c64-8ac6-7ace9eb10c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cbeb7a-70ee-4f13-88d5-1a99b1d32c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf02e44-d32f-44f7-a308-b99c66e9481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9610d3aa-16ec-45e1-91ab-c566c0d25118",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349d6448-2208-4849-88a6-758701464160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf74e95-4a9b-4f46-b231-8832255487a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe3cbf2-7a0c-40c5-a587-893e3e0ec206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35cbd58a-b30a-495b-8dd2-5ffe916d0439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8fe65f-142c-42b5-b447-64696a14a1f6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e33e11e-93f9-4d9b-a555-9a0fd8c7e41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01f6521-6ac0-4115-9d8c-2e681a9a863e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08931ea9-2d28-4ba2-b6e0-468062b1234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b19b6bba-4c26-49e8-8d8d-54cab15ac479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c781764f-607b-41f3-b25c-7f4254871e98",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769fe394-4341-410f-8dec-717604710839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a9f982-0ee4-4313-9d86-bdfc124a893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10664171-b439-41c3-b520-b8a13cc69169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6494be01-cc3a-40d6-bde5-6be8cc673ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6c2cac-cf6f-4c10-a1eb-8cbed2a52dca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2db196c-7724-4a61-b821-0051de7c6231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedc6aad-ce43-4755-a816-32666cad847e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95e2a2-afb7-4e08-8acf-3628050cfb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e032c2-8036-472c-9ecd-92309426b44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda2cfe0-2b5c-4013-b118-f80f07f123be",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7ad485-a5e3-4979-92a3-16e062a24054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7a1803-7ee5-4f02-b4b7-fd5020b7fcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc57ce0b-002c-4502-91df-840bafe6ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc6545e-f7a5-4214-9683-34e15ad8b2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dec9d31-a63f-4de7-a7a4-2e73daeceb29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc885e0d-c60e-4e8e-a47a-487b2fdc34ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d085b6e-a20b-4e87-82bd-55b4ecf63717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bba9cd5-5baa-426b-84f4-ce7f2bb3d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4fcda3-9a25-4495-a7da-9a9d5547e4fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2614266e-a304-4392-8a13-5c17f1d7e424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04499b3f-59f6-4028-bfe8-cebeb06fdc2a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae98c64-9b01-49c0-b575-3e8f714da387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fcf62b2-3726-4e3e-b7f4-078e2bc2912a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019b7d25-efc4-4289-9c04-96876ea752e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10ccb329-7882-41f6-9def-278b52d94bd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11cc0f5-b7c2-47a4-9338-37fc2fa97955",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6af0889-c137-49f3-bdb6-eca2c7467afd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba28b147-b356-4b64-9389-c9b270fe1f06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c498c15b-4bee-4e25-9855-332fad4a0cdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07bb1371-703c-4912-8bed-52ef0dfc813b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df67cf39-e6b1-4e56-b01c-4c821a72b1f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fc2604e-c529-478c-957a-d90e8b175d9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba1e8ca5-d18b-4713-aa8c-08450e55e03e"
                }
              }
            ]
          },
          {
            "id": "d5a436ad-000f-4d84-9a71-40f96feb3ce2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29763768-fbec-4cc5-8e17-4d265e1a83cb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de1f7b37-06d6-4ec1-9b9c-4b3e227d3621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e50e2c0-b823-4e3a-97e7-592a6ac47841"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8b9ada5-ea9a-460d-90f1-bc56b9cfc336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "beaeff64-a1a6-496d-952e-1cd2b638f3cf"
                    }
                  }
                ]
              },
              {
                "id": "8075d074-3145-4f43-b6f3-c1cfb0e032ca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "855aebf6-0372-4ddb-b587-f5f66455c38a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9705b14d-3292-4e52-8742-b1b49ab84f90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bb360f2-6bb4-4b42-a874-4b8441d1e890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75726f5f-6a89-4149-b3fd-0a7eae974ac0"
                    }
                  }
                ]
              },
              {
                "id": "e7b00761-c9d5-4206-996d-493917a9c88d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30454839-74c7-4311-a09c-f7b6b3ec697d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1b9be50-84a5-43dd-9fc7-94f3fdc3d0e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f25ed42-f625-4900-be7e-f1e9d4836a83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e17d1340-8e90-4dd5-8aae-64b392f01510"
                    }
                  }
                ]
              },
              {
                "id": "1282fa9b-ac30-4cc8-804c-570327a29796",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6930150a-d542-4d26-b9b9-e4b08a795722",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3f6cba0-fa38-4642-80c8-149d33103d02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a78bba1d-197a-46f5-bffe-58178cb5e737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9d3e4f55-8734-4e05-ba28-701488a61d11"
                    }
                  }
                ]
              },
              {
                "id": "c0858e8e-c51c-4777-805c-da31148766fd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88b78120-016a-487f-9a96-371cf9fcf624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8919215b-c4ca-479b-b8c2-e62b69a8090e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88308c46-6d18-4949-a32b-97e6338fad78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "952c6974-84b1-4f7a-8698-190638d431c4"
                    }
                  }
                ]
              },
              {
                "id": "3159c405-d4e5-44ec-b345-1d2f4d9ea957",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99781711-e27d-4399-8b01-affdd7553e0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b971f3c-0609-4abb-90f3-3645a77831aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "553aa790-a3f3-4a2d-b2e1-7e0739a6a956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44febab5-6536-4f76-ba3e-06132010f87c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea5c8438-be25-47bc-8cfd-20a056e0855e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1b90a4a-5608-4b57-87c0-cac60a99d500"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f45beedb-6f92-4f84-be78-47f19de3f614",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09ddcb9d-eb8e-4a69-88f9-0d562f544cb6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7785850-b773-40cf-93fe-92cdf3db6e22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8aac03aa-6169-4b30-aeb8-7febb73c6548"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87ddcd82-9da8-406b-928c-755f7885b19e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e788521-30b9-45c6-9738-f1ad86834cbe"
            }
          }
        ]
      },
      {
        "id": "74d6de97-5591-43db-a5be-db60e3e479c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e616079b-6cde-44db-87a6-0174dff16994",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52e7ba64-428b-4e4f-9ac8-ea29bf233f30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e157b64-a101-42b7-a6a0-4a3255446e51",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948d1c79-112e-4600-bf2f-a1fdb628935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30d16a2-f198-4567-a9dc-4568a133b5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cbdba8-f786-4df1-acb3-c57bfb3fe156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e005e1a2-5aa3-43d9-90d9-614ec7912e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb2b523-5f16-45cd-a6b0-ef3502578b9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a689ad1f-acd0-4108-819e-ade29931e4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0fd38f-4072-47cc-abb5-b27206007a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6ee8ca-56fe-46bc-aa9a-eea079a4f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75fe554-9044-46d7-a669-3d9d10868af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d6448a-8b2a-40b3-83c8-a3e93bcf9ef3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45221966-ae3a-408d-8834-d407a0a16bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bff8b8-88ff-4fc2-ac10-61763cac4e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddc07b6-75ca-41f2-879b-9685344d39eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f047328-e2e3-4a09-bef7-62552316fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf7061f-af0a-490b-bd23-133e82bbe475",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a597f-12ac-446b-899e-32701cda6be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a916591-37a9-4a3e-a911-5024e385e8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17aec34-9ba1-4dc3-9933-94ede5c6d1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6296c2c8-f93b-40c2-9075-348d31577dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7fe081-9419-4b5c-b644-859f44aac356",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053769f7-0a5c-4a99-a431-df4276210bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e827734-c982-4ed9-afdb-397a86059b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a91380-463a-4da0-b8bb-9016458adab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4cb8cd-6acd-4074-8ef0-486a4ce978ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4871cbd-56ab-4a1d-8aa5-ebab790966fa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c333f6c-8e76-4eb9-a7b2-c3d4990837bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148f2f27-febe-481c-8c55-84367beab203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa458555-89e2-405d-ad4c-961538f3452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "845196ee-8b54-4fbf-8a0e-035a7ceda2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ed2fea-ca2e-4d0a-b7b1-fe596bc26391",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd282a6-2a34-45a1-a298-74d9b5247e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc6914a-4e08-4481-88a1-dbca5dcaa976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a509b3-905c-4aa3-acf7-fc52dc2cf519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe92930e-68f8-44de-9375-462f96ec4ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8868cf7-1f07-4e96-be8c-0b7744315e36",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0565bf-9d88-4fbe-addb-439b2bc474ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c35413-7587-4fc7-a43c-ffd71edbe53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ec515-1ca1-4f01-b53e-d6c9e79a627c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec59ead-7d36-489e-9a7c-36ac3549e264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54be6eec-6d89-4ca0-9a79-cf9eb4b33a03",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7c06e1-3a35-4751-b046-f632ac260f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e397b272-d745-4e9b-b27d-f5e979677198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5b492a-6715-4e75-8d26-a04642999f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad9b513-336c-43c4-bb37-e004f3792a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa93bfd-322f-4e91-86a6-7d09d9aa5282",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd0ab45-6d49-4f7d-ad90-3d456bbef45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021c13ba-9740-4c97-aab1-488094e24d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f32a7-a939-4b7c-9e64-64d32a1828d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad03eb4-190a-49a0-a676-4e2a8f88f43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e6dc72-fc27-4c19-a52e-b2a3731a0d58",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc4c06-49bb-4160-b5f7-6db6ce25efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65f476e-10b1-425f-bcc7-6d96b28d6db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9eee2f-da24-4bd8-be68-88178b3f4059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "536a46bf-104e-421a-8551-3a4d4bed0127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d356f850-d9f4-4172-87a6-c51b3ba515ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ad856c-acbf-4322-941c-be47212dd59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b9e4ad-d252-47f4-abb6-ab2b6554f439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b268b37-43ce-4673-b6c3-8b37ecceeeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3bdcf3-5001-4a22-9455-4317473b08e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52ac72e-d34f-4188-ba08-d057ddafb794",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b9f864-9aa2-45b3-9950-139fbb0ae95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edb5839-8a4b-4ec6-b3e9-fa5dfd4e2bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e197088d-1849-442f-b842-b417c33df9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e14868c-fd36-44cb-86c9-2333318926bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4dd8e-2c7b-4fce-9eae-1c6ba7b13189",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eb4487-87bc-4cfd-addb-5f91b5c2bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e783107a-5311-4c3b-8576-11a92617c028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e7ef9d-6d06-4e83-836e-a194c08ef3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f55410-9f9e-4524-bf0f-260272b0a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86ce22f-4583-4b22-bb3f-8c5c44b9e73f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3457b689-f9e9-4cd2-b1dc-9340b7c32e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d008d55c-3876-491a-84df-dddb4687f15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f346f37-514a-411e-b38f-5e4873b4ca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77910b9-2c66-4197-a476-35e2e49751f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664fc591-64f8-4ba5-82e6-64a4296578ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09c1d71-4137-4381-811f-4c6101350305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517786e6-a0fb-4a01-ac3c-53a4e0aefa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b525ab0f-f909-41b2-a166-41b42b7b23d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68a546c-c830-4bec-af67-05d22c01fdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb3c578-0f2a-4fd2-830d-499d9de5f82b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c78e4-29b8-474e-88bd-3ac31913ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31322e9f-d39e-424d-b08b-934068bcadfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfae271-b3fb-4eeb-9be6-baed57891fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "06306c61-a82c-462d-a4ef-347d33b93dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39cd5ed-cb53-40e0-9767-16e317de8cec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dc1c45-ef47-4ec5-9d72-7f285cc49382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4116dbd-29b6-4f3c-b915-022e75e5443e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1631af7a-3c61-4848-8039-991fd33cee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7783d8db-0dcd-4e12-935d-effeb1163df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcc5ba4-0675-4ac6-8f8f-be6bfa42b672",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7338b-e1a2-45ed-995f-45d05fc169c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cd3b96-4aa9-485e-97ba-8b926577cdd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6265e51e-6ae8-4dc8-9575-dbe511b06189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd6de14-967e-4b21-b675-36ab738a49f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e3c26c-ce7d-4a6e-859c-23bd52db541b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd8767-f95f-488b-8f20-618637019843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c1f5e6-e7fd-439e-a972-b4ee62ed7d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b1b8c6-a497-4a54-b058-f6083c0fb5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0b6fa2-7ac4-4a5f-8bbf-beaf06af6578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3b0b45-5261-4d7b-ba43-7b71839a95cf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c257e186-a1bc-4da1-9be6-21748ea506d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d2faf9-2291-4676-af0e-ebc2ae5bc933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c1c768-a6c0-477e-a48b-62e0826da837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10f0fe4-bdd6-4fb3-933c-aa3eba3be3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a21e4-4393-45b4-949b-16fccee0fb53",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d81bdf-6d0c-4441-89b9-b3c8402d810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba26fb0-d307-4923-91a5-a9f45690f5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0d6a4b-cf80-41bb-8bee-bb76f482f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0187de-fe92-4e58-9485-1349d1fadc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777b2b60-e706-434b-95ac-ccf4ff48defb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9b9a2-5bbd-4caf-b0bc-e7fc2122afd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42531e6-027c-4bef-9265-806cba0df587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8584642-573e-4b15-9891-c2e4f930dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc20ed8d-607a-4b9d-8a26-aa33f3ae1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69eed08-5781-45a2-9fec-ff66236736c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036e668a-0b23-44c8-b3d0-9d94b697d249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eaad5b-3ba1-4090-80c1-57f836756a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0caf1b8-2292-4e33-a153-70c622d885ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dd547f-f615-4d00-baf3-0e2bd1ffce88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc365bbb-c594-4a37-ab8f-d915250396ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba2036-259d-4089-9512-feec2f991894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5111b1da-b85b-4398-ad88-0e4251070160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a44ceca-1dc5-4f62-a725-ad723b67f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd0d9e-07bc-492b-b78d-c876b02a76e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbceee2-dc06-4ed0-9b00-f98006bc001a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8e8e29-6acb-4c02-baf1-c5df83ee9973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411744c2-6c05-4fb8-95a9-c79ab72b07ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4706ce25-2583-48b4-95d3-e8df1327149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f89958f-9a7f-4bef-bfc0-e633d7540b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d030ff-1dc0-4963-a3cb-bd390b4b95a9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0be744f-94c4-4b37-b193-1f46a6181cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363c44de-06d3-4dee-bb3b-3641d8300d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4335f6-9495-4541-96a4-5720c3b42910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93024645-1d55-4f89-a224-5b1cecfd7466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f87f70f-2917-4fcf-9522-3bb52efc252d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f18d984-9152-4f3a-9daa-4f180c21b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb34c2-4644-4f68-91c0-ab39e3b91606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b11bac5-607a-45fb-9c73-fd0bd33ae946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88997ef4-000a-41ee-883c-4fefd077f8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4856ff5c-6488-4906-9624-99455c76b4ae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5b58bc-387c-4a46-a93e-d5284bb85945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9435c1a8-e8c9-4d13-8cb3-2e868b005146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70561179-79a1-49de-adcc-b39655549b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7953100-0831-4520-9d5c-35181655233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4130b23-df57-4d77-9601-42caf41a2738",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c14fa53-3192-44c2-9297-8e4a865421bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2300588-480c-49df-8cce-1c96d2a7f74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b78ef-9f98-4317-9f14-ea2c219238af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8434ebd-63a5-41a3-b721-f1d80ba5d264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec077f3-313e-484c-967a-0e4f912e9e05",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aedd31-3387-4356-921e-85c10699492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cd805f-7c7d-4c68-a981-c5e8647fa1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f4ff5-f27d-4dd6-a137-24d5f5f7cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55fd95bc-594b-4272-a770-a93091a16340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1859b8f7-7466-4f36-8432-5be4ae65f923",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9a0c03-13b1-4f72-8942-8e8c6ed57b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e0dea6-4e6e-48d1-a164-4b4897b364ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285dddff-6549-4c12-b388-4bcd4457bee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6ded30-de79-4339-a71b-458ae070b940"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73ee5230-59da-401f-944e-f822849ecb7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bb4f178-8fed-4530-9a61-90c153110e85",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d8daab-2499-493f-8641-16c246312e14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6927f76-cc45-4937-a0a2-27eb7975b3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5545cef-2338-4d9b-b81f-3ed5252f1886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9931d69d-c494-4c90-b6d0-a3ced3d8f9c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e1cc07e-d0fe-455b-af85-30dcd1341a7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d3f6f60-0b0a-4c29-b3b4-9acca415b765"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e7c47ba-f463-4ae7-b2c6-10c8a834054a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bab47818-c5b7-4552-a344-719dfdfd9c72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53320b4e-f2be-4340-b327-86a03d58f791",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58b802b6-74c8-49c4-bd73-2108aeb56027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8753bbef-08cf-4824-9e95-4064e688b737",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d98a852-52ea-48a1-894b-2b11b0dd61f3"
            }
          }
        ]
      },
      {
        "id": "f07c7432-2dc9-4baa-8616-ae60c3a320b9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "41b78e11-b086-4e27-800d-0afe58c797a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0abdc93-15c6-48b6-9613-112021176901",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99e6216d-dbef-405b-b64d-450e292941b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d750c3-543b-4106-bf14-a305c69e92f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4dda4d-2cf0-4cbf-9106-265d07f6b2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b045896-8848-41f4-94aa-8157c0fa4f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a20d32b-376c-4c0f-af88-a9f2a16d7755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258ee428-832a-41d1-a694-e79143a01dee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e5e67-da7a-48fe-bab8-3f711df909f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7308da-1bcf-42af-b272-27529d30c4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854c382-25ee-4612-9eea-00a1a66e0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee951bb-9ecf-49ad-bc0b-19a107fd39a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05184fde-eb3c-42bc-8bf0-ec979dcd0d4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9caa7c8-8eac-4866-bc38-b9eb88a2000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a88002-74c7-43d4-ac92-dc0dba4eed6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7462c12b-1e59-4685-92fc-3ee9cdaf3119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c2c099-e396-4c94-8a29-835d59e12dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66d53d-a0e0-4c95-9154-f19be8710d65",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c3eea-512c-4aac-8cdc-06e43254776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8623e916-5ab8-45db-9bab-a8a1e2cfe9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0b392c-2ad1-414a-9c65-9ecac33eca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e890d5c8-b50a-41c3-a98e-471eacd9ba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09864be9-f70a-4728-8ac1-bb8fb3eebdef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6d5f5e-ac99-4b1f-bd1f-5251afc0edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57803b7d-059e-49f6-8ab8-54639be9dddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1126d48-5cd6-486e-a84b-5a7e25057467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "954f9b37-9517-4b0c-937a-6d02e2021478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7b7760-9be9-4d09-a0c8-3f3c31e0f5c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbc505c-e3e7-4e7f-a04b-cfc87cf692d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa09c7c-bdec-4abb-a87e-f3256b1dd384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d09149-46e5-44b2-aece-c77e8408fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "712171a2-6f3e-40ab-8907-30a65c1b5c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e19284-7681-450d-89b6-b7d54f8317f4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333a12c1-14ef-4a0a-8b99-bdf4afbd4024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efd105c-7046-43a7-9f6c-b27e908a98a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c25524b-0f02-4e3d-bcc8-50a9b9ef42e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c7b45a-95e6-4b1e-a87a-8a785beaab4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc2fc09-4997-40f7-bfcc-8ad1d44f7bd6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc6c16d-57b7-42b5-b84a-8f885b63e405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ada9673-e7fa-47f8-ae24-6462d83b951b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7455b974-967e-4344-a872-06ea3345727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "439caba0-d027-40b3-8c92-9000efd70e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0895e484-f1b5-466f-a0ed-4f69c5f43e19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa2038f-d72e-46f4-afce-042ae6c1a002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4fe9d9-e283-43cc-a1f3-0f61fa523226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d10caa-21fb-4eba-a785-b4be5464479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c9c6bb-0d3d-4b38-8f1d-2ebc4cd47d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75687c09-9436-4c58-ac2a-9cac64f8e466",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3e6d1c-ce72-4171-b407-af7ee3c3411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2487fb36-2563-44bd-96fe-80995335235f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cdd76d-98db-4ce4-b535-26b7cab6f612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e19f51e-dabd-4a53-b2b3-6eb7ae8f9827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06960427-0c6f-4657-be73-2ab5270ff912",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a5a251-836f-4b56-ab21-1b356b71eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790bbbb3-8d24-40dd-9cde-4eecb46d504e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3d17f3-c213-48b3-8e8e-e032eb2e9500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8679b4e-8f63-45c0-b5a0-65d144215117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a36499-af8e-4a77-bd9c-72c718cd7def",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a56b80-9681-4b97-9ca6-d1de767a19fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f198472-39d2-419a-96e6-b87e9af67851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2bf94-5cd2-4548-80c4-6a22d83f7e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf3ef55-5221-4272-993d-d5e704ab5002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0de0eb-7584-482c-8a44-ae2ba0aa3513",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa26854-c5a2-4c07-8d1c-30663a186584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8468a5-40a9-48b9-966e-32f879a03c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a37b3f-1ccd-4023-9a8b-71867b0dcb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5618aec-5a4c-415b-b819-28e0a3e5068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c0b457-66ad-4f66-bc09-f602d5c8093f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53218b6-9362-4d65-82f3-a865746a9e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2674ac-7c62-4e92-bf7e-2ac63818d293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f8a4d3-8626-400d-867d-6a5b662c52c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1c8158-bad2-46a0-8636-97f02d02b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e84c8-9875-42b2-a313-f2f1cdc626e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5f1adb-227b-4e6d-8b04-5dbc26df1cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4880668-c95a-48b1-b02a-db847062e491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750c5ef6-6705-4499-a65f-c1112a040d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df26732-cb74-4b33-9b2c-532ee64cd517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aa3c0d-3368-40e8-8653-3939440d2d84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ebde0b-e3c2-4dad-8435-fcd9990c88fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cc60f1-f71e-487a-8d6c-236e3a442ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021ddb96-5bdf-4677-9cb5-c249d34d9c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b097ae6-256c-493a-b20f-a8f06a54b7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f95e95-7c03-48d4-964e-76816c8aeeb3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ccd4bb-962f-4e38-b7ed-175d59f5a399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d98f74-a085-424a-89d2-a810e22ffa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2372cf79-7ad2-4777-b860-ffb144cbcd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1245e8-ca7e-491d-8d52-3ca6af523a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604e6bfe-a68a-4e83-a4bd-e95e717f3b65",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a7683-aef1-4994-987d-248391f048f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb97897-8f34-4b9b-9779-bb5fd849c97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fde6e7-7ca9-46e0-86f9-5fb52e69f567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed70018c-9d08-42aa-bf89-064c37e1ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26cd11-0fc2-43bf-adeb-0d056e5a0a18",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eabc740-ca4b-4513-8544-8795d3139e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec58e490-e5eb-4088-9cdc-bcb91a460f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f26707-47c4-4b83-9e4f-e5e7f0d9bf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95167fa-4bb0-43ac-9357-68285ecd9e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c49d2c0-4e97-41ba-b202-abaf79d8b072",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e036e-6a59-4185-b91d-3330d4643890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d67a7-ac71-4f7b-9786-954791e6d173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b3029a-7250-444c-9a9b-c49cddc6093e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62754580-6b52-41cb-aa06-a047c01e6660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee485b5-02fe-4795-a00d-edca73f3be2b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5fda2-4531-4372-8812-9fd660c68fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77764206-39fb-4697-92c9-5c462f1b3362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67d69de-06b5-49f3-934f-8d566216ead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66468c87-b418-43b7-837e-85f60d600dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2b296d-514b-4be4-877a-5aca38b8aab8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32be7302-8a5e-4a3c-9a99-13d7f7464c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508236c1-7a40-4b57-a7c5-f97c9f8a0529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48b148c-0fec-450c-a3b0-f98df5de4471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc11b69-c05d-44b0-8201-61eeb01ba88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb197a-e54c-410a-9e05-6fd4859b2e15",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67006e24-ec14-4812-a28d-a55908c38053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a503c7-50f1-47af-8571-dbe9b6718ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d99c3-927b-4b45-8cfb-16df1d896e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b39b112a-f36c-4737-a313-ab68803ba4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be768b9-47a0-4a09-959d-a234938cf57c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564395ee-af2d-4039-a5f6-f0d37fb3e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0856cad-9fcb-4819-9604-90cb0cf9e91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b894e9-1ed6-46cd-b890-9ab1c4e8b97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1b9b66-d618-43aa-ad9c-872f31ca2e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa965d4-0fdb-4725-a6be-fff231f481a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884364d4-77c5-42e1-a5ad-05585eb63d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e26c55b-6278-4d32-9144-221f95cee9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0d46a1-5d7c-4e4b-aa97-391ba862aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e1e333-187d-4447-ae23-7865926a22af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9566486e-d95b-4c21-adb0-eedae2d87a45",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ece56c-53e5-4f97-9b61-71c8c708be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b22775-1942-48a6-bf32-ed5c2a7a3033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdea78d-df44-4e4a-a321-d787a2e2f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9010c4f0-aa80-4c69-abb8-67dd43e0d4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664ae76-a2c8-414a-8004-5e5fb05c7bb1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bf4697-3590-402c-8ef3-253ef0f2b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd6d8d4-ea3f-4047-9a9b-937d259079cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e75e85-6b0f-4475-89b0-4cbd0d04e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f624feb4-5d73-484c-8e2c-637c74f65cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51ef356-3eb8-4122-ad7c-f76f4110eaa0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64858d8c-50b1-4601-ba19-1c08b1e4c232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2231e39-8c27-46d6-94fd-87128d2ca85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c8d813-738c-4ff5-afb4-2412d1c7f271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e859a5c-c306-4235-a33f-72b058b96cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7dc5e8-0d1e-4bb8-a6f4-0febac846ae4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f527b7-da89-4504-968d-c49b03782d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcc4006-6ebf-4e7e-8f3d-700aeb1fa391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33acea68-31f4-4c77-8574-d8b2320b550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2f1a47-c7f8-4e98-b469-f740132e24d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a877d3-f0cc-4f44-b275-bbe077102b1f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68191ca2-7d4f-4ca3-87c2-35ac334c4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f61b441-10d9-4612-af05-da730b00ebd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4018751-baaa-4029-b6c3-2a9913a7ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40213c7d-26a9-41d9-b64f-363ba55fc6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5862febb-3d14-4b9d-8994-063306923aa6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ef0c1-ae7c-4a97-a993-0764718028b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e5cd7d-584d-4ba9-a0cd-d404aa7f4ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af51691-bac3-4d06-b2c3-782dae725d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20370ec-7400-4aa1-8cb6-234767064fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef202c97-49b4-407e-b74b-93140d98f357",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956cbe72-4127-4841-87db-546b5700f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4a89f5-d031-45c5-9ef3-9f09b1b25131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496244c3-a235-4c25-a9e6-59ab15b41d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9848a2-a723-40ab-811f-81d7006e399f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc1a029-96b8-4d09-b8f2-b5e0580cce66",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558e906f-433a-45ae-9c07-12ef479b39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0456dd66-4017-48e4-b4a9-93607869ee02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe885ce7-0593-4d5d-bb31-bc75c0578884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df2af24c-0f91-4551-b20e-7badcfb937f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc60b5cb-0a63-4432-8398-8f3efe665037",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb5ccd9-ab2b-4b56-8aa9-c51d02f2fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e2e2e8-1e48-4c19-a82b-e88c59eac14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f323ee66-ca46-4aab-aef2-1ba4a6e196c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992e662d-c0f7-4e55-a215-0eb7fec3fa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b670cdde-ebe7-4b4e-9c00-a1667635ee67",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea681469-3928-48d1-8be1-5e05adbfa359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f6ff93-bc99-4992-854f-ddf883d0af48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0ae665-7762-47ac-a66d-0a9d2da67266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a943b972-c6a9-4b62-af38-7b9be5e39706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a043ee1c-70c3-4354-ae4d-27b290fd27a6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef954289-2425-4b28-96dd-41dceef769f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb3add5-9cf8-411e-9ce4-5a9ba0613e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd21a0a-ca71-4721-8fba-47e77faf8322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb7a503-06ff-43cf-9c88-eb89b7bdd3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907dbc27-69ea-4b5f-9d51-161e8966ef90",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d706a6e-e834-49cd-80f8-020ffa6d07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f44916-e2e1-4104-8ceb-a9469923b228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de64d34f-19fb-452d-902f-f3fec1fa5ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14c71c1-270b-4232-8198-efaecc5aa0c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adc873f6-3be4-4221-a42b-f86c6dad32c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b674674-3361-4e6c-bd3e-1f02bdb055bc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7212fed2-41c2-4a2f-a62b-0b582780fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "41e55666-da18-4b5e-b894-1279bcddbba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8cf815-26f6-4cfe-98cf-3bd43dfc4573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff8b4f21-8aad-40df-8c41-28bdbcd65b3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ff6ab5-8a21-439b-b48d-49ca462f2826",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9911fa72-3f86-4b91-9b3a-f9cff731a0ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "243ed0dc-ccf6-4fb7-98bb-e8ec5b0c0ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae515b31-3a16-4e82-8979-ac7d682d7d35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd6864ca-78e9-4918-9929-1b30e1f36e28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12f87bf4-9e7a-4e1e-bb6a-9100e647c368"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3243ab22-cef9-4bcc-b0ca-5049e9fe3108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34ab57b8-8d9f-48c1-a614-f2f78614e07d"
            }
          }
        ]
      },
      {
        "id": "9e56b42b-a9f8-4782-9917-57508f8df39c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95091c7e-0807-44b2-8cb6-ee691aed5859",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54a4afe7-8b6c-4335-945f-106a004b0083",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a70b2870-031a-46c1-b909-869ca3c739e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aad33f6-c539-45d3-941c-3f1d9f823852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddac2ee8-dc72-4e30-8d6a-6b1ece6a4435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17442e3-a4c1-4f20-b35b-3b0c20887c23",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af49c59-9fbd-4248-848e-a1de9edd706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d4ff37-5e43-4bd6-a351-aa3940f56ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15163d6-cd2c-47c5-9dcb-de0274ad0f0c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e1f5b-292c-4a9e-8531-c2ff79600b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f139248e-a756-44aa-8660-e40e8c2fcc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847e6c56-1a04-4748-9c9c-da84360df3ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2529b8c9-8a5d-4192-acf2-6ced419a0e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26004cf-1106-446f-80f4-00e0337b58bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e811b9-9662-4b27-8ec1-9f528492f072",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58a76e-9d2f-4453-accf-8a2be4a06ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9edc81-9989-4b32-b01b-2eaee912a13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81db192a-664e-4910-bb7c-fb35c305ee68",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18070dde-2521-4f96-9157-b1398a0fb5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c7d407-7730-4d34-b3bc-8c016bef5e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb491613-4208-4c2f-9f36-5b341d28fec0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016b57e7-40bd-468a-9db5-44ba7d62cc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ef825e-a969-4e9f-bd60-728929b5d9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18cc456-b462-48e9-8edc-bb4ec6a0aa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292462bd-64ab-4eb8-9e35-1332fa36696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721417db-3059-4299-9f5d-dcc082ae3da7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c29837-13ee-4424-8b98-f42abe829078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83780072-3b77-450a-8691-5cc07a02d2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9354d1ec-69b1-4a72-91b4-c91ff5d591e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f02f546-631e-4270-8ee6-93b16aaba668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cb458-a040-44c1-a349-3022777df552",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a05576-7473-49e7-b9f2-7531ac740ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd4edfc-c5ab-4911-8f2f-2dfd0b80cfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7b5f21-dada-44ba-b885-083ab8a894e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703fedbb-0a78-4649-be1e-279579520264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39be7482-365b-49be-9cb8-5b8345803729",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2732f7b-c900-4380-9a44-90716a76947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b89c807-4b53-4d06-ab46-98fe02f030f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0481ee6-e980-4d21-9334-a22839c7e20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6de989-98bd-43c1-b385-9729c35ee96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f2e919-ade7-4e33-8f7a-0579aff269dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d80dd-3c88-4db5-bcd2-8c3d0c539b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdf49a4-f5a7-4e33-95c7-c2fafafdab60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d7a15-b3bf-4fa5-bfae-3d74d87425b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cc8312-e915-4f5f-9cc0-f88bfb76c1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1412bbba-d406-427d-8f97-9d68f15681dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483bf7a5-34b8-4716-857a-9967602ef346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08bef9b-e10c-4a31-a100-e98f2c494ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7674c87-5281-4a0a-9fb8-99c5bf404801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934a862c-adff-46a5-977a-c80f861dc806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1566a7-137f-4f65-b46a-5760d616531b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7de30b-c6b3-4b69-9e2e-1679674d5aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff5e0f4-eb70-4f04-a88c-c8e9bae2bf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058d145a-0681-4c9c-852b-1ed1c4796404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b92d4ed-24cd-4991-8426-6a2a1fa77697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae552f-6c06-41fe-b36d-583a06208a9a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b3906a-3fee-41c1-af2e-1039c9f15088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e540a7cf-43e0-4d79-8ed0-a14547b96784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42345c95-bf85-4682-8fb5-625d1a7e555e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa22580-da3e-4c06-9557-9eb60a253ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e490f09-e62c-4352-b9e0-926394c2562d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165ed38-b2a6-4782-99c5-edd34a3dc135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744ae13b-ccbe-4769-8063-5893310b455f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82a7fa9-4c5b-47e7-8300-ef3235de8b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85713227-eec5-49f7-974f-6548556fbc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b4922d-31f8-47ca-810c-d0933e7d41a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bcb8d5-049c-4f5c-a467-68a198ed0640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910e0629-c8b0-45bb-bdfc-90231a25a305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eef1732-c7fe-438c-8db7-1f48ee97f3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a018443c-b89c-4a01-a300-9fca276a4ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b8535-4fc4-4667-9df0-bcb9d235d1dd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c677f433-09f5-46d3-a918-e3f3de390a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d724a826-c098-4875-8818-550697156710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ccd9ac-7d20-49fe-b273-37b1c2c0c262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af9a86e-9ed5-4c4f-b95c-52bc151d9b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4de4ff-7540-4024-9988-ecf844e08e71",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb30db2-5ee3-4122-887a-7b79a93d99b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bede2592-9c28-4d4d-beca-bec565e74880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be352e6-1113-4cf1-a280-b8238392b1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22e598b-cc60-4700-99ba-ee7d139811ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7716961e-b6c8-4663-8dea-9c1a91a60560",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d8a8f2-907f-4139-ab96-1c15a4817d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4a9f26-9dc4-4eda-9db3-49453d5afc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905dc16a-5a22-4556-a454-7a19af228dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7ffe07-edb2-4c59-a071-3a9304094a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bde5b4-4c5e-4d36-9947-6779c030a069",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc5bb9-bb42-4f55-a7c6-43ac578cdcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7597e390-8d73-4651-a223-fcbf4018c44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a62a0c1-cd53-4f08-b75a-1674134440c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4d5b1a-cf4f-4728-94f8-a0c97db6b2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b53325-ca07-44ee-ba19-5c0044098dd1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76caf4a5-94b3-4b34-8151-063651e84c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511c14a4-382c-4f99-a99c-26bb80368df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678b500c-5e00-4080-adf4-0fe2c4fb0c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1ac23a-78dd-4940-8dca-b268a6b0a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e8fde6-c789-4cd9-a599-19dc82944d83",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9ec3cb-58fa-41f4-acb8-8f2275f67ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d288817-3ea2-41cc-b284-7ed642873981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124f9b4f-2d8b-41ca-923d-f96c57b25aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e882aa07-40d4-4efd-ad43-fe7f7335b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8698d0-d5ec-4297-b842-a6c89b70852f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e12464-15f4-4301-aefb-ac850cd909e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf7e842-61f7-4a80-8deb-ddf7d8223f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0421a-bf89-48f3-bffe-0b537b58e049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521c690a-ae98-415b-add6-ca5d066d7e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7bc5d5-109d-4cee-8001-997917401853",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a418a14a-2fd4-4baf-a4c8-cfd7d6a0dcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341f94c6-6ca0-48db-b111-9702a7a30aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a27f6b6-e72c-4237-b022-ced51daa6fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9294c5d9-24eb-44f6-8917-3de63d964cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320a1e90-4450-47d3-a1a1-9423ef3f8f82",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51228b9e-ae14-4fd8-91a6-fae0e732c4ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb3019e-bd7a-4bee-aa4b-5d614ed4d56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970a81ae-075e-4415-8f73-47b422406931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c48840-0077-4a5f-9572-e37152595ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05bf20f-87c1-4eb7-bbb3-3428984e1d9f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3fc03d-607d-4fcf-9b12-8112391d605a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1172348f-3f2f-4ce3-9a8a-e10cc81fa27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455dfa2-dfed-4534-939f-53b953bd774e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57fb6a0-969a-49b9-b849-4d9b1379faef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692c77e-fbf5-483f-aff4-cc12a8d1b882",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf67c0-8da1-4486-9b2e-9e781070971f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8de8a9-8b65-41e2-8dca-8ce2fc233115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfab87b-733f-48db-834b-17271ed45faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb00ff2d-9ea5-4835-ad37-ad109cc05dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38e66ac-c2d9-45ea-bd71-f45490e25be9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bede0f-32fc-426a-ae1c-072c918bbf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7784ed5-73bc-48f1-8d6c-1d49d96b68bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171c873-c2fe-4980-b26d-33c2eb7f4eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb29155d-6202-4dcd-b297-88813b067f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d421753d-dea8-4627-8d17-7c8868cb2509",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b094cf1-10bc-4dbb-9738-e3b79a25da98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fffaeb-2bd8-4f52-bc4a-fc039de7c9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5bedda-7af7-4d3c-bfed-42f1ae2822c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40b687f-36e7-40ea-8319-7d90f8cb81e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee3f0c-2883-4ef4-9aee-36437c67a9f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78b68fa-0a90-4f19-8546-9361afbd5aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99cc2e1-38b6-4764-8253-ca9599ec41ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ebb564-4359-4ab1-abfb-d5dbee075df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36aed68f-484b-4d49-9f4c-ce59fd34cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fe6c3f-7466-4c28-9e56-e3b5553d63cc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7df4bb8-f7c2-4206-a803-22cbab3f3bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a2d9e2-80b5-42ca-a462-36e11cc5706d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc24efc-1f05-4f4c-9a39-9861391d581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85f1512-d25e-4471-a398-092390a4ab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8ba6fa-f072-4344-a1c1-814e0d4f4770",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13074e08-036d-45aa-9a73-ecfe857209d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2a5343-641f-49ed-b7c9-bc82bf8d4122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d75fab4-7f51-48c8-accd-2cfe661c1920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735a6215-e8fa-482d-8ec6-589d80db2504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09439762-8bca-4a83-8c84-0c54a60d2177",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43475c4-baa4-444d-969b-8db1100370ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06854fa-6b7f-4859-a4ff-52dc5bfb9790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f59e606-8170-4a98-a95a-3d78b35cee90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925bddc5-35bb-4eb1-86ba-07c620e70084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad259b17-fcca-4a4d-8287-4bd8f1d989f2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c80cf0-fc7f-4ca3-b966-9db06838b144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd575aaf-f3be-47ba-b86b-f87096182a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81add52-a3fb-4275-8272-1fd275234217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c462a66-b2ae-4aec-a5ec-7974409276f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c72c93-7668-40e1-a1d1-45bd4cb9ea2e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f350890b-01f7-4590-93f4-fe81a6d7d2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b5648a-fb1b-43ac-b80f-68c42cc18432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c825f8db-08f2-45b2-9cbf-88947b37bad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce375940-fb31-43f4-aaa0-fe9e2708ab39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84520ef-e081-4778-8c97-07ec6637fbdd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdc8758-ddf5-46b2-8aac-40d74e1cfc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b55322-4c01-4e85-a422-4cad04d81f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22e3b8f-9d91-4b4a-a9ac-206496a3db39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4bcf79-6c76-469c-8c95-4040bf31194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57918e99-6c05-4455-a002-005b6cc77e01",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15824b60-d266-4159-a45f-eccac070d8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8febe15-f62d-4fc4-8ae9-0c828f742743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa067d1-dfa2-4dd4-8dac-ae43dfa53325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0ec9b4-4f89-41b3-8a7f-1ad412983457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96d4101-6cfc-41a1-83fc-7be86c9ce069",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a87f499-d377-4212-a973-eaa1a0ca0613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ef162f-3d82-43b4-adc2-7ef61fea2b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5669cea4-735a-49eb-85d2-88bcfcaeca21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235b4602-926c-44ce-a328-c2bd905b4923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff4ce7-5319-4808-baaf-1bccfa00384d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505704fd-39bc-4fb0-af11-51855b07d812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc364a7a-d7d0-4d4e-8243-f6343d86353b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375713e4-84da-4692-b79e-e9cef5b1d67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070a68d3-10ac-4c84-a531-7f092725164b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451603e1-d579-48f1-914f-687e2e6bfae8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2714f85-d102-4ba0-a689-8307b912fc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1839a4a5-2ef8-4f2b-9c27-78af5bedccf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9171d35-ad08-4117-acd4-c9446550fac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966c4d25-1965-4dfe-a8f9-b87a90d1f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cddce6-007b-45da-b663-2ff1f051ad2c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19351dc-b86a-48dd-bcdc-d2669f967dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3448f7-1ac9-4498-ac59-6dc30f975805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d1f3e1-bc2a-4a53-8155-0a0988fb8524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c01a68-908d-450f-9701-288b6f050fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f0489e-09ea-4011-b0f9-79c25a71bdbe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3290d60a-467a-4dc9-9cba-1c1436f02d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce8cdfa-b478-4627-ae8e-95e2e2bfae5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016eaca7-7330-43d8-a35a-45801d7ce375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327f2992-a643-4f24-aca8-9f3376759848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3b403-ad8b-44ea-a62c-cc649cb51517",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652aed29-bd67-4ce6-a440-4ea498b47d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a073bd-a0db-4ed2-ae8d-5e710a84f4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875c45fa-e6b6-446b-a58b-af7558a1f9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148f0b1a-235b-45a4-a856-3a5fa578739c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092177f-454f-49c0-b7c8-765b17ae12cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c7426a-22c8-4ad5-9ca3-066c7a72fd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a4dc57-fcb9-463a-92c9-aa94858c788b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34603e3-6f1b-4ee2-a122-5b0fd9f1db2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc08a39e-6dd0-4297-99b9-0a78dd186641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6622c2b2-bed1-4be7-b720-78bfe27c600f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb4180-2a99-49e2-8c2a-a021d4cdcb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a9b73-9e38-4798-90dc-c3c0d4b5ba5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf158d8-f74a-426d-8ae3-5bbfa673f973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d926bf36-3c0f-4497-80dd-55aab4ab456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132f522e-5913-4543-b0a6-16fb5d46f7ed",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8a9dae-4ff1-4dbc-bee3-a5c3ac553234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9048e3db-6740-402d-96f8-175938bb961f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15972ef-624d-4f8e-a8ce-a311dcf008cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c85a99-cd3b-42ff-80e3-7f23fefefc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e7cc9-1f54-4843-bf8b-644a88035446",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14009d26-93b2-4da3-8a14-f1b0ded05ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2d3a16-b274-4359-83f9-d84ce84ef290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bca5b9-3ca1-4eaa-b867-2b8de355c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bd8632-63a7-49e7-b74b-2bf86c9653b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383aa884-352f-43d4-ae2d-42cea7a04b4a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86abd297-e001-4708-ac43-3e09af0f8360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85923dc-4906-4523-9fb6-79d0b440ce2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b791e414-3e2b-491a-a9ba-7886379cdee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5fb626-9516-4fce-9bbd-fcf1070d8137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8976211-6eaa-44b0-a650-593bdd54449a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7778284-c7a7-4cf4-89b3-1d03accc9bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72632d62-76c8-4bb6-b2ad-b9b5dbaef813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615f00c6-27c1-451f-bf50-275c0f670fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1700a5-34e1-464e-a22e-4c5d4896717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533752a5-f871-45d3-9a86-3ea1e1189a03",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85532e7a-40b0-45e8-9552-685bb19f4ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be82044-e345-40a6-9ac1-6c81f724a565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b81e1-f1ce-40f9-917e-c9be93817b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6ad59f-7c49-4d93-a095-a86047521fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8511dc4b-4080-4889-9acd-618abfa9904a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fefed7-3e38-4e43-8c34-1f3100b5fd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5241ce42-bb5a-49c3-b2fb-4cbfa9ce1da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e3b28f-c65d-4f0a-9e40-df617bbd5e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3982bc97-6414-4b87-8375-1ebc7c7c640e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6177b7f-c66d-4506-b09c-fd00b1c20278",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b81290c-7705-46fe-91b4-3b65f6cfdb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e940fc79-c77b-4197-bb3c-e388a766a049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7be169-37cf-4e9d-9463-d1b88ac49803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb700b7-5547-4987-9469-3b3b05dac893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd9b408-ff03-452f-a4bb-94bf7f8bb228",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e59a8a-d954-4151-966d-21780ffb9472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efba2cf6-e499-43a2-a8e0-2a8afffe8f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53137cc-17ad-4f0a-88c0-14842b4710a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e5f5cd-edb7-4be7-9b5d-893c5597ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059882c4-ce27-496e-9319-fdb6f9d9c9af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1071fd41-ba28-41fb-b415-598e4d00dca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c33e53-4bfb-4d37-b86e-1ccaf2c093f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d279f0-6e30-441c-96b6-845f445be60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d1b5ff-94ca-4b0e-b439-873e8d56be53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1c7bff-2627-44f9-942e-6d1fe717044f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9127869-3772-44a3-a6d7-2d1f09c6afb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9da3c2-affd-4a14-8ada-25508a5f1e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776e467-bcb9-4ed8-8d6b-2a2c43a0992c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868a9f22-d24a-44cc-ad75-8145cabeba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b1385f-c88e-421f-a83d-fd509687ae41",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724dfbd4-a9dd-47d0-a4c1-af0f11125a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d1f183-e328-40bf-bf62-9eae976c44e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f7ac95-3ffe-46c6-8c6d-8b22c1e65496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543a1323-4553-47df-b959-5522bbb8e9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135ee8c5-9760-4e40-8872-36649dce9f65",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57d99e9-7d16-429c-8dda-668107eac358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7370709b-5a04-464f-a1a4-1548619909d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e912da-555d-47a7-af73-841b10269ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00904f2-4c4b-4e0a-8028-83d809b52a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3530e761-7811-44c7-9d94-b1fc781fd315",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d55e9a-a4c3-47ae-a22e-26295e51c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728a02f6-723b-418c-a261-dfa86b0a539e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbee45d-328d-4367-8104-457f0f75d3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6000bfd2-656d-4eff-9ddd-44f13aa24b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24220387-aace-4676-9697-5b7066999e33",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b31826-ee32-465e-b09e-b612b16ab1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d350979-66a6-45bb-959b-6ff6c8483521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a55d0-244d-4d37-b8f4-8d9610e7d204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f71c8d-ab04-44b1-889c-5db89d8dc6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0093ee-d24f-4a20-b349-350a537e9793",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d43b272-8b44-4fc5-99c0-ca223c104193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e25339-72cc-4dbd-8808-77d9e605d463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6da02-6d60-46f1-8c6b-cfc6cb566421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d982ef51-b375-46a0-bd8d-2bad6ea23c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302caf66-d485-4ef9-a5e3-11650679ca64",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb29376-1cc4-49ae-bfda-5541e61e0a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd033ae-538a-44b3-b800-178ddcdd762f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f8cacb-5366-48da-b03b-b715970151e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a922718-c83a-44fe-8094-dc95c74bfa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d5ec9-ae34-4daf-a905-7335863e5459",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52984989-c23a-4e8c-a5bb-744a39c3af5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3163aa-2868-4220-a63c-3acab819010d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19a182e-2d24-492a-a8c2-fcf2d65877ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f6c9ef-aa8c-4f40-83e0-33ab4313f8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea642e-e292-4d6d-822c-73f6b4a5558e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6094c0f9-58f8-44d3-bef7-cec2dd6ef0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405e958a-f1a9-4c7b-9d55-42cb6756d355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f1bc35-73a9-4a66-8e0a-7e5c84594523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d558a696-26d9-4ec0-89d1-b3a9c5d7a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dbdb4f-8011-4372-b70d-e8354098151f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fafa6a-8e82-48ef-9cd6-e5a5626c0f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee12b184-c928-41c2-9761-134b6c46e8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644271e7-f309-4112-80a7-3fa0d5442670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3296a84a-6d1c-44ca-b01f-ac0bcefe836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e9b9f3-f9d2-40d1-8476-fe770a4f1316",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cc32b8-32d6-4af2-afcd-3ade03f98e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3788bed4-ba49-4bf1-889c-c0df30a69351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09760295-706f-47af-aed9-8dd0c535230a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d07366-9228-471d-8ac3-33f5b20c2498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01613242-b8c3-4abd-b497-9063ebbcfe93",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e5b7c-83d8-46be-970c-d3cdda092466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7804a1e-d756-4aba-a019-374a43cc4c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f33b87-1dfd-4a92-8fcf-478bf125320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca9e55b-934c-4cb3-9fd6-4ddfa2b98736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450497a3-fec1-4349-a98d-39ba00ba3c06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc7572b-cfea-403b-9b1c-904ee7e6dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35aad3e7-32b5-424c-bdc6-4721f51c79cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fcb3c6-f74d-4674-895d-dab33590dda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93661659-720b-4674-a3bf-7bd60149bb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29ad4cf-b3d3-4650-8a57-3ff56dde4deb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55bbe72-e647-4f4e-a859-c589ff05d6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65cf4b90-d5b4-4bdc-b6d8-066de5d739d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae052d9-130a-4472-8234-27f104d1696f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f10a18-7f2e-4a9c-9e2c-0ba6691df1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f669939-faf0-4129-be22-a5a02a6db96a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cd6d65-a086-43ef-9b84-7283106f8bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e17a12bd-7624-472c-811d-bd85d65cda38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a54c2b4-286c-4c3e-b637-0060d84110cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285c360b-7870-4478-a0ac-cf2becdc43f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d80086-41e4-43f4-b248-6cde59b69679",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d5f298-76e6-4d34-8d43-93872d0c0556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b952fa9-292b-41d2-8ebc-a29ca1f14a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3861ee70-6f62-4d7a-8ce5-65719e81b013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfab84ca-e27c-4569-a066-2e9d5913bc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71a910-dc76-4610-b284-262b6ce5b219",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f90c833-52ee-4219-ac8d-4caf77262920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4d4bf2-2686-4f4d-b96d-ae8d2b227d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5130bf84-eab9-4a4e-be2a-028fb463f536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b4e7a4-4dd5-42d4-a8f6-0c269eed8be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca6230-e374-43aa-b670-dbaad7d864f8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83755b30-e548-42ec-b6d4-6283dd8e6b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3979098f-1dab-405e-932e-d5bcf1f373e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c0b795-e7b3-44ac-8c6f-67b5e9cf5445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76379c0-0ad3-409b-92b2-e33fe28fd1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6a7a4e-1707-4c65-88dd-aaec4f3d9be8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c59f65-ba9f-4f0b-9052-1d0d2d42241b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af96341a-c031-498c-b136-25d38ce97966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239b2054-1c09-402c-ab35-fd554077d44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e82e4d-6070-4bcf-85ba-b49e4aef8569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ecdf61-9354-4a97-9396-62adca1c000f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16895a8-011a-4f1e-b884-c1ed42f9bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c182363-f3d4-4305-8ee5-5db0226a39fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402f014-4eb4-43c6-b371-b4e85af8b489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb2957d-5634-42f5-ba1c-ff30a163ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b056e308-28d6-459b-8de2-a320bfaf9788",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcba0789-de5c-4cf1-98f8-511a57eb45d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be82b40e-de50-4d40-8b86-6cb4eed43aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2612f5-ca35-49cd-affa-200b131c08c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4bf6a6-5976-48a7-aa2d-8ad5892dbe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3643b40-3e40-4329-bdf4-60b25d953dd2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cc281c-db6d-46fa-9435-11b5cbf96775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345d578f-a07a-460b-a943-e23d78a93b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eb384a-f9f4-4a2f-bec4-c2def79e3e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60918355-f714-4f4a-b7bd-38ad95bf1aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30b5c7a-4525-4cb2-b8a5-f7bd12ad1fd7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e2877f-3fa6-435c-8f51-428c80cb3d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb5bac4-2883-4aa3-85dc-3db621d93d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206ef9c4-3659-4f57-a95c-8c23d45fa191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd5b272-d19b-4259-b72d-896b4c3ed87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4062206d-20cb-45e8-bb4d-4ffa75758a91",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a70be-d3bc-4f58-965f-74a338261f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae07d33-df97-4b12-a483-771489b28a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349f5e93-3c73-424d-8e9f-8a49ba3d7a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3ac637-2fe9-46f6-a410-f309b95824a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cd3c03-a398-4413-8146-3004591d2c9b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db07d17-11f0-4076-9197-d7f22eb800e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7e833d-e75c-41a1-bf68-190560b231bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80395d61-a5c0-405f-ad4d-a9d90fefd514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3520a4d1-095b-4899-80e1-f5caf411965d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f6d782-99d3-478a-952e-17be46326981",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc7f73-84ce-45b4-8e71-d986f510ca92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d992eb41-8b25-4934-bb92-5e3c16a71bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5ade74-e5d8-4a71-9373-08fd2ea9771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049296d1-d74d-4f2a-b219-27de4a9dc194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7295b09-c7f5-4619-b906-935ca8223bf4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30fe3f-a423-4b2e-a2f0-462d052103a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a0d5c6-9831-4472-8cf4-453b8c7ad731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e70414-a347-46cb-8bcc-b2dd79c2f3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fd3b5e-ca75-498c-ab31-afb4cfaacf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62378e5f-3370-4848-9a87-dd4059824df2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56aba1e9-0f84-4817-94f3-aadf78a2cb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f02a6dc-bda3-4a5a-9af7-b592023cf19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0666cce2-020e-4331-b333-d18c2e315fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9b2ead-4b8c-4605-b40a-f970c210e65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a689588-0b52-4f81-bbf8-a6d4044a4b23",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb586ce-b147-4c25-a850-a56cb30837dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55fe727-4669-4553-98bd-5ee673de23de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c6c3c1-c08d-4421-a841-61cc47db9592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da18bec-79a9-4606-b58d-cfb37a48bd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e32ef9-bc3e-4e37-aa0f-259d6d6fbf25",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd59d99-cbfc-41d7-80c3-abb3c56836a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497a04e8-da69-46f2-95ec-d0fecea2acb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5fb2db-ae94-4992-99c3-6fbe39dde562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e47668-1135-4ccb-b38b-9ee6af2656a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57257e-662d-4ec2-9f96-8e745de345de",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf8ab32-5c14-4812-80ed-7170a3321732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca3ac8f-fe57-4cdb-be92-488191e34a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f71d6-2b14-4177-8a21-d43702270404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88edf9fb-f731-4d93-9ded-61cfbb6fcaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffee78e5-559d-4291-ad8d-94351b7308b2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b87591-4dc6-4ab4-903a-9d1eaebdbbc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56928ba-163a-4897-8242-71227baa0f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f91a51-5d30-49f3-a844-a0304e00ecd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcafeab-d6e1-47b6-b2fc-2effb26a6c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e09ee-2602-4926-9811-ab7410317463",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551a38e1-8c1a-49b5-8488-13f424ae81b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd3a102-2f9d-4562-bddb-4e08f2d3e41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed1f69-4b2e-4fd3-9798-5f579dc7c300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1f901d-c0d3-4a3d-8ce7-1d139540ac41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601bb0de-f63b-49c3-8593-447580eff827",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f9281-3675-48e0-9181-ac8eb00eab8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde8b240-4cd2-469c-9d79-5a7d41e7fca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f40366-356e-4193-b419-ffed3ab368e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c29b4a4-1313-411a-aea4-36712ec1bb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ed75ff-73d0-4946-8e17-4849bfedb47c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4c6e17-8d19-4edb-9d52-a983b7c7d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc7f49f-be49-425f-8d0e-35b540bc9e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b6050-964d-44f4-b17e-9b616e13f07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1a232a-a331-47b1-bd82-a0930403ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be44f54-f972-4064-be0c-c51c0cc11f2f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee90593-06fa-47a2-a5f5-9b59233b5851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840140b8-e18b-45bf-a908-19e4ff5708ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba42bf9-fb39-441b-abe8-a369dcea3c89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0ff6fe-5e45-42ba-a6ca-69ca14dc16b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccd5bbc-82a4-4e6b-8281-8b5e7891c750",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931d207-7f36-4662-beab-4d856bd514fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c91488e-ef5a-42b5-b213-a0e35e3e7cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070f3c16-c674-40bd-abd4-a95dd3e23aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca785af-8583-42ab-b551-9c182af56a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad59fee-3968-4752-acaa-13d3a1e257b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb52d4-97a4-457a-8fa0-7a2aef886f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5a4f15-0224-49f2-a430-3c460b7ef498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3f20cb-c48e-4541-90c0-47e8fe0608ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7f8425-39d0-4250-b173-0149672ff356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20710f2c-ba2d-4178-aeec-bdce5884ddb2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035c4789-2683-437d-bb53-6877aae9deba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8742c38e-92f7-4a15-8a0c-9e4359d91294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e3ce41-71b7-47ac-aa0e-61735d7294d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dcc5d1-7c8f-40c2-b970-11b7c1d68ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaa63d6-525a-4268-8aef-4b6e7fb21a48",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfb59d2-6c3b-47c6-881a-98104662ba78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b235b0-9ecb-410f-ab74-a6fbd07db3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e1d668-ef66-43bf-8ab9-8f764d604d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b598e1c0-08d2-4447-90ed-a757128d264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8265e6-73f6-45f3-9040-2252860a4bbf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac37851f-a429-48c1-92e1-3d5781161564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd11fdfa-b8c5-41ac-b085-0f97c89785cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ea40fc-87b5-4d15-bd88-83ada79d9e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dac4d6-e0eb-42e5-9685-430f24a19e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b58e56-5d17-41e6-b879-182c5942f052",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b4d0f0-ee3b-4532-9d69-20e8b22d838f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065113ce-fb6a-4e92-8a00-9a6bc747b280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac89a3-b060-4e73-96ef-9e6ce3818af5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fc8536-b75d-4091-8131-14a0f7313c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5925cc67-12b1-46a2-84cb-6af2aa4e2e54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d70a0c-388f-460a-a121-972970bd0c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e270da-adf3-44dd-8405-133750539b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e0d7e-97c9-4f61-ad30-cb24f52c2964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe90b98-088f-4b18-aa39-b069e450c6a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbe8f22c-c4a1-45cf-ab76-8c5fd1b42432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d97fb519-4fe8-4947-8e11-6da23ee694ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80f0464c-bf86-47df-9e13-790406d1efc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44723d18-685a-4d5a-8b2b-07887e1ae3d1"
                    }
                  }
                ]
              },
              {
                "id": "7e4d3cb1-3ceb-4e3a-9848-7d2be3fd5621",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23374c44-cc0f-4a26-b961-d5e9a1a9beae",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a571dae3-2cb2-45d8-a300-75886e119cc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e96a813a-8280-4b54-ad15-825155b96393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281f47f2-4b37-4ec5-a0a6-c3b1c39fb97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b00ef19-73ed-472a-902d-0e5d338a8acd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc2df222-a926-4937-b325-022eaff50b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05435d4a-306c-4c7d-99ba-e387d39bf6fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03847e5d-6acc-4a09-9922-751f43398ae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2060408c-030a-4c75-b9e7-f0a3317ff6d6"
                    }
                  }
                ]
              },
              {
                "id": "802aded7-8cd3-4274-849b-4a8379ca5ed0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c49ad8bb-500c-4e95-ad6c-0ab02e7f870e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5de6487-abcc-46f9-8509-e78dc5b55697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df8c4f9d-23c8-456b-9b87-e247b353db45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9be3cf-e3ed-4e37-ac41-f0d056503e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f331472-3c9f-4cbe-bcfe-0bec871c394a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2901d7f2-ed4a-49ff-8ac5-39c23b30ff1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e53b940-0dc8-432b-a18c-f3c7f10b0120",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6cef1e-5652-42b1-83eb-50cb1b8f98ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c60f3ab1-7098-4502-bb2d-0357969c9e7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3052db9f-ce5c-4163-a003-d5b31f5f3f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0199ad01-537b-480e-aeb6-c3614c39da3c"
                    }
                  }
                ]
              },
              {
                "id": "a3bc350a-5ec2-4752-bb98-ebaa7292b72f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e675437-79ca-4b48-924d-7c832df09b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ade5c326-f92a-408f-be46-d5de8f3c6351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83032385-0219-4dbf-bcf6-427d305f8b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "627c3dec-86ac-4e09-b8d1-2993c6a8474f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8fb7e65-5a7d-4d62-ae0f-678ef6b2f6de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fee1d78a-e3cd-4715-8446-f5bffaff0e5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d22c18ba-5898-491c-b771-82297fdb7673",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bd3f33d-76bc-4085-bbd2-503614917d60"
            }
          }
        ]
      },
      {
        "id": "fdb03376-e5d5-41b0-92ca-a07035826dc4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ec20970-ec27-44ff-a39d-2e6e9edd47dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73f92372-29f3-4ebe-9a79-89b6a503945e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8990dee2-ef24-4f6b-abb5-68d2537c670d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b55ff5e-11d6-41e0-a877-290179c3093e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb5cdbfa-ba62-448a-9bdb-cf943a56d541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf0915-6c49-4743-b0fb-3b0c29773a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dddb1d3c-c209-46cf-ba9d-6db6eda96042"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3557688-fd2b-4ab0-9d9d-e9186c244a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18c867c4-f68d-4c87-b9ff-0be7cf917e76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9502f46e-75f2-445f-928e-35b261a74d29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9555f50b-e39e-4723-83b4-46cd0f12d019"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b1197f8-8ada-4782-bdc8-1f683c732b4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e20f06b-2807-46a3-9085-c573ab7c629d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b28dc40-a961-4a4f-a442-0d47956e6303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc0eeba4-457c-4133-8cf3-6b6fd17d9cf0"
            }
          }
        ]
      },
      {
        "id": "13d6d69d-e8b4-40cf-9f87-a8095026b74d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b3748bc6-8c6b-44d7-8259-41c5ea111830",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3deb5580-9630-4e44-8f48-408d6b84d240",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0a4b6a9-aee7-4a00-9fbc-a0b6545a7b3a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ba5a61-5c94-4f61-88e6-975260c369ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160cae04-60f0-4aad-a66d-1d43ee601d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439162f1-a357-474d-a1e6-9fe7a65ba0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10965953-9c1e-46f2-be79-f25cc02eab1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0080f3df-1f04-48e4-853a-5bd7515ff4e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca4b5316-9add-41c0-944c-4ff90a140f8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30718da0-4042-43ce-89ef-98c8a0c54116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eb09f9b-dd02-40f3-a1e5-968e338d3534"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7132f63f-20cb-4eab-8828-397bc01cb96f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0fb80f9-2e79-43ac-a2b1-9a5261719644"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30e886d9-ce96-4196-a19a-6551cc2125fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5bb2a46-c827-45e4-b29a-2a47e2fb3cbf"
            }
          }
        ]
      },
      {
        "id": "abf5df0b-1ab1-4220-952a-8086509421c0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "729de48e-f0b4-4e71-9a7b-76b45af9ed8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e96b3e3e-5d4e-4c2b-8e90-162adb3bbaab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88e57c87-fea8-44d4-80b2-bb50f0dd836d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855d6488-4f68-421e-ae12-82ed0dc0d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ec8e017-c260-4ea4-aeea-324adb8df93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c871b17b-64da-4695-b085-2d78faed4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f4ea12a-f287-4417-9b7e-217eca24be4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4fe55be-9b07-4043-90cc-a28a3ce4659b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfc8b23a-6a41-4c7f-b88c-f1a569af821b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c50e58-2afa-4004-9b75-e2119977e869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "769ba617-1298-4958-80c8-9afab4ba9eb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39659991-956f-4b8c-ab8b-87f9c110f38b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d685f2fd-ff72-421a-b5d0-0cf73c0646bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0a6dee4-ba04-4458-a7db-ebca9921ab37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eef7255f-92eb-42ec-9646-8ff739d3c814"
            }
          }
        ]
      },
      {
        "id": "933a6aa8-d409-4089-b50a-36cededb1d7d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0af13028-d33a-4c79-a981-2ce1acd9354c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1af8ac41-6c69-4689-af81-3570c100388a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1015eecb-1014-453e-8d86-05f3d43403dd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23a946a9-cedf-4f2c-a11e-b50bf5a55117",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6dcda7e-bae1-4861-bace-63161a2d390f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 162.48943661971813,
      "responseMin": 7,
      "responseMax": 7712,
      "responseSd": 586.4862034096138,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691541607679,
      "completed": 1691541664875
    },
    "executions": [
      {
        "id": "dcfbbd99-9095-4a48-9e1a-62605ea13c31",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9bb7307e-1e3c-4423-b9a0-ab221d51d930",
          "httpRequestId": "651f1f35-5c3c-489b-bbe7-859345ba0a0e"
        },
        "item": {
          "id": "dcfbbd99-9095-4a48-9e1a-62605ea13c31",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "32879af8-32c6-44fa-9440-2b85d53f86e4",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "871f04b6-7b3c-4389-a023-f995b11d6c8f",
        "cursor": {
          "ref": "e4efcb4b-5f82-4b1a-a718-070288036d87",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5c2ce68-068d-4846-8a9b-9458643d1ae4"
        },
        "item": {
          "id": "871f04b6-7b3c-4389-a023-f995b11d6c8f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "29bb1205-4516-413f-99d4-bde3a41b989c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ed5fc56e-d32e-4c0d-ab68-a624e79676a5",
        "cursor": {
          "ref": "10dcf353-d16f-441e-a9b7-40c6ce8aec3c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ac365df-3f2b-4311-91a6-e1e5127a2291"
        },
        "item": {
          "id": "ed5fc56e-d32e-4c0d-ab68-a624e79676a5",
          "name": "did_json"
        },
        "response": {
          "id": "556801d5-18b0-4bf7-91d6-8ca1ceac3762",
          "status": "OK",
          "code": 200,
          "responseTime": 667,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401b410-ab3f-4ad5-b57b-329466aaec22",
        "cursor": {
          "ref": "5f3cc9ac-27c3-4ef7-a292-49d06a22c640",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ab7cee7-d77e-4234-925f-fc96af8f6d71"
        },
        "item": {
          "id": "2401b410-ab3f-4ad5-b57b-329466aaec22",
          "name": "did:invalid"
        },
        "response": {
          "id": "2431a7b3-de0f-44e3-a951-0c6ae3041568",
          "status": "Not Found",
          "code": 404,
          "responseTime": 907,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401b410-ab3f-4ad5-b57b-329466aaec22",
        "cursor": {
          "ref": "5f3cc9ac-27c3-4ef7-a292-49d06a22c640",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ab7cee7-d77e-4234-925f-fc96af8f6d71"
        },
        "item": {
          "id": "2401b410-ab3f-4ad5-b57b-329466aaec22",
          "name": "did:invalid"
        },
        "response": {
          "id": "2431a7b3-de0f-44e3-a951-0c6ae3041568",
          "status": "Not Found",
          "code": 404,
          "responseTime": 907,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fbeec7-9920-42ba-8a25-39c47469d213",
        "cursor": {
          "ref": "818f537c-cfcb-4740-bf24-117b820aa07b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "26325323-1237-4ff6-a7cc-aa4fa81cce1a"
        },
        "item": {
          "id": "d2fbeec7-9920-42ba-8a25-39c47469d213",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b531ebd2-36fe-4f58-a311-7fc4ebfbf1bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d321aa09-e3d0-44a9-98e1-fa1ac4ec38ea",
        "cursor": {
          "ref": "e734929a-a0bc-437f-bc13-f25752574d5b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b3f3d3e-e6bb-4783-9ce8-68337ade40cb"
        },
        "item": {
          "id": "d321aa09-e3d0-44a9-98e1-fa1ac4ec38ea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ca705c3a-054c-457f-94d8-69ff040a7789",
          "status": "Not Found",
          "code": 404,
          "responseTime": 139,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb8790-6f7a-4911-9c85-7cdbea7103fa",
        "cursor": {
          "ref": "9935d229-0e26-4c44-ad9c-e3760a2bddfc",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f29a7a29-d26a-4279-8a41-ddd0cf0b3d3e"
        },
        "item": {
          "id": "22cb8790-6f7a-4911-9c85-7cdbea7103fa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d306cab0-bb04-4279-8ae0-8323758b7982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee6b8e5-1cfe-4026-99ca-549f5c546d2f",
        "cursor": {
          "ref": "44e37141-6dd7-4a6a-a5b0-b4253fd55e77",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "782ab37b-d535-43b5-bca4-2a00dce8955e"
        },
        "item": {
          "id": "8ee6b8e5-1cfe-4026-99ca-549f5c546d2f",
          "name": "identifiers"
        },
        "response": {
          "id": "3856b2d6-fe43-492c-9448-c72de4ac5113",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb0889-0e87-488e-8ef0-5b58bb218d53",
        "cursor": {
          "ref": "748ab2cd-fbf6-4bad-8d52-f3f46843b6bd",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f53d636-3280-4654-b17c-17471c2267e0"
        },
        "item": {
          "id": "62bb0889-0e87-488e-8ef0-5b58bb218d53",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0fefa522-af63-4610-923d-81c52d37bf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09acda8-6a14-4efe-b73e-9849cc033405",
        "cursor": {
          "ref": "4946461d-dee5-49ab-b42d-1222e2857f74",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c721176d-2817-4749-8d98-4af5c750c290"
        },
        "item": {
          "id": "c09acda8-6a14-4efe-b73e-9849cc033405",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "52eec867-b975-41e8-92f9-c5becc6389bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1bbf6a-7910-4541-95ad-5c474998af18",
        "cursor": {
          "ref": "02ab908c-2034-4e10-9a7d-c77a11a3d498",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a06965dc-3857-4640-b6a1-ad376345bc80"
        },
        "item": {
          "id": "dd1bbf6a-7910-4541-95ad-5c474998af18",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "31253ea5-0350-4fac-920f-fd17310996dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c76bcd-8fa4-409a-8000-568ff7aee601",
        "cursor": {
          "ref": "5aff0289-ac91-4c1c-bdc3-5ca91c05c1b0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a23a75cc-54d5-49af-8cff-1976b785b522"
        },
        "item": {
          "id": "a3c76bcd-8fa4-409a-8000-568ff7aee601",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5bc21c38-6893-4bc0-9de2-9a2fda469ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e16e05-2c09-486f-87b7-799a975d791e",
        "cursor": {
          "ref": "f613461c-4bbb-4818-ab4d-62c99ad77715",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "11d06821-51af-4b01-94dd-b44f6a3602b1"
        },
        "item": {
          "id": "20e16e05-2c09-486f-87b7-799a975d791e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a3dc874-f3ea-4e46-89a1-07ae4c6a0cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff6686-1511-4bec-afbd-c0464dceb3ba",
        "cursor": {
          "ref": "37b456d4-e7cc-440a-bcdb-a7c987262a3b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0a26ab55-3357-42ae-b633-0f962fb16798"
        },
        "item": {
          "id": "95ff6686-1511-4bec-afbd-c0464dceb3ba",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f41162d-56a5-4afe-acbc-ac18a7c1c7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec9b7af-129f-4569-be51-180194de7ae2",
        "cursor": {
          "ref": "d0a3b973-7dd7-4c5f-a8bf-4a4e8ed027ae",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "694e7eba-d0b5-4a60-b658-7ed5ddac524d"
        },
        "item": {
          "id": "bec9b7af-129f-4569-be51-180194de7ae2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c4cdc41f-4986-4f55-a4ce-b3bf4c74a0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729d9cea-1ccd-4689-958c-9d5812925bbc",
        "cursor": {
          "ref": "7f1d9599-b4c1-402c-b954-e3a1e1b7c8c6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1897167e-f2bb-4454-a5a3-15bb3b8896d5"
        },
        "item": {
          "id": "729d9cea-1ccd-4689-958c-9d5812925bbc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d0dce1e6-779a-448d-8be9-d002051f339b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f19c974-5409-4686-832b-fab01fb7a0cf",
        "cursor": {
          "ref": "46698863-144a-4fcc-9324-2389cf14f5c1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bf00eb72-0cb5-4195-9a27-873059f08cad"
        },
        "item": {
          "id": "5f19c974-5409-4686-832b-fab01fb7a0cf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fb1c0f85-d00a-45f8-abf5-48b380b565c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57487a20-c357-4016-ab4a-414cc3f34818",
        "cursor": {
          "ref": "0e3dd55d-7310-4292-9331-edcfd0d4c908",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f426330f-0bfe-47a9-b32f-7a3036883460"
        },
        "item": {
          "id": "57487a20-c357-4016-ab4a-414cc3f34818",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "75558b30-39dc-41a7-ab1e-d54f409d86e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bfbd9f-7e67-48c6-b817-adb49025ea93",
        "cursor": {
          "ref": "345121f0-0ca5-47a5-8f53-d64f564938c6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d08d1655-967c-410f-8e66-721e7c89aec7"
        },
        "item": {
          "id": "b1bfbd9f-7e67-48c6-b817-adb49025ea93",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d4eba15a-ae5b-4b32-b791-2f28088844a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7908c0a5-a162-43af-954c-420759b8f794",
        "cursor": {
          "ref": "d212e108-37d5-4a42-bf5a-eef2cc7c5879",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b7d36d4f-b9ff-4cc2-8335-3bddf38cdc25"
        },
        "item": {
          "id": "7908c0a5-a162-43af-954c-420759b8f794",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a1835e9-f9f5-46db-b698-b3d9465d3286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d236e-a02b-4b69-8ba1-2d8a8ed746b8",
        "cursor": {
          "ref": "8e3875f5-0a57-40b9-a57a-0ccd2b29de4f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b2899a2-d954-48df-a832-4c58565fd3e7"
        },
        "item": {
          "id": "e32d236e-a02b-4b69-8ba1-2d8a8ed746b8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b582bef-96cb-4cf6-8095-aea36ace9166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f1e8d3-23d1-473f-ae67-6a575a142ab6",
        "cursor": {
          "ref": "a031af54-00ad-4741-a09b-b3e8d1f122cb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "22ba7d75-d010-44f7-a88d-e7c7e1f7ae3e"
        },
        "item": {
          "id": "93f1e8d3-23d1-473f-ae67-6a575a142ab6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9e26631-1162-4e8c-bdf5-4ef56873a93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75367219-1464-458a-9e0c-bb9b5ea22b5c",
        "cursor": {
          "ref": "5ea8765c-a167-4941-9d9b-8934a03f5913",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "48f0d865-cca5-4094-b252-3bf7f062853d"
        },
        "item": {
          "id": "75367219-1464-458a-9e0c-bb9b5ea22b5c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "46c4c28b-c82d-40b4-82e1-f2ea595b3fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae51e82-5022-406d-b678-b9b4e938a959",
        "cursor": {
          "ref": "3d5969b8-e58a-4841-a338-12a7e8b7ef9b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "90e84778-ba57-436b-903b-548b6632be96"
        },
        "item": {
          "id": "1ae51e82-5022-406d-b678-b9b4e938a959",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2814038b-fe5a-4e8a-bd8e-d7a472bfee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20a9eab-cea8-4bca-8fd6-1aec52c1587f",
        "cursor": {
          "ref": "30107253-2a20-4c70-bbdb-24cadd7b8aa0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "756e3bdc-b391-4f06-90ba-e5d3c9f26930"
        },
        "item": {
          "id": "e20a9eab-cea8-4bca-8fd6-1aec52c1587f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "96eed48d-949e-4b10-b04c-86fb865d9a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed86f7-8515-4240-b77a-7c6725504b27",
        "cursor": {
          "ref": "ef2e7610-ad1e-4062-92c5-6a9959f5a05c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c00fa818-87cf-4987-a254-a8dea488de13"
        },
        "item": {
          "id": "0bed86f7-8515-4240-b77a-7c6725504b27",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c07a1c13-c1b2-4be3-92e7-2539ca3c202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1964ee-5eec-46ac-a38a-a85014594977",
        "cursor": {
          "ref": "ea9ae304-f797-4f9a-85f8-656456b4f4cb",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "56b31979-8fe8-4da2-9a05-630ed63caa91"
        },
        "item": {
          "id": "cb1964ee-5eec-46ac-a38a-a85014594977",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "04bb92c0-e6b5-47f0-a042-4ad1c756c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3908961d-a724-4ee3-9388-9655210a91c4",
        "cursor": {
          "ref": "98a8aa90-a878-47d3-881c-ad03922ea372",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd0387f8-6a62-4c67-b7df-3daddb96a0a2"
        },
        "item": {
          "id": "3908961d-a724-4ee3-9388-9655210a91c4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0225db83-bb7e-4073-aa59-12f406c1d499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a25b3e-4e2d-4583-b6c1-cdfe2523e30c",
        "cursor": {
          "ref": "b1ecab40-9fe1-4bc4-83fc-41072dde7019",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16046784-c9fc-4b9e-b3d2-8c78c3c4a693"
        },
        "item": {
          "id": "44a25b3e-4e2d-4583-b6c1-cdfe2523e30c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "363d0de4-db10-4ce7-9e31-1a751396d7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a09e5ab-7430-4740-b3ba-314e2adb68a1",
        "cursor": {
          "ref": "10689fe2-63a5-4b93-9f64-d0879199ef3a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a1a55e42-76b0-47fb-ad57-80949ed44452"
        },
        "item": {
          "id": "6a09e5ab-7430-4740-b3ba-314e2adb68a1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f65219f4-f986-44ab-8ac2-454ba22adee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14643bce-7ee9-43fb-8678-ada4f3a4e45c",
        "cursor": {
          "ref": "95f5cf5f-667b-4d90-b213-3582270ae5ba",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9b60347f-966e-4b6f-bf7a-162dbe462b5b"
        },
        "item": {
          "id": "14643bce-7ee9-43fb-8678-ada4f3a4e45c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ff1aaf2c-536d-44b8-9489-62ea8cb2a84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973aaafd-8989-465d-b108-64921bb9e59e",
        "cursor": {
          "ref": "70debc23-4e29-4596-8760-88cd81191b05",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fa518749-dc61-47a7-ae1f-ea6a524922a1"
        },
        "item": {
          "id": "973aaafd-8989-465d-b108-64921bb9e59e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b575ac23-0bc4-447f-a1b7-6dd07bb2eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2e4644-c9c5-4d40-9bb2-aec191642d2f",
        "cursor": {
          "ref": "3208415c-6e92-47e0-9353-83775f8202d1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fbe77f0a-7d9f-4987-a9b5-a8c19776f1d4"
        },
        "item": {
          "id": "fd2e4644-c9c5-4d40-9bb2-aec191642d2f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "68777dda-4f74-4f95-88b6-dd091fbc6008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533ce6cc-0a35-4caa-b0b5-17f82842e20e",
        "cursor": {
          "ref": "3df081e2-8184-4ee0-a955-4aa6bebcb02a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0df24167-8f0a-4457-91ae-a9e48a7110aa"
        },
        "item": {
          "id": "533ce6cc-0a35-4caa-b0b5-17f82842e20e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "060b94cc-da4e-4126-98c6-0508da30f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef19bec8-6f86-4072-a2bb-06f882dfc144",
        "cursor": {
          "ref": "b93d84a2-f309-4678-ae3e-3b72e3655c13",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fc106ce4-65e0-43c8-a389-054938edff6c"
        },
        "item": {
          "id": "ef19bec8-6f86-4072-a2bb-06f882dfc144",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c164cfe-d819-4241-a16a-735db36a0bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5672e7fb-d12e-4b75-ac90-b01318a55225",
        "cursor": {
          "ref": "dfd7c620-4a80-40f0-9a7f-2a83c2770e99",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7aaa365-2deb-4326-95db-da6cf8e37bc5"
        },
        "item": {
          "id": "5672e7fb-d12e-4b75-ac90-b01318a55225",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dc56dca7-f3ae-4818-84fe-62c2f7b338b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22766f7-0f07-47d4-aafa-7f18172ab4c3",
        "cursor": {
          "ref": "3d4ade37-77c2-44fd-939b-6d30dac0937f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27ab9e92-6f7f-40fe-b412-844cb12939a8"
        },
        "item": {
          "id": "e22766f7-0f07-47d4-aafa-7f18172ab4c3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2b749916-6e2b-4300-ada5-a2550d05bddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecaf6cd-53d0-4055-b396-746190d3b2d2",
        "cursor": {
          "ref": "4a21ba4f-e8de-4155-b76b-b03aa49645a1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "736ad1fe-421e-4a13-b3e2-99dfdf2a6431"
        },
        "item": {
          "id": "eecaf6cd-53d0-4055-b396-746190d3b2d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8945725f-f974-450a-a095-0181e9072263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371539b0-1c79-4c15-a6cb-7de745d2664f",
        "cursor": {
          "ref": "7018185e-2fcb-4d77-86de-2aa78d01d252",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cbecad54-8dff-4677-bc57-72faa2350955"
        },
        "item": {
          "id": "371539b0-1c79-4c15-a6cb-7de745d2664f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c836dfaa-36e3-4d70-9524-8878dcdd4c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01655bb-6bc9-4d76-81e8-545084c8762f",
        "cursor": {
          "ref": "8ac8d843-cbee-4d4f-aa15-07d1404a9726",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "43cac9a9-61d0-4c98-8be0-6916297e37af"
        },
        "item": {
          "id": "a01655bb-6bc9-4d76-81e8-545084c8762f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5cf64fbe-74be-4ae2-b143-d8bb281693b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0e2ed-933b-476d-8590-b7b4512d3142",
        "cursor": {
          "ref": "8db4ddd9-f4e6-4cdf-92ba-be3d01e000e5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a2e9f0ad-fe7c-4e84-80aa-d2ab545a4c60"
        },
        "item": {
          "id": "5eb0e2ed-933b-476d-8590-b7b4512d3142",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8b09fc7e-f249-4005-a476-a453943b49fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6040c17-3ff0-4c19-ba3f-d79b83bd2721",
        "cursor": {
          "ref": "ffec4063-573f-481a-88cf-39a40c2a20ef",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3b7d1716-8d15-469c-9fb5-2ed62b427e7b"
        },
        "item": {
          "id": "d6040c17-3ff0-4c19-ba3f-d79b83bd2721",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a8153606-4f5d-4a51-9532-9e338285da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecf7f1f-832c-4909-a78a-39d14fb6a6f4",
        "cursor": {
          "ref": "b5e7f10a-248d-4e22-9a59-4f3ec47a6a7c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9c9f1d92-276e-40e3-8ae3-d1449d0c249e"
        },
        "item": {
          "id": "9ecf7f1f-832c-4909-a78a-39d14fb6a6f4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0902c1f2-06e6-471a-aa6d-9242bc910c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7395db00-7437-470d-ac87-79f89c0b5258",
        "cursor": {
          "ref": "a75fae60-c1c1-40a5-ab57-bb55bccbf47a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "237fa75c-0a5d-4510-a5fd-650ac558c2c6"
        },
        "item": {
          "id": "7395db00-7437-470d-ac87-79f89c0b5258",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "197a0cc1-8010-404b-b2ad-d393907e3f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7c2be2-df22-4413-949a-efd17effc0ce",
        "cursor": {
          "ref": "5ae6d351-5cc0-4b64-b51e-b16556b913f7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58764035-7855-4d48-8bcd-e23937cdc4a5"
        },
        "item": {
          "id": "be7c2be2-df22-4413-949a-efd17effc0ce",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b615ae4c-8a29-4ba0-8d5e-7193a170371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5f87e9-bce7-4542-a48e-b518401b6909",
        "cursor": {
          "ref": "f3fbdaa5-9133-4e81-a691-1081e5cc1480",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3fbc7216-6439-4504-8323-f90ecf072c3c"
        },
        "item": {
          "id": "fd5f87e9-bce7-4542-a48e-b518401b6909",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d8d804d4-a238-4188-a473-b875f70bd650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2528ff-d626-4439-a67c-9545fd9ef5ab",
        "cursor": {
          "ref": "fbc5d7a5-11b0-400e-a7b5-487b2474723a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8dc4465d-f812-409e-8435-a24607a7ba0b"
        },
        "item": {
          "id": "7e2528ff-d626-4439-a67c-9545fd9ef5ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5c7972a4-3ab1-4a71-a8e4-92a5030c82cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444bfdbc-102c-474f-830d-794dc572266e",
        "cursor": {
          "ref": "c6baee64-e9a1-45c4-841d-e261fe5ca6cf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e4f78ece-9e4f-4b09-975d-1636fe8a0db3"
        },
        "item": {
          "id": "444bfdbc-102c-474f-830d-794dc572266e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "92c45f8e-3027-4454-a56c-66bd7ce24ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edb4b0a-dbda-43a9-80fa-1f07e798266e",
        "cursor": {
          "ref": "c753c44a-da77-43d0-85f1-ec38592331d9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "49b5a1c6-871c-4d40-94b5-bd538d0d6a9a"
        },
        "item": {
          "id": "9edb4b0a-dbda-43a9-80fa-1f07e798266e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "638ac259-7202-43c2-96cb-2f04fa860487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7546559-fa5c-48ff-93de-b5b810b7ce21",
        "cursor": {
          "ref": "34adf265-478b-45a2-a151-4aca9970c35e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2b16e184-2473-42be-a2d5-9aaca943e990"
        },
        "item": {
          "id": "b7546559-fa5c-48ff-93de-b5b810b7ce21",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2eadd29f-5da6-461a-a67b-34543ce628d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69db67f0-219c-4d5d-9c22-d83f0a0df3ad",
        "cursor": {
          "ref": "806ae450-6fdc-40a4-aa96-038c3441f437",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77ee391d-fe04-4fb7-9ca8-5787fa7a1305"
        },
        "item": {
          "id": "69db67f0-219c-4d5d-9c22-d83f0a0df3ad",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f364eb1-4a16-4dfe-9b66-428f30db1e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90e4bae-38bc-4b77-b694-7203047f61e2",
        "cursor": {
          "ref": "9ed41b86-57f6-4360-b7b9-08c67d83ee01",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63ca4165-0647-4065-b3f5-da01c4267c64"
        },
        "item": {
          "id": "a90e4bae-38bc-4b77-b694-7203047f61e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a8843ceb-066e-449b-8b56-175a87a3a037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ec8f13-fae5-4ec2-a499-5ec86b1be2cc",
        "cursor": {
          "ref": "675b62c7-ac0c-4258-8016-3e797179725e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc01a841-18d1-40d9-8c02-6e6605a931ca"
        },
        "item": {
          "id": "23ec8f13-fae5-4ec2-a499-5ec86b1be2cc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f2300a4d-f227-444a-92b5-ec24f4072252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e94411-3b28-49be-966e-45e1618009da",
        "cursor": {
          "ref": "b5d2b961-ddbd-4408-b0fc-8052ce4fa865",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6bbc1852-9b1f-4f9a-bfa3-637cfd9a3dfc"
        },
        "item": {
          "id": "b7e94411-3b28-49be-966e-45e1618009da",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e6d2cbbd-bac3-4f2d-b5db-4af95dbbd3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7db02e-f170-4927-bb77-1ca34d835b4a",
        "cursor": {
          "ref": "e4a884c7-500d-48c0-9389-23d60f4064e6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "03a8509f-880b-4e7f-ab69-5e4529c5b6c1"
        },
        "item": {
          "id": "aa7db02e-f170-4927-bb77-1ca34d835b4a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "17b10b63-4971-468b-bfe6-25bd6a292fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5296278-8f20-443c-ac37-9e6fe042aa84",
        "cursor": {
          "ref": "b4d5ccba-f2ed-42a9-b539-cdb6309f3da8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a2a97af-4121-4ec3-9767-a6851f30376d"
        },
        "item": {
          "id": "f5296278-8f20-443c-ac37-9e6fe042aa84",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3ed040c3-55bf-43a2-9f12-c4f6af5cfa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6aa44d-380a-41de-905d-38bbd6464b84",
        "cursor": {
          "ref": "a07f996a-6b9c-4b5e-91e1-af476a6031bd",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "23e7a0f2-441f-483e-8f13-04b747ee1f53"
        },
        "item": {
          "id": "2a6aa44d-380a-41de-905d-38bbd6464b84",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "289e3b87-4672-4447-820c-a33d72ebc08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d786bb76-f6ed-4bed-bf83-7416562b3388",
        "cursor": {
          "ref": "85b57574-cf2c-43bf-91e4-9debf6951271",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8c180000-4664-4476-b595-0fc981a7bb61"
        },
        "item": {
          "id": "d786bb76-f6ed-4bed-bf83-7416562b3388",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2a04da03-962f-4a44-996b-c95f79d8b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727935e-7ea9-4e86-b248-d5abab3cefc3",
        "cursor": {
          "ref": "875895fd-2103-460c-afd0-5a808cf407da",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bbffb1d0-4e41-48ef-bdff-0f17dcf20aa0"
        },
        "item": {
          "id": "e727935e-7ea9-4e86-b248-d5abab3cefc3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d87245c1-21f0-4174-9352-4d23fe893ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a63ee96-33e6-476c-bb9d-4c59fe3a3262",
        "cursor": {
          "ref": "7109eee8-d2d1-4824-8265-e4a5a81fc31e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71e8266a-74a1-4d2b-b4e2-5a21b51160ac"
        },
        "item": {
          "id": "8a63ee96-33e6-476c-bb9d-4c59fe3a3262",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "deff970c-4af0-45ed-8a53-b1b98a06acfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0163a3d6-6944-423f-9f4d-1db117a44dd2",
        "cursor": {
          "ref": "fb320495-c5f8-4e2d-92f3-7cdcc0fac286",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e3518a4-9293-41e6-a84d-782ce7bbe2d4"
        },
        "item": {
          "id": "0163a3d6-6944-423f-9f4d-1db117a44dd2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6a8ffcb2-2ea7-4ee6-bbd2-88447adb8cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74088df3-c97f-4395-aee6-c47d5aea8b2e",
        "cursor": {
          "ref": "fbfa5a63-7498-4fda-8c90-d18bda7ae31b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "907ef266-22c5-4d96-85f5-4bde8dff2f2b"
        },
        "item": {
          "id": "74088df3-c97f-4395-aee6-c47d5aea8b2e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5cc80d95-f77b-4433-b85f-1decc0f8d057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e2dc45-274e-41e4-a95f-a9c24f908e16",
        "cursor": {
          "ref": "1e1a03ec-5cff-4ab9-b0b4-5f0681b435d6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e7041d56-5a46-49f2-9bc2-ba42d7a0914e"
        },
        "item": {
          "id": "20e2dc45-274e-41e4-a95f-a9c24f908e16",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b71005c6-2ab2-405a-96d0-38e7a34bf9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f5da2-bfae-4a62-aa3b-5e4a9d7f9e61",
        "cursor": {
          "ref": "67105097-502a-4768-ab2e-e9849646a7a0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "beff91ba-a162-4d48-a5a7-bebecdcc7aee"
        },
        "item": {
          "id": "eb0f5da2-bfae-4a62-aa3b-5e4a9d7f9e61",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6806670d-103e-45ce-9a48-1e770f42691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffff26a-6409-47c9-9120-4718a889fa26",
        "cursor": {
          "ref": "361351da-554b-4384-b93d-99c687be8e64",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3c998dd7-c8fc-4016-84d1-1bfe3edca923"
        },
        "item": {
          "id": "4ffff26a-6409-47c9-9120-4718a889fa26",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f8b14dd2-592a-4899-b70d-d08752d259c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0986bf0-b42c-4929-ba63-6374208224ad",
        "cursor": {
          "ref": "2299c52f-e8c2-4c22-aef4-2a482ebdb278",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4fe45d5f-22b1-45f5-a163-36ea189b0da8"
        },
        "item": {
          "id": "f0986bf0-b42c-4929-ba63-6374208224ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "937501a9-e345-480c-9748-4e46ba9b49e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ad65d7-f5a8-4dbf-99f1-1d65dcb16c97",
        "cursor": {
          "ref": "a03153c0-200e-4c3b-bd54-6b345b434b7a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d99db63b-5306-4895-a697-5e8d085a4246"
        },
        "item": {
          "id": "a7ad65d7-f5a8-4dbf-99f1-1d65dcb16c97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da4ad2a0-c028-4b22-bedf-a0e096f56d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64833e74-b746-46d8-b434-65611607edd9",
        "cursor": {
          "ref": "3ae80f61-6a94-4369-94d3-1221eb5d78fe",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "42ebbc77-1b2b-413a-9b77-5d351b192dbd"
        },
        "item": {
          "id": "64833e74-b746-46d8-b434-65611607edd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f1ba8a87-3a7d-40cc-9049-13c9236a9929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534638c-eb74-47b1-9916-79154e70cf3c",
        "cursor": {
          "ref": "f46911a9-68d0-4599-814a-b0b38afabd6f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "91e0c6a4-0d3d-4e60-8a26-e10c07371a3b"
        },
        "item": {
          "id": "6534638c-eb74-47b1-9916-79154e70cf3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d7f3571a-587b-4ab4-b402-acd0327d3020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd820df3-b90c-4799-9d18-0c7c895dac38",
        "cursor": {
          "ref": "11591d10-f13b-4047-94c3-b2d9e8fccfaa",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "73a8183c-e3e4-4e57-a29a-3f24535090f1"
        },
        "item": {
          "id": "dd820df3-b90c-4799-9d18-0c7c895dac38",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1ec62c5a-99bc-458c-96b7-b838d120c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f144b4-8d4c-4593-80fb-03b2b65b403b",
        "cursor": {
          "ref": "15f0a8f5-e4a4-4f2c-a3d5-a8a02adff902",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4421f19c-8cfb-4f2e-b538-48f770dbfc4e"
        },
        "item": {
          "id": "c0f144b4-8d4c-4593-80fb-03b2b65b403b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4cbc75d6-60dc-47d8-a384-6e5a056dc5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd70e2-24e4-4cd2-90c0-77864644ad6f",
        "cursor": {
          "ref": "69986d3d-973f-455f-a1b8-87ecb04652e5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2a7c0ce6-d986-4eec-9d32-c1bf3e048e21"
        },
        "item": {
          "id": "0ecd70e2-24e4-4cd2-90c0-77864644ad6f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "52aa66fd-5d94-4ab1-a3b4-7ba1e6402996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7139dd83-349b-443a-bac3-ec1c91207e53",
        "cursor": {
          "ref": "79e3595c-b32a-4a9c-b23c-d36e46f349ad",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "39426cc6-b49a-4d48-b49d-596cee85be8b"
        },
        "item": {
          "id": "7139dd83-349b-443a-bac3-ec1c91207e53",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "87106fc4-43c1-451f-acb7-cf02c1e22af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bba5c20-26dd-4a7e-bbde-7fbfd8b9abed",
        "cursor": {
          "ref": "7a121894-ad45-4457-b114-616804a9ef0a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ee84ce30-bb47-476b-ab00-060b2fcadb35"
        },
        "item": {
          "id": "1bba5c20-26dd-4a7e-bbde-7fbfd8b9abed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ceee56f-13ee-4c33-8d4a-18eaca312316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb26b7f5-50ce-41dd-a79c-692458c42d09",
        "cursor": {
          "ref": "fa6671b5-e904-4185-806c-d8511b3f1ac4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2fb1222e-0807-4ded-919c-8ace7ad9fbbf"
        },
        "item": {
          "id": "fb26b7f5-50ce-41dd-a79c-692458c42d09",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "53eff24c-ac72-4cbb-a525-39fb758f9ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d93894-1737-4845-98ad-da6f23de5b95",
        "cursor": {
          "ref": "36bce5d7-5c5c-4619-a91f-3c1644ceb1f4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c17c5639-dcaa-44b6-9d6a-b806e6e18b9c"
        },
        "item": {
          "id": "99d93894-1737-4845-98ad-da6f23de5b95",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d808fa26-75f3-47de-810a-d974a051a74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d734d592-c87f-452a-9845-423e0a248716",
        "cursor": {
          "ref": "d354670f-18f4-417d-8bb6-f507ab0bed1e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "86f813c4-1de6-4624-89ff-b6dc7e4bd945"
        },
        "item": {
          "id": "d734d592-c87f-452a-9845-423e0a248716",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cc111fe1-a419-4bf0-bc08-e487769e53fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2219af3-8644-42d4-9054-314056ff4d01",
        "cursor": {
          "ref": "f8468a3b-e037-463c-b701-a12699750ffb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e05bd71e-a9a8-4c16-9bab-f5b7440cef1f"
        },
        "item": {
          "id": "b2219af3-8644-42d4-9054-314056ff4d01",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e03dde5-b9b3-4c06-abc3-b20c334f7fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dae894-e8f5-4990-a900-fc34cb4ee586",
        "cursor": {
          "ref": "f00a09eb-ff54-4cd5-9b38-016585c00c3d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "38a1d202-bcad-4771-8b24-5f4d22006811"
        },
        "item": {
          "id": "32dae894-e8f5-4990-a900-fc34cb4ee586",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "02153ade-3f30-4745-abf2-8e61346a544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414ab0d-6d5d-4292-a9e5-14f52fd9691b",
        "cursor": {
          "ref": "3cfd5c9d-be28-4eb4-b33e-30d3cee47143",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "879a36bc-e91a-400a-923e-2bd4585e63a0"
        },
        "item": {
          "id": "f414ab0d-6d5d-4292-a9e5-14f52fd9691b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cb18bbaf-f47a-42fb-93bb-57abe34ca7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd31ad68-4fc6-412c-959d-0b08796efb52",
        "cursor": {
          "ref": "c161c63e-17ec-4c7f-8de8-1b1635d2de58",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f0056b10-459b-4cb1-bb0b-1e9d45c8c436"
        },
        "item": {
          "id": "bd31ad68-4fc6-412c-959d-0b08796efb52",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1917ea75-9eb1-43ae-b20a-1a97d444f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef8ce18-c99d-412d-a433-0d8997c9756c",
        "cursor": {
          "ref": "8f8de8a1-a8cd-426a-bf35-095e248dc772",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5112a263-f610-4c31-b5cc-46365e374c99"
        },
        "item": {
          "id": "cef8ce18-c99d-412d-a433-0d8997c9756c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c333d3c1-e13b-460e-83a9-7f96a8bc163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6acdd2-df40-4dc1-aa61-3686ee7565d1",
        "cursor": {
          "ref": "14fe4553-832a-4b3b-9d1f-485578cfa2d4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4bc99746-9f55-4fc7-9df5-b47aa7709a29"
        },
        "item": {
          "id": "0c6acdd2-df40-4dc1-aa61-3686ee7565d1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "63d1020c-147b-4b40-a92b-74dbdc654dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc61d590-18f8-42c1-a045-9f93bc1b2d54",
        "cursor": {
          "ref": "ab3ff356-0588-4048-b82a-9eb2fb6afae3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d4c00d86-e86e-4eca-a03e-e988d730f090"
        },
        "item": {
          "id": "bc61d590-18f8-42c1-a045-9f93bc1b2d54",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7b106bbc-2036-4370-a413-a4ce7911199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdad7be-9461-4b76-9c81-7ff035721f2b",
        "cursor": {
          "ref": "0f0b3f9f-3157-466a-94d3-cfebd646e50c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a4ba482a-a0df-4393-ba05-d140dc198b5a"
        },
        "item": {
          "id": "ffdad7be-9461-4b76-9c81-7ff035721f2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30dedc39-60e4-43b5-8cfc-0f15e6b38419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a8d001-0093-4d84-b116-cdfd3c7bbed8",
        "cursor": {
          "ref": "375abd22-234b-4134-a829-235431febf4f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17daa5fb-0849-4dba-af93-5fcffc874a8c"
        },
        "item": {
          "id": "a9a8d001-0093-4d84-b116-cdfd3c7bbed8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9e88a2c3-0d67-4926-b40c-71edc11b841b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d44a0-909f-4175-9edc-9a13fbf09fd4",
        "cursor": {
          "ref": "fadbf881-e49d-4142-9949-08ce9220f9e3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d2fdba60-3394-4aa5-8597-a296265d94a8"
        },
        "item": {
          "id": "ad2d44a0-909f-4175-9edc-9a13fbf09fd4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cc95135b-06d5-4377-8c2e-b11bf3ef2376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d58025-888d-44a1-892d-37bb227edaa3",
        "cursor": {
          "ref": "627e6b81-4515-45df-a526-7c4e99479cf1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7c2974d8-a2f3-4002-9abe-9ff76d08fda0"
        },
        "item": {
          "id": "92d58025-888d-44a1-892d-37bb227edaa3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b8e13c52-035d-40d0-8086-1a59f586354e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be485b8c-cbc3-46e2-963a-8fce2d46a635",
        "cursor": {
          "ref": "422d0158-4b69-459c-881f-089828e2efb6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6673bfc-5907-4129-80f9-dab7a763299d"
        },
        "item": {
          "id": "be485b8c-cbc3-46e2-963a-8fce2d46a635",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "899a34e4-2348-4046-b637-0d64a07d6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332cf3fc-f780-43ff-a241-ec80419a0412",
        "cursor": {
          "ref": "e0d5ec0b-9405-4c78-a3a1-bd0609c2d520",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1c46e73f-2a71-4a84-bbf0-db47e1ddfc10"
        },
        "item": {
          "id": "332cf3fc-f780-43ff-a241-ec80419a0412",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37483698-adf9-4dcc-af41-7b514b8618a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d5a7f8-4ad4-40df-b5bc-3172626f25bf",
        "cursor": {
          "ref": "2dfd24a8-f465-4c64-8975-195e95ab001f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1f6fadbd-efe4-4e09-ae1e-ba1e4b05bc07"
        },
        "item": {
          "id": "72d5a7f8-4ad4-40df-b5bc-3172626f25bf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "acc3533a-ab42-4f69-94e0-a9d01742a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05e5a70-0cef-48a1-8a04-58b34bb6ffd2",
        "cursor": {
          "ref": "9b450023-0771-45d9-b797-f344be6ccd6f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f02e8c24-8cf1-4bba-9c72-51f3a5d3e212"
        },
        "item": {
          "id": "d05e5a70-0cef-48a1-8a04-58b34bb6ffd2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "231915f2-5b6e-4590-83f9-e0901b06a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58718ad2-653a-4b10-9f8e-7a1678e5de28",
        "cursor": {
          "ref": "fe1937ca-9fd4-4fc3-b8f4-d598b85e0384",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2c07f11d-20a5-40ce-954f-b547d8feb160"
        },
        "item": {
          "id": "58718ad2-653a-4b10-9f8e-7a1678e5de28",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ad40979-ee1f-4203-bbe3-b67f7f5c79a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac69aef-62a6-4645-a382-364d23710e10",
        "cursor": {
          "ref": "10f0363c-9a9b-4eca-9bfc-182df99d724d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0512230c-efc3-4c3e-87a0-73eb502b2b11"
        },
        "item": {
          "id": "4ac69aef-62a6-4645-a382-364d23710e10",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3d4bd3a3-cd3e-4340-a35b-8aaf6408d5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9610d3aa-16ec-45e1-91ab-c566c0d25118",
        "cursor": {
          "ref": "bb845d59-425f-4e8e-a462-b6c9a461bd9a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7df751af-ef0c-4952-bc19-dab88b99c579"
        },
        "item": {
          "id": "9610d3aa-16ec-45e1-91ab-c566c0d25118",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "159430a5-ce80-4126-af0c-e589732a98c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8fe65f-142c-42b5-b447-64696a14a1f6",
        "cursor": {
          "ref": "46ba8049-3ec9-4c19-b6d6-ffe90195926d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "63139123-6435-49fe-9da6-5659a21c523c"
        },
        "item": {
          "id": "8b8fe65f-142c-42b5-b447-64696a14a1f6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f873c20c-4b01-42ae-b303-70394858f4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c781764f-607b-41f3-b25c-7f4254871e98",
        "cursor": {
          "ref": "b2b05158-b47e-496a-af7e-e55aef137d81",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1fbed583-ef1a-4975-9b26-fbbe6fe2c36e"
        },
        "item": {
          "id": "c781764f-607b-41f3-b25c-7f4254871e98",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a9ce6569-07e5-4c93-a155-c4a73d7b8c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6c2cac-cf6f-4c10-a1eb-8cbed2a52dca",
        "cursor": {
          "ref": "6c3b007e-5ff6-4660-a286-4449fdc96800",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e74fd15d-f9a2-4bd3-95c9-f938bddd0847"
        },
        "item": {
          "id": "ce6c2cac-cf6f-4c10-a1eb-8cbed2a52dca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a254b25-d992-4a2e-8e40-58721ca23a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda2cfe0-2b5c-4013-b118-f80f07f123be",
        "cursor": {
          "ref": "d3bafd19-154d-432b-b3ec-5916e0a6b316",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c99dc365-31e4-47eb-a262-843db37abdcc"
        },
        "item": {
          "id": "bda2cfe0-2b5c-4013-b118-f80f07f123be",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "88848129-0692-4947-add9-f3a4900506b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dec9d31-a63f-4de7-a7a4-2e73daeceb29",
        "cursor": {
          "ref": "135c2289-5b6a-45a8-a069-3772326f6e4e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0440cd85-af47-4e6a-aec3-169eea6d0b7d"
        },
        "item": {
          "id": "8dec9d31-a63f-4de7-a7a4-2e73daeceb29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "210b00d6-7ace-4716-9d1f-bd992a66cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04499b3f-59f6-4028-bfe8-cebeb06fdc2a",
        "cursor": {
          "ref": "744e44dc-3f9d-4074-b2f0-cb8a870c5daf",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "822190e5-7de8-4dff-8b8e-df79d21dbedc"
        },
        "item": {
          "id": "04499b3f-59f6-4028-bfe8-cebeb06fdc2a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84da80df-b2aa-4188-bffa-053baeea0d12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29763768-fbec-4cc5-8e17-4d265e1a83cb",
        "cursor": {
          "ref": "5cf43c54-0019-453a-b878-95fc0912ecfc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e1c60999-045e-42a3-b3e4-3d7e788827cb"
        },
        "item": {
          "id": "29763768-fbec-4cc5-8e17-4d265e1a83cb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "815e6943-2abb-4764-9044-4fb03255bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "8075d074-3145-4f43-b6f3-c1cfb0e032ca",
        "cursor": {
          "ref": "61e731ca-1d84-43f2-b6f6-fbf219d2f101",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1bae099-98fe-4dac-a5b8-217a6bba99cb"
        },
        "item": {
          "id": "8075d074-3145-4f43-b6f3-c1cfb0e032ca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f0a17833-9a03-4c90-acb6-48c3920dc356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "e7b00761-c9d5-4206-996d-493917a9c88d",
        "cursor": {
          "ref": "5286ea9d-4623-45bd-94bc-6f0ad29725d7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "73a8f06c-cd17-4012-8a36-99fd15654e95"
        },
        "item": {
          "id": "e7b00761-c9d5-4206-996d-493917a9c88d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1c6d3393-0cda-43ba-b6d4-240137b94bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1282fa9b-ac30-4cc8-804c-570327a29796",
        "cursor": {
          "ref": "742a61c5-edcc-4a0f-a5aa-4e06140e923f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "23fba775-70fa-470f-bd15-948966249460"
        },
        "item": {
          "id": "1282fa9b-ac30-4cc8-804c-570327a29796",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5bd8b223-6169-4ab6-872a-b4c3817f9bdc",
          "status": "Created",
          "code": 201,
          "responseTime": 7712,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0858e8e-c51c-4777-805c-da31148766fd",
        "cursor": {
          "ref": "adbe25b7-a53c-4d73-b5a5-a9bddbe5530d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81c0c322-3594-4811-8297-6f42f030b723"
        },
        "item": {
          "id": "c0858e8e-c51c-4777-805c-da31148766fd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c5c6304-cbfb-4e4c-bb32-e0ef9bfe79f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3159c405-d4e5-44ec-b345-1d2f4d9ea957",
        "cursor": {
          "ref": "966e27ff-08d6-4f4b-8b74-469edba7e82c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f05f4fc2-6e33-4518-8d93-f60f32d56b23"
        },
        "item": {
          "id": "3159c405-d4e5-44ec-b345-1d2f4d9ea957",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5a3cb665-fa74-40af-9d8a-197b87bd6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7e157b64-a101-42b7-a6a0-4a3255446e51",
        "cursor": {
          "ref": "ff8c99c0-787c-4d9d-9d93-4f4e0e3ecc6c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f76d514-8b4f-4129-8a2c-99d0cc607812"
        },
        "item": {
          "id": "7e157b64-a101-42b7-a6a0-4a3255446e51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "776e5296-a279-47fe-8d9c-ee399b138a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb2b523-5f16-45cd-a6b0-ef3502578b9c",
        "cursor": {
          "ref": "8c29da38-7d21-43f8-947c-da7bcc139fc2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "530ce0b5-94a7-4b68-99b1-747fc0cd797f"
        },
        "item": {
          "id": "3bb2b523-5f16-45cd-a6b0-ef3502578b9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "00b7d536-1c29-4aa0-988c-bcc046950ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d6448a-8b2a-40b3-83c8-a3e93bcf9ef3",
        "cursor": {
          "ref": "bacc2d4e-ea5b-41f3-a1a2-d15dd25c00a1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "14ababe5-3364-4733-b749-fe198c6b4c56"
        },
        "item": {
          "id": "07d6448a-8b2a-40b3-83c8-a3e93bcf9ef3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b0f7089-29d7-4080-bcc8-48a17dbe5c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf7061f-af0a-490b-bd23-133e82bbe475",
        "cursor": {
          "ref": "725b9d5f-88e4-4fcc-8f96-d3934ffa6921",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adc7ab69-c4f8-4ac7-89f9-3116c0346539"
        },
        "item": {
          "id": "cdf7061f-af0a-490b-bd23-133e82bbe475",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e23dfa59-0d35-4ae7-8491-82deda447231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7fe081-9419-4b5c-b644-859f44aac356",
        "cursor": {
          "ref": "b55fe1c0-a038-4a94-b096-768f6063cb0f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8d8574c-0964-4a63-a650-1a2a7c86dd35"
        },
        "item": {
          "id": "fb7fe081-9419-4b5c-b644-859f44aac356",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "06546608-6615-45c5-ae13-dd34cd81b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4871cbd-56ab-4a1d-8aa5-ebab790966fa",
        "cursor": {
          "ref": "31ea2b40-60ae-45a9-87ab-b22342de6b98",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cd558fa2-d6f9-418b-810a-2cf795cd9065"
        },
        "item": {
          "id": "a4871cbd-56ab-4a1d-8aa5-ebab790966fa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9c9f5933-8f64-4d7e-b523-31408533f9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ed2fea-ca2e-4d0a-b7b1-fe596bc26391",
        "cursor": {
          "ref": "05742503-60fc-4e80-bdcd-8287587c567f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a8129fe2-5f22-4556-a431-3ad295599b66"
        },
        "item": {
          "id": "06ed2fea-ca2e-4d0a-b7b1-fe596bc26391",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10c29918-5814-46a7-bc96-7e90554f18ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8868cf7-1f07-4e96-be8c-0b7744315e36",
        "cursor": {
          "ref": "c46169a8-c6f8-49e5-98a9-8e20d72d71fc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "db0a253a-a15f-46aa-a9c8-10e2b8c6f50d"
        },
        "item": {
          "id": "d8868cf7-1f07-4e96-be8c-0b7744315e36",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3bca599-1f12-4d71-ba8c-4a849446238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54be6eec-6d89-4ca0-9a79-cf9eb4b33a03",
        "cursor": {
          "ref": "34c56955-097f-4409-8637-9df795562adf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "09cd0c38-c573-4094-8cde-0e0fed61d75a"
        },
        "item": {
          "id": "54be6eec-6d89-4ca0-9a79-cf9eb4b33a03",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5f417df3-84ca-4563-89e3-2c853ac2be69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa93bfd-322f-4e91-86a6-7d09d9aa5282",
        "cursor": {
          "ref": "ec6a805f-9510-44d2-9acb-6a01561af607",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "470418b2-34ce-442e-ad4b-84fd8c919a06"
        },
        "item": {
          "id": "eaa93bfd-322f-4e91-86a6-7d09d9aa5282",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0347feda-00c3-48a2-b904-2f3678011133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e6dc72-fc27-4c19-a52e-b2a3731a0d58",
        "cursor": {
          "ref": "9266be9c-2675-45eb-90cd-0381afa298b8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ccdb14e4-a741-4800-98fc-7596ff49b737"
        },
        "item": {
          "id": "f3e6dc72-fc27-4c19-a52e-b2a3731a0d58",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6002ab6f-8f1c-4c89-8810-7a327c648d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d356f850-d9f4-4172-87a6-c51b3ba515ff",
        "cursor": {
          "ref": "a2b8637f-457e-48f5-aeee-0a6bc10f1cbc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "01025d95-c0e5-42bc-82ca-458b638a00cf"
        },
        "item": {
          "id": "d356f850-d9f4-4172-87a6-c51b3ba515ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d531fec-c2c3-459b-948a-0e3c7e0c1e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52ac72e-d34f-4188-ba08-d057ddafb794",
        "cursor": {
          "ref": "d3456921-12f7-4a67-8d2a-022140ad9dff",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2beccd87-c2c4-4426-a3f3-84cbb1d544ea"
        },
        "item": {
          "id": "c52ac72e-d34f-4188-ba08-d057ddafb794",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e109d63-63de-4dd1-874a-41e4a6e3098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4dd8e-2c7b-4fce-9eae-1c6ba7b13189",
        "cursor": {
          "ref": "86011945-d511-4a90-9e13-83b637f525be",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e7c1142e-9e20-4518-94cb-07284fdb0117"
        },
        "item": {
          "id": "28e4dd8e-2c7b-4fce-9eae-1c6ba7b13189",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f8efb1e7-9453-4d87-b559-5cc647c56678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86ce22f-4583-4b22-bb3f-8c5c44b9e73f",
        "cursor": {
          "ref": "9dc577c7-421b-47cb-9fb7-b2dc4303589c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1b11bdcd-96eb-4241-988f-24d8904b44ae"
        },
        "item": {
          "id": "c86ce22f-4583-4b22-bb3f-8c5c44b9e73f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3109504c-02f1-487d-9ec0-6dea9eb93746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664fc591-64f8-4ba5-82e6-64a4296578ac",
        "cursor": {
          "ref": "b1f6e1c5-de54-4044-a80e-0b0fdb24e9ce",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "84455d2c-511c-463b-8b99-5ea45074954e"
        },
        "item": {
          "id": "664fc591-64f8-4ba5-82e6-64a4296578ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3cdc6b6b-50ba-4a5d-b31c-a3521f956686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb3c578-0f2a-4fd2-830d-499d9de5f82b",
        "cursor": {
          "ref": "b16ed6cd-01c2-4169-a95e-d8509b03b65e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4374bd69-3752-40b1-ade5-27f2d01abceb"
        },
        "item": {
          "id": "1cb3c578-0f2a-4fd2-830d-499d9de5f82b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e75924ea-1153-4ba3-9f45-2ebcbd8b648b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39cd5ed-cb53-40e0-9767-16e317de8cec",
        "cursor": {
          "ref": "29af615f-c9a0-4dc8-b61d-18a49d2e798f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "425bdd87-098d-4e5b-94e3-403018a31dbf"
        },
        "item": {
          "id": "f39cd5ed-cb53-40e0-9767-16e317de8cec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8bb33967-9ec2-4f5b-8417-eea87250cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcc5ba4-0675-4ac6-8f8f-be6bfa42b672",
        "cursor": {
          "ref": "86bd1062-baf8-4635-8a68-50638952783a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a503c272-a514-48dc-85e1-10aa3cf17689"
        },
        "item": {
          "id": "7dcc5ba4-0675-4ac6-8f8f-be6bfa42b672",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bec12dfd-f371-4b17-a9cc-74b950495d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e3c26c-ce7d-4a6e-859c-23bd52db541b",
        "cursor": {
          "ref": "c1e48e31-b0eb-4c18-b308-ace336c073a7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ffb5e19c-ed40-4cbf-8a4b-594b0095546c"
        },
        "item": {
          "id": "f1e3c26c-ce7d-4a6e-859c-23bd52db541b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2c69cb1-93bd-412b-9338-c0635cbd0d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3b0b45-5261-4d7b-ba43-7b71839a95cf",
        "cursor": {
          "ref": "b30e50fa-2111-44b1-aeef-bf96f1b342d7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2f5c2d79-0ad4-46b3-83f4-c19c654329de"
        },
        "item": {
          "id": "0b3b0b45-5261-4d7b-ba43-7b71839a95cf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cbef7fef-2ed0-4e74-a5eb-d5dacc69eeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a21e4-4393-45b4-949b-16fccee0fb53",
        "cursor": {
          "ref": "f13bfaef-ddd6-4afe-bfd0-ea0aeaa314e6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "40537199-8a56-48cc-9588-ff68e7b64c6c"
        },
        "item": {
          "id": "6b7a21e4-4393-45b4-949b-16fccee0fb53",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e671ad4-3241-4cb5-99dd-7972a3b7caf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777b2b60-e706-434b-95ac-ccf4ff48defb",
        "cursor": {
          "ref": "2600a619-27b7-45bd-95c4-2b2f5a635538",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f1c936e-aeed-41fa-9ee3-9921ef28088d"
        },
        "item": {
          "id": "777b2b60-e706-434b-95ac-ccf4ff48defb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54b36aac-4304-4131-ad5e-54f40e5e0367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69eed08-5781-45a2-9fec-ff66236736c7",
        "cursor": {
          "ref": "b58c7f55-030d-40c6-b5e3-08fcb41d2b1c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9d358da-7156-417e-a61b-f826b6ad78c1"
        },
        "item": {
          "id": "f69eed08-5781-45a2-9fec-ff66236736c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99841940-1fa8-4a57-bef5-5f5c98c6cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc365bbb-c594-4a37-ab8f-d915250396ff",
        "cursor": {
          "ref": "fd906db1-0d08-4dcf-bc88-e5078140c2ec",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "78701f51-afd2-46f8-b264-4a7dde55a265"
        },
        "item": {
          "id": "cc365bbb-c594-4a37-ab8f-d915250396ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba5d9ea8-1959-4728-bc1c-18c7c8b6c81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbceee2-dc06-4ed0-9b00-f98006bc001a",
        "cursor": {
          "ref": "2117a826-386b-4776-90cd-1e9d136fcf3f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ab33701-0b4f-4243-a809-49ed11df2483"
        },
        "item": {
          "id": "9bbceee2-dc06-4ed0-9b00-f98006bc001a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "af411497-364f-4fc2-9bb5-d9c1136066cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d030ff-1dc0-4963-a3cb-bd390b4b95a9",
        "cursor": {
          "ref": "b56affdf-886f-4a24-b534-869efc359c94",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "087c27b1-eb8f-4ec3-ad56-65fb5d054732"
        },
        "item": {
          "id": "e4d030ff-1dc0-4963-a3cb-bd390b4b95a9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5ed2745-4a67-4b81-ad5c-01ad2473d736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f87f70f-2917-4fcf-9522-3bb52efc252d",
        "cursor": {
          "ref": "68aa2196-fd3e-494f-b1a6-3087db6a57fe",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "12edb528-8b78-4782-94da-fa8dc7275624"
        },
        "item": {
          "id": "0f87f70f-2917-4fcf-9522-3bb52efc252d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36facfba-a012-4d07-bf9e-06e973183205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4856ff5c-6488-4906-9624-99455c76b4ae",
        "cursor": {
          "ref": "bec49c92-b31f-4022-b39c-88c51700726e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7ef16dc1-348e-4faa-b22f-90716ba2ea82"
        },
        "item": {
          "id": "4856ff5c-6488-4906-9624-99455c76b4ae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a82c00e-d4d9-429e-8803-f0e839c2a571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4130b23-df57-4d77-9601-42caf41a2738",
        "cursor": {
          "ref": "fd0c9965-f1fb-48d2-a015-f4eea1923756",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b3935a42-9e27-45bf-bddc-d995322071ac"
        },
        "item": {
          "id": "f4130b23-df57-4d77-9601-42caf41a2738",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9728d343-fe83-4c8b-ac30-54c2329668e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec077f3-313e-484c-967a-0e4f912e9e05",
        "cursor": {
          "ref": "35134b92-7323-4596-8f34-cd7739ab29c7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5a31047b-d4f8-4af4-a061-dca55c4ad3bc"
        },
        "item": {
          "id": "cec077f3-313e-484c-967a-0e4f912e9e05",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "23f0e096-f9e2-4d93-ae73-2117e7422f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1859b8f7-7466-4f36-8432-5be4ae65f923",
        "cursor": {
          "ref": "a58e521e-806c-48d7-9567-ae49b5870e37",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f684af38-7f2a-4e41-8bde-4e4642737764"
        },
        "item": {
          "id": "1859b8f7-7466-4f36-8432-5be4ae65f923",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "52365275-df7b-4bd5-afc2-b3a92d8ee74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb4f178-8fed-4530-9a61-90c153110e85",
        "cursor": {
          "ref": "f67d5cc4-44a6-4aba-ae57-de5041d1fae6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cce7153a-cd58-478e-b2f0-e607b217d2f7"
        },
        "item": {
          "id": "0bb4f178-8fed-4530-9a61-90c153110e85",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ebdbf830-1e52-4385-ad11-9fa34a242035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e6216d-dbef-405b-b64d-450e292941b6",
        "cursor": {
          "ref": "6623f9d1-2251-47a2-9976-ac8aa3186ede",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac5028a3-b021-4986-b74c-26c5513260d6"
        },
        "item": {
          "id": "99e6216d-dbef-405b-b64d-450e292941b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c255a71-5bd4-40cd-becc-e60d79b500b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258ee428-832a-41d1-a694-e79143a01dee",
        "cursor": {
          "ref": "18d0af05-7526-4a22-b6a2-b2542ec937ee",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "adafdeeb-5d5f-40a2-944b-3e829d005228"
        },
        "item": {
          "id": "258ee428-832a-41d1-a694-e79143a01dee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0bf9401f-7440-4e15-b5d7-502baf329ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05184fde-eb3c-42bc-8bf0-ec979dcd0d4d",
        "cursor": {
          "ref": "2c54e58f-ea96-4008-bc50-51cc951b9313",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5b43886c-f163-44f2-a45d-8e8c78c51106"
        },
        "item": {
          "id": "05184fde-eb3c-42bc-8bf0-ec979dcd0d4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19baa7e9-edb4-4dfd-9083-05f12cb918be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66d53d-a0e0-4c95-9154-f19be8710d65",
        "cursor": {
          "ref": "335a6b02-5d8c-4987-a8e5-2499d7156030",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e734a496-5acb-44f4-bf4f-825a5608caa8"
        },
        "item": {
          "id": "7b66d53d-a0e0-4c95-9154-f19be8710d65",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d72fbf04-cbe5-4e9e-a04b-da4bae7c0bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09864be9-f70a-4728-8ac1-bb8fb3eebdef",
        "cursor": {
          "ref": "f71d8a2f-bf68-469d-8f5f-aa74a4a387fe",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e0193a73-9c16-43c2-b45d-d3429e1abbd5"
        },
        "item": {
          "id": "09864be9-f70a-4728-8ac1-bb8fb3eebdef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1f387dcb-a2fb-4fca-8aaa-2ebce66e3f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7b7760-9be9-4d09-a0c8-3f3c31e0f5c7",
        "cursor": {
          "ref": "b77c0fd7-12ef-407d-9bcf-5e07da556e67",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5d259357-7deb-4aa3-9a98-080fb4167607"
        },
        "item": {
          "id": "cc7b7760-9be9-4d09-a0c8-3f3c31e0f5c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ab63c99-e368-42ba-a04b-afbdf9160c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e19284-7681-450d-89b6-b7d54f8317f4",
        "cursor": {
          "ref": "151918ac-dabe-4c4a-becc-b90a46c98cd2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f11293fe-c9ce-4126-a303-7f697434de62"
        },
        "item": {
          "id": "05e19284-7681-450d-89b6-b7d54f8317f4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ea6fe3f-a1f9-4cbd-afa0-b44073b1ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2fc09-4997-40f7-bfcc-8ad1d44f7bd6",
        "cursor": {
          "ref": "72b2604d-34cc-4182-b33a-c9aed3cc573c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f812d7ec-8239-4947-b859-4fcbb2984b59"
        },
        "item": {
          "id": "4dc2fc09-4997-40f7-bfcc-8ad1d44f7bd6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0f5662e0-cb64-443f-9e32-10f2183d4260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0895e484-f1b5-466f-a0ed-4f69c5f43e19",
        "cursor": {
          "ref": "b19800e2-007d-47d8-96a5-931a83a9b623",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "997b9e3c-92eb-45a2-8195-a80fbb59f6b4"
        },
        "item": {
          "id": "0895e484-f1b5-466f-a0ed-4f69c5f43e19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e5d9b24c-56ba-4c88-ad8f-0a5cc91579c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75687c09-9436-4c58-ac2a-9cac64f8e466",
        "cursor": {
          "ref": "156bd9a6-48d5-40d6-b7cb-a4771f785ed4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4e5828dd-761b-47d4-86ec-7eb59b677ef6"
        },
        "item": {
          "id": "75687c09-9436-4c58-ac2a-9cac64f8e466",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "45b20abd-cfbb-454c-9738-68c3028d17f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06960427-0c6f-4657-be73-2ab5270ff912",
        "cursor": {
          "ref": "ebd8ddb2-c79c-4226-bb89-ea7d11f4add0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1cfbbb5-f5af-4c84-a7af-1b1b63bfac39"
        },
        "item": {
          "id": "06960427-0c6f-4657-be73-2ab5270ff912",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "691d25f5-eeb9-4571-aabb-dd78dea67026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a36499-af8e-4a77-bd9c-72c718cd7def",
        "cursor": {
          "ref": "3be13f74-06c3-4e13-82e4-7d503c18e22f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9b1723e3-206e-40e9-b764-d7de8a0b764d"
        },
        "item": {
          "id": "f7a36499-af8e-4a77-bd9c-72c718cd7def",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31535379-b15f-4af9-9a50-37b3bb47d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0de0eb-7584-482c-8a44-ae2ba0aa3513",
        "cursor": {
          "ref": "73248445-3ea4-4b1d-bb9e-2a6ed12b8413",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2141358f-c7a8-4aca-8e8f-e6f28b1a956a"
        },
        "item": {
          "id": "2c0de0eb-7584-482c-8a44-ae2ba0aa3513",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99dd788f-57e0-4262-a6cc-6a4255f445e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c0b457-66ad-4f66-bc09-f602d5c8093f",
        "cursor": {
          "ref": "5f3b113f-bf3f-44e2-a172-3ac784d586fe",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "df2d92ec-da41-42df-bfb5-c828219c9070"
        },
        "item": {
          "id": "70c0b457-66ad-4f66-bc09-f602d5c8093f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "eab2d23c-3cda-405c-8735-0886b2126c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e84c8-9875-42b2-a313-f2f1cdc626e4",
        "cursor": {
          "ref": "1fcac979-b23d-4638-8a29-3ea5a69ae270",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82c54d55-bf0a-4b01-b540-c89c4bd9cdab"
        },
        "item": {
          "id": "6d7e84c8-9875-42b2-a313-f2f1cdc626e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19bb35df-894e-4282-ba8c-bd20fdfd5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aa3c0d-3368-40e8-8653-3939440d2d84",
        "cursor": {
          "ref": "1993267e-9cf1-489f-97fc-b1852dc53cda",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d0bb48bd-18a1-46e5-9702-6d5d1d7013e6"
        },
        "item": {
          "id": "63aa3c0d-3368-40e8-8653-3939440d2d84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "50f0e533-91dc-45cd-ba57-9c392385ba48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f95e95-7c03-48d4-964e-76816c8aeeb3",
        "cursor": {
          "ref": "f40e70f8-3c2c-4563-9179-7f4c0e59d7dd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b55745f4-0552-4c73-9345-696d3e5d32f4"
        },
        "item": {
          "id": "59f95e95-7c03-48d4-964e-76816c8aeeb3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9d4ac8a-ac1b-49f9-8c61-4d68769a275d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604e6bfe-a68a-4e83-a4bd-e95e717f3b65",
        "cursor": {
          "ref": "1e6ec69f-9f4c-4854-a1c9-a1a38c89245c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "10e1fac6-c4da-45f6-be17-b34f33ad73de"
        },
        "item": {
          "id": "604e6bfe-a68a-4e83-a4bd-e95e717f3b65",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2bff18b-3ad7-41c7-8063-70890995af1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26cd11-0fc2-43bf-adeb-0d056e5a0a18",
        "cursor": {
          "ref": "823d9457-340e-47a2-ad15-9ecb32dfec68",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "52494ae4-e5e3-4e4a-9eb8-def9d0bc8bc4"
        },
        "item": {
          "id": "da26cd11-0fc2-43bf-adeb-0d056e5a0a18",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b15be5b6-f7d1-47d0-bef9-ee77a30a4098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c49d2c0-4e97-41ba-b202-abaf79d8b072",
        "cursor": {
          "ref": "c6694da0-266b-410b-acf9-b0caf010b071",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2e60c054-720a-44fb-82fc-9fe507650faf"
        },
        "item": {
          "id": "3c49d2c0-4e97-41ba-b202-abaf79d8b072",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b07da7c-3e75-4f98-8c17-5ec647b2e1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee485b5-02fe-4795-a00d-edca73f3be2b",
        "cursor": {
          "ref": "ed52b5ad-ef97-4b87-97a8-477b5e942eaf",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a0b7cd69-8fdf-4817-83ac-a5ddc7fd9c8b"
        },
        "item": {
          "id": "cee485b5-02fe-4795-a00d-edca73f3be2b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d45c825b-90ee-4887-aa78-54a8f621026e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2b296d-514b-4be4-877a-5aca38b8aab8",
        "cursor": {
          "ref": "da2c3d42-6a8a-48df-b4c9-89a31d5e82bd",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ee027eef-5121-4929-a36e-8c27431e7b11"
        },
        "item": {
          "id": "9b2b296d-514b-4be4-877a-5aca38b8aab8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4143fcc4-e16e-4e11-ada7-9fe47c72f7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb197a-e54c-410a-9e05-6fd4859b2e15",
        "cursor": {
          "ref": "b95c72dc-7223-492d-9290-31eaa2a5b1b8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2071b3d-4647-4021-89d5-9e3a4abc043d"
        },
        "item": {
          "id": "cacb197a-e54c-410a-9e05-6fd4859b2e15",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3d4f0267-ce57-4fbb-9d26-3e25030f529f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be768b9-47a0-4a09-959d-a234938cf57c",
        "cursor": {
          "ref": "98edb3bd-1ea3-4508-9aa2-986b124685e6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bb67b2e-8a26-46ee-bb70-86fa359d6acf"
        },
        "item": {
          "id": "3be768b9-47a0-4a09-959d-a234938cf57c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70625f98-934a-4ec5-afc2-22018704bd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa965d4-0fdb-4725-a6be-fff231f481a6",
        "cursor": {
          "ref": "bdfca8bb-818a-4229-83b7-5593e812aea6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ecfcd3dd-2e61-44b7-aded-2a901afb8303"
        },
        "item": {
          "id": "caa965d4-0fdb-4725-a6be-fff231f481a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca5ef019-2cb3-4d87-a70c-fbcd3507bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9566486e-d95b-4c21-adb0-eedae2d87a45",
        "cursor": {
          "ref": "2ca814fe-fe13-4d0c-b6c0-9c877cc1eed1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "78d28d59-656b-4d9f-9b71-39ea5ce4007f"
        },
        "item": {
          "id": "9566486e-d95b-4c21-adb0-eedae2d87a45",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "80570225-00b9-4c60-93b2-936dfe20b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664ae76-a2c8-414a-8004-5e5fb05c7bb1",
        "cursor": {
          "ref": "1e3fc69e-787b-402f-9922-4bfb672e9d3f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a88d3f6f-0bb4-4115-b5e9-743895754667"
        },
        "item": {
          "id": "b664ae76-a2c8-414a-8004-5e5fb05c7bb1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a83c9535-4c96-4037-9638-0ef85d68fcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51ef356-3eb8-4122-ad7c-f76f4110eaa0",
        "cursor": {
          "ref": "ed8d16eb-602d-41fd-8af4-7cab856240d6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "81be26e4-8cb8-48d3-b80b-6ff6dc2cc566"
        },
        "item": {
          "id": "d51ef356-3eb8-4122-ad7c-f76f4110eaa0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "19a7d238-107f-4990-832e-67db70787cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7dc5e8-0d1e-4bb8-a6f4-0febac846ae4",
        "cursor": {
          "ref": "8dbacbe1-7f6a-4c1b-b9ba-cb0b7b333713",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "15028922-bf79-4091-b3a2-8f952c095b61"
        },
        "item": {
          "id": "af7dc5e8-0d1e-4bb8-a6f4-0febac846ae4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be8a2c8e-4ace-4a32-a97e-7ee81d43ca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a877d3-f0cc-4f44-b275-bbe077102b1f",
        "cursor": {
          "ref": "74440135-f2ad-4e8a-acbc-3e4a4d331403",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95e571d0-16d6-4444-b299-fbc2e16001fe"
        },
        "item": {
          "id": "d4a877d3-f0cc-4f44-b275-bbe077102b1f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8bab2da0-a64c-44c8-9038-fc3040d70e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5862febb-3d14-4b9d-8994-063306923aa6",
        "cursor": {
          "ref": "aee5cb0e-7fe3-4690-913f-5c267340ab10",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f18189aa-9e1e-437e-8dc6-ef68a9100c01"
        },
        "item": {
          "id": "5862febb-3d14-4b9d-8994-063306923aa6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bc5cfc9-4cf6-4530-beee-da9ffc544873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef202c97-49b4-407e-b74b-93140d98f357",
        "cursor": {
          "ref": "80f1c376-097c-46bb-bf04-59aa2c3fcb03",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "41f98a42-2273-43b5-939a-abf5d8d69684"
        },
        "item": {
          "id": "ef202c97-49b4-407e-b74b-93140d98f357",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "acd761e7-c4aa-4731-8e6a-430fbc6a6939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc1a029-96b8-4d09-b8f2-b5e0580cce66",
        "cursor": {
          "ref": "30866985-f59c-41da-95fc-9ee9c20d996f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "daca4a70-0556-4dbe-98e1-aa2811537975"
        },
        "item": {
          "id": "0dc1a029-96b8-4d09-b8f2-b5e0580cce66",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c04d219d-3ff0-4301-b94b-3b620cb4eadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc60b5cb-0a63-4432-8398-8f3efe665037",
        "cursor": {
          "ref": "f9c87dd5-a060-4e18-966b-3894a7d4752a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e286a3fb-084e-4c4f-a87a-e4ce82a16790"
        },
        "item": {
          "id": "fc60b5cb-0a63-4432-8398-8f3efe665037",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bd778b6e-9fae-4821-80d9-08c8e26e49e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b670cdde-ebe7-4b4e-9c00-a1667635ee67",
        "cursor": {
          "ref": "28176bb7-ca2e-4de6-8959-5d91c9129771",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0997c6e3-8f6f-4a31-9272-8fc6bd13422e"
        },
        "item": {
          "id": "b670cdde-ebe7-4b4e-9c00-a1667635ee67",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c6ba7c41-519e-47ad-92f7-66c8632f0fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a043ee1c-70c3-4354-ae4d-27b290fd27a6",
        "cursor": {
          "ref": "6e603f90-d021-4bb0-85a3-c2752282b653",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f8c84208-50ad-4edc-802c-d1150e07ddfd"
        },
        "item": {
          "id": "a043ee1c-70c3-4354-ae4d-27b290fd27a6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f56a9ad6-3bc3-4cc4-8e0f-25b499dee9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907dbc27-69ea-4b5f-9d51-161e8966ef90",
        "cursor": {
          "ref": "91d953eb-2294-47b3-af9f-50e7a0fde042",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d4c4034-b5be-4cff-95c7-16a1a51386ef"
        },
        "item": {
          "id": "907dbc27-69ea-4b5f-9d51-161e8966ef90",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eda95dc3-4b10-4e5a-8b2f-901607b4e92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b674674-3361-4e6c-bd3e-1f02bdb055bc",
        "cursor": {
          "ref": "48d56811-85a5-4cd0-a8c3-a30122ebeb3f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2be354e5-be1f-4276-b77c-7752f858212d"
        },
        "item": {
          "id": "0b674674-3361-4e6c-bd3e-1f02bdb055bc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f936aa55-4e94-4afb-af9f-875d622cf9e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70b2870-031a-46c1-b909-869ca3c739e0",
        "cursor": {
          "ref": "33f4a581-b8fc-4972-a334-c639ba143e3d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1a0d7a16-3c18-4d9e-a4b0-531dd815d186"
        },
        "item": {
          "id": "a70b2870-031a-46c1-b909-869ca3c739e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cca480d-afb7-440d-ad52-1577a87e02c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17442e3-a4c1-4f20-b35b-3b0c20887c23",
        "cursor": {
          "ref": "7e57531f-1e5b-430a-a304-336e7b76cf06",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e46d8f5f-247a-4396-8945-90413d8db0cd"
        },
        "item": {
          "id": "a17442e3-a4c1-4f20-b35b-3b0c20887c23",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ed0016a9-3204-4dbc-9e7d-69008e8d50a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15163d6-cd2c-47c5-9dcb-de0274ad0f0c",
        "cursor": {
          "ref": "10f3c163-95a2-44a4-a9cd-8032948330b9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "62357c84-c92a-4bfa-83a2-ad2e9b5c7a7f"
        },
        "item": {
          "id": "b15163d6-cd2c-47c5-9dcb-de0274ad0f0c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ae9dc67e-60cc-465f-a787-3578d7716dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e6c56-1a04-4748-9c9c-da84360df3ea",
        "cursor": {
          "ref": "c08c6515-8a88-421b-a985-7fda3fc3d22a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3f46b733-7de9-45d1-80c3-03d7cf5624c0"
        },
        "item": {
          "id": "847e6c56-1a04-4748-9c9c-da84360df3ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "799542cc-93fa-4a9d-8387-5b413437aad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e811b9-9662-4b27-8ec1-9f528492f072",
        "cursor": {
          "ref": "24e181e7-ae96-4f72-a81f-ab86cee69764",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7cd1e337-b3a4-4f1e-bfb3-ad1cafc89816"
        },
        "item": {
          "id": "c8e811b9-9662-4b27-8ec1-9f528492f072",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e0e81de-3093-478c-8e37-52d2dbf8726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81db192a-664e-4910-bb7c-fb35c305ee68",
        "cursor": {
          "ref": "366eb719-979b-4398-b73c-ea3ee25e2a6f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "78f43359-9465-4f85-9539-c146034d2b58"
        },
        "item": {
          "id": "81db192a-664e-4910-bb7c-fb35c305ee68",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5fe9f778-96bc-4753-b3ed-81c82b30e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb491613-4208-4c2f-9f36-5b341d28fec0",
        "cursor": {
          "ref": "2717d7c8-291e-4333-a116-227dde668e34",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7cfea143-1502-4d5e-8ddc-d18abbdbda00"
        },
        "item": {
          "id": "bb491613-4208-4c2f-9f36-5b341d28fec0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a6906cdb-12a0-41be-8155-f2328d628314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721417db-3059-4299-9f5d-dcc082ae3da7",
        "cursor": {
          "ref": "b5895e95-39d5-4a4b-8125-6cadf3addf93",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f0a8a4e8-2db4-43c6-9ecf-d9c99931bdc9"
        },
        "item": {
          "id": "721417db-3059-4299-9f5d-dcc082ae3da7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab06843d-caa8-42f4-a1a8-c773545a68cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cb458-a040-44c1-a349-3022777df552",
        "cursor": {
          "ref": "42390999-38ad-4502-a8d9-1428c7767a68",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8201e643-80ba-4234-8e12-bbd387d41114"
        },
        "item": {
          "id": "074cb458-a040-44c1-a349-3022777df552",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f934aef-9d2d-4dc2-b2b1-764a00916bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39be7482-365b-49be-9cb8-5b8345803729",
        "cursor": {
          "ref": "0008b1ae-dbad-4c58-9157-5afd9361267d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d416edc-9a22-4e93-82fc-27bca25361a3"
        },
        "item": {
          "id": "39be7482-365b-49be-9cb8-5b8345803729",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d698b83-f875-449e-85f2-32dfa8caea91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f2e919-ade7-4e33-8f7a-0579aff269dc",
        "cursor": {
          "ref": "55527a02-e76f-486a-8acd-5238100db120",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bd396057-583b-4af2-9952-f01538050a9d"
        },
        "item": {
          "id": "16f2e919-ade7-4e33-8f7a-0579aff269dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed37803f-9dc2-4319-8915-d825b3356808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1412bbba-d406-427d-8f97-9d68f15681dd",
        "cursor": {
          "ref": "952fdf79-3c6c-4718-995c-bd1ac27861df",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e8bb6eb5-95c0-46ed-a134-2bf93877a466"
        },
        "item": {
          "id": "1412bbba-d406-427d-8f97-9d68f15681dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a0aa6463-6bee-4875-b062-8902338eed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1566a7-137f-4f65-b46a-5760d616531b",
        "cursor": {
          "ref": "e1966297-ddb6-4688-8d13-407676ffd9a5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8a8370a5-5e85-43b4-9fb8-3a94ccd9eb2b"
        },
        "item": {
          "id": "0e1566a7-137f-4f65-b46a-5760d616531b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65a661a1-64ee-4abb-8569-387b2b177f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae552f-6c06-41fe-b36d-583a06208a9a",
        "cursor": {
          "ref": "5a2fc7c4-fb69-444c-a4c9-692f16d802d3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e12cbda-0707-4971-841e-b404fdc1d628"
        },
        "item": {
          "id": "dcae552f-6c06-41fe-b36d-583a06208a9a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f1e4df27-8cce-4681-90aa-25a47ba66a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e490f09-e62c-4352-b9e0-926394c2562d",
        "cursor": {
          "ref": "4b0c6853-e5a6-4108-bbc5-8ab9c1ecf561",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3661bd94-0394-4178-942a-7066e7bad159"
        },
        "item": {
          "id": "2e490f09-e62c-4352-b9e0-926394c2562d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a805c17e-e0ca-4b04-9877-2b287d186d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b4922d-31f8-47ca-810c-d0933e7d41a4",
        "cursor": {
          "ref": "520aca60-e071-4866-9fc2-c55fa53b616c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3dcaaa14-90d9-4523-b543-05cccc839220"
        },
        "item": {
          "id": "62b4922d-31f8-47ca-810c-d0933e7d41a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "04bb3fff-0be4-4852-a9ad-b1a86dfae2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b8535-4fc4-4667-9df0-bcb9d235d1dd",
        "cursor": {
          "ref": "1e5b2534-2ac1-46ef-a0d6-9edc6e0662a4",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e6cb5c62-fc5d-4c1a-a4d7-89ca37f85ffd"
        },
        "item": {
          "id": "a67b8535-4fc4-4667-9df0-bcb9d235d1dd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "36411276-6b17-4ca1-9974-31d03febb621",
          "status": "OK",
          "code": 200,
          "responseTime": 414,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "bf4de4ff-7540-4024-9988-ecf844e08e71",
        "cursor": {
          "ref": "17d99610-75c2-4e4a-80a7-cdf1133cf62b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f230b102-9222-44d3-aebd-0edca093c880"
        },
        "item": {
          "id": "bf4de4ff-7540-4024-9988-ecf844e08e71",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7119401-5e12-48c5-9f89-f58ed870e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7716961e-b6c8-4663-8dea-9c1a91a60560",
        "cursor": {
          "ref": "e275e585-dd5a-47be-86c8-7ebfa6577f40",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "85739eaf-31a5-45d6-b0a8-13a7d43a3696"
        },
        "item": {
          "id": "7716961e-b6c8-4663-8dea-9c1a91a60560",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "214f8013-6f34-4e86-96a6-50d89daa056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bde5b4-4c5e-4d36-9947-6779c030a069",
        "cursor": {
          "ref": "7edf0c2b-8bc0-4ec3-ac90-3c4c1762e5b7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eff6ca63-7801-46ec-b63d-82d00898bf43"
        },
        "item": {
          "id": "80bde5b4-4c5e-4d36-9947-6779c030a069",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ec5ef226-1dce-4cdc-b39c-9f57240c18ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b53325-ca07-44ee-ba19-5c0044098dd1",
        "cursor": {
          "ref": "298edc12-d130-4e4f-a84f-69067b0e5f41",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "32323d2f-2c94-4d74-b453-8da3d7828382"
        },
        "item": {
          "id": "a0b53325-ca07-44ee-ba19-5c0044098dd1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5321010-cee2-425a-be8c-cc3e2a63539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e8fde6-c789-4cd9-a599-19dc82944d83",
        "cursor": {
          "ref": "184a648d-de98-4494-8d34-3fe8ff1b1413",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2732e764-7b26-4ee5-97bf-1f4bd0d11dc4"
        },
        "item": {
          "id": "a8e8fde6-c789-4cd9-a599-19dc82944d83",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "af56a64e-eee1-4780-a1a4-9fde25cea148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8698d0-d5ec-4297-b842-a6c89b70852f",
        "cursor": {
          "ref": "de6b465e-3cc6-4506-9d3a-17955b8a15ab",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2e748efb-7230-43cf-8def-ecefe93c70b3"
        },
        "item": {
          "id": "2b8698d0-d5ec-4297-b842-a6c89b70852f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61fb5297-eca7-420a-9786-0863605b337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7bc5d5-109d-4cee-8001-997917401853",
        "cursor": {
          "ref": "80a088a2-937b-4dbd-a5fc-5ca67c4d03bf",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc860fde-b379-4b36-964b-f19c9c23f9ea"
        },
        "item": {
          "id": "bd7bc5d5-109d-4cee-8001-997917401853",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "45323036-0337-456c-81ec-d53cbc76d453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320a1e90-4450-47d3-a1a1-9423ef3f8f82",
        "cursor": {
          "ref": "def896f7-6de4-44b6-b517-e43c176a6378",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e5e1ad28-5023-4058-b251-ed1ca18b9977"
        },
        "item": {
          "id": "320a1e90-4450-47d3-a1a1-9423ef3f8f82",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c36cb41f-b07c-44a2-960f-35ede3576de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05bf20f-87c1-4eb7-bbb3-3428984e1d9f",
        "cursor": {
          "ref": "f925aa3b-183e-4891-9dd5-10f85d9c4496",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6f3fa0ac-dc0e-4c39-8e06-d5bbdc19b46f"
        },
        "item": {
          "id": "d05bf20f-87c1-4eb7-bbb3-3428984e1d9f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "626ac1fe-c67d-4900-8403-00b35819bc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692c77e-fbf5-483f-aff4-cc12a8d1b882",
        "cursor": {
          "ref": "3f7a7b56-cd2f-45b6-b66a-77f87ecd5f8d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1157a31e-1b74-43ce-ad98-605d1edd65cd"
        },
        "item": {
          "id": "9692c77e-fbf5-483f-aff4-cc12a8d1b882",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "36459eec-6bb0-4aff-aa56-2babc32373bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38e66ac-c2d9-45ea-bd71-f45490e25be9",
        "cursor": {
          "ref": "73bdfb57-b4c3-4d24-ad17-76a4b976b438",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ece439eb-adb4-4bb5-a31a-735632a9d8b4"
        },
        "item": {
          "id": "a38e66ac-c2d9-45ea-bd71-f45490e25be9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b01a79ea-b913-4dda-98e1-633320e24d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d421753d-dea8-4627-8d17-7c8868cb2509",
        "cursor": {
          "ref": "1a4f1079-4762-4e92-a2f6-aa0b4ff08dc8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8923620f-ded7-4c4a-89ac-f3961da40f29"
        },
        "item": {
          "id": "d421753d-dea8-4627-8d17-7c8868cb2509",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f53bf74d-e259-44c7-a3cc-e7f3e2a4666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee3f0c-2883-4ef4-9aee-36437c67a9f0",
        "cursor": {
          "ref": "4321ff9c-f9df-4e29-ba7d-ae525b788dad",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "584a24d9-a1e5-4c62-8808-0992b838251c"
        },
        "item": {
          "id": "20ee3f0c-2883-4ef4-9aee-36437c67a9f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5685d025-7bfb-47c5-8a31-e3c2d629f98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fe6c3f-7466-4c28-9e56-e3b5553d63cc",
        "cursor": {
          "ref": "eea411b8-ef1b-4aa7-ae82-6b1bbc97e0e5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "78c6a463-bc7f-4fbc-a33a-3a81ba59b2aa"
        },
        "item": {
          "id": "23fe6c3f-7466-4c28-9e56-e3b5553d63cc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "41b8bd8f-7b78-4ea7-95b6-e9f83cf3a685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8ba6fa-f072-4344-a1c1-814e0d4f4770",
        "cursor": {
          "ref": "8f3e61a0-d4f1-49e0-8683-a54385fa9710",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3627abd5-68e2-40d6-af01-b8a681b18e49"
        },
        "item": {
          "id": "8d8ba6fa-f072-4344-a1c1-814e0d4f4770",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5c9158fc-d873-473b-aa4f-0a13c5aba48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09439762-8bca-4a83-8c84-0c54a60d2177",
        "cursor": {
          "ref": "2fdae82d-b0f3-4a30-8def-e8a0543857cd",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1477c11e-6073-4544-aed0-303f43ac26ba"
        },
        "item": {
          "id": "09439762-8bca-4a83-8c84-0c54a60d2177",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6960e285-0c44-41ad-838d-07c6249aff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad259b17-fcca-4a4d-8287-4bd8f1d989f2",
        "cursor": {
          "ref": "2908b639-4125-46d2-9a1b-7b73e7929e7a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ac9759c7-59c5-43ef-8b33-708b5ec15cda"
        },
        "item": {
          "id": "ad259b17-fcca-4a4d-8287-4bd8f1d989f2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b60460b6-d1bf-49f9-a7a7-10cb2b951833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c72c93-7668-40e1-a1d1-45bd4cb9ea2e",
        "cursor": {
          "ref": "6aefe765-a129-44ed-9447-91e03f26ef22",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "363ee6ad-233c-4932-ab2f-8171c69a96ec"
        },
        "item": {
          "id": "86c72c93-7668-40e1-a1d1-45bd4cb9ea2e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8101554-247e-4347-b3a7-73f22d3115b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84520ef-e081-4778-8c97-07ec6637fbdd",
        "cursor": {
          "ref": "e68ad6cd-deb0-44c9-a42f-f7cbfbb465bf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c67a9869-a398-482a-b82b-43347ddaa4c4"
        },
        "item": {
          "id": "e84520ef-e081-4778-8c97-07ec6637fbdd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b19b16e-db73-4e49-8425-91d7b6fff96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57918e99-6c05-4455-a002-005b6cc77e01",
        "cursor": {
          "ref": "43a27394-4d7a-440b-b155-5eef90dfdb6f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e72e30d9-97fd-4a51-bd06-13a94e9b3531"
        },
        "item": {
          "id": "57918e99-6c05-4455-a002-005b6cc77e01",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4b5980a3-5998-454e-a891-ceb6ef6fd158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96d4101-6cfc-41a1-83fc-7be86c9ce069",
        "cursor": {
          "ref": "4522dea2-0068-49ee-b9c8-742083c8f006",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2a94cae-de66-420e-9444-91aef242d3ab"
        },
        "item": {
          "id": "d96d4101-6cfc-41a1-83fc-7be86c9ce069",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "227952b7-c017-4354-8d94-86b41752a04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff4ce7-5319-4808-baaf-1bccfa00384d",
        "cursor": {
          "ref": "8d45da93-b537-4d86-a12f-ef74cf45f301",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b314105-a7a7-48c3-9688-ce1022a75ca4"
        },
        "item": {
          "id": "dfff4ce7-5319-4808-baaf-1bccfa00384d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "982fbec0-e279-4c6d-948a-c512883921c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451603e1-d579-48f1-914f-687e2e6bfae8",
        "cursor": {
          "ref": "f31681aa-ebf2-418b-8a9f-53d69dce899e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "88d6a91e-155d-4a59-9266-2b94b8b1a961"
        },
        "item": {
          "id": "451603e1-d579-48f1-914f-687e2e6bfae8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ad80a716-417b-4502-b6eb-8d6673185062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cddce6-007b-45da-b663-2ff1f051ad2c",
        "cursor": {
          "ref": "877014c3-3ed0-4ba7-aafb-eb1bcfdf2fad",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d3181bad-5d4e-4834-bc82-3abebfd212c8"
        },
        "item": {
          "id": "49cddce6-007b-45da-b663-2ff1f051ad2c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b87e3909-6a0f-46b4-b9d8-5d96e3b99aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f0489e-09ea-4011-b0f9-79c25a71bdbe",
        "cursor": {
          "ref": "9fe8df16-7aa0-4fdc-ad88-3dba24da3eee",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3f0d2032-451a-4f81-887c-b6e3f38152e2"
        },
        "item": {
          "id": "74f0489e-09ea-4011-b0f9-79c25a71bdbe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "12819a2f-5a31-46d1-89ed-5dff5dc546ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3b403-ad8b-44ea-a62c-cc649cb51517",
        "cursor": {
          "ref": "17b9ab3e-f661-4230-ad76-509ddd01a18b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9462ff20-a65e-4079-8b54-90a2c7ed43e5"
        },
        "item": {
          "id": "4cf3b403-ad8b-44ea-a62c-cc649cb51517",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "36679d90-2dee-4368-a4d6-613c64349999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092177f-454f-49c0-b7c8-765b17ae12cc",
        "cursor": {
          "ref": "a00f89b2-4ffc-464b-a0de-1511f6e7c896",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46bc833e-e2c8-45d8-9401-59fa43ade709"
        },
        "item": {
          "id": "5092177f-454f-49c0-b7c8-765b17ae12cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b1dbfc67-14a4-4ef9-b03c-0e298921107d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6622c2b2-bed1-4be7-b720-78bfe27c600f",
        "cursor": {
          "ref": "aa6f88b5-11ea-433b-9675-34466a8383b4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4cf4ed52-c9aa-438d-a532-e14eceb466a9"
        },
        "item": {
          "id": "6622c2b2-bed1-4be7-b720-78bfe27c600f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2d588809-7511-44f7-8bd6-49f30ba1fc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132f522e-5913-4543-b0a6-16fb5d46f7ed",
        "cursor": {
          "ref": "0c98c012-0df9-47d6-ab46-0b3aa1170bee",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fccd1a3b-637e-449c-a9e5-71b4ee2c4046"
        },
        "item": {
          "id": "132f522e-5913-4543-b0a6-16fb5d46f7ed",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "202c35f2-b26a-4225-aade-0b712bae7ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e7cc9-1f54-4843-bf8b-644a88035446",
        "cursor": {
          "ref": "fc3f341b-edd0-4c83-8a58-59c1b74f38de",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "de8ec15e-7c08-4215-9ce3-449bb569ab9e"
        },
        "item": {
          "id": "193e7cc9-1f54-4843-bf8b-644a88035446",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a2bab42-19a0-4160-b022-1f87a7ca0969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383aa884-352f-43d4-ae2d-42cea7a04b4a",
        "cursor": {
          "ref": "bddeda4e-b7d1-46fb-be16-273acf9c0135",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "18f8be1c-db98-4472-a78a-c2b74f4d35c7"
        },
        "item": {
          "id": "383aa884-352f-43d4-ae2d-42cea7a04b4a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c6e79b6-cfea-46db-8cb9-e9cc954b8fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8976211-6eaa-44b0-a650-593bdd54449a",
        "cursor": {
          "ref": "1ad71248-229e-44a0-8104-35d327ae2da2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9a77d1cb-7850-4670-a003-20afbe486433"
        },
        "item": {
          "id": "b8976211-6eaa-44b0-a650-593bdd54449a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b4cac5d-126b-4cdf-9a4c-7ce9bb9646c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533752a5-f871-45d3-9a86-3ea1e1189a03",
        "cursor": {
          "ref": "1f723ce9-9000-462e-8675-544f511ee315",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c0788553-75d6-4e9a-a4e3-39142762b16a"
        },
        "item": {
          "id": "533752a5-f871-45d3-9a86-3ea1e1189a03",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e4c21a14-784e-480c-a8e2-7e9af848d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8511dc4b-4080-4889-9acd-618abfa9904a",
        "cursor": {
          "ref": "1b7a0afb-78ae-47e4-9c44-92801f6ec426",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9f4755a0-9eb0-465b-be34-cb38433facf5"
        },
        "item": {
          "id": "8511dc4b-4080-4889-9acd-618abfa9904a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9aa231ed-3304-47f3-8262-3b0d1def143f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6177b7f-c66d-4506-b09c-fd00b1c20278",
        "cursor": {
          "ref": "1e39ca30-f1d2-422a-a724-3ce1e2c33d33",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "87c532c8-105c-48a8-a826-1fda13a18f3f"
        },
        "item": {
          "id": "f6177b7f-c66d-4506-b09c-fd00b1c20278",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eb166d4a-760a-4860-8209-84dbbead4ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9b408-ff03-452f-a4bb-94bf7f8bb228",
        "cursor": {
          "ref": "9c433298-5d2c-4c77-976d-52e8e46bd5bd",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eebdbb27-d792-48d5-8409-c7a1d13b3782"
        },
        "item": {
          "id": "2fd9b408-ff03-452f-a4bb-94bf7f8bb228",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0cfbc905-d0e6-4088-8170-aa7637b98f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059882c4-ce27-496e-9319-fdb6f9d9c9af",
        "cursor": {
          "ref": "5ced4ea7-f5ec-4dad-ae0c-0140a81bab29",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "495ee4e9-6afe-484e-b962-47783c4d05a8"
        },
        "item": {
          "id": "059882c4-ce27-496e-9319-fdb6f9d9c9af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b1ef3b28-aef0-412f-87eb-6dc1a0665abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1c7bff-2627-44f9-942e-6d1fe717044f",
        "cursor": {
          "ref": "4fb7ef12-9222-496f-9b04-f1a33564fe31",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "00c1b73b-56c0-4f98-a85e-9dedad6fd52d"
        },
        "item": {
          "id": "ac1c7bff-2627-44f9-942e-6d1fe717044f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3e1d6cc1-69d8-4813-8104-d051bf89ed76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b1385f-c88e-421f-a83d-fd509687ae41",
        "cursor": {
          "ref": "0b912d7b-3f8c-43e1-b693-04f9c14bee87",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34af2df3-9073-4c9a-8037-b23c3e029455"
        },
        "item": {
          "id": "b4b1385f-c88e-421f-a83d-fd509687ae41",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "78646d98-63a6-4c49-a990-77450ade75f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135ee8c5-9760-4e40-8872-36649dce9f65",
        "cursor": {
          "ref": "6512d52f-90f3-4604-9440-ff36eabcfb7f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "224729f4-b21f-4230-a860-820078a04b31"
        },
        "item": {
          "id": "135ee8c5-9760-4e40-8872-36649dce9f65",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "55514a3d-e606-4aa2-9423-108401e77c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3530e761-7811-44c7-9d94-b1fc781fd315",
        "cursor": {
          "ref": "848588d5-6ec6-416d-8471-ab20755b2545",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74e9825a-838f-4e0b-8cc9-71a0e950ff47"
        },
        "item": {
          "id": "3530e761-7811-44c7-9d94-b1fc781fd315",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed68002a-9521-4e19-a255-9c8663b4f5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24220387-aace-4676-9697-5b7066999e33",
        "cursor": {
          "ref": "5d87dd96-2236-4d6a-9940-e7b694aa3767",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f06f0760-533b-4c99-8acb-37c9c84e4cbc"
        },
        "item": {
          "id": "24220387-aace-4676-9697-5b7066999e33",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c152e507-5180-413e-a827-4121999986d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0093ee-d24f-4a20-b349-350a537e9793",
        "cursor": {
          "ref": "d683d435-e1ef-448d-b605-5dff85d5d8f7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "844cb851-1db9-4e67-8328-00dfac9b1b9b"
        },
        "item": {
          "id": "5a0093ee-d24f-4a20-b349-350a537e9793",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "948fbc2a-6982-4ec4-b1b6-63cf57e5ac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302caf66-d485-4ef9-a5e3-11650679ca64",
        "cursor": {
          "ref": "097334b8-aac9-4495-a58a-49289dd73331",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2aa9dc27-0b64-4556-b827-0c076008a3bf"
        },
        "item": {
          "id": "302caf66-d485-4ef9-a5e3-11650679ca64",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "232561f2-010e-40c7-af95-e8b302151113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d5ec9-ae34-4daf-a905-7335863e5459",
        "cursor": {
          "ref": "cc99c116-10a4-445f-b620-27907d518a78",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e0dffed7-5967-4bbb-aa1b-ac1582e8e4b8"
        },
        "item": {
          "id": "570d5ec9-ae34-4daf-a905-7335863e5459",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "759604a4-8399-4990-8d44-3c905281b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea642e-e292-4d6d-822c-73f6b4a5558e",
        "cursor": {
          "ref": "6bc60a02-7aac-4b16-9ec1-372db55ca3c9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5a3e7230-250a-4fb1-a2a1-8a7ea4769f80"
        },
        "item": {
          "id": "31ea642e-e292-4d6d-822c-73f6b4a5558e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96bc02cb-a2c9-400c-8709-09527e333f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dbdb4f-8011-4372-b70d-e8354098151f",
        "cursor": {
          "ref": "caee4d16-f1f6-4060-bd75-543c90588ef2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "24d796d1-1b3b-4a90-b0d8-627d9923bde3"
        },
        "item": {
          "id": "65dbdb4f-8011-4372-b70d-e8354098151f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f50f8d43-43ae-44ed-805b-045155ab8ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e9b9f3-f9d2-40d1-8476-fe770a4f1316",
        "cursor": {
          "ref": "9df3b119-664c-4db7-91c4-703519005b9b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1bcbdcb9-c363-453c-a30e-ff9f88e1ed47"
        },
        "item": {
          "id": "32e9b9f3-f9d2-40d1-8476-fe770a4f1316",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e47de1e6-8510-4685-8a4d-d5d5c85d0fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01613242-b8c3-4abd-b497-9063ebbcfe93",
        "cursor": {
          "ref": "f2a660f2-7788-441e-ab37-bbbad9940114",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5f1cdd98-2f8b-4e83-9284-f51781a4d616"
        },
        "item": {
          "id": "01613242-b8c3-4abd-b497-9063ebbcfe93",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ad7dfd7-b2fc-4846-bb97-4b9e7fcbde13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450497a3-fec1-4349-a98d-39ba00ba3c06",
        "cursor": {
          "ref": "52ab6e45-d5f9-496c-a22f-6ff67260532d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "75136c97-d65e-431d-a7f4-1e613a74c56e"
        },
        "item": {
          "id": "450497a3-fec1-4349-a98d-39ba00ba3c06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dddaa9db-8b29-4c80-9b8a-d19acade0ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29ad4cf-b3d3-4650-8a57-3ff56dde4deb",
        "cursor": {
          "ref": "f66195ba-6fe7-419b-a608-1f4458661b71",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d2267934-4590-47e2-91a7-f55379ae6c0c"
        },
        "item": {
          "id": "d29ad4cf-b3d3-4650-8a57-3ff56dde4deb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f7749c4d-032d-43c9-928a-54fc623edec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f669939-faf0-4129-be22-a5a02a6db96a",
        "cursor": {
          "ref": "43eeb524-b187-44de-8bab-97aa3dec88ff",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "92737cb3-a2d1-4542-9cc4-010a3ccf24f3"
        },
        "item": {
          "id": "1f669939-faf0-4129-be22-a5a02a6db96a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "28fcc87e-6ab5-4d32-8bee-00f1e402b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d80086-41e4-43f4-b248-6cde59b69679",
        "cursor": {
          "ref": "ade86c6a-226a-4527-ada1-c869de7337a6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "64746907-1c63-4bb2-8579-19ee782bb6fc"
        },
        "item": {
          "id": "17d80086-41e4-43f4-b248-6cde59b69679",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "25b75b19-3350-436e-9c00-5fdde1035495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71a910-dc76-4610-b284-262b6ce5b219",
        "cursor": {
          "ref": "df5771e0-0fae-4f74-b2ae-f39b90656bf0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c4d7e803-44c1-436c-bc31-b1fb19cc0ac9"
        },
        "item": {
          "id": "7d71a910-dc76-4610-b284-262b6ce5b219",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6608fac9-f359-4e93-9b89-bc7476a72326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca6230-e374-43aa-b670-dbaad7d864f8",
        "cursor": {
          "ref": "e82c0c29-7bdd-4611-90cd-c9cf65ed09e2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af411200-ea0a-42f3-8781-81a654e5aa20"
        },
        "item": {
          "id": "14ca6230-e374-43aa-b670-dbaad7d864f8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a2fcbb29-cb09-46ab-8b5f-1cf4bfa8a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6a7a4e-1707-4c65-88dd-aaec4f3d9be8",
        "cursor": {
          "ref": "8d6bf61d-5d63-40a8-86c7-df3f20b17d2e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4c1d7893-2e16-4587-9a94-2953cb736f1f"
        },
        "item": {
          "id": "8c6a7a4e-1707-4c65-88dd-aaec4f3d9be8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2464a365-3d37-476c-908a-254bc3a520e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ecdf61-9354-4a97-9396-62adca1c000f",
        "cursor": {
          "ref": "6f1511be-3d1b-4371-ae83-525388a8b679",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a6ef8ebb-9a5d-4714-b49a-8e23cd3c4622"
        },
        "item": {
          "id": "92ecdf61-9354-4a97-9396-62adca1c000f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0afb9789-f886-4e43-9205-a68e927b6812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b056e308-28d6-459b-8de2-a320bfaf9788",
        "cursor": {
          "ref": "1444d708-c8fc-43c7-b6b8-0dfaddd1367f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d447e1f6-3f55-4d44-92e6-39f64ac28ae9"
        },
        "item": {
          "id": "b056e308-28d6-459b-8de2-a320bfaf9788",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3f19a456-7422-4b7e-85f6-d231505a0a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3643b40-3e40-4329-bdf4-60b25d953dd2",
        "cursor": {
          "ref": "9ed90423-d2c2-4213-9c16-8c3231e46e46",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8219b999-c42e-4e96-a628-69a9ebe930a5"
        },
        "item": {
          "id": "d3643b40-3e40-4329-bdf4-60b25d953dd2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cbbee1d3-aad4-4039-bef9-d1f269cdd030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30b5c7a-4525-4cb2-b8a5-f7bd12ad1fd7",
        "cursor": {
          "ref": "a65bd659-1d73-46f2-9368-19f6c57f1218",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "96077f20-960e-4f35-8259-c9b0a29bc885"
        },
        "item": {
          "id": "e30b5c7a-4525-4cb2-b8a5-f7bd12ad1fd7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "739f2770-f49a-4f99-b552-8c59ee66c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4062206d-20cb-45e8-bb4d-4ffa75758a91",
        "cursor": {
          "ref": "a58ab7f0-749a-4edc-b3e0-0240b261cea8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a63de296-b0aa-42d7-b409-bec718a6d5c2"
        },
        "item": {
          "id": "4062206d-20cb-45e8-bb4d-4ffa75758a91",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f8ed5678-6062-42c0-b85d-4f1de0b5f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cd3c03-a398-4413-8146-3004591d2c9b",
        "cursor": {
          "ref": "893dec7a-c8e1-48b7-92a0-f140cc4d1928",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5f97a522-f78f-4b76-b82c-032b419ca104"
        },
        "item": {
          "id": "a1cd3c03-a398-4413-8146-3004591d2c9b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "34018992-1aec-4f6f-bb0d-db6ab3e10e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f6d782-99d3-478a-952e-17be46326981",
        "cursor": {
          "ref": "2aec6c89-63f8-4234-905f-0e27aaa3e924",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7e4b7f43-8a41-4c4d-b827-3fda703d312a"
        },
        "item": {
          "id": "34f6d782-99d3-478a-952e-17be46326981",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e4f9ce30-8aa1-4393-97a3-ed5ff941499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7295b09-c7f5-4619-b906-935ca8223bf4",
        "cursor": {
          "ref": "3592ede6-2b81-4964-877f-b51f1da6396c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "158949dc-8b35-4ce3-a65a-452f45258604"
        },
        "item": {
          "id": "d7295b09-c7f5-4619-b906-935ca8223bf4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "490ef9ed-d7c9-4bb4-8211-c12368bcf735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62378e5f-3370-4848-9a87-dd4059824df2",
        "cursor": {
          "ref": "5e3093b8-8568-4272-8bd6-d80de00c8bf2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "69439c05-f30c-4d37-8980-6ac7c12cefb5"
        },
        "item": {
          "id": "62378e5f-3370-4848-9a87-dd4059824df2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "32b9b538-d568-4e1d-a00b-2cc3a1a397ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a689588-0b52-4f81-bbf8-a6d4044a4b23",
        "cursor": {
          "ref": "c2ee8aab-53cf-4a37-99d7-6cbf5cd5b178",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "70798e76-d99c-4f91-8648-fd1a5727488f"
        },
        "item": {
          "id": "0a689588-0b52-4f81-bbf8-a6d4044a4b23",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d96ce57a-b9be-4e94-8a1d-04bee856cc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e32ef9-bc3e-4e37-aa0f-259d6d6fbf25",
        "cursor": {
          "ref": "60f6879d-867c-4075-a0f4-05c1f22d3026",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b2723894-8807-4e91-bc82-d327aa6f3569"
        },
        "item": {
          "id": "62e32ef9-bc3e-4e37-aa0f-259d6d6fbf25",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cceec654-23bb-4ff8-896d-d7befd789899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57257e-662d-4ec2-9f96-8e745de345de",
        "cursor": {
          "ref": "8e5442bd-0870-4a67-8c97-873b2594e099",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6888b508-6a7c-4f2c-a2c6-f9a0a8cda08f"
        },
        "item": {
          "id": "7d57257e-662d-4ec2-9f96-8e745de345de",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc48599c-7326-4910-b382-0c1c6ff77b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffee78e5-559d-4291-ad8d-94351b7308b2",
        "cursor": {
          "ref": "1bba92a0-624d-4d82-9fdc-8308efcd1702",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "47885d70-42f2-4a5e-bb4b-4103d2c44926"
        },
        "item": {
          "id": "ffee78e5-559d-4291-ad8d-94351b7308b2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2875e3cf-5164-4d33-b136-df0ae6d2ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e09ee-2602-4926-9811-ab7410317463",
        "cursor": {
          "ref": "a0f14396-3b98-4ead-bc64-8dece041bc5d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8bb6bb7c-c030-4f59-84be-b16fb9b0c8e4"
        },
        "item": {
          "id": "a84e09ee-2602-4926-9811-ab7410317463",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c1480964-ae7b-4856-818a-6b15669822ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601bb0de-f63b-49c3-8593-447580eff827",
        "cursor": {
          "ref": "3ab50944-af53-478e-8966-b476896439a3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a4efe4ab-4bde-4b3a-89ab-766cecd332b0"
        },
        "item": {
          "id": "601bb0de-f63b-49c3-8593-447580eff827",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "26a80695-0041-4636-8945-35698795375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ed75ff-73d0-4946-8e17-4849bfedb47c",
        "cursor": {
          "ref": "ebe21e95-d72b-4366-bc8e-885c58721e9f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fe4e598b-cf83-4fd0-ac16-b3c3f7bf38a7"
        },
        "item": {
          "id": "a7ed75ff-73d0-4946-8e17-4849bfedb47c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "06e2bd72-a560-4bd7-ac07-266ba840f59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be44f54-f972-4064-be0c-c51c0cc11f2f",
        "cursor": {
          "ref": "fda07b84-1da2-4883-88f3-6607b3b4c28b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "95bd8bc7-e81d-46d6-a0b6-3d6427348bcc"
        },
        "item": {
          "id": "8be44f54-f972-4064-be0c-c51c0cc11f2f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "10629d1f-1af3-4ea4-b6e1-4ef2e85598ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccd5bbc-82a4-4e6b-8281-8b5e7891c750",
        "cursor": {
          "ref": "0c100ff7-4197-4bb4-ad79-afc132e73a4a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d6ac2a59-2602-48bc-9317-11e68f540f73"
        },
        "item": {
          "id": "8ccd5bbc-82a4-4e6b-8281-8b5e7891c750",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "17472012-63c3-4e9d-8824-fd4f31f5d303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad59fee-3968-4752-acaa-13d3a1e257b2",
        "cursor": {
          "ref": "01b3d957-2ea2-4e29-ad95-f25578dd7641",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a97847d2-09a9-44a3-b9e2-08a2406e1025"
        },
        "item": {
          "id": "6ad59fee-3968-4752-acaa-13d3a1e257b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7128f65d-7f58-41c0-a9a1-19950e4ff3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20710f2c-ba2d-4178-aeec-bdce5884ddb2",
        "cursor": {
          "ref": "4045aa9e-d7cc-41f7-99ac-78c9c3bf281c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "95b4f1a3-2219-4755-9ff2-1841e82098b9"
        },
        "item": {
          "id": "20710f2c-ba2d-4178-aeec-bdce5884ddb2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fbb762cf-4f8b-4bbb-a165-9c4e832a52ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa63d6-525a-4268-8aef-4b6e7fb21a48",
        "cursor": {
          "ref": "6ab584e9-01ba-4a5c-84b7-dd6ccd048491",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "aafda1a3-d5ac-4b1f-bc53-b299947517d6"
        },
        "item": {
          "id": "5eaa63d6-525a-4268-8aef-4b6e7fb21a48",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b7ef8fd3-450c-419f-8553-f3941e6021f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8265e6-73f6-45f3-9040-2252860a4bbf",
        "cursor": {
          "ref": "1515c938-9ccf-4124-8145-4a3844cc79cb",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9c540b91-1955-47d8-b18f-c0ba31d43edb"
        },
        "item": {
          "id": "8f8265e6-73f6-45f3-9040-2252860a4bbf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "98fcbc68-20d6-4e4f-a57f-c387882d042f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b58e56-5d17-41e6-b879-182c5942f052",
        "cursor": {
          "ref": "4ed8ea6e-92ba-4775-843d-d6b1d96aef88",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8aed7520-bde0-4add-9c3b-b1b0c98794e9"
        },
        "item": {
          "id": "80b58e56-5d17-41e6-b879-182c5942f052",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "afcf7bc4-ddc9-48c0-b4c0-f02fa00cf7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5925cc67-12b1-46a2-84cb-6af2aa4e2e54",
        "cursor": {
          "ref": "d69b2349-7d3b-46d5-b50e-06ec1e553726",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "15422b50-c2f5-4333-a14e-20be582c2e37"
        },
        "item": {
          "id": "5925cc67-12b1-46a2-84cb-6af2aa4e2e54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af5e08a1-60da-4587-a557-04a5b04863e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23374c44-cc0f-4a26-b961-d5e9a1a9beae",
        "cursor": {
          "ref": "d54805f0-3b4f-436f-94f5-dd8e09841813",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "300388bf-1694-4b2b-be78-2cff347dd0d5"
        },
        "item": {
          "id": "23374c44-cc0f-4a26-b961-d5e9a1a9beae",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d1ecb6fa-6674-4507-a669-a8d174f96c5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ad8bb-500c-4e95-ad6c-0ab02e7f870e",
        "cursor": {
          "ref": "2bc68493-be91-4f99-9c16-192abfe87535",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bbaa9383-baa4-4f78-ad1f-20a2d8f7d5ee"
        },
        "item": {
          "id": "c49ad8bb-500c-4e95-ad6c-0ab02e7f870e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f58c8485-653e-499c-96f3-17c5e925e307",
          "status": "OK",
          "code": 200,
          "responseTime": 191,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53b940-0dc8-432b-a18c-f3c7f10b0120",
        "cursor": {
          "ref": "ccd84db1-d2a3-445a-941f-632538025c1a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c00262a5-1c8b-4ff2-a8ba-56402470909f"
        },
        "item": {
          "id": "0e53b940-0dc8-432b-a18c-f3c7f10b0120",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a751351e-cfd4-4d29-99f8-41049219af93",
          "status": "OK",
          "code": 200,
          "responseTime": 4921,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc350a-5ec2-4752-bb98-ebaa7292b72f",
        "cursor": {
          "ref": "49adfab9-6788-4931-a7ce-b5a5e3516853",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "28b46ab4-1ac8-4a2e-bc4a-2638545bafaa"
        },
        "item": {
          "id": "a3bc350a-5ec2-4752-bb98-ebaa7292b72f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4ac8dc86-a855-4a2b-9b29-27ca2073d4b4",
          "status": "OK",
          "code": 200,
          "responseTime": 3404,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990dee2-ef24-4f6b-abb5-68d2537c670d",
        "cursor": {
          "ref": "c31638b8-15de-4083-be85-8369be3ba35c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3b1d23b2-dd09-4949-afcb-c190fe8f2199"
        },
        "item": {
          "id": "8990dee2-ef24-4f6b-abb5-68d2537c670d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60370168-6405-41f4-b892-61adf10c7fdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990dee2-ef24-4f6b-abb5-68d2537c670d",
        "cursor": {
          "ref": "c31638b8-15de-4083-be85-8369be3ba35c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3b1d23b2-dd09-4949-afcb-c190fe8f2199"
        },
        "item": {
          "id": "8990dee2-ef24-4f6b-abb5-68d2537c670d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60370168-6405-41f4-b892-61adf10c7fdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a4b6a9-aee7-4a00-9fbc-a0b6545a7b3a",
        "cursor": {
          "ref": "71e2183a-f42c-45aa-bab8-a4223ce9c114",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5433b234-1901-4927-a193-8350cfb41005"
        },
        "item": {
          "id": "f0a4b6a9-aee7-4a00-9fbc-a0b6545a7b3a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e23533fa-6008-4285-b8d3-4091277d1f27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e57c87-fea8-44d4-80b2-bb50f0dd836d",
        "cursor": {
          "ref": "f848f6df-1e32-46ba-8284-4da893300bab",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "488cfc7b-7eec-4865-bc68-0911ecdc6b3f"
        },
        "item": {
          "id": "88e57c87-fea8-44d4-80b2-bb50f0dd836d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4303c021-87f7-4272-ae6e-93a3d79c7a83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}