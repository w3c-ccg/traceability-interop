{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7590fe3-7e3b-4896-9e1d-2909d10e82bd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fe8ad30e-9175-4e7a-aefe-8369eeccb483",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfc71f3f-797f-44c9-8c7c-f659da1b16da",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a7e8a7c-37e6-462d-a572-81dcbb2738c5"
                }
              }
            ]
          },
          {
            "id": "8469b0d1-a8ca-4943-a630-9d7db192ed83",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c889ec5a-6a78-4923-90f2-17fc098ba531",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f00b2678-27b0-4364-82d8-36464c701342"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "070a71cb-1efc-462a-8fb3-12d5ed81cfdb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7eca9863-ff4a-427b-ac05-86aed985b5c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbe5f8af-2d33-4fc5-97b9-85b5d31a6ef5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f04159e2-fda1-40ff-9af7-becc3f29dd2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77654789-7a98-4d85-a582-2608a19841dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "175cb01b-c82a-40d7-8d7a-c2245566e0c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a05f9a5e-bdd3-422b-881a-1fab2a2c91d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49d7ff1a-60bc-4dfa-9e9c-f1b3e632133f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbe0d1a2-6767-40f0-aa98-e8fe122e44de"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf804878-49d9-4e35-95b8-4bfa459524fb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b580e019-b2ef-4ec5-b8c5-c9ed990e377b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edf888ca-d866-4020-8131-278b94d40d17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2f3d39e-e706-432a-b707-0895f38a7feb"
            }
          }
        ]
      },
      {
        "id": "c1715640-3df4-40f2-b64f-5fdc3d1586a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "839be71b-d349-43e7-8da2-993f3e185ee8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6e34780-864a-4edc-bdbc-8f2557ea26f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe9771f0-2489-44f5-8adf-461c3405f37e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a5282f-1a21-40cd-a4df-bf79525920a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ae153d-6221-48d4-aef5-98ac3e3cb8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e1d792-cc1c-4841-bbaa-c4bfa4ba70a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f11065f-d5ff-416a-9eca-ed7706369ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2fdc03b-0b7d-4d7c-b67c-077f9de79ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced563c7-1132-490f-b142-e06445f05354",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09488fac-ba00-4e0a-9ba7-56993c326101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a4fc4ae-e0ac-4fb8-ad42-2e86df7b7bd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22fe4fb3-178d-4911-a461-04889d57bc48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00e55125-02f0-42f5-9557-7fcf9e2d8baf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c27be-5bbd-4735-ac7d-00c04f85a481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aba341e0-79d3-49ee-ab23-7ff582b450f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4247936-696f-4e1a-ba17-3a48eb0d9656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c72274-8aea-472b-832c-47b6db9c071e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a9c9c-ae34-47a5-ae90-ee657919d4ab",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8478883-bd09-4855-9c0f-4129cd95e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f6fd884-56e2-4562-8cf2-affdfcef2ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389fe7e2-2eb8-4784-8132-b3586c1b6103",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "78287c5a-e7df-4fcc-8eac-2ed29f043cae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14cc9e0e-d533-427e-8353-e25bb8badf7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07241e73-c909-429c-af7d-780fd0f7c409",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d50af1-0cdb-4cdb-acfb-ce5757820050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cc7b46b3-0db5-4b1a-843c-f448f3be70fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68f07111-1381-4c08-b6ba-235570718c1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0f9d0ae6-4f06-4892-8f2a-c9d987ef8b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64944c78-50ea-4d46-8f75-f02365f2db2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e86665d1-526c-4a71-b090-6f8ffb6fba59"
            }
          }
        ]
      },
      {
        "id": "ce620f21-d0ba-4d19-9716-ca585b87e4a1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2f74ad6-c08a-47ad-91b6-aca8c204aee7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e368ddab-aecb-4176-967d-ff3e43ea1e2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2a31f28b-5f66-4ddb-8a6d-dd29ac818b05",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676c70ee-3cc0-40e2-9604-417bf2e65fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aa8d85-4e57-4bf7-bd1c-04059d90a24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c2d23d-6455-4956-9fa5-1903238b96ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9415598-8a27-492c-b8f9-56d488554f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04796fbb-6a51-46bf-af45-efe53f0e20d8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271856a8-5882-4fed-a4a3-3e76ec7a824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3496ac9c-60c2-462d-90c2-dce884bae48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace365a-4f0d-4b9b-b65d-812b2087012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e212eaa8-5920-4632-98c9-30a757fb95d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0de4b-ed03-452d-9c6d-bcbe5de01542",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7789c725-922a-4d3d-8290-3d0fb719f236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82dc488-5698-4d85-adcf-fa5aab2fdfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08379e04-bc6f-4394-b5b0-7d213cdadefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "654cd661-3587-42f0-b130-8ebed4e81a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c882f656-fed4-4403-8383-79abd3261b05",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0590c8a8-7252-4d8d-abf3-49adef7b1aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326ae902-f378-47c9-9ab6-23dbd7c718a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fddb4f3-4961-4028-8bd8-10a271dd9669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e70b36df-213b-4c00-834e-9971c5942832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fdefdb-6746-4cd7-bd27-1e20470eb7a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b688b2-cc05-48a8-acab-8067a699cc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfa86a8-1709-4e20-9a62-020db275aa4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92760a3f-8377-4a38-b1b3-42ca0775c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a201bc-ac91-46f2-892c-28a895b6c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b169458-4c77-4854-abd5-108dbb3dc4ff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24246d8d-48a7-494c-9820-3bc442998c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290d3725-f324-4a88-be1f-4b6dacfdf489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1adab2-1312-4166-b3c6-f8cbaf6639fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736f4820-a684-4b7e-be81-7f82327a6533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659a4b01-3b2b-450a-b943-6dad390f901a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6167db94-5ed9-44fa-9015-7e2060d033e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a6c870-d4fc-4eb1-92bb-8ee3893ef33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed2fc3a-7b91-46f7-abc8-f55119d501c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edeb1c18-57e4-4bb6-8054-b1adec1e236c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f84db98-166a-4d17-924a-caa06d585439",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e99d1a9-fbbf-43a5-a559-39fbd0522faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4d0ede-9c5d-4be8-b6bf-f798f9ee14e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c2bdc-1926-4f60-95ef-c0dc7cd6c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af370205-6fc0-43bd-923d-81760ad16db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235c7f73-5b73-4e36-8e36-be6b8f9acc15",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3335bff6-c064-400b-92dc-97fde4a09022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b968e631-4a62-4302-9be6-b99517b724e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec35b5e5-7893-4df0-b241-3f38f474a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "058075d4-a6e5-442c-ad3e-9ddbe48af4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf338a2b-032e-471c-8758-21103f7af85f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3878e1f-9fef-4a8a-b243-1de3e57923a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7690a45d-1c2d-4d7f-8e71-d38c4b8a62e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c725d4-8df5-482c-9e28-478d84c35ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070fd925-dc1c-4040-9986-b3f9c08bffdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a369b6-1785-4efb-8b53-b88a7d77dbf3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99a483f-1262-4603-a276-8d93d40d31c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4ffc8e-dbd6-4319-8a32-941b8f7e3059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b18487f-0332-4b2d-9125-cb0ef11644d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "595c29e6-235e-49ec-8584-f6063323ca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4723763b-bc6c-4a76-83b5-bd636cf1855f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cf79c2-6361-4cd5-ad85-03d68aff2d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c56f4f-a439-4117-89e8-fc86364edf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff97c14-8265-4138-a100-3e49efdae44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a16dfc3-6026-4c5a-a2ad-cf5b5858e0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba34abcf-6b19-4b48-afcb-2bda10b9148f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b264407-a951-4d4d-80c2-063dd3a14bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e06e283-d756-45a3-aff1-aa4e40197c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c8530-47ae-49dc-896f-6d2a684c2908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f77dd49-c272-4210-a29a-64ee58d347d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d89f5e-a3d0-443a-8838-becfe62cd1c5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da3da6f-b316-4dab-ad34-1d124340e335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ae434d-715b-46ee-8973-32f83214811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61436dc-cc9b-4c62-a57b-810c0b559020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a2fde56-733f-4d63-9a2c-850e346c12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdf2a79-b0c1-4a76-82cf-91272c56b6fe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758893f-64ef-40be-9fd5-10d5ca9f4cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ddd172-d467-4a09-ad7b-6c1190f572fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7227dd8-13ba-4428-a36e-de6550aefaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc3fa56d-af99-46f2-a552-19dacaead9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef824345-4477-44d3-88c5-ea431eaac655",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad7ab2d-6922-40d5-a987-27cbfcec9bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d17ba4-9c81-4b16-89a1-624872e4e1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0340fb42-7922-48bd-a365-dd4b44e03591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e7a5652-92db-4135-aa85-a9d52761fc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744b3fed-84c2-431d-9b03-ba0c7b47af99",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b9d6aa-b961-4bcd-bd0c-ad25ab17d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dcab7d-3a18-47c2-8ec9-bccdd508883d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e027b6-fb49-470b-91fb-5bb765ed9672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f74807ff-33ca-48ee-ac81-aff87d17bef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c52912-980d-4338-b33a-45e909df1fc6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5b9b7a-28d2-43af-bd3e-e1a80d5575c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e0d369-1b2e-4649-b073-974290b11968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d98314a-cc25-4bc9-8679-ba271256b53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74218b33-721e-4923-b842-c78577e4930d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8391c8-64f6-4e21-bb1c-7f35e909828f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20c810-9ebe-4ebe-9e7b-fad6efe22749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f5f383-b9b0-4a6e-80bc-026ce4a442af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411d29e4-ac8a-43f9-a862-6a1494d49bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2835f7b5-e5cb-4a0d-8949-095081050bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c535d6b1-7ff9-4d01-add0-55f0392d1633",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016e5df7-150d-4eb4-b3f0-adfafab63b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21e25eb-c06e-40bd-a34b-242f8fd03c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9264e5fa-4d7b-4291-aa2d-920e829c6a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db562cd-62cc-47c5-bc92-2187f56a391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde2f00-5c95-47ac-a459-52e36864ccbb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f70e8c-b364-42a8-bdcb-a7c329e374a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a59058f-8990-4772-a5fc-d9af1c4d85ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4621743-b9e2-4c61-abfa-a55c89032225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3097a6a6-1d6e-4bd1-82c2-2258835aa37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ec9218-e88a-4f57-b0ca-9a7b70c5caef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9d30f-e666-4065-950a-5f476195cf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f06603-6ba0-4c21-b789-d4b7f5eb6a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da58d56-9f5c-42f9-b4f5-39992fd14df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f00757e1-cd3f-4447-91ff-f6561a52a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa58bbc-04a6-4335-9e32-086bf372498f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6833a-154c-43ad-a16b-8ffa27e08ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998e456e-9a05-4ea8-847c-e6e0f9c74393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fd343f-06b1-4c3c-be35-262b17d9c20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e03f537-2407-4333-99aa-0b8c4a42ed90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a053006d-7a48-442d-8145-fc84ecd18541",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3845349-df88-4bd9-94c7-0fd135081c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5860a0e7-2370-422e-a665-b2cf2accfee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da469cb-4613-4810-b6b0-7c7472fee68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e76d40e-9c15-4c8c-81d4-fc3038385377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d52295d-da96-4d44-8292-2c0d13214ce2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c5593c-b4bd-43b3-b2e0-db35178023a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0c219c-eb3b-475d-a3c0-e76300e48de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b899cd0c-4811-47b6-a955-509aa17809d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e8ced4-63ab-4673-b4a9-4c77b7ae3b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42c07e9-68e8-4880-a33f-4e332e891b3f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4287e8cc-fd24-4cd6-b21e-203ede7608e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90019fa6-54f0-4f50-9d45-7f35cf6d961f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f937858c-db88-4e2b-bd10-c899791e304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad72e03b-f7fd-4452-a231-cd3669fa456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3993e28-ad2c-4239-abd1-1338a51b192a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4445ed-239c-493a-8976-15b28e252996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5380e517-1195-4dea-af92-689c55a15866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1caa49d-db01-4edc-a82c-912d18d5d79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e7e73e-4851-472e-96cd-ad962628e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b70272-f59c-4e47-80a2-b12bed2b798c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb10eea-502c-425c-ae9f-58a16b32fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c84821-6c36-4ecd-a119-7921a5704645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33013d85-ec97-446b-a3b6-9b853acb9ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ae20a2-4042-4d1c-b4d9-76f035ab9006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a407103-1287-4c52-8b24-6e0dd9752712",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a950e2d2-6a2c-4fee-90fa-7e992abc44ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5943931-57a2-4237-9e6f-c4a8d116b75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d62eac-d4fa-4a5b-87c9-eba5bb25bb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4844460f-3c7c-46df-9ce8-7f4b73ef26d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e9111-145e-42f4-a055-b41ce56bda37",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d8354e-9e85-4f3b-82eb-9a85cd243464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a4850a-e4a4-4f59-b2b2-58129c20bf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d888b22d-4319-4235-8afc-23d4031a6471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee817ea7-7c08-4016-b11f-f54db2f836f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e386cc5b-788e-4b97-afc7-5aa2409bfa98",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec787d2-c156-4faa-a678-e5207b0a03be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426fcaba-50b1-4110-b65c-08c6ca70204d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44338613-a92b-4c7f-91f0-9368f78ce0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3519f6c-2e99-42a7-b5a7-6c09c284bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be2f1c8-4e71-4832-8541-53eefe4aa6bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba191fc-dc2c-4f36-9913-cde7dc8884d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06555687-af7d-4885-b2c2-929fba75718f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43e920-54e9-43bb-8aa6-21c4bf15d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f8e26b-b656-411a-a907-f6e802d1d675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711f58e3-6c8f-4ee0-9996-d37041aa1b6b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c6525b-6189-4afb-b820-a6acbc95e6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca848c5b-0b79-47d8-bdc3-1ce192730f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d18aae-1218-4cee-9967-6eb58deba613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e168bd4-e283-45f6-90cc-e7055b285370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf21680-33fd-46cb-ab06-ff927c28c90e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e60df1-0429-4f6e-bd73-c9a52edc5f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a798c2-cc3f-4417-b689-d14a989ecd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442fd041-fd4e-4935-8b38-5abbb73b3501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e9d7a1-bda9-40e6-a8fb-d9a771613902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae620a1-4faf-4756-9b79-399be8ea825e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bd4283-83d5-434b-8a62-2582c7f5e355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68ee597-a7c5-454c-a203-0f155eed7129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0a4839-7f23-45d3-887b-8ea0a2aff2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ea18aa95-6331-43e0-9056-4c72c21f3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87e9f53-498d-4a5c-8816-9297b2131497",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee5581-1675-486f-a4c3-91c99f23a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40d46e00-3ba3-40ae-82ce-50d697802088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a545e03-f824-4733-9c3e-af2c98ad78d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a71331d-b9f1-4038-a2bf-58660e16eae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3c6b2d-a0c6-4779-b0c6-f1fab07ea887",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e5237-95ee-44bf-a667-f2de2cbb2a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8b631b-9429-44c8-992e-06306faafc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4531189-94f2-41c7-96c9-b6cb5a6116f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f28afb2-21ab-4ba5-aae0-7bcef9805a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b2790-05b9-42a4-bff8-0363c711a7b1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a455bd-1311-4fa4-8ca8-b5a737faa7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c9c838-aad9-49d3-8ab5-0ca3854872e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9d3034-708b-4266-90eb-1328057c88a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2c4c39-0f23-4560-9fa1-7a042681e290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d9e61a-6975-45b8-803e-77cee14731a7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab0e1bd-a702-4e58-91e8-e70e42d0629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f015343-b42a-4ca4-a3d8-e77d1e3e4213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11f4098-c11e-44d3-af72-13fb46dc3d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c432e8cf-f122-4995-8c60-71e300aacd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddf32f4-e4f4-4739-9d27-f5ed2ac69c9c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc28148-d7e8-4163-bfd2-ba5d30a0d3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a66ec90-7a43-4028-8d08-fefedb312292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47c3c50-751b-45dc-a26f-a1e6a06d15e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03899d6f-7fe0-46d7-b92c-da0aea1bed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8775ab06-83be-4136-b6ff-50f8dbbce093",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930b2291-dde6-4cfb-884b-96d0c9864f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86371750-4542-4378-9224-716dc716be9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a862c3bf-19d2-47d8-8f33-decd2832bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1887c48f-c0eb-4082-a3c1-e43b36733444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe4cc2e-19ae-497b-a928-c184bc7f99b6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a737d11-bf91-418c-8661-5b9c9a48a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce726295-395c-48c8-8d6b-2a2cb09bf0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe9720-9b59-4055-8ba6-9a6871be3632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1085d2-b5ea-43a5-b964-941d57766ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca9e86d-d3bf-49a1-a334-be278a646f9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af56ffdc-a60a-4bfc-a75e-95dc8d32df4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c50231-bfe0-493a-b44c-c0f4c9860de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403d642f-2858-4672-9a60-7419c2f9746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab85b4b-9085-4e7c-839d-9b73b6db181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8258b57-4643-49ca-bcdc-b4b55a398d93",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d97a667-a432-41a0-b1c7-527c6f212cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3da59b-71dd-4f16-b9c5-b629c289c90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d88a386-1a19-4a46-96c4-49cf65794d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a54a68-b276-4a85-a1c9-f400c4bfd9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2225f71-1f16-4897-9bd9-5eba7e2d4d73",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0bd211-37fb-4821-a921-6049c811f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4eb7de-cccf-43e6-8000-cc566495a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5fcd25-312b-4f8d-ab2b-268ea5ad7cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a034dd3c-ec2b-44aa-bfb2-2206f9cb6d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ba9a24-6fab-479f-a4ab-a805dff75195",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a86175-6c56-4f71-80f3-0368a99811b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49d6f3e-fe2f-46c5-afba-93e85f3722c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b438acf-c305-4b09-92f9-9d8812c5ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2f4931-6959-42ed-9911-15dc1038974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af3cfa6-29a6-4ab1-93d5-a07ccdbde366",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9704576-c018-4d10-9ad1-4bebe54c272e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b3029f-6e23-4d64-a66c-5f3965e31294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e93759-09f7-4ea7-8a4b-0636a7c8b3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "546da389-661a-48b6-8c01-a55cf82a42c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b745cf60-35de-4e3d-a6e5-e6b5bcffe945",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec21261f-0ab6-4ab8-9849-3fbcafc54435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2904ce8a-db5d-4a1a-a6d8-47bee71686fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53babf4a-73e9-4d5c-98b1-1a935f36999c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a92399-4c27-467b-b0b9-37756786e0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccf3597-138c-4bf1-abf1-9b58b7acad72",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d3a95-7226-4846-9045-bf32c9eaf35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbecd6f-abcf-450a-a020-e9b78a66d50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67103c48-823a-4be7-bbc2-bc43ba9cc650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2be0685-2be0-48b4-b29b-421180957764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f3866-7368-451f-88a5-f21bc3e2b1b5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3098cdee-d598-46c3-9281-ece60dd23371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b26a60-4e45-4484-88de-e34f575b4b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53798db-9cac-47f3-b168-253bcc67f0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a235ffd8-b077-470e-baa6-d29617383631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34230f9e-ef15-4771-979e-e416b504cc92",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d3278c-2965-44d9-9da4-678a39bf8f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9866262-5b75-40ce-8fda-deaffbc98504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d0d7d-ab07-49f7-a90e-5117dc908c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18926eb-58c8-45f5-8a43-5afe74b1cc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bb6ba6-75cc-4d60-84f7-2d170800a348",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ec499-282d-40c9-8290-dda642fb592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5a71c5-9cb8-4baf-a723-419fd5d67e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089d8762-27bc-4b14-a656-a527c4c5db29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e160b7c-b2bb-4381-b4ce-851e4ff7d467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fb95c4-0117-4b29-b7cf-c86b0e917f56",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b46abf-e153-406e-a673-cfb30d6e6a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5207e264-8d5e-4541-b9fb-f2b121e25040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeaccf5-2fdb-479c-98cf-81370bac8c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfa490a-ade0-4124-bbe2-0fb161d39f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e59bc4-3a60-4d19-bb11-53bd834bdcad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8124ee0-33e0-45f5-bded-c14b8ed258f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6a74cd-7d84-42fd-be95-e95558bd604e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986dbfec-1c3e-472c-b1c6-f80d5afe2ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d2456e-9633-4603-af61-edf313fa0288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35745ad-22d6-4035-97d2-6b18f56cbcc1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48edc42e-e810-4ce0-a159-f5e1dba8ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b162632c-5796-4ee2-a3c1-097e4b42d70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2fa861-1ce2-4673-b032-a3239ea8af4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c78fe8f-6c3a-4407-b12c-794358cc78f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840175f-e278-4862-b838-003cdaaaaf72",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52642e77-3d2e-44d0-a72e-49805dae25d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b090f115-8dc9-4812-8f31-bd199718991a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a264dee-4885-442e-9844-06c8f6474017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "30cc93ac-d69e-4f13-9a29-76f8bf349092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe1a0b-c839-45e7-90bc-1ffacd25c06f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c5a636-b922-48ff-81d2-4d831e307a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4352b1a-f56b-47a8-bc2e-345c29064abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720304b2-05a4-4685-9790-e5e33b2417a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a568e72-a2ec-4355-8bbc-3777ab2c8d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e00ed57-5975-4055-9fff-c968cc1d0890",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dfd14f-58cf-41d0-83d7-2298a73b823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4b0e7c-8f54-45eb-a8da-d15775e4fe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f66aa7-4e46-42ab-ad5b-9e43868489a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70676eeb-d7ed-4865-856f-7a57d9e90637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a5f65-888f-41e0-b2cd-ad4b7044aa8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc023d2-5fa3-43a3-b336-4abfb7f3d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cc6d04-6320-4d43-94de-1232cf0d82c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f7f2d1-e7c5-4aef-b4a1-10e605677279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a93915-e040-443d-81e3-f6f3317c4945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac8fd42-ad36-4fb7-a1d7-12d2f8afd31a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091be41f-d609-4696-ad72-d4ebcbd1b5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f41a82-d494-4779-a467-f91d61b05d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8525fb-fed4-490e-bce7-0728fc8a6153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01f023a-1d7f-4571-9eb2-42a1126d6832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21cdea8-4edf-460b-ad4f-611067130ea9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70bc13d-60f7-40ef-8a86-39af00c76246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2e04e6-400a-4125-96f7-c6ed5ab2e5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc97028-502c-47e8-9d43-35bca3f7945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b8f95e-0562-4a7a-a568-202d0711b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89905eed-6e2e-4fef-a6ac-5604889e8f40",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21981803-25f4-4694-8141-a16bd50fbf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8c5f2c-d1c4-4fa6-8988-0c67a02692fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4064609-d0c0-4402-b17b-98e802351307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f8d163-7682-46a1-a942-4636694f406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63399619-64b7-4fbc-a7c0-eb8e3f07dc49",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1411d96-68f3-4dd3-9d23-eb0074c000a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d67741-1502-4931-b1cb-75a611439f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c8a188-2c73-48a9-8f1f-5fdc01f037d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "448c399c-c959-4151-816f-9bbd0dae0f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7749a97-cc27-424d-bb3e-1c3ba569c6d1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fdee5b-db39-4a52-9e79-82acda8ed112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649db312-41e4-4c65-a728-3a82350c9a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ce993-52c2-4064-8978-6790b3cdedf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c30c2d3-9201-46ad-a19a-55f2d8646949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198d3d71-e636-4b1b-849c-9f5826eb933b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7746a76c-6797-4e28-a787-61f71ff22c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accc5ddb-2c5c-415c-8ed9-e6a95ac7c5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4264719-db23-4218-a212-b6989094051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8d3585-2d1a-4089-b15c-e6ed3b5161c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e964ea46-91ae-4404-814c-8089b3a8e3ba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa33ee0-f957-4019-bdd5-5493098004b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb5e8e8-a933-4766-aec3-78adafda8349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cff4246-985a-4a95-bea1-656d1d8896e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e33a71d-4c68-4e7d-bea9-1f1db2abc3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0cafe0-547f-49a6-82f1-475cec14cedc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38323457-76eb-4788-9786-7e95930495e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd506381-12a3-4d79-b8d2-36fa55e8775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494cbc1-3297-494d-94cc-3721aa6ada7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6555c0b-de23-4f31-b4e7-604edf6480db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3861da4-c503-473a-8fa6-9358624c6522",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ca61fc-bffc-446e-974f-fdb16d486dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33daebd8-4e18-4828-a9a0-c0df3e79327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3b9b10-9ebe-4849-8281-926f0a09beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d6e6e1-8fe1-446f-9a04-e60c6b1ca78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10beca9c-2eac-4b59-860a-b2d315ad43cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b2c11-c47b-4486-84b0-2e9f28e92232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1097ccd-91a3-47e4-b5e6-af890b2fb71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd9ed5d-7c32-437a-9b18-6bb101cbcff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "815c96eb-f9ed-4bf3-9f26-7d9b2d1d4530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca25bb-21ae-4e9c-889a-ad965c2f59a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd503be-f918-4792-a3a7-230b161a192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b56ae95-78bd-498c-a057-b4adcd8ddfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ab7ed0-c7df-4ddf-a4ed-d0072da6c8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2c9f83-d9c8-48c1-94d9-a82cba3f8d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98885836-2e01-4336-8fc4-cfe5f87f740f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dab670-92e3-40b0-9a45-ca30492c9af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d450bfa-fda5-4898-a93d-de380a57e4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117bed15-0263-46b7-9f0a-67d8b3df6452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c40c2b-f50c-4065-8049-509156de272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f7143d-afe6-4ed6-a40c-d7be393e6a62",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509e68e0-a922-4cb2-8248-9411374690ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3765354b-dbcc-42b0-864c-971dbc7f8e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f7948b-977f-42f9-8f35-b46666257a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57dadf7a-e0da-4e4f-8565-277d5928e2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7100ec5c-9fe9-476e-8216-7ee2cfe875a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a979bb58-1034-4c5b-a06c-024a2698ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f9dd9e-4ada-403e-a6b0-b4bd62916b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786dae2f-4532-4b7f-94c7-8239c2b7838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d89befc-a70d-4279-8013-cead94ef54b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595d08c1-a93b-4cb2-ba10-3805ae03a654",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10136094-b1f4-4778-a5ed-f9e223c49ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d8929d-ecb6-4c6b-a997-a36090d2958c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c067640-8228-4ecc-941f-3b3ffb2789a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "900c15b4-9769-45d2-8f23-945e61549111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0095f4-875f-457d-b068-9ffb38062186",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfe0abb-bba4-46de-a624-c5d6e6362a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac91953-e103-487b-bf2d-ac8085fbc30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eba473-4188-4b99-8a13-5f0307dd20e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe5ee20-eb8a-46ea-8974-c65547f15eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477a34db-89d4-4412-a9f6-53306256dd4d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fa3d1b-0b6b-4f3d-afb5-763f86f0db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1307a778-d08b-4f7d-b479-3e6abec27ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4815929d-fcfc-4686-8250-6b611d46ad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "397bb4fc-80dc-4b37-9c18-783f95ad7b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f77428-02ba-4453-af12-a0106a270d24",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a24eea-f737-4a64-90a3-7a5add43dff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182aa5ae-303a-4a68-9b81-2df8d84e8e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2875e655-5d18-4c33-a795-419c26c70176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d11f35-96e2-4168-8d24-d1d75b5f66d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f39d90-e386-4c70-bcf8-6ef8a1cd8b2d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22c31e7-16d7-49cc-9815-ebcc44271b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f23cdbb-b70b-4971-ae5d-1d7b5b55d89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c20afa3-ab97-4059-9757-fcb0c60d921a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b61a69-855c-476a-90e1-11695a90b983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc99749-30f3-45f3-b472-ee018b56e6a7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef04678-0efc-496e-9b2d-f43de3097f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9995a0c-610e-4ba8-b07b-8a83c40bd941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab8ec5-6a23-4f34-be96-8732e079bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca90d8-52bc-4ee4-b3e6-0b674ea2451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de29793-1f34-497a-b6f3-23f9e0356335",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d211a783-5a7c-4cfd-a626-a5dc0c5f4c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f096c6b-e6cb-4a2b-9ab4-1b1896f006af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3279682c-1636-4f37-a0aa-cb1403ee951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bc4398-eee4-4331-930a-b43521104f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b87478-8973-4e6d-9e7c-d0ed46a7558d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a6aaf8-aef9-4a40-9da0-3242e775a690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4dd992-88cd-4a00-b58d-6040c0192e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4d0a1-ff7b-419b-8803-996d50b0cb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f45ccb-b4d2-4061-a806-017120dc9694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cabf0b-4b1b-4d20-997b-c834a0d3f26c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d577aa-56c8-4340-ba61-4de32426aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d12fa7-27b5-4c65-9b45-d7a65dc02c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef3192b-1e7b-4663-86b1-a518d18bfa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbc7ef0-4e69-47bf-8015-c8991ed7842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1ac54b-114d-4dc7-9d32-b947e0aad058",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944b515b-4aa8-45b6-894c-977745982ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e55442-9f56-47ad-8cd5-e42dc4622738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc76b38e-4c41-4d5d-af92-35394d6e5304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d332f6-f7fb-45f1-80a5-0314543aa81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fdb9f5-efe3-40c5-b98e-cf3bbc2bb7f7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb71c5c5-bb4a-4f53-a197-8891f433161c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfcc4d5-e1c8-4885-be77-23e9669f31de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276f7498-39f8-4682-81d2-e53fac8fcb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd52ab64-85f4-432b-bb7b-c9795ec32876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a53cf4-09b6-4174-87c0-71dff9ed51e9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2610578b-8d0b-458c-82bc-274708bb8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb972ea-2e49-4666-9b8f-a67acdaa41fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01228c73-c55a-4645-87eb-c8c8d3ce4a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7266f0e7-a98c-440c-b264-415a85beecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65efebed-84ba-4015-9deb-5d010d475813",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c87ebd8-bf38-4bed-b514-9dd4e86858f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035b1cba-45a0-4c2e-ac38-b78ebbcab5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d74d0e-7733-4092-9188-d9b529486c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5c75a8-8835-46e7-823c-ca63e591febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655a6e0-b9cb-4812-95f0-f68e6629c205",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b2dbf-0ec0-4f8b-b4fa-b6e11339d696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d31bd6b-9e91-48a9-a789-6ae44432b919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7be605-6930-45f4-ae7d-8733ee67500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71dde2b3-62ab-47c1-809b-e737c61bfc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2a3966-9a24-45b5-b34a-e6d659d761de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dfc438-8d64-4b97-a197-c70689c21e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad77054-2c28-44d0-bb1f-3c000e5c7e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51481df1-c7f5-411d-9b9a-a917b253e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "656024c3-4a39-426f-808f-f97211701032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d544fe27-bcfc-40c0-9285-0085a5c606a2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a83f9-7a6b-49e9-81ac-58ee5e11343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5462373d-178c-469c-9fed-60e7f326cdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f510bfd-8889-4046-987e-5dfc2a2e6a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "672001b1-900e-4b3b-b1ea-877a8534daf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824cc081-cbb2-41f4-a347-e3a942b79144",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbc02ba-8a14-433e-92c1-c32b20db83e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052b38ed-f567-45ad-bb0e-70537a66ea6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c6ec39-0f08-48dc-b3db-512bb5737065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a224b728-9417-47e6-88de-6ea189eef29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe16dde-6ca4-4a73-8e84-6e5bfacc15c4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31de5956-7e47-47c0-a4b2-17bb17f6d15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6e027e-bc50-45f3-a689-e5923ac82305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3482f119-285e-422a-ab1a-0e0a354001cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc12229-5fa9-4600-82f7-cd3a5d2903bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3aae48-c801-49e4-853e-4b66ba4ac728",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fca44e6-9e21-43c3-9501-45e0f2906ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3dcfe192-645a-45e9-8884-8a70610238f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0529d-a82b-4d2d-bbe9-300871595377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b1fda9-b813-4a0a-b84e-c94ed91479be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5e04306-73c6-4610-91aa-e85717d5dea0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb9960f4-8209-4bc7-83a3-ebc37f1d2bfc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cdb331-1042-472b-9663-3ac629d3ffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "278d29a4-5420-41ff-a68b-3815751d8c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7007c5-2b78-4962-aa7f-e051a3558766",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b714c2-af05-49ad-951a-73ce80223619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7866af6-83d7-413e-b42d-082074e6be37",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755e9e27-dcf6-46a0-8028-60244db37932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a580799a-994e-4c42-91bb-071289a76525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a48d69-140b-496f-bc93-f9ede57cf0b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4423f8aa-7418-4419-8232-4b2f1921d380"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd8f5c9e-a08e-487b-8f6d-e13db4e7cbfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bbb99dd-5b87-40fa-af8f-f8e1c50d33b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf03b322-4000-4aaa-b5de-3fc4ac46e225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2d48c3-b8dd-41b2-9454-52c507ac18b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50470e95-6f8b-4860-9597-afe86cb9ae06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52dc3fc3-c1d5-4b33-8764-9e327eb5478b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4bc008f-2fc3-4cd2-9958-67f909ab794f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8355cf6-fd75-49b3-89d6-3df7ff5ec20d"
                }
              }
            ]
          },
          {
            "id": "a34d76ed-bf39-4fc1-ae4e-39647eb26c3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71525c81-a384-4730-8e55-8c35f46874d8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee5c6ca-5001-4a27-af82-745ed67c79f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4c736ad-9726-45c7-ac79-18390a489d3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d55b5bcc-351b-426b-aaf3-44a0ca95364c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62ad5e4e-c2b9-431d-9e98-56e28325c081"
                    }
                  }
                ]
              },
              {
                "id": "120741c9-126a-481a-af0d-0a433063e30e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da00750-2a81-40be-bdf1-29f9ba45d7d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3ee190b-9a41-4437-83b5-89ed02738926"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f38fc0ea-9d02-4877-9b85-2f893c4720e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ee91636-5765-4a1b-878d-cb38e9ef3184"
                    }
                  }
                ]
              },
              {
                "id": "d29cf1f1-550a-4f2a-a16c-2ce2af9f49f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "286a04a5-2e66-40c0-8c99-34bc2da4d6f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "189bed01-be4e-4061-be38-1e6c1d306425"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3665b7a-6d50-44af-84a6-fad6d0482dba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d317f5ae-7d8a-4e39-a94e-d4af71fe7dfd"
                    }
                  }
                ]
              },
              {
                "id": "78abd494-7ef3-44e6-ae7e-08d840c86c57",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c487eb2b-1be1-4b09-a0f4-f570db4d1cd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b5ad154-9a30-42a8-9c1f-0cf0678d8878"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e219a15c-db63-4f70-9d7b-983d8be33435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "93f3a06e-69eb-4202-a343-793d830cfc5f"
                    }
                  }
                ]
              },
              {
                "id": "4d5af677-d851-465d-9ba6-0ca0b5c0c8ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58646297-dd1b-4b08-a5cd-ac5e0e4fa746",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a6e21a3-d3b7-4db0-9e6c-d24a0d83f82a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b53d81f-2ce5-4693-a165-fd2bbc16c819",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7d16a93-e223-44c3-b0c6-f07514973502"
                    }
                  }
                ]
              },
              {
                "id": "b7b69428-b41d-4d8b-85d6-dddc0cbc83fc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9984ec2e-d2de-43ee-bbf0-72335ead0ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1cb9217-1c02-43e7-9586-9eef72e95230"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d67d5a9-19fc-437d-829c-4acb4e810542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9eb16134-3628-4d7f-af30-cf2168992c96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "342f406f-3bdc-4cf7-9c5b-428a0275598f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "679cc953-123b-4e77-8706-9caab239fd39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ab1d56f-1b19-4bb3-bca0-1647d229f005",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b82211b-3b1f-4bfd-b444-9621cdf93f1a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b36fd49-fbac-403d-9c69-5ffdae52e7f1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e67b496f-d9de-416f-bc61-5d383c44c3b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e58a9df-6cc7-4834-a064-551b403da2dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "805e047d-3070-413d-99c8-85f6635d70d6"
            }
          }
        ]
      },
      {
        "id": "b3b608ee-c030-4c75-b8be-f85f5e11f158",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e7427ad-a059-4468-ad41-2ebf7584e771",
            "name": "Negative Testing",
            "item": [
              {
                "id": "486cd5e9-c120-4130-85e5-c2605b18a02f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0790b527-54fe-4ebd-a894-58debf1ed5c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc90f96-65b4-4844-a697-285091c5f6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8da3151-05b1-4da8-807f-38efd7538f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8297ad97-54f0-494f-900b-938eab368977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a6df71-ff3e-4e52-ba0c-e5f69eaa4474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fd4bbc-699e-4ec4-aed6-a0a0443c17bb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c803064-3c66-4514-ba26-11c385a2dfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d94857-f13c-4988-a437-52fc94699c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b5ceba-d089-4c03-bd7b-e24d031277ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96413f2-4cf3-4f42-9b7f-3c4e17f1d6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5ec1eb-8467-47a2-bc86-56f1a06413d7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97be24b7-8016-4105-b1a8-3859041762d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcea22b4-0f70-4b65-b9d8-a14811b3bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bdcef6-379b-4a8b-9df9-b9ee6c0d91d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ba1715-3da3-475b-bf21-02f1df4d944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d84717b-99ed-459b-9b2e-394ae5f21260",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03424191-029d-4494-8a51-b82871dbe44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094809ee-5a8a-4380-8481-7d8251d39b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07fc88d-ff86-4335-8910-1ae6ac974864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fa6e49-1998-4a46-8176-51b30b559517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14babcb5-d15a-4276-a1f5-83bb1d478cff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b46e7b-a3a4-4168-966d-ae9d1701587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5912748b-6872-42a4-b1ef-8e7e23fabbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f7ebf-7a53-4311-a126-351ade9ea240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a76c96d-9fdc-45b7-b9be-1245b574b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b63fbd7-2c72-480f-b05e-54a716509f9d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634ca6d4-ebf5-4351-9a62-2cc46363f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b9f98c-9164-4bfa-877b-4137d6300b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac5efdf-a6f6-4857-bf6f-58d48dc787fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41829749-91c9-42e9-bf5a-545e4574337e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5b314-6754-4253-9e6f-1d3be5a15ba9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a1080d-ad5a-4599-86f0-d98a025c526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68a8ca1-d074-426d-9e18-265b71617c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebb6ea1-6478-4403-b575-be7121df30b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a6471d-5f14-4ab8-8e66-6527cae9e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab21a6b-f534-4893-91d8-cb0d208467d1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d1791a-8fbf-4b04-a0e3-d76ac333d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2598b59-4ab1-468f-8993-7d80b8cec03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a676d57-bc85-43f5-ad61-fda923d66210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b81f90-9003-4f0f-b2fd-ed27272f2fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92387bd0-3cc8-45c8-ab46-ea344fad7441",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c968b17-feea-43a9-8f8d-649cb5866371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea98c125-d44a-4417-8eb5-8d0477347e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8284ad23-c152-4835-b45b-6dbcc07ecc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03bbf8a3-e337-4b71-b079-32b38c3a2151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3478564-360c-495b-bbcd-884971a2d69b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f480b2ad-0089-443b-acb4-9f10e0e89839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfea0ed-7795-4d56-ac63-ed394326ba1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d01f75-143f-4162-84de-624995e1da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ffa696-54f5-4d4d-b6d1-be198aafc820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a92de81-bca1-4a7c-adb3-b242f656e3bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e23fe8-599c-443d-9601-f42f49acdbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974ba0f4-c214-46ab-9f64-4105372e5a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38200e8b-74b5-4d7f-8631-60a96ace7521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57e45291-8764-4a40-b50d-42a2d98cc2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b946f-04cf-43d4-ac6a-1c10b3263760",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94605efe-80d0-410d-919c-88f4dcdf4299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1a5b43-f54c-49a6-b3b6-1042a1c65476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68612757-8e68-4c43-89d4-8d4c07a0543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e83c49-828e-45c4-8145-3788a0dbe313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03f7b0-95ef-4c44-8a93-a856e3bf0ffb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20e5d2-70f1-41d3-afd6-6877fa1821f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131c24c2-457b-4d16-91c3-b6f3ee88f963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18bf2b-d2bb-446c-93e7-c9e7ae50f548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "263cbabd-620c-49af-bfb1-30be98df0597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf253dae-05bc-4494-99c9-a66c05e055f0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d41ebe-2669-4b50-ab68-01639d375e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356f963-17a7-46c9-93cf-2ca96ff51083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475eb254-4b31-49c6-b1f6-e3136a0211b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "296ee40a-5121-477c-b441-4988e942ad6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141ce2d1-1a9f-4e36-8fa9-f4996c0c8dd8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4052f836-c28c-4ef4-867e-cc65f2733d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fb74fb-94a1-4f2c-9274-930daadfb59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af18fc3e-cb62-46e2-8662-0adb3db2cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c764785e-8627-4002-8358-540c4044f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09ce27f-0246-4e0f-bf5c-b45c5d2c10c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6230653d-e88b-4201-b70a-ae7a95181bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f6c320-d740-4db8-9b80-3987c48bfab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad40e2b-77f5-4b6d-b965-7e8201aa5225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75faf08-06e4-4c49-84e3-f90042aa7953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff1dca-e88d-4b0a-a5df-40249c1b5446",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd5947-7cd9-4b12-92c4-68b19b60edf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290ee931-d4f5-4b64-89e7-86e2daf4b5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deffb547-f0b1-4e55-96b1-50342ed89b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e3c676-568d-4f08-a64e-214e97e020b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaee724-d176-4d66-9de0-60b6b3e16a36",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6926c1-39ed-46d4-b962-6947530f17ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595b94db-1e80-4624-a6cb-73b6a61c90d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a39c2b5-d6ff-4610-a403-061d65c654b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e1861f-e6a3-4408-aefc-8f6bb828c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b2b8d7-667c-40b9-862c-b6ffebebb94e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048f19db-5cd4-4930-9047-319bccdfc020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1aaa1b-20ab-4d89-b57c-eb2e361f85c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bf79d3-23f1-44f5-8aba-6affe996d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b0d025-19fe-47fc-bfac-d638baf06036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ecc6ca-6c02-4bcd-99c5-d220429efd8e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11559489-8ee6-401f-bfa6-35cd372777d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c464ec1-4a70-4237-8c9c-d56d2aea1161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b33fb3-e57e-41e5-8691-e29c50c06aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d1fd37-944d-4988-b9cf-d941e1677c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04b11e8-ec44-421f-8d02-175da3a505b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9454e20-e22c-4fd8-8d95-772757b3e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c89fc86-d0e9-45e6-8408-55d2315673e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d4087-e234-4e70-809b-14ab81478acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc52194-2477-47e0-b538-b44492928dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f865de0-fd5e-4995-97c8-cdaeae132ab4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6967366c-ecce-4459-ab7a-dda2c88ba09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05141de3-db30-4a88-838d-8c273d608fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82919c74-440c-4624-bc98-1113159a9a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d255d3f0-8a5d-4177-b790-df5686ded4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e2ae3c-3e22-4b49-baba-d0fa3900c491",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832e0bc9-0562-40ad-949f-865dbf6cdd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50827e72-f946-4016-ae2c-8324d4061cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48ca6b3-8009-414a-9592-0a7506cd8af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0c8528-9530-4c8a-bdd7-90ee47229e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7466eb9f-9c3d-473b-a276-8c42095c5ddf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb8c5ce-e23a-4d3e-9f1b-304751d4ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa33c78-dae4-49b4-8dbd-12904465e2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73205894-3b57-453c-95ff-3ef55e80a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f9028c-5e64-416a-8a72-8d71886fe10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e844d80-8f18-4223-acb5-606440b24576",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59a06b4-8839-4048-8d03-3490b33aedb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58feef4-9686-4095-b5a2-c5e6809a2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae73b05-2e97-43ab-b4f0-001f8660c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a486bfe-f102-4ae5-ba46-67446f2d735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6d916-89c3-46e4-9728-2c04580f5946",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed687750-fc3d-4417-9c5e-2ecd7328043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c66363-d1db-4f41-b84e-16a9498e6a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a4a46f-8b19-45dc-8407-5508f01407b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c5f95e-a3e9-4505-bd8a-b2c23064bdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a93ab6-0afb-4163-9886-5ee24e23abc0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc01b5a-c186-4a80-980f-e4515434dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41178ffb-4976-40e2-81e1-d293fd797dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f32c09-8fe6-45c9-94a5-46e8c90d217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f8c6c3-db23-4c34-b936-14375a579d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7387318d-3eba-4641-a3fc-e80fa8003704",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6315102-ccf0-46c7-868b-8f65f6c7f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de50ae66-d141-4bb3-9d2c-445696a45aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7604deb-f498-428d-86cf-a70cd37b5c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d2b759-038d-41cf-a183-2855dae67da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c71bfb-5873-4d1e-a1a5-fed2f2320dd1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ca0834-c24f-4963-b0b5-3157c5798114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae01a450-5809-4b70-84ae-b432c91ca1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f61ccc9-97ad-46f9-a0c2-cd6727eda760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8150a257-5eaa-4396-b071-b60faf1121e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c6466a-64b5-4dad-8cba-b739cbf3d487",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb21b2e-b6fd-46be-800f-3f68e3045ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc101de0-468d-4398-919f-2e9a37b32c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9049bbb6-1347-473d-9e8f-0483dff131b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "175e54ff-282e-412c-9df9-1214681e73ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdb781d-2123-4a28-ac89-0c1d32680997",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958b83ec-17d1-42e1-a3a7-c5ba2de65349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1aec13-e0b4-415e-8c5d-e84520c57af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ea3d0d-839c-4337-a93e-997fe7b2e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb35bd8-ab77-446d-984b-175f7aa6cbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485f83b0-dfd8-4e50-9f1b-5b246589ded5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aa752a-30a2-470a-b81f-7706007d26cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb590a8d-1752-49e4-a531-eae6612a73d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4882f133-e551-4d09-978b-ab83ee8cbfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44aee48d-889a-471c-9a8c-01369ea867c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b38272b-fcb3-4003-869f-de9f1e29eddc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "091d3a6d-8b30-474c-bb7f-493b476d41f6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f155b1-a952-4763-a7be-b1bcc57d8029",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2b4a1b-a2cd-401e-bce5-e030920389ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab9741b-9d55-424f-9389-8b3c5b5c0aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a74a8b1e-5376-4618-af7e-63e353226b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e34b6a-4dad-446a-94f0-e87d1175f837",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55ec3e7-0ba0-4ecc-9f48-e4e31ad469e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab1b895-480a-4ed3-9bf8-d25d4b7927da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aae3e0e-369b-4cfb-8caf-b79a5f90d5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d7961d9-2aae-44b2-a026-5b0b8bea918b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89559ef2-a2c9-47ac-86ae-4cadd371a3ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e169954-558c-43ce-8053-ea755be2fdc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe7c5ff8-0db8-45ec-ad5f-91b07e0c88c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d9b58c4-3843-42b0-b7a0-0e4f59bd293b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1a14b7d-c8c8-459b-b3dc-78f401b3cb1b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1528b93-e117-4731-854d-7e0e299e9972"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c2de137-3822-4c6c-9569-fda094ed59fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "324308b1-2199-4940-8d2b-5ba863ad49c3"
            }
          }
        ]
      },
      {
        "id": "a394e1d9-d2f4-4b50-87c6-214642384651",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0c6676fa-a496-4d2c-8d35-7d0f9942544a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84215ff2-79b3-4b0b-ac21-3476997603bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96c1f5b8-00c3-4d4b-80b1-69b4a3ce681a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d043a-438b-47d8-af37-9d5cfe15a4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b35438-811c-4890-a25f-03c4956e6edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cbf056-b1e2-4ddc-ad05-a4bd19f8cde0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab29fec-7558-4123-a113-3badecc92803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d28c3b-df3e-42d8-b04a-05168bae47c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4f9b2a-c7eb-44e1-bf76-a8d3bf99dbc2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b39946f-f352-4bda-a9c6-9f5602db8497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8e2fba-5420-4d39-a4ed-889355bc123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d98b1-6a5e-441b-8462-4114ea7495c4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879dd8c2-0bc3-4533-81c8-a42634761d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cc5462-4460-4b34-8110-0d860c9b193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efb5aaa-7ab4-44fd-a6ac-af11e6eca0c8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be4479c-6ded-4eb5-b69a-6c573b8a21df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fd0ac2-c75c-461d-900f-3444e6f2dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d8811-0a4c-4687-bebc-9b09743c2fb8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d02ea59-7053-435d-877d-f3445dbbfe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3704ee13-acd0-49ca-b5d1-50b3847b1877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4cdb7c-bcc5-4f57-a352-1e77578ad2b6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a23600-4dbc-41c8-bf01-99e7628772c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bac0105-d039-43c0-b6f2-9f5725270306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f10f52-b278-4f4a-81e2-130d1e67744f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d080e9-f073-4f4e-95f6-c06ee8cccd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acc79b5-6fce-4b0c-a022-e410510fcade",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d48f97-5094-4f99-9e70-8d3a42bed42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22deb636-d079-428a-8b7a-dc6d866bc1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20129e79-cf45-4063-9ac0-11dbf5ede47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a666221-c9a6-4965-9def-c492d38c9c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a24143-514e-4fad-ac15-fd0d8a25945a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ec28a-1488-488f-889b-2101eee576d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a392d2-7e88-4bad-89e0-f91f45981562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32084754-f1c5-493c-94e1-55550cfe270a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9997d45c-b572-4f9b-a314-c0270d04cc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a75e0a-d1d8-4e99-9fda-e270a9a69533",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014f1c1-c0a3-49d4-835c-f99c12a0aac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf9fefb-5802-42b0-b6b9-01a6b2df9c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa4cffe-0dbb-446d-9c32-c8cfae76de7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6af90c-26da-42c2-abf7-2571565946af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1deef9-2b32-4cbe-9a22-f9eb5100b510",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47731f34-3ec1-4c82-9166-7f473fd50ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aafc40d-83d2-409b-a8c6-46117dd7fe4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa609fe-8114-4adc-a197-c5c1e2e3c043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ae43bc-7f33-4c3b-a538-b05545e4349a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e98b85-0e1a-45e0-b57d-3df1cd040ea0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcf7d51-1b4b-4e7e-9288-40af0fe5df9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e531d763-6c17-4060-87c3-8d932144ecd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2abbc3-2e3c-4515-aad9-96c9f39169d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c134c81-e46f-4032-b30a-f7e43bb3e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8629aa-3bba-470c-9819-3773ad055936",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61002450-2a6b-4754-b690-df09dc329737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc825d9b-09ee-49b9-9a90-5532eafd574f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba75d895-abf9-4b72-95b8-34abb037b008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a9a3cf-435d-4581-9340-ec7b6ff5b3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967df5f8-a455-4198-8cf4-581ff5050f37",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d2617-e7d7-4255-a461-65463434c950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad1cd92-a6c8-463a-9613-c90a0cffd928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad179f9c-eda8-4d97-bed9-126e97d407d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69692313-a92d-480a-9c35-3c6b86ca5a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ece31a-ee47-43e6-b182-028d2d2040fe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea325d-2a3a-4182-a116-b71d990ef520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6faa3a-f2ff-44b7-9fa2-f93a8e327823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c81fee4-39d4-4d54-9cae-1c7f7ba08ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ee0f7b-6348-4522-91b0-828a11d8a51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d7d07a-cb14-4a41-a3ce-c87a7d166ab6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cee367-1735-40a6-9054-2a51da6b8af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3541e1f4-0b9d-4f4a-871b-f38f2b91fd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b5a537-0d33-4d0d-a83e-9e3cf6381230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8624913d-2c92-4542-90bf-422116d893ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bfe0ec-3a52-410a-bb73-7f20e11e61a8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112dca81-2a34-4aa4-a867-7bab2b91622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41d7328-251f-4dc1-a1c8-14b0eb73beae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569387b3-fb36-49e0-80cb-562b6eef8375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5625f5-7432-4304-a64a-77fd3e99ec79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b89667-b425-4126-afc9-2be394a82134",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f857d261-bced-4bc9-9df1-f89bd1fa9682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbabffbc-ef47-4126-b9c5-7dae3afd91c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3486d95a-2580-48cd-952d-0090736b0864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86913a7c-ae6d-40f3-959e-3dae85a676dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831badae-6f3b-49ab-950b-c24b19376cba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde03491-dfbb-4153-bf28-39964b17a9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da45614b-77f0-4f81-a3c5-50694a893743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ef0c55-eea1-467e-8722-0e62807853ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ed68e4-1500-4114-8979-9ccf211b478f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2aca32-fddc-47b3-88a0-3754a6354349",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2eb850-925f-4791-82de-91f48f068920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d98876-7a96-4ddf-9870-39a002080223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53dca4f-d77e-4a2f-adbb-3b08f1fd05b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10745e1f-0eba-4949-89c7-9b951d0c3f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061f2cd1-6754-47bb-90b5-a21d0d62028b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7f504e-69eb-4e37-8157-a570e70ded10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546ad2b2-9ed1-4356-99ed-192788b024b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42298cd7-9a7d-4e8b-bd7d-42c57db7a063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38672884-3244-4152-b473-0ebf8dcddf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d193150-a434-46a5-a49f-c40aef857d70",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4483e43-0c24-4a3e-82ab-288c5fdcf49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e091ad-b980-4556-882c-ba76e85e7a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a7f7ff-fff1-4804-9bd9-50b88de08684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76141529-0698-49e7-a3ac-85f06c762203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718020c9-c488-4bb7-acf2-2f483792fd45",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6e98a7-a4d6-4db9-98b7-c029217acc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bdc5eb-26e7-495d-b815-1185d153ecaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198e07a8-7ad7-4459-a51f-6e1bc31e9859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f84d7f-81c3-4a25-9aca-dd31f3285361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fa427f-8d32-4100-9d03-cb074117a966",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fc4e23-ed1e-4eab-a3b4-15dc25944298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57d7423-3ff5-4387-8cdd-046c54fbdc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9010905-a44d-40d5-acbc-f3c4a870d42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9979f2e0-18bd-4df3-be01-50cc68e168fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d243aa6-cdb1-41bc-9ae5-e20f59a5fb4f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ee82b-a060-4000-a10f-7d79c8290d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "263071be-caa1-41f4-98d7-0cc724ba4c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3276d4eb-eb8e-4f90-a285-eb1ed27dc4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36a078a-5de0-4bac-9a99-567a98e30e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ab6378-de56-412f-a140-bbe7bc16e149",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c544b-c40e-45b8-b3c4-d778dd1eec48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6368452e-a0f7-4a32-981a-2209456c7bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735ee27-3092-4e8c-8057-be0dcaf31f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060cea83-5e27-4a10-bd6c-70be0a2320f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a525c70-407c-4cea-8a58-d7711c6b23be",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e542372-300f-40da-bfa4-62505a33f982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0961aa-b165-40af-8509-ce7edcad5040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794a298c-fa9c-40aa-bd7e-b992be59d37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1b81cf-32ce-4383-89a3-1113c34a0c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20925036-2828-421b-8e6f-1af38de2a270",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ee487d-1ae9-40b6-b5b2-8d5a78f34872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a828fe-54d6-4d33-a15c-052edc0562e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c70fad-8d49-41f7-82b1-496961d43bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4077fcda-5231-421f-a78c-abebdf8267ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ee0ef7-88be-4d77-85e9-9d9fb743fc0f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b18d1-5a84-48c7-a3e4-25bbc18cc874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ecc4b7-dd35-4800-8497-362c06bfb40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae98b3-fa50-4eea-b37b-ff5d0be7277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512e3107-a82b-4c9e-9dd0-69eb18a51f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70572910-ebac-43f4-b84d-2e76f2d16213",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3505af-c248-41c2-a676-390f2b5b92c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85b71e7-7d0a-4bb1-9362-a15676b9d07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba554a9b-231e-4fb8-8cdf-86bf65b9a6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e63c8e5-26cb-484e-ab32-587a6dd90ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b158b3a3-29b2-45e6-a9c6-a2c4123e06eb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410d9749-9aff-43bf-bd3b-4729fd3f23d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9ccfc7-ea6a-44b3-8cb7-ac04b27111e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3ea972-21e8-40ae-87ff-52f5b07d60b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2112b96-7ad5-478b-8b6a-7a9e7269ded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5660f1-c93c-48fa-86d1-e66d7292267e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8b55b7-8aac-4791-baef-ae706491bef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151b8db1-9d64-47f0-8f83-ded040edcbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58266f87-840d-47fd-a5dd-a4328d4b22f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b277ec-457e-469b-8fc4-22a9f75d1720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3986f4-8edc-4743-bf7b-e6a17eabc893",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d467f61f-fa7c-43ad-8e42-55099d781f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba620c06-44c2-4c61-a4f5-5369998909b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254151c5-cecb-4810-baf5-e9baf0968e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd06dea9-9be4-4c50-a28e-8786e18eda16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f7e69e-7a54-4bb2-b296-e81669991db3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed92e6b1-0ccb-4bdf-81d7-dd7b39f4d091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ba7e7a-8aec-4b5e-9be7-00f2149428b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59ce89f-d786-4947-a90c-3eab87d5ab6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c721dc88-eabe-455a-9b81-864f5692bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414bc0ee-ee80-4aa0-b9e8-3bf69f39bee6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd79d6-34b1-4dfe-bea0-62990e2ea904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917dac91-4a29-43ca-b0d4-f3fcc102332d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d3d8c1-2284-4208-a59d-5dcd3afbf974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae392f7-46b0-497e-b9a0-f642c95fe3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85efabd8-7f8e-4029-afaa-b421c1da4b32",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c798e5a-399c-426c-bb82-92e4ef7216c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a081a43f-873e-46d7-bed3-40bbdc4bf1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a12bec-79a1-479d-a779-1124b990eace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8c77df-74f2-4729-bd9c-29e93ed8bb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef32883f-4484-4f4e-9702-1970c0eaed9e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c8878b-6589-4f8e-a76d-23ca4990e92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c81776-506e-42f5-88f6-5e649f27fc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264c66e5-b6db-4cea-8121-c69b26b0cc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c21375a-2cde-4297-9d29-533eaf2b4173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d6082-f5ad-42de-b7cd-1c936f4a5de7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822ddf80-0ad2-47c7-8293-9bf024774be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2925828-2832-410b-8fbb-ae0de3cd89ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a441a7bf-68b6-4e54-86d2-4119b4da9efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c88bb1-4d35-48c3-805e-21ba79738a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74fded-25d6-4d64-b5be-aaef82f45769",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7cc7c-8f8e-4479-802c-78ded42b2c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec98a81-96aa-4a39-a87f-123702fe75f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab04686-0365-41d5-9b14-705d77435b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed71240d-255a-4923-9334-8fa5dbfc6a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e35a0d-884a-4681-a692-a61218c4a31a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861d6a11-1b78-4a01-8d40-dd31e1076967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995261f1-3743-43ae-a2fc-89a160dc5fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29115344-06d8-4642-a516-4928a4674e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd622c2-c631-4512-af3d-0c2c8afcf83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fd63a5-ed71-40aa-933e-9061b7276659",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f3ef4-cadd-4aaa-bf74-75380fd8c930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a6b0f4-76e8-4825-afe7-7d1e6cdf4ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f448d7-6d01-47ab-9791-d00a4d746737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2675a139-7e59-4d47-a802-4596d5a6f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b848ff1d-4b2e-4292-9b21-ff7c7dd6dcc3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b8d992-9584-4915-9bdb-03dec930e5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13def83-dd80-4c4a-aa8b-80f81ca2854b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aa8bc7-e137-409b-aa47-eec8ca5a062a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a865237c-1839-440c-9f9d-869926c30e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ecb753-6965-444a-96c0-8d9f81c0550d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca3a99-4de4-4346-99cc-da6d3e1b6175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4cd384-2092-4694-a66e-39367f6ffe89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee3a4a-11d1-47fe-9e1e-913fd210a391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3ea052-9ba9-4b46-8450-626d799117e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7016cba-6641-4327-931c-1cb4dcaed274",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b496a2da-0d61-4dc0-a10a-17e742dd690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a0f118-463e-4e4f-950e-bc3a5badb26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728330e5-4e57-4275-8047-ee2d842be558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fbb417-325a-4206-84cc-d038a2a3fd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb4d26a-7be0-44ec-b397-7478acfac347",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eab59d-560a-4207-acde-b8afb54cbd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725d0346-dafb-4385-8f67-92ae5b13d3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3721ae7-5298-4afb-aeed-583ff2899e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc3e13a-768d-4bb4-bb3e-92edc62ba515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a00b1c-868b-4573-a3bc-13caa35411df",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10072e6-f4f9-4b1f-94fb-f0e9ef5d64c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7812c9d7-c5ba-40ae-a81a-4761c5877a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b9a44-74c9-4735-8103-544ded61a74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd719c11-9feb-424a-9293-0f8cbcacdde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b027b39-c9cc-4ba2-9128-8ea31eb70eb8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787ab36a-8876-49f0-8622-d48f3a2e5ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912d96f4-fe82-4f9b-9537-572f9bff3c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5adfc-bdb8-45b3-b78c-b61ea03fd50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1e9b01-77bc-481f-a0b7-e62b2083a5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e740a49b-8a15-4214-829e-595050145de1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283e6c4-e762-4254-88f8-b71b3b9aed62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d3112f-3e68-42d6-9bce-2d5898d578a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac5857-a372-4b59-a6a3-0eb2974d7abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce090e63-e2ee-4816-ad22-fd482b8b64ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7879ba5-198f-44b3-a4a6-08943f8edbee",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035dd4f7-035a-4fb0-91a6-f98608a3920e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2214d8c3-3f94-42ac-b987-bc4e3101ee11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cd25d5-34fd-46d3-bd97-5e69ac14dec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e6f572-1712-4ad6-bb74-fe1a5c23d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2903c830-22b0-47aa-a108-ddc32125ee9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed6f20-f1b9-4d01-82f3-2798f5b3e730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0212b52d-f2d2-47eb-bfc7-a439676c3090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67e6cf-97ae-4024-b99e-7a08a70ee0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d54172-a33e-4b5e-b7dd-01f9ac9b96d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f45567-c10a-4dac-a9f0-a4c33850ffcc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9773d8a-6bf5-49ac-a5f0-b86279d0bd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea576310-d58e-4f01-9864-f6bd8bdf4d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e8d36e-724c-4620-8d4b-e3ef428d8812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d321c33-680b-4417-aadb-25261f2b89e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65000e3-1ad3-4053-95c7-5e2c93f44c63",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e4559-cec6-4999-b491-cbc8f8f0cd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713b64ae-b3c9-4c05-b1fa-c89347817258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5979ca9b-3731-40a4-bd75-142de44bd8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9272c2c9-da26-49e6-b6a1-6cbb3d5fa029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e187d6-35a2-47de-bdea-245708f72623",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a172631-0ed8-4278-9c86-eb09e779e42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740067c7-0c0e-477f-9197-385f6aa8c7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bdf633-240d-4e2a-b5d9-c459f5604c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62d6905-f731-41c0-af49-47d8f504075b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f4ee67-7cd3-41ef-b976-3722923da690",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058f4924-1d17-48d9-8404-9f88f09b7d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de6e1ba-fe09-4bee-b392-ac66f3bd3169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764c6cf4-cc8e-40d0-a307-2c62b2034f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359409ac-c55c-4b51-80d6-f9ca035b1594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c146d8-4ca8-4b26-b279-790b909bad8f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24de106e-fa4e-4a27-a9ba-e6c98d689c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19115f54-2c8c-4ec2-ace6-fba5cf0d5ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c27696-f771-44ac-a8ea-3e955922cc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f94be2-6d83-47f0-a578-067ed0a00c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c497a6-af3b-4d0f-8fd7-a70c2a9b93a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c2796b-c5e3-4651-a1bf-4b27c85249b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb425942-7d00-451e-9dfe-931f34a2c3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e548e38a-121e-4a59-b52b-ba3d3826e9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f01f4-2233-432d-a3ff-1b034f81f03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90c2017-f4bd-4662-b57f-649e9baf48be",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0063ff-15b7-449e-b5e6-4d86ad5738ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e41103-9946-4ec3-a0a6-798f85e77246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39a30d3-74f5-43d7-af0d-93b416bd7984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d9454e-18c9-43c8-9ce3-f506ab488dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea7184-f73b-4f3b-9d5a-c02e376246e7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bb2c75-9d3a-4c5a-b2c2-8232bed926e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e542c450-dc6b-4aa6-9306-83c549469eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c8663b-0463-40df-9e9f-7bba35b4a713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dbe555-a888-4b97-8211-8d93aa25fae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1531dcbc-3bed-41a9-8b59-44f3df28954c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15562f5-f3af-4769-a138-b3de8bf8e162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45f0370-cf87-444a-9ded-b92ce2b6bcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88aa81-1f98-4d19-8cc9-64da151a6c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc87a53-e47a-4b82-8100-92d0b23edebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2cb154-25ab-4537-8b2c-2f583211d40b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa70de2-a673-43a5-b604-22e443159a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b88033c-38a4-4a90-993e-fd67b45c0a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb624a4-459d-4e67-b3b2-94d8b72be323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6452d4d-6c2a-468f-86e3-7ae374e65ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d971df-54a9-4d78-b2a2-306bdec114d7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064adc09-a024-4d5f-b2da-9b8a4f991d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab1cfd0-ad35-45ad-ae57-8260f532c7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45398765-6730-4704-a26f-6571af05db70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169750f2-3673-41ed-8a5d-2289361b97e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b311ab68-f28a-4563-9238-a23f46051026",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7842c37-2742-45ff-99c5-e39a128a580f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e80fba3-ea66-4f11-a422-78eac4a907b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bbb5f0-0fe2-4838-a7ad-f764e179056c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ccfcff-d99c-4bc2-8d8c-cb5a24de18bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254d2aa-0b2f-42ee-8d04-fbbeaf705547",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d2b980-023c-4471-bd21-f58e6a32268e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4a3480-63c2-42bd-9dd4-026a8c51ac5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a44de4-cbde-476d-83a3-a53a5c354a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1802c640-ce05-48d1-bbc2-cc0c6b453185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16d14d1-d096-4f61-9066-9d3a22549b14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d3b67-9152-4730-b28f-129f94d998b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b43ac9-bc2d-4f3f-9a2e-f7876627be71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d39202-39c4-4231-ac47-cf82f858384f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80b19b6-df8b-4c15-b19f-f43b99167c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b95bfec-893f-4aa7-a5a7-99f0ac5a2c02",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53958cef-beb5-4de5-90da-735e5b8ab67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af198a1-8d52-4492-b1e3-3d2f52435ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f289fa3b-dff2-43ef-9980-b1c4ef2f926e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ecc936-c36d-4a43-8ded-7b3c8feed631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992fc07f-1f4e-4ac8-befe-6f4fa9529ce1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5537c9-ba7d-49c2-a855-cdec742d2156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b47e528-3208-4feb-9fbb-77c23ecb0872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7153c84f-5811-433b-b502-607de99a5322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401b68c9-9a3f-4194-93b2-87d65a10bee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c27f9-30e5-40ad-96bf-b24ec7d65f6a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72400930-afc0-47f3-b460-c76cd670a387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98df8fae-b960-41bd-981a-a8d0bf533836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5506d65-613b-42c4-9694-f60aca35c784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dffa765-7553-4fed-80c0-b23de20ff757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e7ed6-b59c-4b8d-893f-284a3256d330",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb6e250-7c76-495a-a0c7-e17070687d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426e265a-8e81-46f4-af7c-9cbeb3d7fad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f9d215-0fe0-4bd2-b485-1d2f5b008ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bbb019-22ab-4cf9-a13f-430a5f3d7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ecb5da-4d52-4bfd-8ced-cb06a450436d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4433c23-5385-40e7-8892-1376f93a2ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f96ae69-5e56-4b48-a4c7-589bfcd69ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a6c4e8-1836-4e8a-8641-849a720a910f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ec50f0-5c79-4d17-92e2-424f4c78a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c621f85-2ddb-47e5-8740-c6e9eac8b146",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1c3e62-4622-44d5-8222-fa48db85ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1340235f-4975-4dd8-833d-6dfe14612bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9205ea51-acaa-4b6a-9896-aae8eaa77f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb993756-7858-44fa-a4b7-264ec8b35999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc12cbf4-612c-434e-b491-f2334482d7bb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8c5c8c-77a9-457a-8d89-f806952505f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bbafdc-023a-4e80-a9af-b5a43aab9035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c8e513-1efe-4492-94d2-573560c62ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad143333-d329-4b78-bc33-342301704f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdfa8bd-296b-4364-bcd1-07e445d1e167",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ffed58-8d17-4f7d-9b8e-df9022228ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df12086-9911-401f-afaa-8df5515f52d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d7341d-06ab-41af-8d07-249b550c5751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde4a693-90da-4cd4-b9df-db671678f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb83d25-e243-4119-b838-8851b12a4026",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a29ff-304d-43fe-a213-de60acdf1a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18936b2d-2af6-4c0e-ad2f-b4042ac91302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75420ef-4c4e-4506-9778-2dc8f3c1f806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa61df8d-2634-4ec6-a0c6-a872e59546d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c724c80-ade8-449d-bfcc-332dece8e67c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61096213-e02b-4bb7-9721-7693c65008df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345ccafb-be37-4b30-ae91-bb674a080180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155195e0-6e6d-462c-9ac8-4a13741ae58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea13e8f8-a1b8-4bc1-ae3a-df435287413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea9a6e-a924-416a-b5d6-e80839615d4c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93f9f35-36db-41f5-903c-17774f6a6d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4aa078-f0d6-44d2-aea1-268481beed56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72388f48-6d41-4da9-a0ed-0845b1bc7cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c783e76-ab80-4660-9180-e8c8759c2f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ef4e8-c228-4a40-b329-81724e22be69",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc236a93-9a39-44a0-b313-73dedd35dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe30735-38fb-4987-ab5d-20ab22237717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e8085e-0a87-4dc0-9d58-0ec0a8e70a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2cde5-4cf3-4ec2-90fe-9839cd8046ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a0cb7f-2af2-4fb9-8cd9-d103eb86bc9c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d03c464-1981-403a-ab75-3ad0edcfd5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ec711f-c06c-4ea4-a1dd-8a761f39ea01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e03f10a-9090-4682-b268-ec4e06b3dc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebc4656-ced4-4eec-8f87-11f52de1db2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a5e0e8-e8c2-46c8-a640-ca0b3fb12c27",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953fe29d-5d67-4e33-b9c3-483305e93b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfef0ee9-9a9e-48ee-8b19-7e576cfb8a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f5c3e-5eaa-4484-be0d-b6fed02beaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50ed186-b99b-4d27-b2f3-81206816cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872bd026-77ed-478d-9baf-fae995f8c137",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5b4c97-80e0-41a7-96ec-eb0dea7d529d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4423020-35cd-4c67-a2c8-3c3d0735b92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be36681-f960-4721-b6d3-8b981616ab61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647fe6cc-709f-48bb-acf1-2e18b78666cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e968e14f-fb71-4252-beed-c66da76f66ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec19589-1f70-490d-8846-cd5114f052c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7f83a9-d285-4f14-a6d6-87ca5376d85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61005d95-f956-48b0-8518-d7ea291ac5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbfe2b1-6c07-4ddb-8488-8f70c62dcce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e80fc-ceb3-474d-95fe-973b2f12d1ca",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbf0652-4c6f-459b-b176-8e091faf82a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfbb688-2d6e-45da-9254-8c12be3a9f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afd864b-db6f-4640-bc59-f73b578d5b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b7c889-c59e-467e-aca3-10709a6c5d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093da9f0-36d0-4e6e-bb9c-17e346aad855",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51249c5-c273-41d1-a3e8-52c054694177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b3fa9c-f714-4630-8e42-64b4758bf19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b2bead-cb73-41dd-91a6-9f0311267fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1992abb3-1a21-445b-abe4-a5343cb8522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e50049-2279-4280-99b3-601f9c38af5a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d75e45-8887-4820-acf5-301e76f7a83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7abd15-3fe7-4809-9e6e-b0bb64119747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be7a312-ceae-4999-9644-773a13b3b6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e80c1e-833b-4ae9-b9e5-37d40feee828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049735cb-df4d-4d09-bc1c-005e3bbc4856",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54948e21-d892-48bd-8ee3-7f421455ae29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e00ec74-efdb-4631-a6d1-f24d5cba07bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38147af2-9c30-4ea4-98e5-682ee5e9271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2617d1-7ac5-4e54-ab54-1cbfa3c3290f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e1a2a0-b9e0-4a3f-9bc9-e4e0dc641579",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4180f67-8832-4df6-9269-c894f2c686c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782f8a7c-b116-42cc-8468-dbd262403bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864e66db-f1e1-4e6a-887b-c0ddbce39683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7321e55-4450-4f0f-95bb-0486794723c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab99801-e216-4ee6-b051-999707245287",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d27fad2-5b37-466d-9b2b-3470dd3fbac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb84963-0004-46af-9495-d6cdb3308687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f57aa-070b-4471-9abb-c3eca099548c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f80b9a-7f10-4aa3-bb80-7294dc6a0207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a64320-b23b-4c54-b2fe-8cb96db4f73d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4faaaa-091d-4739-aee0-71f94d6724e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59fc0fd-bf24-4a1c-8da2-e3c527f90856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c19707-caf4-4d5a-8bc6-add927bab612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b9140f-56f9-4481-ba73-7db9cbff9b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301c9786-4b55-43a8-b99b-981d9bac3a63",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b63d82-a241-47e4-8126-27be08246832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b82709f-b1e0-44cc-837a-30f029951d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6b04d0-6797-4aeb-8757-29a521b0dc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa6b0ba-6b92-4578-ba03-8a51eec5911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2907fc-bf8d-4230-8c26-f1fae603d1b1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a56f8d9-932d-438c-ae93-31f98f03e1d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d2081c-3e7c-4322-869f-8798c7f84f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ffb445-7ecc-417d-bb16-3727ac0fd9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5c329a-df9e-4e7a-8c09-d4c26f127e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0886c6-2211-40a2-b3c0-ca9e8182f279",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6450fa6b-3e2c-44c5-87b8-20ae746c5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdacc4a-ba28-4386-9d1f-007d3ab28434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28952e06-640c-4a97-b515-9e5027b8800b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5920b738-5044-44ed-bf42-1048e2507e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efae5563-5540-4470-a6f9-ddf73092acef",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d15136-4c6d-449d-b28b-2c956c4f0453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783fc626-e041-4074-9548-1c663140df84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a176b4-d61f-4cd1-8513-e6a884f6e014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a6965f-91cb-48ac-a27c-7929c0cdcceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f77ecf-1851-4ebf-9139-05826d76c296",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2849e561-67d0-4e58-9c46-9478f28f84fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8d51295-1cc9-4dd0-9861-61d9ccb56c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd3d8b8-357b-475c-b51c-cc340eb892d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9be088-8ae7-4cc1-a549-a9f79071379a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6182aa3-1e39-4ff8-987b-9200d9dbbeaf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b31eec-4392-405e-83d7-b06774d05e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3dd1f70-5374-4ebe-af43-f68495dbcfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab7bac2-e715-49bb-b2e1-91280987b50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a62096e-fbe2-4666-9945-d5df1d6ec770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3ff2e-f957-44a5-8117-3450762e59ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9cf1b-80d0-43f2-828c-c8264ec691ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8718c6f-8855-43c9-b585-aef4f2672dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153121aa-4a7f-4555-8c82-fc18bbf8fee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a43464-5860-41d9-b25a-007c5a1a5c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49edda66-b849-41c4-a013-1bb50ff634d3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43912688-2204-43d5-be4b-d9faf4313ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239135e1-8d07-42ec-bbff-ad808a7f7c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3a35c8-e4ba-4cb3-847d-e9f6d9d316cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44f0a21-87f1-42d2-a2e2-f7260c4311ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0738153f-6336-48e7-86e4-706bd415d1e7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8e50d-1ba0-4b8e-b740-304a73c0ff83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6d3b83-cf0d-472e-9f85-88f3fe7ff539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795be016-77bd-4659-bc87-c9f0deab52e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bed7fe-a295-4fa8-a3cb-868bcaf7f58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca8b2c6-5f54-4b91-adc2-30df879423ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bc823d-9bd2-43a5-860a-e283b3ab8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadb9f71-725f-4b86-900e-72f5fcf24748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d796d3-9157-4591-be6d-514d2c2d55f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3911ac1-1347-4cde-baa3-6cb9c6cc9de6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a4c4ff5-34e7-4048-84a3-24f178f3f390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b018e1b6-01ae-48c7-aace-39ab98fa9788"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde65b71-3049-4d23-8083-3cb2b93d6ad7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5106a26-9694-41bd-bb3b-00ba9b1884fa"
                    }
                  }
                ]
              },
              {
                "id": "dd2e98b1-af7f-459e-8a41-8b13f140a810",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8dd1f70-06a1-4865-a3b2-36539e695fed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6896b82-34c4-43d3-8696-f6378ae1a522",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a97e782c-794b-4c10-8ff0-4357ec473d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031cc1a8-e515-4949-8645-f6ddd72e7a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2850ef1a-ea71-4145-b7db-48dbd1e41ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbfc8a4-3c4a-45fa-bc66-9d717e0cbdb8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc84041f-3800-4e1f-8dca-3427cbcd759b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "55511d20-f76e-4c82-8c91-1885b6922a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebc1772-bbf5-4c7a-83e5-b1fd330e2584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94d111c4-aa9f-457b-a9c3-a3eacc5a47ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2d9c6ea-452e-497c-8d0b-f6c4d25b801c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5a758f3-7887-4845-9839-df7b39f9ebde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6473d90d-cfe5-4d47-8d18-21a240eb7753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba02491d-302e-4fe6-a06c-8a8ed87536bd"
                    }
                  }
                ]
              },
              {
                "id": "15ae9bb9-37b8-4efa-8090-6b5b74424d76",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "367cd63d-b9e5-4f34-a1e0-d2e82864555b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f97d9b2-7281-4807-bc71-09c01c56b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3934ad19-eb3f-4e71-b2bc-706e8429eb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be1591f-60d1-4763-9300-451ba2325cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2228f178-df10-4437-80b6-091aa0a9edf0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cdd64df5-60a4-44f5-b31e-8fa4151d2ff3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "054c92bc-5dbf-4306-ae11-f62cbe3eadec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c00e678-de8c-4792-9977-3bfab044032c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90b7792f-603a-4355-92d1-eacea34edc87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd42c00a-b5d8-4b2e-880f-a8dc64422e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eb32e8f-9845-433d-a734-55c4a38e0f5d"
                    }
                  }
                ]
              },
              {
                "id": "c0b35dcd-536f-4e16-911f-1202acb8655f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b16b2a3-dc48-42d9-8fd2-91612eded2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f69977b-b6b9-40e3-9ffc-2b5d6d5c5c92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff70c000-808c-4163-8bce-e4e490e29e3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94948fd2-b1a1-4710-8ec4-fe0b147fdea8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1afa4d34-3e5c-4e4a-82cc-cf08e39ce7d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a4580918-d2f9-4e71-8d02-6a8aeb627da3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6a7aea2-657e-4005-bbf8-705b6c36ae9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab2dcea0-0d14-421d-9a93-31c84d55f7b8"
            }
          }
        ]
      },
      {
        "id": "f2513eae-50da-4d46-81a4-092b911b1d07",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4108409e-c09f-48ae-80a8-e6c1d6270daa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3d9147f-bb2f-4123-88d6-90e29a992bec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65883c06-a012-4c46-8033-66841ae72877",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "948a67e4-1e64-4d50-b710-7f877f6041c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908bb3f2-cf69-4d99-b061-b51a687b45a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df2ed5ca-3dc5-47c6-814b-7e13a0f56b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d912021-9f7b-410d-9f97-66539284f6f3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9742610-f6eb-4ce9-9a96-51ab973843a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "137896bd-854d-4fca-8705-380d0260572f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62fb1be-c4fd-4229-9be0-6fa033d2fc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40608114-cb86-46df-95e8-c4e9cf243b5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ad99e4-8eed-482a-ae01-b0912478ccd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52e0cf4d-d9f3-4403-9156-5b0967842851"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a8c69d4-d537-427a-be01-8019f008c930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3911a955-8711-4947-b95b-4e3838b2ea03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e821b74-a5e8-436e-a13d-1e3de612aa01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ac7c57ff-af45-454a-9265-a3c7a98803ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22ae7525-d094-48c1-bb79-9828ee92738f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79fdf828-09ad-445b-b6eb-890ab07c69ff"
            }
          }
        ]
      },
      {
        "id": "d120938b-3e50-405a-83ec-34fd753da450",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "48bf0f77-3ed4-4947-9565-a164e9aed7f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da5548ae-0da0-4d7d-b539-a5b128b286dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efe40f0b-8798-4f58-9ed6-579c1cc8d77a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2215d9-2120-4988-9532-a2b9b82edccb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195cf492-8d1f-4f41-a7ac-7ffb1bd89663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51825b70-373d-4d06-af6f-27a3ed5f371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dd2c34-0908-444b-848c-4eed109952cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ab45c9-6d1b-43d0-95a9-bbf653a607f0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace05018-b362-454c-b91c-05b74ba37661",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3849829-0a62-4eae-84fc-e1a39ea4212f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7ff775-a626-4d2d-abe8-52c9a9ddaffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af35223-bf71-4573-91ee-983c05cabed3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d4d14c5-886a-438b-9558-654217a298b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c22c91b-1837-42b7-a92b-5a58bd956cae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97517ed-cb52-42d6-a854-09562d296021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bac7eee-a2db-42d2-8e05-8f658fee53ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ba99f43-877b-49ab-8ce6-69b1dbbc1b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a1780643-abbb-4df9-8410-04f2aadebdb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "651bb5d8-7248-44af-a01b-52ae81d17985",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34203222-3caa-4603-bc82-a133f74b0fd0"
            }
          }
        ]
      },
      {
        "id": "14e47133-3dd7-41dc-a009-12387fddcbc8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7cd7e64c-ab7a-4a18-ad37-8364cb01cb4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfb43921-74ed-4043-acab-de82e8ce5edb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c79141a-d934-4f9c-86df-a4335157aefa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a348862-b88b-414b-bb18-d798d7b5d978",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa21a65f-edce-4474-87f8-6109e4484c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5d2f4a-5c89-4c11-91af-92a893c828ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69521ccd-0f94-4e1d-868e-ff14451ccbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f3147-a11a-4333-a917-4454a1997569",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb6d85b-c031-457b-a7d4-61ac944e6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "030d61b2-b0d0-4fd1-9fd6-2d765a32e3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886f274-e069-4848-82b5-73625c0c5364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "919894c8-c046-4d4c-a6d1-971f985b8fb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "242cd04e-c88c-4774-aeba-6cbab76b680f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5563b98-1b14-48ac-a90a-ac1e2c673172"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d0b24a0-c02f-4ae0-b5a6-4ef93b92d278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "527e59ed-1c93-48ba-a90c-58ab8fac6e83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f288e89-77ae-4627-b97f-b03c7b84b0de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64c1ed2d-30b3-4bb2-919f-deb593a8ffd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32bd122c-c21b-4ecd-8cc3-055855f33aed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6c20e23-9fd5-45ea-98cd-fe49b97c074f"
            }
          }
        ]
      },
      {
        "id": "a018e3b1-a76a-469d-b422-ee472c377feb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72495934-e27f-4678-8927-dfbef38da99b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f6f2e3-56f0-487a-8bb3-f91deb8becda",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "61651b7c-5247-4deb-8823-03d1e6900ef2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c016be63-3a4f-458d-9498-cd4999e1a419",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cb7357a-4800-4ae3-b3a9-b520cd7c74d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 824.6769230769228,
      "responseMin": 12,
      "responseMax": 7585,
      "responseSd": 974.3146405028634,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685407177067,
      "completed": 1685407402496
    },
    "executions": [
      {
        "id": "fe8ad30e-9175-4e7a-aefe-8369eeccb483",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "19d7b359-4f5f-48ef-ad2a-cbc625297a7d",
          "httpRequestId": "6322e6bd-66bd-4cd9-b590-22db47fde465"
        },
        "item": {
          "id": "fe8ad30e-9175-4e7a-aefe-8369eeccb483",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e6cb64ef-0243-4480-b09b-f6d4f649bd30",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "8469b0d1-a8ca-4943-a630-9d7db192ed83",
        "cursor": {
          "ref": "0a843826-c965-4270-a6c4-fd7561954ada",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a6ed020f-2cf0-451b-a103-07e1c844d489"
        },
        "item": {
          "id": "8469b0d1-a8ca-4943-a630-9d7db192ed83",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "34658a9b-06d0-4718-af17-0262421e8856",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "dbe5f8af-2d33-4fc5-97b9-85b5d31a6ef5",
        "cursor": {
          "ref": "c099f9aa-98e9-47a0-b5e0-ef86e1518fe9",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ab2f4516-1275-4390-9a84-bbfe3c10f177"
        },
        "item": {
          "id": "dbe5f8af-2d33-4fc5-97b9-85b5d31a6ef5",
          "name": "did_json"
        },
        "response": {
          "id": "31ff3893-6142-4925-be2c-6f387a68e30e",
          "status": "OK",
          "code": 200,
          "responseTime": 1615,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9771f0-2489-44f5-8adf-461c3405f37e",
        "cursor": {
          "ref": "ba32f1d2-9e8d-47e5-a761-cf9961560f5c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ec7bc17-ebf4-472a-9d62-edff81624862"
        },
        "item": {
          "id": "fe9771f0-2489-44f5-8adf-461c3405f37e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5adfec9-6342-42fb-be4b-08e1bd9f333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1481,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9771f0-2489-44f5-8adf-461c3405f37e",
        "cursor": {
          "ref": "ba32f1d2-9e8d-47e5-a761-cf9961560f5c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ec7bc17-ebf4-472a-9d62-edff81624862"
        },
        "item": {
          "id": "fe9771f0-2489-44f5-8adf-461c3405f37e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5adfec9-6342-42fb-be4b-08e1bd9f333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1481,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e1d792-cc1c-4841-bbaa-c4bfa4ba70a5",
        "cursor": {
          "ref": "52058cdb-9a80-4193-9951-534d58287bf2",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e220163d-619f-4f74-8a39-ff703c9d617b"
        },
        "item": {
          "id": "c1e1d792-cc1c-4841-bbaa-c4bfa4ba70a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4216c7f9-e852-40dd-9e1a-d6882baa660d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 838,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced563c7-1132-490f-b142-e06445f05354",
        "cursor": {
          "ref": "bb09032c-f29d-4f9b-9b54-d7df46019ec8",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "973618b8-ba30-45a4-a51c-e4a676ddc55a"
        },
        "item": {
          "id": "ced563c7-1132-490f-b142-e06445f05354",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1c1f77d-ee55-4c36-8415-56683fbfe16e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1089,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e55125-02f0-42f5-9557-7fcf9e2d8baf",
        "cursor": {
          "ref": "6783998b-6900-4fbe-ac31-8a54219cfdf2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ec16721-04ca-4fc4-a28a-e17d9c936428"
        },
        "item": {
          "id": "00e55125-02f0-42f5-9557-7fcf9e2d8baf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c69c5cde-41ac-44e4-8fba-962bb34f8f3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a9c9c-ae34-47a5-ae90-ee657919d4ab",
        "cursor": {
          "ref": "4ced72e0-d24a-44ae-b81f-1eb12903bae4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0749077a-1542-4640-a3ad-7dc7be9e47bd"
        },
        "item": {
          "id": "4c1a9c9c-ae34-47a5-ae90-ee657919d4ab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "39ed8aec-199c-4e0e-a8b4-db2b9a5a4e71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 772,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a9c9c-ae34-47a5-ae90-ee657919d4ab",
        "cursor": {
          "ref": "4ced72e0-d24a-44ae-b81f-1eb12903bae4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0749077a-1542-4640-a3ad-7dc7be9e47bd"
        },
        "item": {
          "id": "4c1a9c9c-ae34-47a5-ae90-ee657919d4ab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "39ed8aec-199c-4e0e-a8b4-db2b9a5a4e71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 772,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07241e73-c909-429c-af7d-780fd0f7c409",
        "cursor": {
          "ref": "0ed5d825-12dc-4680-8a43-51053cfb47e5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bd4527dc-f2d0-47c1-9e21-0ff73054c82e"
        },
        "item": {
          "id": "07241e73-c909-429c-af7d-780fd0f7c409",
          "name": "identifiers"
        },
        "response": {
          "id": "dd842e4a-d3b6-4a6b-b1cd-c0a57a053d4d",
          "status": "OK",
          "code": 200,
          "responseTime": 1624,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a31f28b-5f66-4ddb-8a6d-dd29ac818b05",
        "cursor": {
          "ref": "b546b385-ee8b-4062-a60b-14f7ac4c1d0a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a99f31fd-4cc0-4d83-beef-0c4c8060db6f"
        },
        "item": {
          "id": "2a31f28b-5f66-4ddb-8a6d-dd29ac818b05",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3539437-0970-4883-b3b8-b715c387a53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a31f28b-5f66-4ddb-8a6d-dd29ac818b05",
        "cursor": {
          "ref": "b546b385-ee8b-4062-a60b-14f7ac4c1d0a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a99f31fd-4cc0-4d83-beef-0c4c8060db6f"
        },
        "item": {
          "id": "2a31f28b-5f66-4ddb-8a6d-dd29ac818b05",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3539437-0970-4883-b3b8-b715c387a53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04796fbb-6a51-46bf-af45-efe53f0e20d8",
        "cursor": {
          "ref": "f4082bd4-9a4c-44d8-ba73-ccba0105d8a3",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "142e5a8f-49a8-415d-8ba5-c30c2f1fe4ec"
        },
        "item": {
          "id": "04796fbb-6a51-46bf-af45-efe53f0e20d8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e6330f97-6499-40c3-ae16-1dac24c2574f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0de4b-ed03-452d-9c6d-bcbe5de01542",
        "cursor": {
          "ref": "1e333a68-6353-43eb-b1f8-5930d330931b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e5ed865-0a85-489e-89a1-93d495017a75"
        },
        "item": {
          "id": "9dc0de4b-ed03-452d-9c6d-bcbe5de01542",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "16509ce2-14e0-4b18-b501-0e91af46dad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c882f656-fed4-4403-8383-79abd3261b05",
        "cursor": {
          "ref": "0d670092-b0bb-4729-bddc-95f5bd14dfc5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "16176595-48df-45ab-bd0f-7790f21b4ddf"
        },
        "item": {
          "id": "c882f656-fed4-4403-8383-79abd3261b05",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b463af8-d7f8-41ec-a5e2-5796ede5386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fdefdb-6746-4cd7-bd27-1e20470eb7a2",
        "cursor": {
          "ref": "709c6878-3fa0-4a69-9e79-e27d586bb581",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c99fd054-b418-46f3-884d-4566d9ef9e2f"
        },
        "item": {
          "id": "b2fdefdb-6746-4cd7-bd27-1e20470eb7a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a154ed99-e5bb-4cde-a2bf-877825de0a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b169458-4c77-4854-abd5-108dbb3dc4ff",
        "cursor": {
          "ref": "dc9a384b-09f0-42b9-afdd-6d34e9d698c9",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48a6cc41-55f2-47d6-9058-4dea388f711e"
        },
        "item": {
          "id": "5b169458-4c77-4854-abd5-108dbb3dc4ff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3dfd250f-c508-4c10-8b24-64e66387c13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659a4b01-3b2b-450a-b943-6dad390f901a",
        "cursor": {
          "ref": "c6531427-687b-4db1-a63a-4a90568f10d8",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fbafe081-85ec-43de-be3f-d3011c6cb920"
        },
        "item": {
          "id": "659a4b01-3b2b-450a-b943-6dad390f901a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f84c503d-50b1-44fc-a4fd-16b3d2978964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f84db98-166a-4d17-924a-caa06d585439",
        "cursor": {
          "ref": "cfd44e49-b7a7-4d76-896d-3969fc4d18fe",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "483ccbd7-5fa9-40b8-8f80-d26c9f1e91a5"
        },
        "item": {
          "id": "0f84db98-166a-4d17-924a-caa06d585439",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "239032d2-2b00-4bca-bbe4-b743ca6f7653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235c7f73-5b73-4e36-8e36-be6b8f9acc15",
        "cursor": {
          "ref": "333f76c1-7d99-42da-ae10-17ba5eb95457",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e7b6e94-dad4-45d6-b284-027c81bb6205"
        },
        "item": {
          "id": "235c7f73-5b73-4e36-8e36-be6b8f9acc15",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ab95e2f6-cc2b-4eb8-bbbd-b4ca31af85e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf338a2b-032e-471c-8758-21103f7af85f",
        "cursor": {
          "ref": "485b4d91-8cc8-482d-968b-f5a8803cc9a7",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a01b867e-60eb-4bcc-b997-a889b641907b"
        },
        "item": {
          "id": "cf338a2b-032e-471c-8758-21103f7af85f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "47a0b3ca-3fa1-4f58-b2aa-a2d70859b58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a369b6-1785-4efb-8b53-b88a7d77dbf3",
        "cursor": {
          "ref": "cf3a2ae5-b799-4f7f-bda9-26940bad1bea",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4654dfae-eafd-4c1b-b7ff-64e8f5f360db"
        },
        "item": {
          "id": "09a369b6-1785-4efb-8b53-b88a7d77dbf3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b4d4fcb3-8ca8-4061-ba88-cbed21a6c5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4723763b-bc6c-4a76-83b5-bd636cf1855f",
        "cursor": {
          "ref": "bfadabbe-e0da-4b71-842b-d4040aa0f3ae",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9806aac8-89c8-44e7-88bc-5a9455f8d1f8"
        },
        "item": {
          "id": "4723763b-bc6c-4a76-83b5-bd636cf1855f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "61909b95-f8c4-4e2d-9c2c-e80ef25d4763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba34abcf-6b19-4b48-afcb-2bda10b9148f",
        "cursor": {
          "ref": "008d052f-620d-4f22-b308-86c76f51ca1d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bf259a7f-0900-4431-b480-62b6d52909a9"
        },
        "item": {
          "id": "ba34abcf-6b19-4b48-afcb-2bda10b9148f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d417a863-a2e0-4304-8981-1e583259fd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d89f5e-a3d0-443a-8838-becfe62cd1c5",
        "cursor": {
          "ref": "2df36ddd-a312-4fb5-8f23-66c83f9dfd91",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9e4f0821-3e90-444b-b420-26c5166665d9"
        },
        "item": {
          "id": "67d89f5e-a3d0-443a-8838-becfe62cd1c5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d175bd00-e169-4e17-8039-d4612414c72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf2a79-b0c1-4a76-82cf-91272c56b6fe",
        "cursor": {
          "ref": "9defd500-678b-438d-b84d-0253720ead98",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f7a2dffd-90ab-4c63-9349-47748fe4b146"
        },
        "item": {
          "id": "ffdf2a79-b0c1-4a76-82cf-91272c56b6fe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2605a9cc-1fca-4910-8c7d-c8012f62d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef824345-4477-44d3-88c5-ea431eaac655",
        "cursor": {
          "ref": "cab66f67-6749-4b8b-aef5-5ab1465ec337",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "89bf99f4-a7f4-44b4-856c-b97d4e6e7f6b"
        },
        "item": {
          "id": "ef824345-4477-44d3-88c5-ea431eaac655",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f431a93f-46c6-4159-8a5a-974d05e8bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744b3fed-84c2-431d-9b03-ba0c7b47af99",
        "cursor": {
          "ref": "86e3c386-9ec2-42d4-85cf-e2c159f3e050",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "93d09711-1254-49a6-8161-f5071792accb"
        },
        "item": {
          "id": "744b3fed-84c2-431d-9b03-ba0c7b47af99",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "987d75bd-e231-491c-b317-fd4c4e88e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c52912-980d-4338-b33a-45e909df1fc6",
        "cursor": {
          "ref": "59a3ef28-b565-452f-856f-db202963b084",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "754f8c2e-21e8-45ba-8319-d2a69fea3b63"
        },
        "item": {
          "id": "e8c52912-980d-4338-b33a-45e909df1fc6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5362cc32-a845-4c25-a924-68880efe3786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8391c8-64f6-4e21-bb1c-7f35e909828f",
        "cursor": {
          "ref": "14f031bf-e4ab-4711-bd33-693736131f5d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "36dd17a8-d41b-496b-bcf0-2f5756689e26"
        },
        "item": {
          "id": "5c8391c8-64f6-4e21-bb1c-7f35e909828f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0c6a29f2-a0c2-4c22-9de7-716a55d08efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c535d6b1-7ff9-4d01-add0-55f0392d1633",
        "cursor": {
          "ref": "7ed65eac-7b8c-4c12-abc3-a24b9df42bb9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "069b6cab-ccc3-4b21-a770-260d54af7412"
        },
        "item": {
          "id": "c535d6b1-7ff9-4d01-add0-55f0392d1633",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3d654177-c694-41ee-9fd4-cb9a2c07442c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde2f00-5c95-47ac-a459-52e36864ccbb",
        "cursor": {
          "ref": "c9150859-4469-4dbe-b8e3-bb2a1e4d4ea5",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "27edef74-b5d1-44d0-9de3-da6653356ca3"
        },
        "item": {
          "id": "acde2f00-5c95-47ac-a459-52e36864ccbb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e12da5e0-3714-4bab-971b-90a8aa15e571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ec9218-e88a-4f57-b0ca-9a7b70c5caef",
        "cursor": {
          "ref": "ad95a22d-370e-4e85-ba46-40ab8cb2e628",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c8fbf09d-8e00-4b6f-9ad3-57530a216436"
        },
        "item": {
          "id": "30ec9218-e88a-4f57-b0ca-9a7b70c5caef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "72c1c98b-eae9-453c-b309-6e8a95f85c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa58bbc-04a6-4335-9e32-086bf372498f",
        "cursor": {
          "ref": "b8441357-2945-4389-85e7-19dc27875d5d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "741861b6-ee6a-4897-9203-bc238ed22163"
        },
        "item": {
          "id": "5fa58bbc-04a6-4335-9e32-086bf372498f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "808bb90b-d688-4799-9fc8-54a81dc13283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053006d-7a48-442d-8145-fc84ecd18541",
        "cursor": {
          "ref": "6c3ee27c-1df5-4711-a665-5b1fc23f19fe",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "606336de-79e4-45a4-8219-216d4becb049"
        },
        "item": {
          "id": "a053006d-7a48-442d-8145-fc84ecd18541",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b81f63c9-87f3-4969-a01f-179587779eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d52295d-da96-4d44-8292-2c0d13214ce2",
        "cursor": {
          "ref": "e9956f96-72b8-4581-9661-94d6e31583f1",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2af8cae8-2696-4bb9-b880-06d6852f4678"
        },
        "item": {
          "id": "2d52295d-da96-4d44-8292-2c0d13214ce2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5ffe0d09-20b2-4050-a132-691dc4fb36da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42c07e9-68e8-4880-a33f-4e332e891b3f",
        "cursor": {
          "ref": "7c4f21d8-e973-4c76-892d-6fb69f22fa45",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "040f2280-bdda-426d-91bd-a74f2b5b3c89"
        },
        "item": {
          "id": "e42c07e9-68e8-4880-a33f-4e332e891b3f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1361f525-a553-402f-ab40-3f1c1a6a599c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3993e28-ad2c-4239-abd1-1338a51b192a",
        "cursor": {
          "ref": "652f1104-7ea9-4767-8430-5c748e0e5b9c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a95783b-ab05-48fc-b75d-a4974e3997ec"
        },
        "item": {
          "id": "a3993e28-ad2c-4239-abd1-1338a51b192a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dddf4766-1be2-4ec1-9d41-ae76f60e5b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b70272-f59c-4e47-80a2-b12bed2b798c",
        "cursor": {
          "ref": "839cf173-02fb-4377-b674-29857734f256",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "93ee170f-bedd-47af-9f81-04c8c42cbb8f"
        },
        "item": {
          "id": "d0b70272-f59c-4e47-80a2-b12bed2b798c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7ed11c3e-6a44-405c-b42d-f3348749aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a407103-1287-4c52-8b24-6e0dd9752712",
        "cursor": {
          "ref": "85d5f571-96f7-45bf-b656-66aba098d842",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9025f40c-fb77-4d83-9fe8-564a650f1ab8"
        },
        "item": {
          "id": "6a407103-1287-4c52-8b24-6e0dd9752712",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9346d886-e60a-4634-a875-299521d16eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e9111-145e-42f4-a055-b41ce56bda37",
        "cursor": {
          "ref": "9dae84f4-bda0-40e0-8640-1013ac20915c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b1dc860e-6c48-44d2-983d-5ed565b8684f"
        },
        "item": {
          "id": "227e9111-145e-42f4-a055-b41ce56bda37",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "271543ab-5f78-42fb-9b9c-8f37bb496f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e386cc5b-788e-4b97-afc7-5aa2409bfa98",
        "cursor": {
          "ref": "a290a7cd-03ee-46cd-a8b5-1bfd9d530ce8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "07c71320-ad7f-47ab-8ef6-64d728f36b5d"
        },
        "item": {
          "id": "e386cc5b-788e-4b97-afc7-5aa2409bfa98",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7a20a3e9-cae3-4fc8-b4a1-076229bbd335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be2f1c8-4e71-4832-8541-53eefe4aa6bf",
        "cursor": {
          "ref": "4a1bb030-1488-43d9-b5bd-e711101cb361",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "94dba896-5860-4898-b486-7549f9d3e802"
        },
        "item": {
          "id": "4be2f1c8-4e71-4832-8541-53eefe4aa6bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7945eab3-a1c0-4510-89b5-c6aa2bcb218f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711f58e3-6c8f-4ee0-9996-d37041aa1b6b",
        "cursor": {
          "ref": "3797c06c-7ae4-4cc2-b4f1-9282e14dbc62",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "66c53419-ebd2-4f87-9645-bf7fae265ecf"
        },
        "item": {
          "id": "711f58e3-6c8f-4ee0-9996-d37041aa1b6b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "54a4ca46-c3ad-4f09-8944-c9886cb82b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf21680-33fd-46cb-ab06-ff927c28c90e",
        "cursor": {
          "ref": "2a7bbac7-d51e-40b2-a845-03d3d82d5656",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4fda35db-3144-4b78-815c-8ac43d7f56ff"
        },
        "item": {
          "id": "ccf21680-33fd-46cb-ab06-ff927c28c90e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ff757539-5643-491c-bab2-1e63efc6b349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae620a1-4faf-4756-9b79-399be8ea825e",
        "cursor": {
          "ref": "ab39ba69-7bda-4d81-9ef8-8c07a67151f2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "091d28c0-b37e-4626-9d86-710a41113c6f"
        },
        "item": {
          "id": "6ae620a1-4faf-4756-9b79-399be8ea825e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "999edd02-21ae-4d05-bf85-a1ad64a313fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87e9f53-498d-4a5c-8816-9297b2131497",
        "cursor": {
          "ref": "7d97aadc-73c0-4737-aa6e-4a5f061e5dde",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c3ceb5d-7433-4a5a-9a46-c54ca047095d"
        },
        "item": {
          "id": "d87e9f53-498d-4a5c-8816-9297b2131497",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f9dd3605-4ec2-4832-b158-ff5635377781",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 983,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3c6b2d-a0c6-4779-b0c6-f1fab07ea887",
        "cursor": {
          "ref": "4f05cd0f-c924-469c-8aa5-e890be7e5863",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e96e29c4-c7fe-49ad-b3d7-2c29f73d067a"
        },
        "item": {
          "id": "8b3c6b2d-a0c6-4779-b0c6-f1fab07ea887",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e82eccb7-a3bb-4523-b9d5-b6518cb86862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b2790-05b9-42a4-bff8-0363c711a7b1",
        "cursor": {
          "ref": "9ee49253-aae9-4637-bba9-0c781c529ca9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fbd4e385-7b2f-4e93-b5db-a214dd1232ed"
        },
        "item": {
          "id": "f79b2790-05b9-42a4-bff8-0363c711a7b1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "052b32aa-9ba9-4148-a9bb-03d31d8afbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1463,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d9e61a-6975-45b8-803e-77cee14731a7",
        "cursor": {
          "ref": "aba71849-5375-47cc-8539-7e4fcc82a059",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8eea0e94-1f17-4481-af4e-7a2df7b59ab2"
        },
        "item": {
          "id": "10d9e61a-6975-45b8-803e-77cee14731a7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "017e78f7-f144-41d4-8ef5-330a0d79e2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddf32f4-e4f4-4739-9d27-f5ed2ac69c9c",
        "cursor": {
          "ref": "53ab4fcf-78fd-41d3-8934-5bb92ebf65ac",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "50e96c99-10c5-4c49-b568-146fb0349db9"
        },
        "item": {
          "id": "5ddf32f4-e4f4-4739-9d27-f5ed2ac69c9c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c6f874e3-1e58-4ea2-b5af-b1bced26fc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8775ab06-83be-4136-b6ff-50f8dbbce093",
        "cursor": {
          "ref": "aa97798a-cac2-4fad-9102-b5e43c7ca070",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c4e6de56-3f90-4866-b0c8-96132fa94e25"
        },
        "item": {
          "id": "8775ab06-83be-4136-b6ff-50f8dbbce093",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f14c48c6-0a1d-4883-81d9-21ab7dcac1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe4cc2e-19ae-497b-a928-c184bc7f99b6",
        "cursor": {
          "ref": "3a5bd027-8ee1-4f6c-b00f-9dca73e3a5e9",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77a9354d-af63-4f22-b0ed-2ee2224f632a"
        },
        "item": {
          "id": "9fe4cc2e-19ae-497b-a928-c184bc7f99b6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64a26fb1-10e5-4602-a6ca-71583948fb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca9e86d-d3bf-49a1-a334-be278a646f9f",
        "cursor": {
          "ref": "c03cf181-2838-4aad-97c0-c6e39d6665ec",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2416c377-ed11-4e92-a0af-6b7149dd5808"
        },
        "item": {
          "id": "9ca9e86d-d3bf-49a1-a334-be278a646f9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2baa8df4-773b-44fd-a210-d7f58de95804",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1052,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8258b57-4643-49ca-bcdc-b4b55a398d93",
        "cursor": {
          "ref": "6657a033-31c6-479b-8556-bd5f5fc9057c",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1e5f1914-3f0b-489c-9f5c-025b3a095ed5"
        },
        "item": {
          "id": "d8258b57-4643-49ca-bcdc-b4b55a398d93",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dc9cf87b-9995-4e48-aacd-37ef1662c100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2225f71-1f16-4897-9bd9-5eba7e2d4d73",
        "cursor": {
          "ref": "2a012a3b-e3d7-4672-ae81-6fe1aded4b1c",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f87f405d-a590-409a-84e8-e4d6c50e3e92"
        },
        "item": {
          "id": "b2225f71-1f16-4897-9bd9-5eba7e2d4d73",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "181c6452-8780-453b-b287-b316a049690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ba9a24-6fab-479f-a4ab-a805dff75195",
        "cursor": {
          "ref": "a2d9dd19-8c12-4b33-b413-7efeabb01eda",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f869b228-7f4b-4b74-8508-5ef7bae624cb"
        },
        "item": {
          "id": "e3ba9a24-6fab-479f-a4ab-a805dff75195",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8c108e6d-79c3-4e69-bb33-a692a2810322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af3cfa6-29a6-4ab1-93d5-a07ccdbde366",
        "cursor": {
          "ref": "c47ad1dc-799a-4528-996e-295d7dcf76e0",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c17f2ee-d496-4632-bfcd-d3d493310dbd"
        },
        "item": {
          "id": "7af3cfa6-29a6-4ab1-93d5-a07ccdbde366",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a982a949-abf6-49b3-8496-d5fcf96b341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b745cf60-35de-4e3d-a6e5-e6b5bcffe945",
        "cursor": {
          "ref": "31f6c672-c9c5-4d94-8f57-db8e754ba232",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bc2871e5-05dd-4457-b6d5-8a22cfc8e123"
        },
        "item": {
          "id": "b745cf60-35de-4e3d-a6e5-e6b5bcffe945",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cbcccd04-c305-4ef1-884d-2a9ee82a7dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccf3597-138c-4bf1-abf1-9b58b7acad72",
        "cursor": {
          "ref": "14e01552-c655-4ef9-81a7-e2a8e9574fdf",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "514c2137-5241-4247-be5d-6e5869a1b44c"
        },
        "item": {
          "id": "4ccf3597-138c-4bf1-abf1-9b58b7acad72",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a9dd0794-0316-4cb6-8ed6-62db17249208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f3866-7368-451f-88a5-f21bc3e2b1b5",
        "cursor": {
          "ref": "013f62e1-ece8-4ea0-a82b-4aadd96a5238",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe10b721-4625-4d0f-ae2c-4199c734a484"
        },
        "item": {
          "id": "294f3866-7368-451f-88a5-f21bc3e2b1b5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fb9f25bb-9a6b-46fd-9300-dc560eaab9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34230f9e-ef15-4771-979e-e416b504cc92",
        "cursor": {
          "ref": "21d2b33a-deb6-42c6-acf8-7c15febc580f",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1de788f1-34b4-4bb6-8cfe-997dccc73826"
        },
        "item": {
          "id": "34230f9e-ef15-4771-979e-e416b504cc92",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "90f5d4cf-4ba7-4e2e-aadb-34d64017c0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bb6ba6-75cc-4d60-84f7-2d170800a348",
        "cursor": {
          "ref": "30e96daa-4664-407c-b396-c6a44c030551",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "082ae91e-9926-4d68-963d-c8218ca5e7a4"
        },
        "item": {
          "id": "15bb6ba6-75cc-4d60-84f7-2d170800a348",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b0411b6f-118f-4e51-8511-175fcd52fd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fb95c4-0117-4b29-b7cf-c86b0e917f56",
        "cursor": {
          "ref": "f48263d5-6788-404d-9693-f352873d3637",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66d7faf9-2a44-4177-8635-df9d034763c3"
        },
        "item": {
          "id": "d3fb95c4-0117-4b29-b7cf-c86b0e917f56",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2538bd14-11c1-4e53-9d69-bb3d5f8aee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e59bc4-3a60-4d19-bb11-53bd834bdcad",
        "cursor": {
          "ref": "ee9d1498-9137-4e18-ac6d-fbf4ee9143fb",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f61922a2-3aff-4fb0-8d5b-925970687b9a"
        },
        "item": {
          "id": "b3e59bc4-3a60-4d19-bb11-53bd834bdcad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4aca2118-2e12-4ff6-b7d8-40852f0fcefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35745ad-22d6-4035-97d2-6b18f56cbcc1",
        "cursor": {
          "ref": "0888a52d-d873-4278-8044-7fd7c8f5c5b8",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0e5e4b14-b880-4bd2-8ec3-70ae15365824"
        },
        "item": {
          "id": "a35745ad-22d6-4035-97d2-6b18f56cbcc1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "82232f6e-ecb7-4f6a-8ff4-a4b6fc45f542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840175f-e278-4862-b838-003cdaaaaf72",
        "cursor": {
          "ref": "6a7ef6e2-8c3c-4aba-a3ed-714981699f13",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2c971bd2-07e1-4c97-98e2-9e2a2855c9e0"
        },
        "item": {
          "id": "f840175f-e278-4862-b838-003cdaaaaf72",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2eb920eb-c498-4b02-8a72-ca6301ceeea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe1a0b-c839-45e7-90bc-1ffacd25c06f",
        "cursor": {
          "ref": "70a8f1d5-a4b8-4c01-a792-a053ee914a73",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee2ceebc-5cba-4ce6-9ab1-07a755062f36"
        },
        "item": {
          "id": "affe1a0b-c839-45e7-90bc-1ffacd25c06f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c7e623f0-767c-4654-9f25-9bcb804ef29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e00ed57-5975-4055-9fff-c968cc1d0890",
        "cursor": {
          "ref": "c94756f6-3c3e-4c9d-90e3-971d076261a2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "10347b77-d4b7-48d9-ad74-000b8d056a1d"
        },
        "item": {
          "id": "4e00ed57-5975-4055-9fff-c968cc1d0890",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70597dd5-4429-47e2-ab0c-7caf8993ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a5f65-888f-41e0-b2cd-ad4b7044aa8c",
        "cursor": {
          "ref": "e10e7e08-f273-4d07-8602-89e6d20b457c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5a86aeb-20b0-4b91-9c23-1b769a59ff2d"
        },
        "item": {
          "id": "811a5f65-888f-41e0-b2cd-ad4b7044aa8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "20650fe1-8217-44fc-9db6-287bf313373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac8fd42-ad36-4fb7-a1d7-12d2f8afd31a",
        "cursor": {
          "ref": "81c7b8d1-dea9-437f-81a7-7159a5584ea8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f6ad7354-04a1-4ea5-b772-49afea7e0233"
        },
        "item": {
          "id": "2ac8fd42-ad36-4fb7-a1d7-12d2f8afd31a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d3aa1386-efa8-4bbb-ad2c-fdb4652f9256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21cdea8-4edf-460b-ad4f-611067130ea9",
        "cursor": {
          "ref": "f825d1ef-4e43-407c-b532-9f8135cb5031",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "aedc7ca5-534b-4e03-9d18-96bcd7923366"
        },
        "item": {
          "id": "d21cdea8-4edf-460b-ad4f-611067130ea9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "959167f0-aab3-45db-b66f-9ae5bcbee3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89905eed-6e2e-4fef-a6ac-5604889e8f40",
        "cursor": {
          "ref": "1d218a7d-426d-4309-91eb-ca17950661a9",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5b03bbbc-555b-4e01-abef-c2234cd5b040"
        },
        "item": {
          "id": "89905eed-6e2e-4fef-a6ac-5604889e8f40",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cf21e13c-481c-4ad4-ae13-8bef18a5bb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63399619-64b7-4fbc-a7c0-eb8e3f07dc49",
        "cursor": {
          "ref": "ef4d0d86-3643-49b3-8024-93c33e8b6d91",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a5578fde-0156-4ba5-8588-8d8735e68748"
        },
        "item": {
          "id": "63399619-64b7-4fbc-a7c0-eb8e3f07dc49",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0a52f0ff-81b7-4438-84f1-34aff1acadf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7749a97-cc27-424d-bb3e-1c3ba569c6d1",
        "cursor": {
          "ref": "a787ef68-a808-4e96-b568-53202a47b04f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4181ab7f-9a14-4756-bb35-b8c51cf83df3"
        },
        "item": {
          "id": "a7749a97-cc27-424d-bb3e-1c3ba569c6d1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "565fc509-44aa-460c-99a2-1be98d4653a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198d3d71-e636-4b1b-849c-9f5826eb933b",
        "cursor": {
          "ref": "4e830cad-5f15-4482-912b-0be91f0cee71",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f41061fe-efd1-4f75-9ab4-819e4de823a9"
        },
        "item": {
          "id": "198d3d71-e636-4b1b-849c-9f5826eb933b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "77334202-3f0f-4cab-927f-12146c53b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e964ea46-91ae-4404-814c-8089b3a8e3ba",
        "cursor": {
          "ref": "67b1bbcc-143d-43e8-9a9d-578aa3b66a88",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e786027-65fc-4c6e-9cf1-79d80357b37f"
        },
        "item": {
          "id": "e964ea46-91ae-4404-814c-8089b3a8e3ba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6b442048-1304-4df9-9a0c-da87b798cce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0cafe0-547f-49a6-82f1-475cec14cedc",
        "cursor": {
          "ref": "b069d30e-b76a-4f2d-b005-613fbcd4ee2e",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80bb9082-29b3-45b9-ba6c-f03ae3a0ea15"
        },
        "item": {
          "id": "5f0cafe0-547f-49a6-82f1-475cec14cedc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f2bab243-cb78-4e40-ade7-12b0f1c0802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3861da4-c503-473a-8fa6-9358624c6522",
        "cursor": {
          "ref": "2ca16b83-1e60-4268-84ce-bfd8d15903b1",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cd510df5-f10a-4e94-a17e-8468b64f0acd"
        },
        "item": {
          "id": "d3861da4-c503-473a-8fa6-9358624c6522",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32c442a1-74ca-4894-a16a-4299e90f8535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10beca9c-2eac-4b59-860a-b2d315ad43cd",
        "cursor": {
          "ref": "a2db5b19-f70a-49a5-b69e-00586486bd31",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3c5ee5c-495e-4b6b-b2d1-87958aea6519"
        },
        "item": {
          "id": "10beca9c-2eac-4b59-860a-b2d315ad43cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "326278ff-4bcb-4bc8-9823-bfb5082b1118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca25bb-21ae-4e9c-889a-ad965c2f59a5",
        "cursor": {
          "ref": "e01dd2fc-576e-46eb-8732-8f2da10ef0b2",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1e3a577-f79e-4be1-b574-367ab86e6645"
        },
        "item": {
          "id": "9eca25bb-21ae-4e9c-889a-ad965c2f59a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "11c1bbd8-6c43-4879-ba1f-a1d2b8172803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98885836-2e01-4336-8fc4-cfe5f87f740f",
        "cursor": {
          "ref": "46ffb2a3-e4b2-4119-aa7e-95faf7a1dae0",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "558895a5-364f-40c0-bdf9-ae4888e56c38"
        },
        "item": {
          "id": "98885836-2e01-4336-8fc4-cfe5f87f740f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "caca3eed-89c1-4732-b504-2343b024e060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f7143d-afe6-4ed6-a40c-d7be393e6a62",
        "cursor": {
          "ref": "d9689050-3cb8-4d89-bc2e-27ba11b37b77",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dd169fc5-ac4f-4059-83ff-ee4006ce40f5"
        },
        "item": {
          "id": "06f7143d-afe6-4ed6-a40c-d7be393e6a62",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "71b515f8-8c03-45d7-8a6a-84d241ff3da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7100ec5c-9fe9-476e-8216-7ee2cfe875a2",
        "cursor": {
          "ref": "137c87db-7b14-48bb-93a7-98139cda618d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8855b4a2-7f19-4168-9864-09dd5a80e85b"
        },
        "item": {
          "id": "7100ec5c-9fe9-476e-8216-7ee2cfe875a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e2a57528-83d3-42c2-967f-261e1896330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595d08c1-a93b-4cb2-ba10-3805ae03a654",
        "cursor": {
          "ref": "51d7b393-9f6e-4eb5-8d4f-a23821d68063",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "93fe8d75-1248-4ea0-9593-deb7ddf21e99"
        },
        "item": {
          "id": "595d08c1-a93b-4cb2-ba10-3805ae03a654",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5136e7bc-bf51-46f1-8be4-adcd6fff40dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0095f4-875f-457d-b068-9ffb38062186",
        "cursor": {
          "ref": "9cdb5a35-8e70-4034-8e05-2761a1b8595c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4be2735e-362c-44f8-95dc-5fa3217ad95f"
        },
        "item": {
          "id": "0b0095f4-875f-457d-b068-9ffb38062186",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "039421bb-06b7-4206-9639-0d7f9af7bb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477a34db-89d4-4412-a9f6-53306256dd4d",
        "cursor": {
          "ref": "0dad324f-3d34-47c1-948d-fe503a53e3c7",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d01165e8-9c1d-483c-8d98-beb87a7f670e"
        },
        "item": {
          "id": "477a34db-89d4-4412-a9f6-53306256dd4d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "587f7f8d-cf4f-4b25-9b75-67b054d58594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f77428-02ba-4453-af12-a0106a270d24",
        "cursor": {
          "ref": "086973aa-96af-4a9d-b6dc-37639e0d4386",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00221187-0dd6-45bb-8f6c-02e4bf94335c"
        },
        "item": {
          "id": "69f77428-02ba-4453-af12-a0106a270d24",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "96323022-ad22-4cf4-a0e9-22cf1dc99ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f39d90-e386-4c70-bcf8-6ef8a1cd8b2d",
        "cursor": {
          "ref": "faa6e210-9029-444b-b62e-d8b02c864f2a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "369e00bd-37aa-4b61-ae50-12483b7a3559"
        },
        "item": {
          "id": "f7f39d90-e386-4c70-bcf8-6ef8a1cd8b2d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "be2765cc-1c66-4fe8-9a26-01df7ebb1bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc99749-30f3-45f3-b472-ee018b56e6a7",
        "cursor": {
          "ref": "01f64138-33e7-4954-ba05-d19edfc78eec",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d52ec82c-e24d-476e-939c-b35ac714c518"
        },
        "item": {
          "id": "4dc99749-30f3-45f3-b472-ee018b56e6a7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a87b2ab-a854-432f-a61d-49f6fa57b281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de29793-1f34-497a-b6f3-23f9e0356335",
        "cursor": {
          "ref": "c0621b25-761f-4377-bd4c-d6480ff700f8",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ff71ad9a-16ce-4db0-a796-23beea5dbf7d"
        },
        "item": {
          "id": "2de29793-1f34-497a-b6f3-23f9e0356335",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "466495bf-f701-4449-a60f-91f2fc410cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b87478-8973-4e6d-9e7c-d0ed46a7558d",
        "cursor": {
          "ref": "83bae8e5-33f2-4875-9747-86a0e3067365",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e33e9165-232b-48c6-a91a-144719a8fe58"
        },
        "item": {
          "id": "f0b87478-8973-4e6d-9e7c-d0ed46a7558d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2bb96bf1-5582-43c2-b0af-820d1624281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1090,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cabf0b-4b1b-4d20-997b-c834a0d3f26c",
        "cursor": {
          "ref": "5835b4b2-af1c-4028-a549-2709393104e2",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7e7d5930-49a1-4bc3-932d-e53e322509fe"
        },
        "item": {
          "id": "65cabf0b-4b1b-4d20-997b-c834a0d3f26c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a43563c8-a060-4ff6-8924-3880da38f1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1ac54b-114d-4dc7-9d32-b947e0aad058",
        "cursor": {
          "ref": "e6aced8b-92ce-4e01-bb12-9bba0d35af49",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50b7e933-f8c4-46c3-8cd0-3947668329f7"
        },
        "item": {
          "id": "fa1ac54b-114d-4dc7-9d32-b947e0aad058",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4772ff09-46a9-4711-bc83-018ae6842338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fdb9f5-efe3-40c5-b98e-cf3bbc2bb7f7",
        "cursor": {
          "ref": "d7419146-0c70-4489-83b4-9768cde28329",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "22cc351a-31e5-423e-9cf7-3972b6b1bd9f"
        },
        "item": {
          "id": "a0fdb9f5-efe3-40c5-b98e-cf3bbc2bb7f7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b76ef2b-416a-4112-94f5-edaff7a404a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a53cf4-09b6-4174-87c0-71dff9ed51e9",
        "cursor": {
          "ref": "872cbce3-0e9f-4194-9110-7af368ee3b38",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2f471bd3-6bfe-4cf2-88a8-a271633b13fc"
        },
        "item": {
          "id": "81a53cf4-09b6-4174-87c0-71dff9ed51e9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c61dd0a6-3a98-44a7-8d2f-6713d3fde606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65efebed-84ba-4015-9deb-5d010d475813",
        "cursor": {
          "ref": "8d6b028d-9dbd-4bbe-a23c-e867bc60356d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eaf41059-2bbf-4757-8202-f6ab98677944"
        },
        "item": {
          "id": "65efebed-84ba-4015-9deb-5d010d475813",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e955d37b-f528-40af-a0e8-390df8b05fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655a6e0-b9cb-4812-95f0-f68e6629c205",
        "cursor": {
          "ref": "b48ac6ad-39e4-4304-ad95-3c96a06284fa",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e75c66fb-22be-49e3-93f9-f59f74afc369"
        },
        "item": {
          "id": "4655a6e0-b9cb-4812-95f0-f68e6629c205",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8b82d2ae-b700-414f-8a99-e8861f93c0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2a3966-9a24-45b5-b34a-e6d659d761de",
        "cursor": {
          "ref": "e8b57d0c-428a-4bea-bc52-f850338db70b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e6c9bc6-f4fe-4074-a9b7-cd4ec52f7431"
        },
        "item": {
          "id": "0a2a3966-9a24-45b5-b34a-e6d659d761de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2ebf0f7-89fc-4ca2-a741-742afa8b91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d544fe27-bcfc-40c0-9285-0085a5c606a2",
        "cursor": {
          "ref": "424528e6-8fba-4ee8-ae23-9b8276db1fae",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "da468b7c-4163-4604-b701-57fc217735a9"
        },
        "item": {
          "id": "d544fe27-bcfc-40c0-9285-0085a5c606a2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "00d78e43-e09e-4545-8457-e390a27d1b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824cc081-cbb2-41f4-a347-e3a942b79144",
        "cursor": {
          "ref": "780498d6-1ff0-41fd-983f-0c81b3c06185",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "241df872-51c7-4dd4-8a6b-b03bdc15296e"
        },
        "item": {
          "id": "824cc081-cbb2-41f4-a347-e3a942b79144",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c84081d5-5c12-489a-8620-301aaa478741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe16dde-6ca4-4a73-8e84-6e5bfacc15c4",
        "cursor": {
          "ref": "8274daf8-6db6-46f4-b2f6-5551f98436b8",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff012da0-205d-4692-bb47-bb27a58d3482"
        },
        "item": {
          "id": "9fe16dde-6ca4-4a73-8e84-6e5bfacc15c4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "94835918-eebf-4b94-b4c6-8b548ba7c41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3aae48-c801-49e4-853e-4b66ba4ac728",
        "cursor": {
          "ref": "93aeb845-e050-444e-bb53-08ad433f1f24",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b7986f10-a2b4-4c2b-a776-908d89126bcb"
        },
        "item": {
          "id": "6a3aae48-c801-49e4-853e-4b66ba4ac728",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2512a5a9-8c1a-4158-b873-a7a0a1be1e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9960f4-8209-4bc7-83a3-ebc37f1d2bfc",
        "cursor": {
          "ref": "d46de698-ebcb-4786-a7e7-36b9f05e9fe3",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6f7f8716-fe43-447e-b74a-547388170052"
        },
        "item": {
          "id": "fb9960f4-8209-4bc7-83a3-ebc37f1d2bfc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6bf29b97-9c40-4073-8e3e-ceab7f33f91d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7866af6-83d7-413e-b42d-082074e6be37",
        "cursor": {
          "ref": "f724bbc7-6e21-423a-91e0-c66e796a6572",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "27f1aad7-30ac-4aa2-a134-b05fd84272e1"
        },
        "item": {
          "id": "c7866af6-83d7-413e-b42d-082074e6be37",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bd1bcf3c-73b4-4b90-9151-8d051ec381b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 761,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71525c81-a384-4730-8e55-8c35f46874d8",
        "cursor": {
          "ref": "fd49c3d6-319e-4659-a494-4ea167901261",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "de8fc368-93c9-44ce-a25f-8121402bd8d8"
        },
        "item": {
          "id": "71525c81-a384-4730-8e55-8c35f46874d8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "293a7030-b820-4f72-89b2-026fe305dd0c",
          "status": "Created",
          "code": 201,
          "responseTime": 6990,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "120741c9-126a-481a-af0d-0a433063e30e",
        "cursor": {
          "ref": "271b90dc-5fe6-438d-8f51-81d60688e2cd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9fb48d20-fbb7-4bda-a096-70070022a02b"
        },
        "item": {
          "id": "120741c9-126a-481a-af0d-0a433063e30e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "23d3ccce-cfae-4f14-9038-3e0879f2dc98",
          "status": "Created",
          "code": 201,
          "responseTime": 7404,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29cf1f1-550a-4f2a-a16c-2ce2af9f49f0",
        "cursor": {
          "ref": "c528fc97-83cd-4de2-aa70-6a7192c6eb93",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fabd0be8-a3f0-464d-b32c-5d1bef5802f9"
        },
        "item": {
          "id": "d29cf1f1-550a-4f2a-a16c-2ce2af9f49f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2119274f-8526-431f-9934-9a8bb3939ed8",
          "status": "Created",
          "code": 201,
          "responseTime": 6563,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78abd494-7ef3-44e6-ae7e-08d840c86c57",
        "cursor": {
          "ref": "66f938b1-fc08-40ca-92d1-248659a219f6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d22b4564-58bd-4b21-8c11-0950a39a7bf5"
        },
        "item": {
          "id": "78abd494-7ef3-44e6-ae7e-08d840c86c57",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0149e1d7-9c6f-4f26-885c-c6c4a8e96987",
          "status": "Created",
          "code": 201,
          "responseTime": 6510,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5af677-d851-465d-9ba6-0ca0b5c0c8ce",
        "cursor": {
          "ref": "0b1474f0-7e79-4bf2-b08e-309bde44970d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9d1aca9e-acac-4387-b97b-fcc3bc8107ed"
        },
        "item": {
          "id": "4d5af677-d851-465d-9ba6-0ca0b5c0c8ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28005d79-304c-4879-a59e-f473df648398",
          "status": "Created",
          "code": 201,
          "responseTime": 6887,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b69428-b41d-4d8b-85d6-dddc0cbc83fc",
        "cursor": {
          "ref": "bcf4cc96-1116-4161-be60-52fecc0826c9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "82054d34-3f10-4282-997d-cbc5f17aff6d"
        },
        "item": {
          "id": "b7b69428-b41d-4d8b-85d6-dddc0cbc83fc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bff32479-05ab-42ab-8e08-50f804b532a7",
          "status": "Created",
          "code": 201,
          "responseTime": 7585,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0790b527-54fe-4ebd-a894-58debf1ed5c0",
        "cursor": {
          "ref": "b4065d23-2b8d-4b0a-8a32-27bff9e02bbc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a47f7ae9-b71e-4a7f-93ff-89011225e361"
        },
        "item": {
          "id": "0790b527-54fe-4ebd-a894-58debf1ed5c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e29eaae9-35aa-4a25-baed-c690a8880199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0790b527-54fe-4ebd-a894-58debf1ed5c0",
        "cursor": {
          "ref": "b4065d23-2b8d-4b0a-8a32-27bff9e02bbc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a47f7ae9-b71e-4a7f-93ff-89011225e361"
        },
        "item": {
          "id": "0790b527-54fe-4ebd-a894-58debf1ed5c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e29eaae9-35aa-4a25-baed-c690a8880199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fd4bbc-699e-4ec4-aed6-a0a0443c17bb",
        "cursor": {
          "ref": "5ed6c254-80d4-42ce-a178-2aabb607c061",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3773c7e-d881-4a54-9480-b8efd0856aeb"
        },
        "item": {
          "id": "41fd4bbc-699e-4ec4-aed6-a0a0443c17bb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "69237b43-50f9-4d0c-8982-c893504c82f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5ec1eb-8467-47a2-bc86-56f1a06413d7",
        "cursor": {
          "ref": "89a0e92c-7ac1-4c3a-8e85-6c2be321d794",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ff03dc6b-5ba3-4fe8-9c0d-b3f9c3846e5f"
        },
        "item": {
          "id": "cd5ec1eb-8467-47a2-bc86-56f1a06413d7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d64acd4d-07fe-4a6a-b1c2-731aae40f7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d84717b-99ed-459b-9b2e-394ae5f21260",
        "cursor": {
          "ref": "a1816a91-d939-4ab7-a858-c0d73351f6ab",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "131bf401-4457-4f7d-9c2c-98bab6fd6856"
        },
        "item": {
          "id": "0d84717b-99ed-459b-9b2e-394ae5f21260",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b00654d2-9019-4653-a0c9-5c9c1738e437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14babcb5-d15a-4276-a1f5-83bb1d478cff",
        "cursor": {
          "ref": "0481a286-1b13-4868-b3fc-8ed83a736069",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1379fcc3-a10e-454c-86d9-7736021c420b"
        },
        "item": {
          "id": "14babcb5-d15a-4276-a1f5-83bb1d478cff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7984985e-e998-4a05-9a00-c42f11280d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b63fbd7-2c72-480f-b05e-54a716509f9d",
        "cursor": {
          "ref": "0148db21-5fd9-45de-ac36-f5743180955d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3a2aa5ac-64c8-43d5-9fd2-72c3c97a44dc"
        },
        "item": {
          "id": "0b63fbd7-2c72-480f-b05e-54a716509f9d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "817765d9-8e5a-45bd-a622-08c9e479f0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5b314-6754-4253-9e6f-1d3be5a15ba9",
        "cursor": {
          "ref": "94bcc888-b522-41a7-ae21-01f539502f7f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c598607-8c09-4f20-b831-367889a6d689"
        },
        "item": {
          "id": "83e5b314-6754-4253-9e6f-1d3be5a15ba9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c2448ce-0dcc-44f6-a25d-c9422cb0f81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab21a6b-f534-4893-91d8-cb0d208467d1",
        "cursor": {
          "ref": "fe728b6b-c566-44be-a24b-52e17d51ecea",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "62cfe2e4-4540-40bd-a01d-953c6002b081"
        },
        "item": {
          "id": "9ab21a6b-f534-4893-91d8-cb0d208467d1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed2e9553-9dad-412d-91ad-a39f192aa38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92387bd0-3cc8-45c8-ab46-ea344fad7441",
        "cursor": {
          "ref": "93a24e5e-fd78-455a-ae8a-244208a41abd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e1a07bb5-5c72-494a-856f-3ea6e1468917"
        },
        "item": {
          "id": "92387bd0-3cc8-45c8-ab46-ea344fad7441",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08157d23-80fd-43d1-8dd5-cc09431463c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3478564-360c-495b-bbcd-884971a2d69b",
        "cursor": {
          "ref": "aeeb185d-bd57-4673-8d2d-ce87adf0f532",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8f119fce-0bfb-44bf-8738-e4cea3542dcf"
        },
        "item": {
          "id": "d3478564-360c-495b-bbcd-884971a2d69b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44880949-5b31-45de-9c92-285f89b7323b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a92de81-bca1-4a7c-adb3-b242f656e3bb",
        "cursor": {
          "ref": "7fbd5f37-0508-493a-8dcb-daccf368d2ca",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8debd9e7-dcb0-4f67-b7e4-132179a2d0ee"
        },
        "item": {
          "id": "0a92de81-bca1-4a7c-adb3-b242f656e3bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80fbfeb5-8bd5-4e1c-98b6-f8e670b01eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b946f-04cf-43d4-ac6a-1c10b3263760",
        "cursor": {
          "ref": "6bc73eb7-00b3-42ae-8783-2614b14379f1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64bf4374-e1cb-477c-b3cc-82563e3d78a8"
        },
        "item": {
          "id": "098b946f-04cf-43d4-ac6a-1c10b3263760",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d0421cfe-9c3c-4e67-9a9f-37e917fa84cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03f7b0-95ef-4c44-8a93-a856e3bf0ffb",
        "cursor": {
          "ref": "7eed004a-46da-4517-bbfd-c0a9cc259e1f",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "714fc7f3-3ff6-418b-a871-bf973ee9a491"
        },
        "item": {
          "id": "aa03f7b0-95ef-4c44-8a93-a856e3bf0ffb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b635f461-b382-4249-bfae-0743d42cf052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf253dae-05bc-4494-99c9-a66c05e055f0",
        "cursor": {
          "ref": "ac51f931-4c7f-4b51-afb5-b79b76e4057a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c086ef69-e7a2-461d-943a-ac0e882fe7af"
        },
        "item": {
          "id": "cf253dae-05bc-4494-99c9-a66c05e055f0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c7ca5fad-d296-4c5f-aba3-dd3d2da0245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141ce2d1-1a9f-4e36-8fa9-f4996c0c8dd8",
        "cursor": {
          "ref": "62ff9e53-be41-4d0e-b8c5-359384756387",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d6e1af6e-e9f0-4478-baf5-b330f8fe0cab"
        },
        "item": {
          "id": "141ce2d1-1a9f-4e36-8fa9-f4996c0c8dd8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "550ba25d-727b-4683-a6f2-12db47f7545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09ce27f-0246-4e0f-bf5c-b45c5d2c10c8",
        "cursor": {
          "ref": "f7d1fb60-9d29-4697-9bce-cc1c882faa5d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "02c26537-05ad-4bc0-bfac-45b9fa9bcd7f"
        },
        "item": {
          "id": "d09ce27f-0246-4e0f-bf5c-b45c5d2c10c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d170960c-f528-4fbc-a701-81372137e619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff1dca-e88d-4b0a-a5df-40249c1b5446",
        "cursor": {
          "ref": "7cbc9cea-3f28-4e71-b73f-fceb6bddd6c1",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3287263d-3382-42c4-a16c-e98ba0a68e52"
        },
        "item": {
          "id": "f1ff1dca-e88d-4b0a-a5df-40249c1b5446",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6fe89d0-bfdb-4cc1-b8a3-b8ccf552614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaee724-d176-4d66-9de0-60b6b3e16a36",
        "cursor": {
          "ref": "24f1e3f5-b966-4bf8-aa03-780009d48151",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dbd3c68c-0900-4334-8102-b5e92784a557"
        },
        "item": {
          "id": "caaee724-d176-4d66-9de0-60b6b3e16a36",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f2f7592-55a3-46bc-a9a5-0b6924884d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b2b8d7-667c-40b9-862c-b6ffebebb94e",
        "cursor": {
          "ref": "34216f58-42b4-404f-869e-5f3fa894b577",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a82853f2-a279-4cd8-9c3e-2a1136ce8ffa"
        },
        "item": {
          "id": "e0b2b8d7-667c-40b9-862c-b6ffebebb94e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "64014d37-2cd4-4ce8-a256-aecdb5ab453f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ecc6ca-6c02-4bcd-99c5-d220429efd8e",
        "cursor": {
          "ref": "212ad288-736c-4c08-8ca5-2e147acba12e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4dd028a4-fd9c-441f-9e88-ef2fe54811ca"
        },
        "item": {
          "id": "74ecc6ca-6c02-4bcd-99c5-d220429efd8e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "758ed6c6-1dfa-4a41-b045-d55f17f9374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04b11e8-ec44-421f-8d02-175da3a505b8",
        "cursor": {
          "ref": "cb05cd79-4cd5-4331-b339-1368c1a5c16b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9983ee8c-37b1-445a-bacc-305972a928e6"
        },
        "item": {
          "id": "d04b11e8-ec44-421f-8d02-175da3a505b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c82e5aca-35cd-4d9d-8743-b831a47544c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f865de0-fd5e-4995-97c8-cdaeae132ab4",
        "cursor": {
          "ref": "c015ec96-688f-4ac4-992b-ba376c8ef2e7",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2af1b972-0626-402e-9f0a-127a8e0a2de8"
        },
        "item": {
          "id": "9f865de0-fd5e-4995-97c8-cdaeae132ab4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2fda6a76-5e88-4dad-8b53-4bff5eea6895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e2ae3c-3e22-4b49-baba-d0fa3900c491",
        "cursor": {
          "ref": "a5ed0545-55f5-4c91-9e82-8fc98fc6b6ba",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "88df944e-d197-45a0-b7d5-468243be7679"
        },
        "item": {
          "id": "d4e2ae3c-3e22-4b49-baba-d0fa3900c491",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69f69f11-68f5-4882-bff1-aa22ef1c2139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7466eb9f-9c3d-473b-a276-8c42095c5ddf",
        "cursor": {
          "ref": "eca516cb-72ac-4c9f-be77-6dea669e2400",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3899e03c-e1a2-4658-829d-5f83a0402b39"
        },
        "item": {
          "id": "7466eb9f-9c3d-473b-a276-8c42095c5ddf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0c198e0e-6366-4bd5-a83a-2f67e567e2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e844d80-8f18-4223-acb5-606440b24576",
        "cursor": {
          "ref": "dcf01475-8079-4256-aefb-3362dd98c796",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7eada7b-eba5-4f82-89fb-3286362d5493"
        },
        "item": {
          "id": "8e844d80-8f18-4223-acb5-606440b24576",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "46504468-8890-4550-aeda-992b7083a461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd6d916-89c3-46e4-9728-2c04580f5946",
        "cursor": {
          "ref": "88ecf4ad-bb92-4b31-819e-f1a57cf789f7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f4d210b6-06f8-41de-a449-6e0d484bc8a9"
        },
        "item": {
          "id": "4cd6d916-89c3-46e4-9728-2c04580f5946",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd11c060-ded2-42cb-b6cf-dc39aa704c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a93ab6-0afb-4163-9886-5ee24e23abc0",
        "cursor": {
          "ref": "ec20585e-a621-4d85-974d-59fb409b6530",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ef5ee2b6-ec12-41d2-996d-65db78dbd3a3"
        },
        "item": {
          "id": "16a93ab6-0afb-4163-9886-5ee24e23abc0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "817abbff-5c16-40c2-b30a-4fea1ed91c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7387318d-3eba-4641-a3fc-e80fa8003704",
        "cursor": {
          "ref": "4b5747fe-23fc-45e8-8d2f-6640c0ce0b12",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf9195e3-e7a3-4712-9223-78f556c35e1d"
        },
        "item": {
          "id": "7387318d-3eba-4641-a3fc-e80fa8003704",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ad5ce601-0cff-447b-9070-397f7ddf402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c71bfb-5873-4d1e-a1a5-fed2f2320dd1",
        "cursor": {
          "ref": "6fa51f03-dcf1-4a5e-875d-c5981d802f8f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6ddf23b2-9dd5-42d4-a541-e0db6a3dc479"
        },
        "item": {
          "id": "32c71bfb-5873-4d1e-a1a5-fed2f2320dd1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb6eb704-65fb-4436-856b-0f0a5342f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c6466a-64b5-4dad-8cba-b739cbf3d487",
        "cursor": {
          "ref": "fec171dc-e6ca-474f-8988-a9a6df140c4d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7638697d-e82c-4921-b960-cf5f485a35e0"
        },
        "item": {
          "id": "40c6466a-64b5-4dad-8cba-b739cbf3d487",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "608c3f56-e3b0-4e69-8507-31bf4e78c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdb781d-2123-4a28-ac89-0c1d32680997",
        "cursor": {
          "ref": "57b63397-60db-4242-bb40-b6289ca02104",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2bb291c0-dda2-4955-bc87-17b8c9e83a6d"
        },
        "item": {
          "id": "4fdb781d-2123-4a28-ac89-0c1d32680997",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8c633e53-d857-402d-9eab-294b6b08fae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485f83b0-dfd8-4e50-9f1b-5b246589ded5",
        "cursor": {
          "ref": "1578851f-f626-463e-aff9-c9485199f4bf",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6b275ec5-157f-40ef-bf94-d8012d1f5931"
        },
        "item": {
          "id": "485f83b0-dfd8-4e50-9f1b-5b246589ded5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cf94cf4a-6459-442d-ba00-5aec6c925c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d3a6d-8b30-474c-bb7f-493b476d41f6",
        "cursor": {
          "ref": "6b94d745-b7d0-499a-b81e-fae016dd0a28",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c538b729-38fa-4a73-b682-c974688bc0be"
        },
        "item": {
          "id": "091d3a6d-8b30-474c-bb7f-493b476d41f6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e61c4423-ad95-437f-a5bf-8fde4b28c837",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e34b6a-4dad-446a-94f0-e87d1175f837",
        "cursor": {
          "ref": "ee5fa6ff-20a2-4376-a319-08c3f6ec8508",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "06fd1893-ae83-4c2c-b627-a893aba2a12d"
        },
        "item": {
          "id": "a7e34b6a-4dad-446a-94f0-e87d1175f837",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "591344d4-90f2-4e0b-8809-b84e08569edd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 779,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c1f5b8-00c3-4d4b-80b1-69b4a3ce681a",
        "cursor": {
          "ref": "56f0ac37-87b2-40ac-968b-13ded265a20d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a694cf0-f40b-4af3-aec9-2823f93a6f00"
        },
        "item": {
          "id": "96c1f5b8-00c3-4d4b-80b1-69b4a3ce681a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91a3d8c4-b75b-4582-ac70-53f7fafaffdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c1f5b8-00c3-4d4b-80b1-69b4a3ce681a",
        "cursor": {
          "ref": "56f0ac37-87b2-40ac-968b-13ded265a20d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a694cf0-f40b-4af3-aec9-2823f93a6f00"
        },
        "item": {
          "id": "96c1f5b8-00c3-4d4b-80b1-69b4a3ce681a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91a3d8c4-b75b-4582-ac70-53f7fafaffdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cbf056-b1e2-4ddc-ad05-a4bd19f8cde0",
        "cursor": {
          "ref": "104c49fb-8c2a-4f45-a204-f9f3ac5a46ff",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "976b0f65-3e82-479c-a780-a9681b8cb271"
        },
        "item": {
          "id": "d9cbf056-b1e2-4ddc-ad05-a4bd19f8cde0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "83b46277-3aab-48b1-9e64-2188e59cca93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f9b2a-c7eb-44e1-bf76-a8d3bf99dbc2",
        "cursor": {
          "ref": "29e692e5-42c4-4f9b-bd9c-2db0a2462726",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "daabcd3c-6a5a-47f4-bc30-7180402dd00a"
        },
        "item": {
          "id": "ad4f9b2a-c7eb-44e1-bf76-a8d3bf99dbc2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9b1e63e8-c194-48d6-a5eb-0ba4c996390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d98b1-6a5e-441b-8462-4114ea7495c4",
        "cursor": {
          "ref": "9653f3db-efad-46bd-a588-6ffc92fd95f6",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb2a590b-2e13-413c-b171-9cdb806de872"
        },
        "item": {
          "id": "f37d98b1-6a5e-441b-8462-4114ea7495c4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b87bf22-08a5-4ae3-9361-ead69e94301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efb5aaa-7ab4-44fd-a6ac-af11e6eca0c8",
        "cursor": {
          "ref": "11fb7c6a-1bdd-4e57-8456-51fc5b76e4ed",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "04b1feca-65a1-4b7f-9f78-58add6e55f36"
        },
        "item": {
          "id": "5efb5aaa-7ab4-44fd-a6ac-af11e6eca0c8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b9535b5-4d6d-4c05-8045-86641437068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d8811-0a4c-4687-bebc-9b09743c2fb8",
        "cursor": {
          "ref": "7a420d76-774e-451f-8690-ab350926c565",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e76e46e9-7dd6-4b83-853c-020612311ddb"
        },
        "item": {
          "id": "2a1d8811-0a4c-4687-bebc-9b09743c2fb8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e2b193ec-1e06-4d40-870e-02b91ce9e20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4cdb7c-bcc5-4f57-a352-1e77578ad2b6",
        "cursor": {
          "ref": "9dbd7929-f240-4763-a5e9-aee493b5415b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6292bf5d-674a-4d1c-9ad7-173aa84f0caa"
        },
        "item": {
          "id": "cb4cdb7c-bcc5-4f57-a352-1e77578ad2b6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba2241dc-07f4-4652-ae8d-15b6aa3a99bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acc79b5-6fce-4b0c-a022-e410510fcade",
        "cursor": {
          "ref": "385a0055-fafc-46fd-9db4-8c172beddf29",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ccb08ef7-01ef-42de-9a3e-a0dff37ed549"
        },
        "item": {
          "id": "5acc79b5-6fce-4b0c-a022-e410510fcade",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f54120b7-d1df-42ab-860d-fc4c20d2ad46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a24143-514e-4fad-ac15-fd0d8a25945a",
        "cursor": {
          "ref": "e7c068fe-cbd1-410c-ac43-8431eafa8845",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15aaee13-ba26-4306-9dcc-1c61f7cf7750"
        },
        "item": {
          "id": "88a24143-514e-4fad-ac15-fd0d8a25945a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a220ffee-1a0e-4add-bd23-73c35b89430f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a75e0a-d1d8-4e99-9fda-e270a9a69533",
        "cursor": {
          "ref": "f9b9d14a-10b6-4031-a3a6-1148cfe373f4",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "224723b0-399e-479c-92cc-45edf560f361"
        },
        "item": {
          "id": "44a75e0a-d1d8-4e99-9fda-e270a9a69533",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b607f425-e571-4277-92c6-b1bf662c5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1deef9-2b32-4cbe-9a22-f9eb5100b510",
        "cursor": {
          "ref": "813813f3-8526-47ac-aea3-f41ca3dc170b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e3b21b6-89f9-4668-bf28-35ddf8c6cfac"
        },
        "item": {
          "id": "3e1deef9-2b32-4cbe-9a22-f9eb5100b510",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e92ecfb7-3845-42c6-8b2a-405c28bb938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e98b85-0e1a-45e0-b57d-3df1cd040ea0",
        "cursor": {
          "ref": "741d49d7-3a36-4722-a883-5ab3a5b59989",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7e90192a-d29b-49b4-a8ff-5fac9cd9d69a"
        },
        "item": {
          "id": "65e98b85-0e1a-45e0-b57d-3df1cd040ea0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e137ec3d-3f1a-41d5-83b6-545cc60b238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8629aa-3bba-470c-9819-3773ad055936",
        "cursor": {
          "ref": "ff9522c7-a135-4ad3-9e9a-3b03d05abefa",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bb5f1218-b8ce-4144-a1e4-cf433cf4320b"
        },
        "item": {
          "id": "7b8629aa-3bba-470c-9819-3773ad055936",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "00bf32c1-d6db-4175-924f-7ccd1b101ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967df5f8-a455-4198-8cf4-581ff5050f37",
        "cursor": {
          "ref": "183f7366-4465-4c55-8dca-239e03a77d9a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a3bf438-35f5-4187-a19e-70840dcff54e"
        },
        "item": {
          "id": "967df5f8-a455-4198-8cf4-581ff5050f37",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2cf68e9f-1a6b-4bd0-a0bf-25f178b93ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ece31a-ee47-43e6-b182-028d2d2040fe",
        "cursor": {
          "ref": "80cfd8c9-1175-4c9f-9f34-9e9cda79af17",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d8b02987-f7b9-4217-ad70-b92f04cb8305"
        },
        "item": {
          "id": "76ece31a-ee47-43e6-b182-028d2d2040fe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8d81921d-ec94-4e48-a22b-ba893de676e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d7d07a-cb14-4a41-a3ce-c87a7d166ab6",
        "cursor": {
          "ref": "2a3278e2-67c3-4f8b-999d-84207fe712c3",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "efaab3ea-1873-4b83-acd8-33e18422c901"
        },
        "item": {
          "id": "e7d7d07a-cb14-4a41-a3ce-c87a7d166ab6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c71f0be3-c647-4104-ad44-865f4878686e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bfe0ec-3a52-410a-bb73-7f20e11e61a8",
        "cursor": {
          "ref": "c925d321-e667-4e0d-a189-1fb6fcf61e75",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ff30dc84-6bd6-4433-b469-804ae8409096"
        },
        "item": {
          "id": "e4bfe0ec-3a52-410a-bb73-7f20e11e61a8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "613ff1ed-66ca-4abe-a786-0e353968ef34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b89667-b425-4126-afc9-2be394a82134",
        "cursor": {
          "ref": "05209569-8661-47dd-aca3-325f5a06d63b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "18b23819-7fef-45d4-951c-a2a17541f4a8"
        },
        "item": {
          "id": "f1b89667-b425-4126-afc9-2be394a82134",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cb8b6ff0-b008-4e72-9dfc-cc2fe260a9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831badae-6f3b-49ab-950b-c24b19376cba",
        "cursor": {
          "ref": "cf78461d-b4e7-490e-a043-99e994877c43",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a533c1e4-670b-4d7d-a67b-7678524d27f2"
        },
        "item": {
          "id": "831badae-6f3b-49ab-950b-c24b19376cba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ef614ca-4dce-4db1-94c2-577307d366cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2aca32-fddc-47b3-88a0-3754a6354349",
        "cursor": {
          "ref": "9585395b-f176-4e50-8afe-a7e9b58dd63e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8f54316a-fd9d-4174-a08c-493471c89007"
        },
        "item": {
          "id": "dd2aca32-fddc-47b3-88a0-3754a6354349",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d7fe3f1-a37f-48d4-80d2-b3cb3d3cdf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061f2cd1-6754-47bb-90b5-a21d0d62028b",
        "cursor": {
          "ref": "2b170c3e-6e84-45a1-8574-d84b1225c83d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "568b65f6-6a8d-40ca-bb16-f34968292ca0"
        },
        "item": {
          "id": "061f2cd1-6754-47bb-90b5-a21d0d62028b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1d151500-8747-4351-afa1-7f4da7d52e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d193150-a434-46a5-a49f-c40aef857d70",
        "cursor": {
          "ref": "13c34e7d-4aa9-4466-8978-01386b32d0cd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5295c7c-713c-4933-a66a-69948b9b01e8"
        },
        "item": {
          "id": "7d193150-a434-46a5-a49f-c40aef857d70",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "726a840f-1c88-43e5-a4e6-9f97146927c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718020c9-c488-4bb7-acf2-2f483792fd45",
        "cursor": {
          "ref": "9b5df9bf-e4cc-433c-8722-a78b62e99aa3",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0a872de3-275e-4ecf-ab21-811375586b74"
        },
        "item": {
          "id": "718020c9-c488-4bb7-acf2-2f483792fd45",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a07c41ba-4fad-4908-8ccb-b81bb8658461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fa427f-8d32-4100-9d03-cb074117a966",
        "cursor": {
          "ref": "c9cdd841-5912-4dc7-8594-eca20b89a68d",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "13e845c4-c938-47de-afad-8cf5b4ca0150"
        },
        "item": {
          "id": "54fa427f-8d32-4100-9d03-cb074117a966",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bdf39033-081e-4907-b5f4-e1da6050d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d243aa6-cdb1-41bc-9ae5-e20f59a5fb4f",
        "cursor": {
          "ref": "0e519565-d41e-4eaa-8f46-71bc82937d6e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0d278b5f-574b-4a8a-9fb3-a4825392b376"
        },
        "item": {
          "id": "2d243aa6-cdb1-41bc-9ae5-e20f59a5fb4f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44f2b7ac-1b54-40a4-9f41-8024e508e289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ab6378-de56-412f-a140-bbe7bc16e149",
        "cursor": {
          "ref": "2a0706ca-2197-4e3e-b0fb-d7b73ea6366f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4c014a2b-e012-472e-95ec-c22782a084f1"
        },
        "item": {
          "id": "a6ab6378-de56-412f-a140-bbe7bc16e149",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5ca86a63-5117-4f5a-ae4e-27ff37c57a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a525c70-407c-4cea-8a58-d7711c6b23be",
        "cursor": {
          "ref": "eabd07c0-265e-4f83-8056-cde39f5b07fc",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d2d82d5e-6ba1-46c5-8d92-c8239b3e4e03"
        },
        "item": {
          "id": "5a525c70-407c-4cea-8a58-d7711c6b23be",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "67926404-cf53-44d0-a527-13c92b2c3289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20925036-2828-421b-8e6f-1af38de2a270",
        "cursor": {
          "ref": "d512a8a9-8a7f-47c1-bb8e-52448bbf47a6",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "396a8a47-7c26-4d39-ab34-ea329570b938"
        },
        "item": {
          "id": "20925036-2828-421b-8e6f-1af38de2a270",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "99aa84f3-04c2-43c1-b886-fdfc397c1728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ee0ef7-88be-4d77-85e9-9d9fb743fc0f",
        "cursor": {
          "ref": "c355ad83-378f-485c-95ab-b4b118477bb3",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e9afdcc-caf0-401c-9aa2-7428e63816b4"
        },
        "item": {
          "id": "f7ee0ef7-88be-4d77-85e9-9d9fb743fc0f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e2d2a0d-5d57-4fdf-85b0-0f0a43a4ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70572910-ebac-43f4-b84d-2e76f2d16213",
        "cursor": {
          "ref": "4b7aaa74-aa84-4b6a-8a9d-bc7155cd2990",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3a46eabd-479c-431f-9d59-752cc6fd05bf"
        },
        "item": {
          "id": "70572910-ebac-43f4-b84d-2e76f2d16213",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38b5b0c4-4831-4133-af08-63787b8c269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b158b3a3-29b2-45e6-a9c6-a2c4123e06eb",
        "cursor": {
          "ref": "c7ae2b6c-1080-4bae-9063-4e34757f99bc",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "893920ef-3e0f-4d92-b58a-4c5efa974dde"
        },
        "item": {
          "id": "b158b3a3-29b2-45e6-a9c6-a2c4123e06eb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4039902-b158-4222-b144-709e0352ca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5660f1-c93c-48fa-86d1-e66d7292267e",
        "cursor": {
          "ref": "3f8717bf-2bfb-4b9e-9471-b9d8bd216761",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9dc6f397-ff55-415b-ad5a-39c65e0d63bf"
        },
        "item": {
          "id": "4f5660f1-c93c-48fa-86d1-e66d7292267e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8bbdaae0-af45-4edc-83fb-2132139de97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3986f4-8edc-4743-bf7b-e6a17eabc893",
        "cursor": {
          "ref": "9cbb7429-b823-4a1e-a6a9-e4f105fa0443",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f8e461c-f504-444a-8b9c-980d1dc47b2c"
        },
        "item": {
          "id": "1e3986f4-8edc-4743-bf7b-e6a17eabc893",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9755069c-01ab-4232-af41-dbe797da3011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f7e69e-7a54-4bb2-b296-e81669991db3",
        "cursor": {
          "ref": "6afc1f46-d94d-4bcb-b610-98f09a9c1807",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dd45b6f7-433f-424f-98c7-e7a1354ec636"
        },
        "item": {
          "id": "b9f7e69e-7a54-4bb2-b296-e81669991db3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "86311695-73c4-47e6-a5a9-19ce0438b505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414bc0ee-ee80-4aa0-b9e8-3bf69f39bee6",
        "cursor": {
          "ref": "06565a4d-07e6-4de2-b173-86ff7ab83b44",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b8f95e3-b4cc-4fbf-9866-def2dbd6feb1"
        },
        "item": {
          "id": "414bc0ee-ee80-4aa0-b9e8-3bf69f39bee6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ac0cb858-7813-44e0-b311-36a5962bf9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85efabd8-7f8e-4029-afaa-b421c1da4b32",
        "cursor": {
          "ref": "89705a87-f699-4467-b33b-151917ec7ebd",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f2671555-cce8-4bc0-8fd3-6901ccfe01a1"
        },
        "item": {
          "id": "85efabd8-7f8e-4029-afaa-b421c1da4b32",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ae0cbbbc-e8e6-4fe7-8931-886c6d824e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef32883f-4484-4f4e-9702-1970c0eaed9e",
        "cursor": {
          "ref": "fbc18b03-7d08-46ae-a83e-a82199d3d970",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "17af0aa1-a134-4d34-89c9-2a14d583571d"
        },
        "item": {
          "id": "ef32883f-4484-4f4e-9702-1970c0eaed9e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3151bf24-5e39-4d41-bb58-e4d01ca14dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d6082-f5ad-42de-b7cd-1c936f4a5de7",
        "cursor": {
          "ref": "51c5d70f-7322-415c-b5f2-34dcf1eacf22",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e3a812cf-e2c9-4f11-9858-96fbf8b15853"
        },
        "item": {
          "id": "be8d6082-f5ad-42de-b7cd-1c936f4a5de7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27c3359d-2bdb-40f0-bda7-94af0162ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74fded-25d6-4d64-b5be-aaef82f45769",
        "cursor": {
          "ref": "ee7024d1-29a7-4223-80b0-ed3b093d7b97",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "169b8836-2b92-4f9e-a13d-f98602fe13c5"
        },
        "item": {
          "id": "9c74fded-25d6-4d64-b5be-aaef82f45769",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e1835e2-3243-4bd8-a4bd-bb9859972e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e35a0d-884a-4681-a692-a61218c4a31a",
        "cursor": {
          "ref": "2b1f8e0a-b4e3-4a5d-b79e-3c89e5f29201",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f432a6f7-6019-4c55-b22c-871440cbd1eb"
        },
        "item": {
          "id": "a5e35a0d-884a-4681-a692-a61218c4a31a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a4188217-255c-4d3b-83a1-c75ec29bf6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fd63a5-ed71-40aa-933e-9061b7276659",
        "cursor": {
          "ref": "d167fdbd-d134-4c3b-9daf-a5b342c260c9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3a4ad235-c33f-43fd-b771-46acc03e18e6"
        },
        "item": {
          "id": "97fd63a5-ed71-40aa-933e-9061b7276659",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c2d40e63-9286-45e5-b417-24a17e024dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b848ff1d-4b2e-4292-9b21-ff7c7dd6dcc3",
        "cursor": {
          "ref": "5105c7e1-16bb-44df-b21a-fe868e2b2e37",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dfe9a863-48a9-42e3-a540-bfa6daf04e0b"
        },
        "item": {
          "id": "b848ff1d-4b2e-4292-9b21-ff7c7dd6dcc3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de7c6fa3-de95-460c-8d65-0cac03a3e3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ecb753-6965-444a-96c0-8d9f81c0550d",
        "cursor": {
          "ref": "4f0298f2-4e09-4a45-ba1b-57800998dd58",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42b2be0e-2300-42cb-9435-d69c4c60313c"
        },
        "item": {
          "id": "62ecb753-6965-444a-96c0-8d9f81c0550d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "238cdb72-3133-4085-beee-1cd57bd1460c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7016cba-6641-4327-931c-1cb4dcaed274",
        "cursor": {
          "ref": "d818e791-7dae-424e-a559-1e41fad5a298",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9945faaf-1786-4ffd-89c0-48ac4963dc51"
        },
        "item": {
          "id": "f7016cba-6641-4327-931c-1cb4dcaed274",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "016da8f0-8ab8-429e-8f4d-83be08f980cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb4d26a-7be0-44ec-b397-7478acfac347",
        "cursor": {
          "ref": "da3539ad-4522-446b-9ccb-d93374222044",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be1f7a8a-0d56-45fb-8a4c-568a135b14ef"
        },
        "item": {
          "id": "2eb4d26a-7be0-44ec-b397-7478acfac347",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a967531-03cd-457a-b680-84d5e90a23f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a00b1c-868b-4573-a3bc-13caa35411df",
        "cursor": {
          "ref": "c2fd854b-b92f-40c1-b9c5-5a624e0a6dcc",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ae5db6d3-0f27-4fea-92aa-d632290e725d"
        },
        "item": {
          "id": "57a00b1c-868b-4573-a3bc-13caa35411df",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c41f032-e2e2-4491-84d8-ea38e5cb1c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b027b39-c9cc-4ba2-9128-8ea31eb70eb8",
        "cursor": {
          "ref": "9cc60da3-b67e-4dbf-8e53-6306957d33ec",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "883d32b6-b781-441e-8ab0-3007b871774a"
        },
        "item": {
          "id": "0b027b39-c9cc-4ba2-9128-8ea31eb70eb8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "36521218-322c-4498-9df2-07e75f6e5f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e740a49b-8a15-4214-829e-595050145de1",
        "cursor": {
          "ref": "575f35d3-2b89-44e8-aa53-faf49a597e52",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "44b80610-b815-4d5f-907c-5f9b50d36871"
        },
        "item": {
          "id": "e740a49b-8a15-4214-829e-595050145de1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f533c7fa-ac85-421c-bbbc-375c709fde4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7879ba5-198f-44b3-a4a6-08943f8edbee",
        "cursor": {
          "ref": "4b595647-2601-4008-9df0-581c186cf562",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "586a8beb-849e-436f-bb9b-799cd7398904"
        },
        "item": {
          "id": "b7879ba5-198f-44b3-a4a6-08943f8edbee",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9dffd3dd-f899-45fe-be6d-fa764b849fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2903c830-22b0-47aa-a108-ddc32125ee9c",
        "cursor": {
          "ref": "11d0e7f5-1cd8-46c2-a3a9-8c59d966a3db",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0ca7470e-2e21-4897-907f-2035edd02ed4"
        },
        "item": {
          "id": "2903c830-22b0-47aa-a108-ddc32125ee9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb79094a-940a-4728-bfb9-bf4b7b654aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f45567-c10a-4dac-a9f0-a4c33850ffcc",
        "cursor": {
          "ref": "9e69b692-6204-4893-8069-f3252d61bf52",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f4ca4a2a-7344-4673-b788-9c007da91ba2"
        },
        "item": {
          "id": "03f45567-c10a-4dac-a9f0-a4c33850ffcc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e77fd50d-443a-4f5e-8312-eede4a116417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65000e3-1ad3-4053-95c7-5e2c93f44c63",
        "cursor": {
          "ref": "de630717-7fe1-4b05-b769-be9fc91addd0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3de61c65-ede4-45de-b360-9406b91494fa"
        },
        "item": {
          "id": "b65000e3-1ad3-4053-95c7-5e2c93f44c63",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "50edaff0-9e8d-4a85-aabb-09f5d1ad872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e187d6-35a2-47de-bdea-245708f72623",
        "cursor": {
          "ref": "cdbb2c72-3acb-40cf-8d23-5555c1e7e83b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0d196d0d-67a4-49b4-bb3b-8b5f69ed25b4"
        },
        "item": {
          "id": "75e187d6-35a2-47de-bdea-245708f72623",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e42005d2-8a31-4571-80b4-75813363d65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f4ee67-7cd3-41ef-b976-3722923da690",
        "cursor": {
          "ref": "9000b0d7-ad05-4a77-b3a9-f2f8807ab28e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2018bf66-a9c7-4182-afea-01bd902f70b3"
        },
        "item": {
          "id": "06f4ee67-7cd3-41ef-b976-3722923da690",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "875d2fc0-2350-47fc-8c9f-8e1b97e20028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c146d8-4ca8-4b26-b279-790b909bad8f",
        "cursor": {
          "ref": "0ae87822-5709-4e8c-84c5-f8dc0f7d64af",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "19fe5add-63fa-4670-971b-0b95cfcd3bca"
        },
        "item": {
          "id": "65c146d8-4ca8-4b26-b279-790b909bad8f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "096fa9f9-a924-4cc5-a865-c166fc495c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c497a6-af3b-4d0f-8fd7-a70c2a9b93a6",
        "cursor": {
          "ref": "a280e0ce-7f17-41d1-a78e-e70caea774ac",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f7d0ccc4-a417-4a32-9460-da03643a0f06"
        },
        "item": {
          "id": "89c497a6-af3b-4d0f-8fd7-a70c2a9b93a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b12e950f-94bb-4093-9f31-64e19e339f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90c2017-f4bd-4662-b57f-649e9baf48be",
        "cursor": {
          "ref": "a5c3f18a-4e8e-4213-a176-04d3fd9f97a0",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "75c84d11-ab3f-4e1e-a7a7-c5f8b6fe4042"
        },
        "item": {
          "id": "f90c2017-f4bd-4662-b57f-649e9baf48be",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "294856ed-bd95-42f8-a8fd-4fe08ff0528a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea7184-f73b-4f3b-9d5a-c02e376246e7",
        "cursor": {
          "ref": "7d994582-5fc4-4097-8c90-24734c3ccbdd",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fd9fec45-434e-42af-a5b8-80aeed08d9bd"
        },
        "item": {
          "id": "7fea7184-f73b-4f3b-9d5a-c02e376246e7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "085f9c4c-1d8e-48c3-abcb-28375968851a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1531dcbc-3bed-41a9-8b59-44f3df28954c",
        "cursor": {
          "ref": "46371ca3-53b9-4b12-acc3-13bb3420d6f3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c680cb62-6081-44ad-b61f-61f27125e804"
        },
        "item": {
          "id": "1531dcbc-3bed-41a9-8b59-44f3df28954c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1fd1cfc2-845b-4389-86ac-4bbe13e7ace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2cb154-25ab-4537-8b2c-2f583211d40b",
        "cursor": {
          "ref": "e87b0acb-caf9-45e8-9e0c-65971fcee7f0",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cc3547e2-a26b-491d-99cf-229b609ce295"
        },
        "item": {
          "id": "ad2cb154-25ab-4537-8b2c-2f583211d40b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "043eff03-9da2-4314-a9e0-9e254c7f38de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d971df-54a9-4d78-b2a2-306bdec114d7",
        "cursor": {
          "ref": "4810db27-e93b-4b64-82b8-17defb2b7374",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5925320d-d073-44f2-9002-b104e9e83cff"
        },
        "item": {
          "id": "c8d971df-54a9-4d78-b2a2-306bdec114d7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "63a36e15-9cb9-45c7-8403-5e4a79a294c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b311ab68-f28a-4563-9238-a23f46051026",
        "cursor": {
          "ref": "cc0fc458-5a9d-45e2-9dcf-c393fcea584b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9813e8f-dc56-4d8b-906a-6ca11e31d24c"
        },
        "item": {
          "id": "b311ab68-f28a-4563-9238-a23f46051026",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "71118242-1ea2-43c5-a604-44ea52e0f004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254d2aa-0b2f-42ee-8d04-fbbeaf705547",
        "cursor": {
          "ref": "6726a046-e400-431a-9f03-a117e99d2ba7",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "709a0d66-58d9-4122-99a5-0d4e4d836fc8"
        },
        "item": {
          "id": "9254d2aa-0b2f-42ee-8d04-fbbeaf705547",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4743b39d-fbc8-419a-ba23-e95839462273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16d14d1-d096-4f61-9066-9d3a22549b14",
        "cursor": {
          "ref": "5a9c8e63-5aa2-40f0-8f6f-6e10e56538ee",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "edfd9f7c-436d-4ddb-9a88-868252727694"
        },
        "item": {
          "id": "c16d14d1-d096-4f61-9066-9d3a22549b14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1c95d2b5-d680-4b60-b170-20c253c082d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b95bfec-893f-4aa7-a5a7-99f0ac5a2c02",
        "cursor": {
          "ref": "53a826cc-764c-474b-bb9e-d78294fadf34",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "abb38215-0fbe-4343-903d-98ecc9629253"
        },
        "item": {
          "id": "5b95bfec-893f-4aa7-a5a7-99f0ac5a2c02",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "73f58891-465c-4868-8bca-ad6a1ba941cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992fc07f-1f4e-4ac8-befe-6f4fa9529ce1",
        "cursor": {
          "ref": "4a43d217-0563-4a84-b8bb-39589a53e57d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e60a501-b1ee-4ada-b248-14c2f022c39f"
        },
        "item": {
          "id": "992fc07f-1f4e-4ac8-befe-6f4fa9529ce1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f1b37c3d-68ce-4f55-a71e-964e9961f5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c27f9-30e5-40ad-96bf-b24ec7d65f6a",
        "cursor": {
          "ref": "b3cb177b-c0cc-452f-a1fa-1d0b9f454af4",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e960b12-4df8-4d68-b414-1edded2c1432"
        },
        "item": {
          "id": "497c27f9-30e5-40ad-96bf-b24ec7d65f6a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c8cb7168-1d72-496e-a9f9-e64b9ac7d072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e7ed6-b59c-4b8d-893f-284a3256d330",
        "cursor": {
          "ref": "05847085-6b3d-4d27-9f6d-da9b22550d5f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eca9dbf4-fae0-46ee-b010-858b474bb44f"
        },
        "item": {
          "id": "4d8e7ed6-b59c-4b8d-893f-284a3256d330",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7a3ea9f-abfa-4e04-b396-4dd554574485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ecb5da-4d52-4bfd-8ced-cb06a450436d",
        "cursor": {
          "ref": "921c6eb9-2c07-4968-8dce-b1c1329ba20d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f5970d07-4e58-4690-aa7a-14978c006e1d"
        },
        "item": {
          "id": "69ecb5da-4d52-4bfd-8ced-cb06a450436d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5771e86b-22ce-4249-9049-bc0095f722a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c621f85-2ddb-47e5-8740-c6e9eac8b146",
        "cursor": {
          "ref": "ada4688f-2176-4eee-af53-91f2ffac2e62",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6cd60364-eab9-4cc2-b5a9-e8eb34328163"
        },
        "item": {
          "id": "8c621f85-2ddb-47e5-8740-c6e9eac8b146",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5c43be76-0bd0-4ef7-b2b5-496812c8de5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc12cbf4-612c-434e-b491-f2334482d7bb",
        "cursor": {
          "ref": "b1bf96b7-a8de-418f-b890-412d12876968",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82fb1c5e-a607-46a1-93a0-4f0c3b16e6d4"
        },
        "item": {
          "id": "cc12cbf4-612c-434e-b491-f2334482d7bb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e216f25a-3ee5-49a7-99c6-6b7001b554e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdfa8bd-296b-4364-bcd1-07e445d1e167",
        "cursor": {
          "ref": "3a6a9381-f965-41a9-9925-c4c4a3886088",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1bad7ec2-0d53-45d6-977e-d977b30d0fcc"
        },
        "item": {
          "id": "ffdfa8bd-296b-4364-bcd1-07e445d1e167",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f13de667-9eb0-4582-8bb2-f755b6e08f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb83d25-e243-4119-b838-8851b12a4026",
        "cursor": {
          "ref": "dd7c4f2e-ff73-42b2-b0c2-7b40d098817b",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "93a21f2b-8d9a-40e8-8b60-f0de6d5eecb4"
        },
        "item": {
          "id": "6cb83d25-e243-4119-b838-8851b12a4026",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ae82fe0b-99fd-4d3e-9057-b2b8aac04b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c724c80-ade8-449d-bfcc-332dece8e67c",
        "cursor": {
          "ref": "2fe949df-7f58-4650-91a2-f2b8b63c87d8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3a39758f-9a2f-4037-a8fb-115916c3d5e0"
        },
        "item": {
          "id": "8c724c80-ade8-449d-bfcc-332dece8e67c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c6b487f3-69b4-4797-ae0f-231e986cc7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea9a6e-a924-416a-b5d6-e80839615d4c",
        "cursor": {
          "ref": "71c6ab51-9a0b-4c50-8ff7-123ec53db3d5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8e9d16d8-5532-4bc1-a6e7-10b071ef2857"
        },
        "item": {
          "id": "7bea9a6e-a924-416a-b5d6-e80839615d4c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "53480fab-72a5-44a5-9e8f-06d619a0bf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ef4e8-c228-4a40-b329-81724e22be69",
        "cursor": {
          "ref": "b33158ec-bbc6-48ff-a818-aeadc79ff156",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "67647e98-284b-4fc0-a357-4d3ae2dec77a"
        },
        "item": {
          "id": "0f7ef4e8-c228-4a40-b329-81724e22be69",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0ee60354-94c5-46d3-a0f7-b175f904d7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a0cb7f-2af2-4fb9-8cd9-d103eb86bc9c",
        "cursor": {
          "ref": "897ce5ea-3dd6-4265-8610-ebc70c71a823",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d7a4be5b-0a49-41b5-9e66-3b669dad6e41"
        },
        "item": {
          "id": "79a0cb7f-2af2-4fb9-8cd9-d103eb86bc9c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d40e7f8-ca89-4e39-9a64-be2bc6212daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a5e0e8-e8c2-46c8-a640-ca0b3fb12c27",
        "cursor": {
          "ref": "bdc09f2d-9fe7-4b4a-a61b-0d0574f1df6e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "339f806e-a1a7-450a-b5ac-f7e2b5ec0431"
        },
        "item": {
          "id": "d6a5e0e8-e8c2-46c8-a640-ca0b3fb12c27",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "31600cc4-c8b5-413b-ba7c-a5f727ed03b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872bd026-77ed-478d-9baf-fae995f8c137",
        "cursor": {
          "ref": "82d31d15-6589-44d3-aa38-5de60f98bb9b",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "442d9d9c-6b00-4873-8ebb-d77fdb45bd15"
        },
        "item": {
          "id": "872bd026-77ed-478d-9baf-fae995f8c137",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6a80f9c2-9877-444a-ae25-f99bc239d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e968e14f-fb71-4252-beed-c66da76f66ad",
        "cursor": {
          "ref": "c74a7eea-a3be-455c-a4e0-8243fe2b4655",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88de058c-57b6-46e8-8983-59858d30cd02"
        },
        "item": {
          "id": "e968e14f-fb71-4252-beed-c66da76f66ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54ec0cf1-e834-4f63-a129-f4716bc98722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e80fc-ceb3-474d-95fe-973b2f12d1ca",
        "cursor": {
          "ref": "2777d056-8876-4fcb-b5d3-90baaf64b0e2",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b71b2984-60d5-4b83-a6be-7b19ebec16b1"
        },
        "item": {
          "id": "115e80fc-ceb3-474d-95fe-973b2f12d1ca",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84a011eb-ed70-41d3-84c1-acd2399f2b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093da9f0-36d0-4e6e-bb9c-17e346aad855",
        "cursor": {
          "ref": "f6fd27c7-3e9d-4a3b-8d95-3f533d4dc79c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "881be34f-da88-4c47-85de-80e1beb0163a"
        },
        "item": {
          "id": "093da9f0-36d0-4e6e-bb9c-17e346aad855",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5e8ec4cb-f626-4490-aacd-7a8ae96a0f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e50049-2279-4280-99b3-601f9c38af5a",
        "cursor": {
          "ref": "32b50422-e8b6-41b9-b60c-1c13ddf81f1c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4228c155-195e-4af4-bbc1-6c49f6cf5e5a"
        },
        "item": {
          "id": "34e50049-2279-4280-99b3-601f9c38af5a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54652b7d-bc59-4c7b-b6d1-92ee6c78acd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049735cb-df4d-4d09-bc1c-005e3bbc4856",
        "cursor": {
          "ref": "e88d1dfd-b155-433a-af39-3cdb8f46e3f3",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8ed7fca3-06b2-4e7f-b3e4-393b5a457a7b"
        },
        "item": {
          "id": "049735cb-df4d-4d09-bc1c-005e3bbc4856",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d94615f0-4f73-4636-912d-cb32107f316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e1a2a0-b9e0-4a3f-9bc9-e4e0dc641579",
        "cursor": {
          "ref": "79dd2ac3-4e54-4d55-9322-e534f4642dda",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "abad8639-e31f-4dd6-85b2-997da49b4372"
        },
        "item": {
          "id": "38e1a2a0-b9e0-4a3f-9bc9-e4e0dc641579",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a778cff5-511c-44af-87bd-7186c459c0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab99801-e216-4ee6-b051-999707245287",
        "cursor": {
          "ref": "e1218974-93a5-472f-94ec-daa94f7de6f3",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4b4880e-7318-45e6-adf7-689e7f56cd30"
        },
        "item": {
          "id": "9ab99801-e216-4ee6-b051-999707245287",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a3f0b02e-9793-4198-ba32-381b340fbba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a64320-b23b-4c54-b2fe-8cb96db4f73d",
        "cursor": {
          "ref": "45c513b2-7c3a-4cbf-9bdf-d72f4b971a84",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fa7b7f35-43fc-4534-b0bb-311860462db7"
        },
        "item": {
          "id": "90a64320-b23b-4c54-b2fe-8cb96db4f73d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e671356-c907-488b-931f-3ea03067209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c9786-4b55-43a8-b99b-981d9bac3a63",
        "cursor": {
          "ref": "19b135d5-56c4-422a-8c30-0057446b8528",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "84fbdebc-9a91-4f6d-9176-dd75bb0f494e"
        },
        "item": {
          "id": "301c9786-4b55-43a8-b99b-981d9bac3a63",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3a04c5c7-c855-4496-a360-fd3fe27e20b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2907fc-bf8d-4230-8c26-f1fae603d1b1",
        "cursor": {
          "ref": "edacbddf-476c-4fd6-a533-cf6acdeed799",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2ae20521-317e-42d2-972f-bb88d25df910"
        },
        "item": {
          "id": "0e2907fc-bf8d-4230-8c26-f1fae603d1b1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b5a7cfeb-e6ac-4682-a43f-76e59612fcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0886c6-2211-40a2-b3c0-ca9e8182f279",
        "cursor": {
          "ref": "b31edb1e-e6ce-4309-9bd6-0324e4c78a11",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "220d7d47-3e57-47a0-bbec-1e512819ff2c"
        },
        "item": {
          "id": "fe0886c6-2211-40a2-b3c0-ca9e8182f279",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8ce31902-5148-481c-8f36-a0b3fe351ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efae5563-5540-4470-a6f9-ddf73092acef",
        "cursor": {
          "ref": "ef0557bb-af61-4ff0-9824-8e9610382756",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ade3249-1870-423b-a4a9-c4878c0ed3be"
        },
        "item": {
          "id": "efae5563-5540-4470-a6f9-ddf73092acef",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e9d1f15b-8a38-4c0b-8b96-b0b886fd308e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f77ecf-1851-4ebf-9139-05826d76c296",
        "cursor": {
          "ref": "74e8287a-2b2e-4917-8985-22d48f1d2fdf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1a6948fc-5688-42b3-a629-01e69a00726a"
        },
        "item": {
          "id": "d4f77ecf-1851-4ebf-9139-05826d76c296",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d3befb56-ca2a-4aad-9a81-80c0c587f3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6182aa3-1e39-4ff8-987b-9200d9dbbeaf",
        "cursor": {
          "ref": "0617d45b-5b1a-481a-809c-95ed0918ef0b",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e74aecce-39df-465e-b6f3-f7c324a76863"
        },
        "item": {
          "id": "f6182aa3-1e39-4ff8-987b-9200d9dbbeaf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b015c853-8973-40a1-bef3-bbf71ef42997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3ff2e-f957-44a5-8117-3450762e59ef",
        "cursor": {
          "ref": "a989578b-46a0-4935-b702-86256ed5bf67",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d384c062-a1a1-4a3c-86aa-cee59b2eee2e"
        },
        "item": {
          "id": "9cb3ff2e-f957-44a5-8117-3450762e59ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9cb1bccf-3ad8-4662-818d-0d7e206dd19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49edda66-b849-41c4-a013-1bb50ff634d3",
        "cursor": {
          "ref": "8f51540d-5d53-47ba-9cec-7d6c555d2e1b",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f197d6d-47d9-494c-b519-0cfb29146049"
        },
        "item": {
          "id": "49edda66-b849-41c4-a013-1bb50ff634d3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "43fd4cde-da37-4b0f-bbd2-d20d71613b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0738153f-6336-48e7-86e4-706bd415d1e7",
        "cursor": {
          "ref": "95647696-86b6-4799-809a-0e4c4f27f6cd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "291a6fe6-02e9-4ce5-aa77-fd3f3959e6de"
        },
        "item": {
          "id": "0738153f-6336-48e7-86e4-706bd415d1e7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4f638f7a-58c3-4395-b88a-10a74aea3ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca8b2c6-5f54-4b91-adc2-30df879423ec",
        "cursor": {
          "ref": "a3f2ccd4-0daa-4524-a999-698e65373cde",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a7eaf0d-2dbc-4989-b823-499f1f7588c9"
        },
        "item": {
          "id": "aca8b2c6-5f54-4b91-adc2-30df879423ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6aa6d375-63be-43d8-ad29-d3aeb3b95bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dd1f70-06a1-4865-a3b2-36539e695fed",
        "cursor": {
          "ref": "e39a7af1-bc71-4561-a7e3-0a44a53a4c5f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c7d167b-9067-4717-9110-1300f6c45346"
        },
        "item": {
          "id": "e8dd1f70-06a1-4865-a3b2-36539e695fed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2e5592c3-0b2d-4822-92cf-3df78c83fdea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbfc8a4-3c4a-45fa-bc66-9d717e0cbdb8",
        "cursor": {
          "ref": "29938421-1f21-4478-9882-439b66ecb58f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87ae2442-4f88-440d-924f-a52d41091fa8"
        },
        "item": {
          "id": "7bbfc8a4-3c4a-45fa-bc66-9d717e0cbdb8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "88a16319-aa4a-4fd2-b999-1d09ded19944",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 560,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367cd63d-b9e5-4f34-a1e0-d2e82864555b",
        "cursor": {
          "ref": "8551743f-7f78-402b-b344-4c42cd1c737c",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "372df495-2d0b-469e-b745-0bdf8713a5b6"
        },
        "item": {
          "id": "367cd63d-b9e5-4f34-a1e0-d2e82864555b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "10b5ddcd-63cc-41fb-85ed-85237f9f230a",
          "status": "OK",
          "code": 200,
          "responseTime": 647,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "054c92bc-5dbf-4306-ae11-f62cbe3eadec",
        "cursor": {
          "ref": "c20876e9-3b7d-4aad-96ad-73672799ddf7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "83ed80f5-eabe-4b15-aab5-c950c816aaca"
        },
        "item": {
          "id": "054c92bc-5dbf-4306-ae11-f62cbe3eadec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f02044c9-2f1f-4d3d-8ca6-c9b6169aa775",
          "status": "OK",
          "code": 200,
          "responseTime": 1728,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b35dcd-536f-4e16-911f-1202acb8655f",
        "cursor": {
          "ref": "f7c78c6e-916d-4450-9696-c3f8abcbb40e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb7f140a-4caa-4ae7-b5ce-781e10d1dd97"
        },
        "item": {
          "id": "c0b35dcd-536f-4e16-911f-1202acb8655f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e897b7f4-4b43-48d7-929d-62ad3a1d1f9a",
          "status": "OK",
          "code": 200,
          "responseTime": 1485,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
        "cursor": {
          "ref": "6eb256f5-b998-42c9-aa93-874e66e2cae0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0a2a1810-6283-4305-9e5f-a9c5c3ca424d"
        },
        "item": {
          "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dbc20eca-0c6e-421f-9966-0dc68c1ce9bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
        "cursor": {
          "ref": "6eb256f5-b998-42c9-aa93-874e66e2cae0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0a2a1810-6283-4305-9e5f-a9c5c3ca424d"
        },
        "item": {
          "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dbc20eca-0c6e-421f-9966-0dc68c1ce9bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
        "cursor": {
          "ref": "6eb256f5-b998-42c9-aa93-874e66e2cae0",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0a2a1810-6283-4305-9e5f-a9c5c3ca424d"
        },
        "item": {
          "id": "795d3a82-3b09-4dca-9bfa-9787c22e39b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dbc20eca-0c6e-421f-9966-0dc68c1ce9bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d912021-9f7b-410d-9f97-66539284f6f3",
        "cursor": {
          "ref": "fd8146ad-7620-46c1-9e20-52bd2ea2b9e1",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e56ded4d-d31f-4173-ba7a-661b637ec21e"
        },
        "item": {
          "id": "1d912021-9f7b-410d-9f97-66539284f6f3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d68ee532-13be-4241-a8f5-27e1972025f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe40f0b-8798-4f58-9ed6-579c1cc8d77a",
        "cursor": {
          "ref": "a2eed3e2-e0b8-4c9b-bfe4-726fa5c7375d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81a8e931-0aaa-4750-906d-8eb7f49e2ad0"
        },
        "item": {
          "id": "efe40f0b-8798-4f58-9ed6-579c1cc8d77a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "769efbf4-bf95-4873-aa40-55777cb30379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe40f0b-8798-4f58-9ed6-579c1cc8d77a",
        "cursor": {
          "ref": "a2eed3e2-e0b8-4c9b-bfe4-726fa5c7375d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81a8e931-0aaa-4750-906d-8eb7f49e2ad0"
        },
        "item": {
          "id": "efe40f0b-8798-4f58-9ed6-579c1cc8d77a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "769efbf4-bf95-4873-aa40-55777cb30379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ab45c9-6d1b-43d0-95a9-bbf653a607f0",
        "cursor": {
          "ref": "7c75f5fa-b35d-45d1-b211-7b3ea02d0663",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a45acf3d-13ac-467c-b57e-a1cb610f4f9b"
        },
        "item": {
          "id": "67ab45c9-6d1b-43d0-95a9-bbf653a607f0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "929bc2bd-49e2-4633-9a81-757810dc3a35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 786,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79141a-d934-4f9c-86df-a4335157aefa",
        "cursor": {
          "ref": "c9b04f3f-916d-481b-a754-961a9d092d52",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f236f1f9-40ab-4dfd-9d1f-358f071016e8"
        },
        "item": {
          "id": "6c79141a-d934-4f9c-86df-a4335157aefa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73849634-c00c-498e-bf4d-cdfaa0de7e07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79141a-d934-4f9c-86df-a4335157aefa",
        "cursor": {
          "ref": "c9b04f3f-916d-481b-a754-961a9d092d52",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f236f1f9-40ab-4dfd-9d1f-358f071016e8"
        },
        "item": {
          "id": "6c79141a-d934-4f9c-86df-a4335157aefa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73849634-c00c-498e-bf4d-cdfaa0de7e07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f3147-a11a-4333-a917-4454a1997569",
        "cursor": {
          "ref": "63db3d6a-2618-4cf4-b09b-cd6c0b17a563",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "34a67f90-c9ef-4fd1-9d71-901514b4d898"
        },
        "item": {
          "id": "fa0f3147-a11a-4333-a917-4454a1997569",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "39ec1e34-1549-4a2c-a76d-eac34cc92579",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 763,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}