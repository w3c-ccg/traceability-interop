{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3cf39e1e-6441-4796-ae61-c84cdc9cc905",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7c22489d-51d9-493d-8b2f-6b6033afffd5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1d9238d-000d-49c4-afc5-d01fba258410",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd90bdf4-4f6f-47ef-8a43-bfdf765f8e14"
                }
              }
            ]
          },
          {
            "id": "e5cebf62-41a7-45b3-a2cc-ed4994bd8ef5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58d70415-0249-4f24-9cfd-ea6661576ce8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e35a8f0-7eac-438d-844c-5d8039af5f31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c1333d3c-35c0-4d12-9051-191d58f20dc8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1e1bbd69-d2fa-488a-bede-ef4267e3765e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73014d6d-ecf4-412f-b831-eac677d00f96",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c38100c-c88f-4594-a038-4c0aff7884d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3caa3e99-855c-4ff9-bda2-db681750a6b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38324e1f-530b-4115-9aea-0dc9deb4001a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f28a6b69-aba3-446c-9985-79dfa98fcb3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed238f56-fb8e-4191-a9b1-ac1f915b9fdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e78cbfad-4e46-48c7-93c7-42526e9d2a10"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f7abca9-81c6-4078-9c00-8a74714ebd2f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3804a30f-de43-498c-93f0-b59a8512a9af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48eb3e2c-42dc-4f1c-b8a2-e5dc042a905b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962d63e4-570c-411e-a4b1-a4dcd07761bb"
            }
          }
        ]
      },
      {
        "id": "04beaf23-bbd4-41f4-8fc0-b8414385f84b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1190d0d5-c510-4676-8256-a0cfcbc39826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87858754-4327-44f9-923f-1316847f8eac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16e22dc3-adf4-4e46-8a8c-e1dbff438c85",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8216b2a1-64e2-46b2-a31d-7e9b2465fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66b50664-493e-4942-880a-0dd1c8742e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa62ba4-88b1-4027-a2a1-b19b2a337737",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59147c1-ea81-4f9f-b3b8-eae3ee3cd38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f70c8999-b922-4acf-9d21-5245a4ac6ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cfa77a-3195-400f-83eb-a17872f0677f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e54f35-c5b8-405a-b07c-94fd8365668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f69e0a-0926-4f7f-9530-e0a02a8cd903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b855621c-a799-4139-ba04-62128fe7ef33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9c91130-be70-4b67-82d4-d702df7ad52a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd08eff-bd59-49be-8fb1-b4378d32ed75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ec02851-cc5e-4ec3-bb56-cb0e6a6662e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f236612-495d-43a3-87af-8199e64bc887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6e77c5-1bd4-465a-9c7e-1a87527dc2d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "34534e61-2bd2-45a7-82db-28d61809fb8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c29f645c-6e05-425d-b957-8c7d7dc80dd5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "619f32fc-63e3-4ab1-b1dd-1618ec9804f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "282b9155-83e0-4321-9ff6-f3b9caf3437c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "094e2616-3ee4-4dcb-82cd-c68ae1f7c129",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0a0aad72-6bd4-4bee-9062-fbdf833306cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "147aaea2-4c0e-441e-8e9b-ac54b03d0054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18144b6f-73e7-40c5-9ff7-0f751924ff62"
            }
          }
        ]
      },
      {
        "id": "19e3baee-b430-4f60-b78b-678831642818",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4284ca95-8540-4984-97fb-d11335228526",
            "name": "Negative Testing",
            "item": [
              {
                "id": "764f9cce-a343-46a8-89ad-d090a0913fd7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f4ce7fb8-ff87-4463-a99a-5eb3887a5718",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f5796-2c67-47eb-b4ba-2d9c094bc82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d556674f-2a64-441f-9384-be330c7639be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad59a80-a3f5-42fd-9659-d769d12ac9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd818d89-aae4-489b-8827-97be9e767a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5047617-145e-434d-9d5b-741dbe783908",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a19669e-15c1-46e0-bc97-a9a90a182104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd7d95a-41a7-4d8e-a46d-818381d7e6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756c3f84-7556-4b83-bc7b-be549769a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4892d70-082e-4e71-8b08-5eb2637ce86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9872f2-c985-4872-bfbd-5c65614a47d6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658b9dac-3130-4bbd-bec9-565b128b498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dff46a4-9257-479e-b5fb-0dfa4a14c9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333f1a09-6d7e-42a9-b5bb-01012dfa78a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f094e30-57c6-4ef2-9da9-e8fe34ae7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ad96b1-2b17-4a2b-9e9a-ddc704f2dc58",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b44760-2a48-451b-8c1d-eb2ef77a6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3366996d-5c5d-420b-a3bb-1ebe6ca9e61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ba6ce5-9ec0-4675-8e55-506a07a5d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed55db0a-ee0e-46b1-834c-c8e6cd3d22e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a42b29-449e-4086-b94f-99783b3b70b2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bbcc43-e554-4a32-bcd6-582e1573c70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372e714b-a78c-44d6-8924-5a7160bd7d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecd6922-7141-43fe-84d6-3dd4134d1717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587b3777-46a7-46f5-b91e-432b441aa188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be10cc-ed47-4716-b60c-c6e777d6c113",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af46595a-11ac-4d9f-a9e4-0a4d2485b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aec886f-bba6-4f0c-a0a4-75ad4597422f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f9ced-dce5-4584-814e-c48915a3085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3277af73-6518-411e-a1c2-f0061c2a38d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75639ab3-b1a6-4d83-93bf-8adf18d14f0e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5dfcc1-109d-45e5-a48c-9b1cb3effd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7677f7c-1ed4-4362-b531-8961534f8c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4c0ea6-5ea1-44fa-a422-381735c47026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa3a92ce-9fa0-4090-b98e-7f31dab81b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461909cc-eb71-4412-97b9-e6d8c80a7595",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ca7196-6279-4dfa-969d-0e24ed480929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0c4d5a-4316-45d9-95c4-90039bcdc8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa18752-285a-407d-b9d0-64d4f59e0a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7402b709-802f-4b64-8039-d29c0db84f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a53b16-60a2-417a-9e35-575211d1195a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fe839d-7d54-41d2-be0f-3d2c468fc2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0886b5e0-ddea-4035-a56e-9840ff3ea7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7a5b0b-0afd-4385-873f-b9baa34e1057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b0d3d09-c3d2-4bc5-87f0-8b869cd9bfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dba2754-77e6-4e65-a205-14ef78da3b49",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f917ab4e-f2b6-4e25-940a-47ea2026db43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e9d1d4-74e9-469f-aa45-562607622666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7848fa-bae6-48b8-9e4d-ff13433b352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b710bb-2064-4ff9-9ac4-d1352cadf253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcc8d59-c8d6-4618-8ada-b6e58a88c49b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d562f-c91f-4ccc-b625-8e3d3fc5f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c88f9af-516b-4d0e-b6c5-088007c1ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612461c1-e275-453e-abbe-d1ff9a26e8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07348e6d-0768-4b97-84cb-b4323c09574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f104ef77-18bb-4c35-b831-1118f3e9523a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3d5ca0-15cb-4f14-891d-6e7c2b70af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452a5bce-930b-4618-a5be-08663c766414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aa6708-3785-4ca4-8c77-d412686fa59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1e67740-cb59-4236-a055-6579708dedee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8effbd58-2763-4ba3-b70b-33f77e914a42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c6962-bc20-4dac-a49f-a82bdbc0e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6de2233-023b-4ad0-a926-2dc8399b8b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6716080b-90a6-438a-8543-93dba2a611ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf96bc4-3f1a-40ec-a3a2-40bf1a9cdeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a423b127-acc5-421e-bffe-dfee105d8368",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64d949a-a886-4290-9ca6-8fe852bac2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7c1ad1-ca83-4717-921d-bc427133e9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020dbf84-ab95-436f-9902-4ee9af5c6dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4182e7da-f87c-49ef-8b73-2c13e0f464db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc81a584-2993-4d86-a5e6-d2387f9ec336",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec65097c-b5de-4993-9cdb-fe5bda042800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a47291b-d5a7-4f05-b233-340eebbf292e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6759dc-c0d3-4557-9a98-b5a2951e91af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ab95dd3-ef06-4b8d-9790-2d6b0fb32620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff809d0-73d5-437a-b0e1-15baf374207a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0448ec-d845-411b-ae50-170b025553a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de01aed0-630b-4934-b0c7-bbb20f673fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201158a-241a-4aa7-a7ba-0266b30ff6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f69a8b-81e5-4416-a67a-b5a603ad2255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18eeb63-3bf5-4077-a2dd-57a6676afa8f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52511006-8c55-4d6f-a49f-64fcf11e861c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751699af-7dbc-443c-add7-7ec9244c8556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220250de-acc4-45d8-b309-736b13bce841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4931995e-6350-435f-9f06-8fe96b3572b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f77993-810a-4169-b837-066f21824e53",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcad178c-37b0-4715-8cd1-3d5c008ec501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb2680f-6a14-4c43-a276-3f017414d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9687e75d-1bbb-49e8-a4b5-f2e6ffd3aa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc919569-5e23-4a9d-a220-43787dac4d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74119d5a-81bd-4013-ac74-2b2b0acb0787",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565f78cd-bd28-4048-b839-6b54076f1e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61084cc4-166a-453b-af45-638541a5e3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb91afe0-70de-4239-8f33-75c95171b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d5ef42-e07f-49b4-afe3-5329003ebfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b52ec6-45fa-4287-b533-550a0309ce25",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382e5766-a668-4d1d-87a8-c1102c1eb175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd5a92-94da-497f-8edd-1a5b18c76028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beaf1a1-d638-4ba9-8ba6-07f5dd406f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff050e81-4e48-4888-90ec-e5337de44c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf10af6-8afc-41ef-9e40-5fef7fac2067",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e0dc2e-6ab7-491b-9b6a-5f192325a6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8c8a8d-add1-44c7-9d29-793887f8ff68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64a48c0-ca40-4eaf-9109-593bbfb39830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9491c86d-1867-4428-bebc-383475caf075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694d70b0-e2af-4c62-8dc3-fcc4fdb6c8f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d008d0fa-1527-4af6-9fd1-d30e86411479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0b5d66-b332-48fd-804c-98340d024591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d6b209-49be-4723-9eff-16c5b3204673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f74827f-e90d-4269-87b9-db3d12cfe27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acad24ce-081d-4739-b254-ef294a17ed6c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec0a1bb-a3f5-4596-9f92-5f8f0d39c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6daa488-cb1a-44a3-9afd-ea495613001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d310284-4595-4950-b36e-78b63481d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65164ccf-ed77-4cda-9f05-2665bcf8e83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89300fed-3d99-4cca-8cbb-2775a475367f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00263ca-b0ed-4bdb-a365-62ff61038710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f83ed57-fc3f-4b60-9911-437e75b6fbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a5310d-317e-4770-937e-f4a40b7b3b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2c71df-0ce5-420a-884a-aa51c2d8e6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67898c8f-8c5e-4754-a905-240859e77b97",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc29baf2-c949-4fdd-a173-8bbfd8d64094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41e6ee5-4795-4935-8ee1-b755f20a10b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574065c2-0d94-4459-b814-598537e51329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a2fec1-eefa-43b3-a4f4-1b49b0000103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee500bb2-3b81-4b28-aad8-f85388fcc5cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5084c4-665a-47a1-b040-325ac55545cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9cc8a2-d336-40ca-a104-7306bc4217e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25960b96-68dc-4b41-9716-778d2faa1d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a53bf8-821b-4e74-8a6e-cb2279786be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbefef2-e8d9-4b07-8d43-04b13ce077c3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb33b2a-ba5c-492e-b142-3d476c6ef1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032c7611-4246-4d8a-bd20-8aa50ded1398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7471a637-8749-4e62-bb74-5e65c6f81c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f32fee5-0bcd-4444-999c-29a9bd017bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec47066-c4ba-444c-a12b-0afe3183409f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4df1a6-c8dc-4358-a762-da7252bf0be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b34fa9e-aae5-471e-a5e8-ee305e0bc946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abca090-11fd-47bd-bef8-bfcc7bc09a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1edc6c05-19d9-4142-8f70-ec7a724becab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7681966-55fc-4cea-aee4-73582034067b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4ad8a6-242e-4e5b-8b2e-d56fa4f413ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26886dec-288b-4a2f-bbb0-4e861a3f623d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cca73f3-2584-4afc-9f04-d70f3dd221ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67c10ca-1cd8-4676-81fe-a948f37c4c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385728f8-ed0f-4dc7-93b4-938ae2b32e75",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3188c93-d27f-4210-9d37-32f656039b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bf637b-51a8-407a-908a-5a0f870d8022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651bf1a1-8760-49dd-b2b4-0a1d943878e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbad5cd-08f8-400d-94ba-1e5456470be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dfa1cf-f783-449f-af62-551642826fcd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c9a4cc-12a3-4c54-9220-54de884a0627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9638ef-4cf3-41e6-aa16-51c8970642bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf265a4-5d66-4706-a1e5-f68d41150297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "823d8b8b-f530-410d-905a-c7ae1bbac4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf435cb-e144-49d6-9b2a-02f4fdd6733c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd154aa-9b18-424a-937d-50a6282074a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddcbef7-18e5-40c7-b627-fe80bc0eddf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a757b6ce-b23e-4727-aac7-d57c7a7fd55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2285871-2fe1-4039-a8fa-b73af541045f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f05647d-8e73-4ea7-94a8-0838b300cb70",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d20854-3866-4a36-a8ef-9714d287b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8bff49-3ec6-47bc-945f-6e40d0b056b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503588e2-1c49-49c2-b101-11332d69b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0195ac-4336-44f3-a4dc-3d6c697503b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc0030-be35-4e9f-b4f2-f0a487c4f78d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d922dc62-5e75-4508-8faa-1ce974a82b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7603d7-d9fa-48bb-8cbc-61e4fd80202a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203a986b-e4dd-462c-bb39-254fa5ba334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2c7dc5-c2c8-47c1-85be-8010a4e2c818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf6c094-e7f7-4a5f-a3e0-b5075af3efb8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0228b722-812a-467a-a930-21b27f04919e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53054d98-f221-4945-80e6-3be65787cd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c66621-627c-42b9-a322-be4181fd8fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8613db84-f8b8-4256-a183-95fe952d5872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f18004-9979-4ad2-b523-ef3ed7ec272c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62daad93-c094-445b-855d-88f9b1df7ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edd9f0b8-1c32-473b-93c6-492dab7fb414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7256939-0c23-4cff-9f51-791fa5fbf5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df49be7f-7093-4915-a3c1-0b4512658b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092059bf-38bb-4cce-9e9f-fa2a0c607c5b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ac5016-2650-44a5-8ecf-692161e9df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca2b789-047c-488f-adeb-1c67bc28aa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d9e8ef-2aca-44d2-930f-cc81c1c2e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d62bdac-b4eb-40b9-9a44-72bf1be90fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3bf706-58a7-4b70-a0c4-f1ed4fa67a75",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa8a193-932d-4385-a9ca-733de9f6d012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abedec2-0c0f-443c-bf24-882ec3eecc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f334557-3a24-468f-b089-0e1bf3d5cfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4748fef3-724f-4013-8343-1644430a6482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60e0224-f39c-4435-bd96-119c405b54b4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4ed2e7-64b3-4d0d-97b3-785b34567186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2704e442-369c-4888-93cb-3f78b65e9e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f78c617-dd87-4a2d-a85e-3f81527e0c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5c4a6a-7e7b-4b51-957b-dfc4700533e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f964b36-9d1b-4788-af59-2be186a8b5db",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9466ee81-35fe-47d5-80c8-97abf0a1f578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c6b103-548d-4c0e-8546-0970714694b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7aaa461-deac-435e-8ffb-b4be7eb6a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a868c66-b5b2-4226-ac13-afa9445826ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba1d076-bd21-4b88-b134-530870e0127f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea3f115-33ec-487b-9b7c-f5c90c2129bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ebb76d-e3b3-4b84-8ab9-8c6cacb8b0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cd9380-9a0b-449b-8406-18de91ad6c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43bffee3-1f8e-4b85-be7a-59954d909b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4cba3f-3017-4b58-bace-81f516eb7575",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6dd717-0ee2-47f3-8ada-21288fae322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c196757d-363e-41c4-9c40-9c61a2f408cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d5c1a-5e52-4591-81ed-6df63b559f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "614a9756-d21c-4c53-83a2-279af1624149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bed1075-7c68-496f-8d91-b0892c4ee39b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce836cf-0b41-46a5-9102-d7f8a933a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff098d58-e827-4089-bfa3-64515e8f3ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55de81ce-f760-4a74-9c66-d7ec915fea94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc6ed75-378f-4668-942c-14064d795444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5940265-f15c-42bc-a2f9-e7e528889b52",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760726c3-5838-425a-b861-b5213cdb472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a43ebcc-db4d-48aa-9f68-24a3506f4b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49457387-073d-4b02-837c-cceb9c4c5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da6e583-cea3-47f1-ba8d-fccf305a6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80026311-4b58-407f-9ea2-0979538ad90c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778da36e-cb9e-4b6a-905b-5e8dbb164697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672a5a57-7373-4d06-85b7-465a24540d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7119c2-6c12-4071-b385-9af4620ea7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d927bd-bd79-4870-88bd-9ba54f87f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925a9d6d-bf59-4f18-beef-9764612d717f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd20ee27-92f3-4a6f-a80b-ca8c243066fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb4e4e3-3edf-4edd-a5b5-5c3cb71fac3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df7a0bd-664b-48ca-9c1d-557444fd307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "755d0f2f-e35a-4a94-afaf-43ed29db1941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac31896-3086-4ff2-96d5-1365e766879f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f03416d-98e3-40aa-99cb-44b4f6069b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40069550-925d-4e3a-aed8-a2a5b5d18e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db308f7-c2e4-4c40-8cb5-0ecfa19676b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9035e5-0215-4718-b745-2fecdff19cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e3d025-8069-479a-a29a-eb826fd1205f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51bfdf-486c-458e-a09b-e32ddc0f960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b704f1-81f9-4635-8552-451787e40c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e14ed-fd51-4b9e-9160-09eccb127781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91bf2919-dc8a-4a36-828b-92043ac1e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fdb5c4-e329-43c2-b581-381e75e4bd96",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6474726-44f5-4a03-afbc-4bfeb0a27247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e08e57-e1db-46fc-8075-60c4cf5f9b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62b80fb-3084-4f98-95be-e12478960a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6054e61e-f752-4745-a5bc-6d142f93c6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38b5210-3cea-4566-be72-ef979e9ba8a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721869f0-584e-4ed5-a84e-4d8e52c5ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe4e421-fa67-400b-ad92-936d84792467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f3bb56-6814-41fd-8b7f-c99c8b5949a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9758d1c7-6eae-4b28-b57e-8975d8888ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7392397c-eb44-4540-aa26-0b381d34d052",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f885f5c-7eaa-40da-89bb-52599d1da5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d63569-8db2-4f39-843f-815eeeefa79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e0df87-f79c-4739-8db4-43519e9a6f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c1487c-065c-4f58-8e60-1775435d4f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ab5e39-f8e6-4741-a1e2-dc6aa29b2176",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32202c-344b-4bb2-be24-def62f3563a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbb7e0e-587e-488d-af28-5f9fb13c678f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d969c51-8b0c-456c-815a-a27dc8814b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c3069-8a63-4d5d-a6d1-c9d276e04dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c67e719-5723-46e0-9f1a-ddfe35bd71d2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e46732-0557-4ce6-82d5-86298dfe06fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fadbe0-2154-4f20-b653-aed2c818c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9c8b43-5e8f-4216-a349-0a26e113524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cddb78f-2161-4939-819f-376a4ccb8960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2671d68d-d8f9-4cf0-a1af-add7f4292542",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019e74c0-9efa-4556-afee-ba9dd42f502b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c2b4e-74a3-4ea5-a85b-810ab312cd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fb45d7-7c61-4602-8e5b-9b5eb3a2a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a67ee10-1fce-4683-9c08-09ffd5cf9fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7274e90-ef03-481e-aaa6-92dad3cbb5bb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157ebd23-03e7-4695-ad2b-97b101a280c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a451096-77e1-49c8-b6be-08c77fcb50c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ca6932-95d6-4da3-83f7-3826d52bb554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "416da6d0-cc66-4d3b-991f-6c6d7b53457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d222bf63-3e4f-48ba-9cff-1fe841088b6e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61f7abe-a754-440c-9cc9-35f58ac59ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db63cd27-5027-437c-aa87-21829811f8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5898cf5a-4afa-4b5f-b268-5bfdb6ce2c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3d238c2d-e005-417e-a25c-620b9f737946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ba12c9-7858-4972-80fa-7cb80cbb2d47",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c724996-2b64-4a62-82f8-eca933532fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70658f1-5034-47d6-a8a4-9f3d20197086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d097036b-f95a-4a12-9026-b65b9621b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "542e5724-b24f-4b82-8a12-f542dd261354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18498bc6-43e6-4eb6-933d-62689000e2e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b379e7-ab37-45f0-985f-b6f340de48eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39561688-0586-4e9b-b56d-0476be766179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d19e76-207c-4790-96ee-bff4fb93b707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb293efd-11d4-4e11-af0b-76d5e29116ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93edae20-7aea-4bdd-a7fe-33a784320824",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9578e-3f11-4b6f-9759-8498a88c7553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd48140-480f-42d1-9be6-5eef6d060029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492fb274-b03f-4edb-b530-d57ea44a0299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1389c0-23d7-4c57-8c87-bcfbf478f26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2bb8c6-70dc-4751-bbec-002647331dc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752908f3-bf80-4ba0-81e7-6f5a25d124dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80be7477-df4a-45be-a994-3a787d4a910d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cc2d33-7e53-4f28-a80b-53c20a3463a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28508bb0-1014-47e3-9b80-610bc90e4c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2c6573-4313-4b10-bc11-a99f5d65fc60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333974f6-36a7-4879-b5ef-8aefa744b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac279f7-02a1-4231-b74a-89c35dd84bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210db75a-c68e-4df3-ab33-2f43a90d334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c0211f-1684-47c7-a6aa-fda0f93db48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966f25e6-7a4f-412c-8a68-ac0bfa927a6e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ecebc7-22ff-474a-a4b5-acfae5d58e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b307207-43cc-487b-a368-3d3f0379c1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7f5552-f06b-4d0f-b32f-8e6ba21b5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b310925-8c82-4e0e-8154-2d5c64e3d524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a7651b-f56f-49ca-987b-18cf32649d35",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641649cd-06cc-4e3e-9ee5-496c72216ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21754be-75bc-467d-a2fa-dd8e60eccc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93fd945-9cfa-4b95-ad46-7bd58f3e7c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1ba2fb-c2b6-4e09-8f94-3e18cfe4721c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1591b8-575f-44db-8dc5-3153889bfcf6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80280ce6-96ba-4f68-ba5a-74f1e6eca80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e4ab3f-53f7-4fc7-91a9-ee0077040906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c5352-633a-433f-a907-3cd2b7359daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91325add-c02a-4bca-9b5e-b1035dbcbaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3405c88-f88c-4aee-a245-db2593a097e6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f56e7c-8035-4c41-8e46-e27a59b029d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a45129-1d18-4f85-be11-d88a2215f2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ff36bb-b3c6-48d0-8e91-da32d7ce5162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8203d7f-60f1-4ba9-a273-7e9ecdbaf461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd1cde-0866-4d1d-8398-49a6296b2e7e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a2b67-fef3-444c-bc96-783969d8165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652d01a3-f3ca-47d9-b016-9d12645b6668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1a1b07-7e5e-4baf-bcc1-38fcc12aa6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de18515-a802-4b38-a1a1-273b423a2856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54daf3cd-3950-46a3-8f8d-b8098e58ff8e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b3534e-37ad-4b88-91e0-c27046c70e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287d67fc-7d0b-4295-87a5-bc4dcadc4412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2f2c07-23e0-41be-96d6-c2cf9c3ed846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2852536-e2f1-422e-b1bc-040364e305f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585485ea-7fd5-427d-82ec-be81eeb099eb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8b129c-5715-4ee3-a245-0355b9c8d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24f517c-029c-42a3-82f3-0d96b7741051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be9f42f-88f9-4705-91b5-9b8352aa515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18ac3a0-388a-4094-ac8c-81d78e5ee2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c2eb28-bbc1-49a2-a3b5-ed178112a336",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5666a4cc-4e80-4878-b4df-61f32a808831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220be999-a867-44e7-9d62-89d6c5594451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9119e1-7513-4f18-954e-e1ae056d5471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b027de91-8746-43d8-ba2d-88792ec08262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9284c594-48e3-4b9c-a14d-dfc799324d21",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7748bef2-7932-4c34-a560-1c8b82085dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31eda5c-894c-4a90-8a60-bf30853b2401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a330ffaa-2eed-4d95-a36a-f6b7b97b6f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ae0400-73ae-4b44-92b1-6934dddee85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9a181-2eca-48a6-a5b5-0bfce82993a7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625d08c9-5e89-46ea-9d1f-ee8f1268372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5eb57d3-96a6-41fc-b81a-fc49d6b4b9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62757383-44cd-4135-978b-70a9ca0b8ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc107a48-ab2f-4549-a818-ae67f49836cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1346045-675c-47c1-aa6d-234f0979889e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bde6b6-a948-4daf-ae7c-7bac40f7aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fc3d63-e1d7-4d13-b6fb-109340f68665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b458e-fbf0-4ced-a22c-9cd4f3071dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "967a1948-684b-4dc1-afe9-fac8f7a16f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7b82a9-c34d-443a-b864-e9d4c2295745",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec7cbc7-c948-4311-bda0-b1820a0116a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34f9d9a-fec7-407b-b8e6-61d20e327ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34b6b45-33fe-4398-b03c-4616f1cda176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45ae39fb-942b-43c8-aa21-3183b3f834e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3767c01c-d0f3-4cf6-badb-832a9bd67da8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf8800-40a6-429f-95e9-e25b9ad1b2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc77021f-2b4e-44d4-8f73-a1b434cc16a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38cde56-9d1e-4550-9ff5-b58e90437975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63e78f30-4113-4ecc-9916-5ca15fd5d2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fdebfd-8c71-4523-aa23-9532b318d657",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f70e91-f285-4aaf-950a-bcb361e336fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c95dc4-dffe-45b3-936d-f99af9e3615d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aa7ad0-7391-4e47-83b0-e7eb289cafa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c377b065-05a9-4878-b552-bdd13ae92aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f47dfa6-7cd1-4924-95b0-cf442b0fdfc4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c752df-16ac-4d73-87c3-23791063b34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c466faad-817b-487a-a723-b83161d21247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138adbe1-48ef-4a93-aa98-ea7941396c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de8b863-b55b-4883-a850-a65a7b498b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892177cf-727b-4534-aaee-e89258a2ecf7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7212c1-5995-43e2-837c-3d4ad71b97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c8f53b-11e0-4b6d-8212-9d9224e8c730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e29b32-f280-48be-8537-c45f4f0d71b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c075f707-f042-4686-83cd-dd723ecf6542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3394e603-e9ef-4b9f-afd4-dc74eddea191",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b086df-c249-4987-a918-9a4960d14df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee40fdf4-844f-45f7-b108-0a9b8f0a1bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b108d509-4a52-42ed-b2cc-4aa4c2a84d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dcab8b-3dad-4aae-b509-bd3c41785494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa91ccf1-cbdf-4f11-9438-7fd35b7b80b3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c9db9b-842f-4a00-b173-aa6b3291e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c24306a-22aa-4acb-a7f6-2021a4e794f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74147580-37c3-4b5c-9145-8ab5dee58a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a57b140-a634-4ee0-908f-1d514149d23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee42acc1-0c87-409c-8ad7-ec1116acd52e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864d540d-87c4-407d-a067-85aa5d784485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa139bd-f329-487f-bf60-c6515964cb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75f00eb-e4c0-4519-8f2e-da809980ae12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34d5d9b3-eec1-4db2-b90b-f5ff2d047a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2463302-b8b1-490b-9db2-eea515f54243",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697c8c80-d32c-431e-a560-ae7aeb3f16fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2790ec1e-9c2d-4061-91cc-1b95c44041ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec5083c-fb18-4eef-a0a0-c6d378fc424d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0089f386-4d69-4e8d-a967-22d4c733fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb074463-3d4d-4c63-a42e-b66781386a4a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dc236c-2880-4bd5-98fd-a501042aff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c81246f-5805-4521-b7ea-4d800273326a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e0a597-e31e-4394-a7c3-735253c96479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "221b43b7-8caf-4ae0-a6f0-35c5c5517409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06654352-5791-4b9c-b5c6-466a5f8bfa2b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a0b164-50a3-40db-9267-14f5bb7b9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689847c1-710a-4e42-a85b-9d63d1d0dec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c1291-4e0b-4ab4-add3-db69086bba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "941be85d-f597-43cf-a2ca-149090aef64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f444d3a2-3602-4cfd-bb7d-a17147903b00",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fc66e6-5c60-4cd3-b3f9-b377218be8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85eb33a3-473c-40c4-9dcb-d30b7c3688c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643e4519-b21f-446d-8b0f-c4378b79a9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6932b668-814f-4628-a99b-e008980bb987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823f5971-558c-4c65-b2a8-61ed17ea9e16",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35250111-321f-48cc-bd5e-bbd232e725d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb728a0-e052-4f30-bf33-4713b22a3346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0c27f-5702-4c41-b01f-b8b0fb62bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "039eb324-3ba2-41ab-9466-ff2f3f2a253f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54235140-8c49-43c4-a434-75c23658a41f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77073208-3787-4ea5-829a-deba1367ed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb2be6f-6391-4cfd-b381-a1a792aef069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad517f-2886-4e2f-8cf1-e44a8656c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1e0a96-b130-4846-8994-d7afd7f5cf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1087a09f-5f45-48dc-98ec-e2cdf14cc027",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd471a72-9caf-4aff-ab5a-7aff449f1e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ee0dc7-4ad9-4f0e-899f-3423f30d2ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c66ece-5b15-43b7-880d-a990d6710547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "364a2085-1112-4b89-9e21-cd8919c044ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b10a17c-ac6b-48ef-b699-687ef6cd519f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec917ce-7f0b-4b13-8ecc-eee3c47bfcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca838ca1-3ea8-4b16-adfc-964cdba99282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21df16db-629e-44d5-9c08-20829fdf1419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad543a0-9bf4-4e01-97ab-3f88aadc41d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63bab81-e470-4e11-b014-35724618c947",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63466c9d-54a6-4ce8-8809-3e8553701a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf749eb-512a-4460-b6f9-bd26997812ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb50179-e9ea-4f51-a103-e3c73d786d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f79054-3a52-4b9a-87f8-dc4b74c50882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a20a80-a326-4d0b-891c-b5e405d9ee05",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccb0542-139a-4b3a-b057-9136af1d598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64733e71-2e89-4fb1-977d-6f580047bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef5662f-bb79-4b61-8f38-be9af3728ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "534ca992-5178-40f9-aaec-9a0880f1f7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bfc205-a550-4dfe-b559-36d5e0e1ba95",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a4a89-8a86-4c38-a29e-f4b4d5e09197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fe585c-2411-4c24-8a6e-8f6b4b21304f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524d922d-5c20-406a-8bb5-ff0416a7507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d4b1db-ccd9-44cc-aef2-4985dbfcd62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6ffd8-4799-462f-b8a0-09a1d330ffd7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113ba5d4-22a3-4979-ba9d-443177b45d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "84e21c5a-2915-41c6-9725-445d395c9102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc3cd79-cb5b-4e0e-95d9-12365f5b8606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5760534c-6167-4d70-90a3-9a6b404f3daa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a44fe20f-25ee-4909-b958-17f5cb3735c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "834a3931-6ea1-436c-b538-639640aa17b3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbf6a53-e720-43ba-bcac-9806d78b155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf74aabf-3ee8-4799-9bf4-a5a02992144f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41caa709-fc21-4e6b-9f37-a1e92217a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba37c7a2-eb3d-4ebb-bec8-d15aa7fac39b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75314589-34c7-4c99-a621-e214abae13c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7d41d70-2a76-4456-ab8a-579d97fff8f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d30a9090-1204-4065-9136-16bbb5919e4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d4b56e8-03f6-4a87-aa95-0dd739d82cf8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c0014e3-6e73-439a-a12a-5838b7de50cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95577916-43ee-40f1-8c41-a7dd6f6fba66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f24e922b-1479-4c60-97ad-9737b05cf65a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a75d2b9d-e166-48fa-9fe4-2e1732eb0832"
                }
              }
            ]
          },
          {
            "id": "7fdd8ca9-9f5a-4232-9ba8-b38ef300630b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6403b42d-e3b0-422e-9951-314fce99e988",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "560db7c5-002f-40b7-afbe-39a516889f27",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c3edd-7601-4f9a-b111-99098280d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "28e04ea3-28fd-4c38-980e-ae264fe9f397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf56cd48-c33c-4c6a-a5e1-d5191870ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461dfbc2-8ad4-4905-9b61-b65b7b2419d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb25d117-15db-49e0-bc54-32d99b2c235c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b01dcd-1708-4116-9fc6-d17efee54ef3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c26e28d-619f-40f5-ac5b-ea95fbfc2b45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b3b9401-13cd-4805-84a2-bd02ac4b2dfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a20f4259-ee94-443d-bc4f-f03c1ca94d69"
                    }
                  }
                ]
              },
              {
                "id": "8941e28d-8a53-4348-823c-175199e8555d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aee9a7e-77e5-4198-94c5-75d22068b4f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ddd34fa-0a53-4dfe-aa1b-f91b9e20da70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf6d0534-fb03-498c-9792-885e44e2f330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce70bf93-0101-4d5e-8ddf-de62933d4a0e"
                    }
                  }
                ]
              },
              {
                "id": "34db891a-024f-476c-b9fd-7ba93f3df322",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d156e5-57c4-4eb1-ba90-b4a6597c4a37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f5e403f-a380-45da-9ed1-03efd89875be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bef4c685-2f11-4edb-b2d5-9c5d4df466d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2341e970-6011-4283-a55a-1350943d81b4"
                    }
                  }
                ]
              },
              {
                "id": "047352c9-b12d-4792-aa87-6972aab425f2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef9ddf3-75e7-4d30-86cd-cd1d5fa16f9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76d96d3d-76b9-4528-99af-bee0b1830065"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6003f13-0047-415c-95d9-af7d1a41af9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2d37ea1d-7939-4ea9-93bc-57f8b1a7c3b6"
                    }
                  }
                ]
              },
              {
                "id": "10c41381-6175-4918-af91-8022df27ddf6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f385a0-ae33-44e7-8061-dfc0ffedbe87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f10dfbab-29aa-4e79-853a-f4b316adda65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f8f69c1-e0c8-4a58-b529-ad1d19a00f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f5b944d5-48dd-467b-8881-bd36731ca04c"
                    }
                  }
                ]
              },
              {
                "id": "a42ffa18-9c73-4715-9694-1ddd7866eae0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7321517a-6f6e-4ddb-9498-fae8f7eba06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf4498de-7a32-4c00-be71-7487232725a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe956e9-d4ae-481f-b7d6-f71cadd2145e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5355af11-925b-46f5-9ed3-bf1e613a062d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ece400ea-7b72-4205-b418-fd01e4134e4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffa833bb-23f4-4cc4-8f11-5ad7f9712fb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73dd5d2e-d66c-41bd-ad83-917e00a5e26e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b01e1b2a-c588-441a-ad56-a2bc8551ef64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4a95950-c817-4937-9286-73646c602c78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0321200c-ada8-4dca-8e7b-acfb5462bdf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13208ca8-e065-45fa-afd6-879532e1e0da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35c72726-a7d9-49e3-aca2-97cd082e60fb"
            }
          }
        ]
      },
      {
        "id": "57549f5f-3817-4a7c-8798-9167c464b9f0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5fb9033a-5d06-456d-8426-d0a3c7007c5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7c4cbc9-da9f-4ed5-9286-01b67de86769",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9576c0d3-d9a7-45d7-b02c-79ce411e8799",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942518c1-c5f6-47e3-9cc9-cc54c1536703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78751290-fbe7-4be2-9f98-7c56a1c4d2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f424ef-d468-4f7a-96c2-a6d41d3d86bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7df046-8739-4082-a77f-4a7e2e2b41ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc80022-b9a3-40b7-aba7-ca2cf7f88b36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d36d2e6-4bb5-49b7-9627-b65cb041b785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdbbc67-1c61-4545-991b-fcc36b287459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c594ee-f25c-4bd0-963b-c87719cc9eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b89472-4e73-41d0-bcce-3871404851bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6efcf0-3f29-4398-8d70-23e9ad80a3b3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aad194-00e3-4a82-9674-9a1fbb30e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23feee23-e760-4f3a-a425-0a406f6b4489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b8e3e-3224-48a8-b638-c60aa82f21a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1eb1ecf-bac7-4f63-a48e-8a5fd99ff069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8ae4a0-4630-48d1-8f43-b245971632ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675fdeb5-c63a-4549-aa8b-6701ed363d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648ddd04-3ec4-423e-ae3d-8548e61a9504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30174b94-bb6d-428f-b41d-302436eaeee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "767dd441-468b-4d66-8dbe-2fe05f642cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b653db-9672-48d4-941a-23806324d67d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787f1f63-64a7-41a7-a7b4-c7b254792905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c671df40-667a-40f5-a690-332fd372e993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509f96ea-c25a-4e4a-81d0-ff11d93ea09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "327159ab-a1ea-46c5-83bb-dbf6f3aade74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6aeef5-ea0c-4620-aa42-36a4bd197590",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c80121-d593-4f38-86d1-975152052ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f346b9c0-3121-4391-9b00-6f7f8b77a510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c36a9be-2726-414e-9d86-799e43eeac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfac3882-0cd9-49cf-a417-ea43c1bfe99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cc3edb-1f33-4dc5-bdc8-2ead3794806b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47ad986-7d8c-440d-aef2-7729258d8485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c78b2b-a109-4ccf-85cf-57781fed541c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b117fa-049c-4567-8786-58ab47d3c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d01cc6f-6c19-4bb3-9636-ec8af36bc0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3826b86-7fce-4ff7-9e61-4e1f4e6d9ff9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7fb337-5e26-423f-831d-0da72b328e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0351010-4956-479e-b2a8-33a156e92323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbe3daf-12ef-4688-a2ac-e92fe6dd8a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa09b49-ccb0-4f37-8054-8c6abb280b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d909f5d-a5ea-4e52-a04b-008db95b7a0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea6ff1f-8602-4bef-b8e7-79fd7f23e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c53d27-7974-4b8d-8583-799f14572a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22371d0-7f30-4ccd-aaa2-5e315a0d409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e9f172-0428-4cb4-bebe-dcad082d9f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9190078b-a35f-464c-98df-7eca29627bad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec6fac1-322f-4968-aac4-acd8c982e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6675f1c3-49e6-4693-8af9-f92eb4e3f6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b0644c-9c70-4e4d-98d3-77510e94b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb5a796-f456-4404-aafc-9ab2774ef042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891c75f2-d4ae-405c-89e3-781eb04a9555",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52946b1f-94c2-4d5b-884d-2eb4413ed9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8529ff9-dbc8-4ec2-98e0-8e050c6cde6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02208b16-9a74-45cd-aada-45f1f5baa983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "036521e7-a28b-42ae-b56f-3f6d51cff79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2319796-8bc2-4888-807a-9d3a0b4327ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fd5ba4-21cc-476f-9178-a9830898845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2114c5-5c94-4c7c-8aee-835a25c2803d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8621efa1-606a-4bce-87ae-0150290753ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4af6fc53-f1b1-4f13-b5a2-6d0504a41a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bece4b6-55d7-42b5-807a-40411f9bce24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7e8302-d87b-42f8-85de-d181d0c10535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490e0549-a242-491c-820a-f6c354d94b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3416c15-28f0-44d6-99ab-4b45d3eaa8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a0156e-ab53-41ea-a993-fb115b01040f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b795ee4b-b8ee-4db8-a650-88e4804c3782",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e113ba-c512-44ac-b5c6-af23136d1455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28588aed-6025-4911-92dc-a71ea747893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e83941f-c328-4799-9e74-7fefcbcf6ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e75af85-b6f5-43fd-a57b-7b2c2d1e1378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb2f4ff-b54b-4ae0-90fe-34b1ac7022ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e21ef8-41f7-42c1-a427-db8b9732a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aca2149-60cf-446d-8829-f72ef745697e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4740ae-4c15-4fb7-990e-e84a350c0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb530555-bde6-4fac-8700-082f94cc9068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c40d7-6a39-4539-b9a2-488e2952cd21",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34af629-1300-4d60-b7e4-f88909c925ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d434ad1-ebc9-46c7-b533-937769790d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d51a1-c7e7-4fa4-9574-a253418f8071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c45dde-9c16-4007-8831-0eb8653eb7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f25fca-4049-4d73-8d32-b73b23d02cef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3608a7ed-a65d-413c-acc0-96953f4c9d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfc08f5-a1f7-48f3-875f-cfa943cecc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61900c2e-f666-4dc7-a3f1-26b1f930a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "543994c1-2e84-47f9-86b4-71a322e662be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c3eeb6-f210-4198-a2f4-079a753afcc4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40d5379-7807-4ad9-8dfd-34f6148eb05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c841786a-30e7-4c91-887d-2c6fb147a97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28350444-1b54-46a4-9af6-2147fd09b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c309ea63-ed14-4e95-9f5f-29ae80423d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1846995c-41e7-4a6c-8ea6-255f44392ec2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca37d1f-a693-4163-a302-74517ee4358b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9481231f-95e2-49ba-8a1e-52fc32dc4516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7661c0fd-0689-4ad7-95a6-d4e6f5f236b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af945da-22e7-4afc-b183-2ba70a53da40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d26f81-7cd5-4701-bd3e-f2574431cee6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ef250-cc72-4819-ac3d-0bb900cb43d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecc36c3-669b-46f2-85a0-5898116beedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b0689a-27d8-45d5-9c7c-421eb37e76ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cada67-5815-4eb0-9f4b-1140bdeb66ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa4792d-ae1d-400c-a4a3-62aa1b282bc1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c57056-4eff-46eb-ae85-d9f9185727ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d605a4ab-3497-4a94-b546-3fa1d7fca92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11b8cd2-8a20-42c1-ab7f-70b85dc550d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d8af91-acd6-4b31-a32d-adb107d4d271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45be3ec-0b1f-4d1f-9862-a7cea0d5900a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886a73f0-b2ab-44dd-8acf-d8e6bb1ec75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e94eda-59d3-4078-a454-96c940bc97c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d4eb6-5afc-4d2a-968d-7fe74087e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f67de4-a097-4175-8437-bc7b7a7e9c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed150327-79d2-41fe-a766-e41d871615f4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c303a6ac-8068-4e73-a07e-d11fbdfa352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea01a09-0dce-40f1-b8c2-23a7df496ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f364773-ec1f-49bd-94b7-9802850adea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c134668-84ae-4fc4-839c-39d88405b3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb16e5ae-943f-4ccf-8c57-2c9008f287b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37fb3cf-0e5c-471d-bd60-640d3b453e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c1be02-2fc7-43ac-ae46-734b9d8da8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b000ebfa-c195-498e-b2ec-09ad06ef9012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e7106a-a9f1-4674-a0d0-a07bb3c9ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a97b53-058d-4abd-b598-b99592a3fb5f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3fb79-a61f-4882-9655-8c5bcc30aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edc47da-a6b4-4c17-a8ab-5e8c597d9e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c32330-5108-4926-a16a-128a2c05e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a8bdc0-d794-4312-9ae5-e318ec9659bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a1a951-08fa-47ec-a5f1-896de8a88676",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eabfe87-4d10-478a-9b43-29cb5a798ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f310549a-d646-4ea2-810c-bfa1ef24795d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad4c14d-d709-40b5-bf74-266fa62a0714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48401adf-df52-4788-a068-e262fe09be1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46924c2e-ec42-42f0-a3c2-5e65048ff7e7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b59cfba-95c2-48fa-afb2-3a813824591a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f51e2e2-07b2-43b3-9d9c-1d383d505865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b98453-7569-4f8b-b38d-014d0b21e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffcc56e-1d9a-4f5e-aa34-ea9d9c52aa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1599bbe2-7a12-42d9-bd0e-fe40952cf0a6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dfafb8-3460-445a-b7a5-6f398a059198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979d0a73-dc42-4424-8bf6-6ee24eeef7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622dfc69-7cbb-4c2c-b40b-2b0bc83d3650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e368fdf-1a0f-4e17-abdb-ee419fcef01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1da05a-7b95-48d3-8a95-d08f8f88ae8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a935c2-09f9-48ed-803f-17c0563124a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39bf6c4-109b-4e44-b602-0ea38eae0c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cc7b6d-f665-4e91-a11f-91b1c3fc57a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e423feae-1f7e-4731-bfd3-ba35f800f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bf34c7-f916-4e1c-89e8-7e346e579d5b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b330eeb4-4d1b-4c05-b2a7-50e4d60e2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca20b0df-d519-4a2a-938d-e7675224c0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5486b2c-dd26-4c32-bd90-b5f51c71d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7b8cb1-de85-4840-aed7-e98cbe09eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e648a-4d7d-427a-81d9-791360442c29",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2dd3cf-a33a-4e0b-8caa-75a49a315ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a7bfb-3e62-4907-9bc1-3d0c6a10ac6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9966135-0383-4ad9-bef0-c44f52d0a8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403f6241-dff8-4e36-ac9d-6c4683bbad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39ed808-a75a-42cf-b570-9c7c57d56ffe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee346a4-b8c0-4ccb-9956-f69b02e00e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f247e3-6977-45eb-9f65-d3ff83093d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7e8ff-5376-4151-8215-0c8396a55f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39598be4-d81a-4298-86ba-f5f1c678cf79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91749b02-706c-4dc2-90a8-6057c5f34d87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5b4329b-cb4b-4e55-9a9c-59323501d52c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4acf6f-070e-4fc2-aa82-1829da97a37a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c6b1e7-50db-44f2-9cc2-b3171a8fc411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e0bd1-8675-44d3-8adb-9dbe1593976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c1f7d95-8ba0-4fc4-bc7c-1188c8ce444c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bacee305-90de-4951-8ad6-808be1ff00fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d52770b-3e5b-4c6f-bf28-68c86dbb82b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b7f5e7f-f921-49ec-8c45-27df468ad9cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9959a2dd-40d6-47a8-83c2-ed9f5f846790"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cb821dd-7848-4456-86a5-ff1615a25afa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98416d87-1adf-4fcd-aa3e-a9b20c4fbb91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87aaa0b6-995a-4ec2-b15f-0735a2039fff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4a1331e-3215-456a-baef-89d6093a9e75"
            }
          }
        ]
      },
      {
        "id": "25f17132-714c-451e-acb9-a924449d1238",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fc7aa914-46a1-488f-a7eb-784ad493087e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa371dba-0dcc-4774-95bc-c190c52fca46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3146afd-5114-4359-87b1-78d8db247a5b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999f625-f2e8-4e21-a307-a35d80b1e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cfac56-381d-43ce-a5d9-b4ef97808f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8cd3a9-1a3a-46c5-b791-1575bb26b394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59266fa3-754a-4911-a08a-c449ca2008ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a94a1f4-ec53-412a-918d-0da73837070a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79061e71-be78-4ab0-b048-e96c051142a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8c4292-cc43-4b54-8add-52d4290bbefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7f56db-ba82-46fd-85ec-b79e2d832928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "105d652f-3eec-4bf4-b0e7-b9d9cb21e932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff8178-69b3-4f67-9876-36981f3899d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23accae3-d683-4a7e-b11f-3a16e05f81d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf27e6c0-d440-4888-926e-278083365e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f793166a-3d0a-41b9-bae1-786c65280d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2def3e13-bee7-4779-8276-b6d481b3de16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3761ad7b-0824-4aa9-b73f-3c4f81ab38a9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc9c0f3-2755-40e3-b9e6-dd88f4cb910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b6639f-f0d4-4e8a-8f40-d80b1d6f61fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b93ca1-4b8d-4ac1-9891-50ac2b5f990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb12f8cd-22c3-41e8-8ef8-35b0e3268f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d877c8aa-8f84-45c0-98ab-bf2b0d21776d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c96c0d7-91db-4192-bc9d-9831d448ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f42fa0-c06a-4c23-a843-01c076035e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e34eb7-d122-45e0-9ce3-bb78657761d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efeb1013-d9b0-4f71-9d33-b859ae542dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7f8f4-80eb-4e2c-91fb-7a3431025fe1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62a7fb2-746f-41e1-94e5-22f838e0d161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac6fe55-aba1-4f09-8f5b-d77514064b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249413a2-ced9-4ca9-b9f8-9cb9e18f093b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74372a87-a3ea-48ff-add7-c9bebabd13b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e9170f-6f36-455d-b486-823a773705db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62851411-0d1f-4e45-8516-c574937d594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6ac38d-1502-459b-9e97-06697b2a1f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce26abc-889b-4ede-be6a-f8acc39e334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b0f689-af4f-49a2-bc35-c073b3a5c988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa284b3b-85bf-4d32-ba6c-74dc03cfcd1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5343ff2-3233-478c-a030-0aa0b624253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707f826c-2a7b-4309-806c-10021280fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ad61cb-f62b-4dab-9125-be228030c016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "890a109f-d704-4817-9241-9c9694014cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c477af3a-fb36-4187-b754-fbe485c18467",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd996c6-040a-4e2b-ba28-82ed0e340426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1829772-ac95-46c3-8090-002789d5056b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29672da0-f8a9-4971-88ed-e377a1179524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66ed99b0-534d-40c1-9e8e-71e7d5b01530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925ef3e-a2bf-4a75-89e1-9a315aa7e1e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c9a7f-49e6-4dd5-8f60-0091219c767d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297d4b55-832e-4205-bfb2-995dd53dbe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac60bec8-b00a-40a2-9710-e89fb6a43cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "778306f4-b31f-4de8-a694-08175c2d71b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fe2aa9-bb80-4e08-8e3a-26437befe9eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73219b09-368b-44b9-8f00-22ed1bc6e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e641616-048c-4b89-b27b-f9619fca8c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da580673-4975-4b18-b9e9-380b8e7d862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "752ff79c-bd81-426b-ab14-eeb4273fbce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e824ec-ee89-419c-a238-8ff3029d8e1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e270a2cd-5d7a-42f5-afb3-69ef1f6fd449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af56fe7-64d7-46fa-990c-5dffae60b3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b884a0-618f-4ee9-a20a-a959e0f9e422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68e36db6-7993-45d4-b478-f505b0b05f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6853e5-0d04-432f-b6f1-76198af4fd1b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a21361-687b-4802-a9ab-33919cf4bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a4d74b-c960-4a89-b204-6df4d16a5a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff75b4fa-d50f-48b9-a9e4-e1287fa15b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3205920b-f0ed-453b-b003-304eea32f77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26bf7d6-1c39-4ae2-9b01-12ee31ecd6ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f78977e-5b05-4181-8667-81b99b5d5998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7aa4a3-5a8a-4180-ada4-da1ab31e55fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b4a780-b6e6-49fc-82fc-b83b15de5444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f42830-4944-4c39-8cf6-1648722735fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee1ce4-015d-49cb-bfd1-c707715bee1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9921907-bfc1-4119-8123-875ac5fddb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66995d7-a6d5-4a70-815c-0db51a9c85d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c23855-f733-44a2-9e7c-f7db6b6b4282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "df80ba46-3284-4522-82a0-52cde1450f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eb595d-3a8b-4e84-9910-49a2d5d14333",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6300e9f1-3803-4767-abbd-0206253456a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269b8e9b-74b3-4ad1-b3b0-2d9b76401b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8409c44-c78b-4286-a641-3aa99b44a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee1ee70-05e6-44c3-87e5-f7296bf206cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621fb3fd-839c-4bdd-9a25-e0d3dd3f5c2c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32516007-5b88-4622-951d-7459acda4f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0e9169-2d22-4a51-9d84-577ef2fa7e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef1ee7f-3b1e-45ba-a579-a873a4bff7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea129afe-2bb1-4837-afc8-ccda9963b808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4165ec08-80b1-4ab9-8e1b-c4d35c0e0a5b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8de428-3214-4c95-9af9-45511e10f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d78356-75ea-4d1e-86f3-e40043c58e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee3501b-12af-4777-932a-0e03afff8db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7735bcfc-90c9-4942-933f-8568e7ac9224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10e4ff0-f3a1-476b-9540-42158ab19e48",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17a23fd-4f6a-4749-813e-73b7f5df84b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6d63aa-923e-4b63-9e51-1026ca1bba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decf0bf5-d781-46ec-b876-6e75bfdc481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7a6c7e-82a0-4724-84d2-0af8741078ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64e1b8-51ae-4dc6-8396-468e7fbfb8a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf57b0d-dc2a-4e12-a0df-64a397baa64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1edec8-171b-4d3c-89eb-7c5ae1644399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b662863d-fdc8-405f-903a-76ec88780efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "224da20d-d195-4c07-b1f6-aa41da0119fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c857011c-4edc-4a62-9f70-bec38a10f8b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a5139e-f94c-4a77-94a7-2eef10cefd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a5dd7a-9c2d-4ea3-81d0-53195726ff19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f522c70e-448a-427b-aec9-207d9b0de7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bdac50-06ba-4cb0-9488-99ef3abd362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc05511-bc59-498d-8626-02386c70138c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e489db0-5780-4590-b3fe-54e195385c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5202d1-19a2-4fc4-8e0f-08d900650eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eac987-d018-4ff9-b5cc-543fb7818994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c3645d-84d0-4faf-a155-47b9054e58af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b0d9b8-2803-45f7-bff4-483becb53dc2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0d0b50-d607-4e65-ac49-a9132e79ee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9a680c-4cc4-4ddb-a24e-39447f31a984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b1d631-959b-4e61-b8e1-83563aceeacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1396b29c-93a1-42b0-b5f3-754cfe81467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6918bde-f878-426e-8dfb-4ed62f74f1b7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31201e6-1555-4dd8-b35f-881a58f8ba5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6389fa36-691c-4b41-acf6-e989d363c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2efb74-6905-4f5c-b6a5-e01456985d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb71f48-93b6-4ffe-b253-1d9e65403d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277f7aa5-df3c-4c4e-a9f3-d2965ca9ed7e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08391c38-05bd-462f-bf24-8d6227964f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5927d6b-9b04-4498-b9b0-5963bda6c028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d692fcb-e5a5-49c5-8415-0ee05cd16e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7032fdfe-60d5-4b7e-aaa5-65e73739b0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54916666-77b9-4462-9f65-9b60dd222425",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b472af52-f579-4a79-a285-0a592db35894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d22b36-4010-4b18-926c-74278ce3c4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161c57a2-b7b8-4736-b8e0-486021591361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "733e40f5-c5d9-4110-9eef-99bb26bada68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ebfec-e3fc-49ed-b479-d13fc8ab9bcd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a71742-3dd9-4cb7-b142-79aa5548741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bda4897-7d05-4cb0-9bb2-57a31e428de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8598bf42-3704-4a4d-a547-142461dce62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884c77b4-d889-43cb-87bf-a9454d4e9abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3549aadc-80d4-4572-ae4d-0078f0ed34af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605101d-f0c0-4447-a723-d4e9fd487e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bb4291-dda2-41f7-a077-d9507b6aed3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a8813-bbb7-4a19-9182-d54c2d174fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d26b9a-da8e-452e-ba9c-68ebd6bdaa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96793dc-76ca-47d2-af6a-601541e3fa1a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e630178-6178-41a1-a115-4661d851052a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8805fc6-47fa-425b-ac87-103d42af4b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8978866a-4c69-4e6e-836a-a582d19dbc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11bf41a2-2de4-4beb-a419-b363f3b716b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9422d9d-bc5e-44ee-b623-5684e1e8af3a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc0ee5-1a23-479b-8995-34e1e5afed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516d784c-d09c-46ff-8f98-7ad9c9de0c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb39684-b647-457d-ad58-c8b348109f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ac95ae-05ce-4145-8336-73d322e1ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540ac53f-aa3e-477c-9354-15086d84cba1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca0d62-a297-4ff1-85a2-28a3164c5c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221798b4-f1a1-4401-9a6e-c4381430a112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478ec597-22ec-4fa0-962a-8215fd8b2411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b362a4-9ef4-42c4-8d5a-adbb82cf6871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbad2d82-40f4-4af1-9946-417d7ba42aa8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eb367a-48c5-478a-9331-f4c9e84fb187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3b2528-0cac-4ced-a76e-82a4dcc90585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dcd512-6849-487c-8967-0b688fd079be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c95092-a573-4978-9228-b9740fd42333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460f3b5-6a26-4fcc-a64c-695587ce8545",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e34bdd-42f7-4b75-9547-46cc2a7a96d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510a6370-a6f3-4de9-9a4f-b83925dc20cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556843b4-195f-4410-8452-5feb0f1c3bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461c3ad7-1115-42b8-830a-c2be4b401b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295dd1fa-f606-4f0f-9c2b-11e36d4e4b42",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ffe4e5-db5c-4aa2-9b24-4f5088e921d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329bf1b4-376b-4c40-bc05-adb7a5a2de24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301e54b0-cea5-4349-a7a5-2dc301476e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18b7472-55db-4f1d-b702-29aa8d70c847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3268fb4c-861d-44b1-b7f9-5837178bbf43",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303096ad-4629-4efc-91f1-bc1240d2fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c83669-eafb-462e-823d-9aa7f4a0b5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab1e7d4-4a1f-453b-ae30-7612c867a66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6deb1928-18b1-4476-8333-fabaaefb13db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928acad-9196-461a-b6dc-d4cd65656709",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3550001-0a39-4ebe-8710-5dff29867369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f56ea7-ea80-4848-a2ee-397dd6cd0547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911f0ba3-a4ee-42b9-9958-e999f4fe4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4f9404-7eae-4461-82be-90a917c9a91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6e8deb-3c02-4aab-abba-bd0daa863411",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcddda8-ac43-47b8-8e38-a8137273989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eb98a5-b93b-42b9-872b-fc157c21a558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cf6469-bdd1-43bc-add4-91383ac90b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "309b5a5f-1444-4871-b03a-4981cd7998fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95fe46fc-2662-4277-9f14-50896ef040a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "858b7745-a04a-412d-be4e-940124066b93",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb7113-122e-4642-aba5-e5552039e631",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "31f12cdd-3a6d-4f02-8ba2-0988d8b49b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d93e19-5012-4124-89a3-b5063a86df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc9e9dd-904e-4687-b05b-4c12eb8bd4e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b25e5ee-481e-4b96-b34c-3f868fdd4531",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d61a41b7-f23d-4678-bf05-fe04989d889a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4915925e-4929-43ab-97da-6f65ca3c7763",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9819c87-36a3-46a4-a44d-40680e67363a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d9d263f-941a-4ad9-a76d-e4e2974c8588",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "702b8ee6-c527-4c60-8203-2693f83dcd79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39947a3e-0535-4b97-8df8-fac9f10cefb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d208464-5157-4dda-9f7c-f9eb8c99ded6"
            }
          }
        ]
      },
      {
        "id": "40421546-3ee6-4123-a335-b8234396b718",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a726845a-3c72-4f59-9fcb-7693eebcf539",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f255c0d-e4ed-47b8-8684-0a965c4e13db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e496660-a40b-49d4-94eb-92234634dc3e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7023c236-1a63-4843-8884-606feba5fb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad2ed97-be6d-4aff-86fd-d1d2aa3733c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243de914-a438-468e-a18c-d731401c9a7c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a4c1b-27e6-439d-83dc-acca4fa56ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e07f5a-1c87-49c2-9284-8673b027fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2692850a-d432-4ab2-bdda-42ea5e2b54be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709fc5d-bd6a-4593-8f4c-1e66f746cee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba0cdc4-f3f6-42a3-82ea-d93c855431ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17284764-97c4-4687-915c-b2ad23836519",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39621b75-0de0-4fd2-a350-12310f029084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46a6d95-6a63-411e-bb48-47b2aef0a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e58f65c-8dd2-47ee-8086-e352f99c5d5f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fd5dc1-7d43-46a9-80f0-80e86f4f5c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef8ab29-b40f-40c6-82fb-eca3bc61e9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcae43c-dfc4-401c-b942-f6126f948c5a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520f15cb-825d-45a2-ab2d-3bd900a89042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e638d7b-0749-4977-bc89-e9cee35d42b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b562e4a-6fc5-48ad-8411-961f54e072d4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9248bdfa-0f85-4098-b94b-f2a42c74c2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6f6184-abbe-4879-802f-f9737b854a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482077ca-647c-4d9c-b766-e7fd724cf911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3931509-ddbe-42a6-b773-0e7c2e41a254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc08cd9-2a88-4e22-b524-e4a3c0cf80d1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef2610-80cc-4072-b4d7-896bad5c410e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a546117-57a7-4840-b15d-e13660d07954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddced655-6062-468f-9580-dd21a03889da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4913a5-4634-456b-8b5d-f7299998c742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6db75-2443-4924-8069-80fb09c0b8e2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901d380a-6ec4-4d0a-9e4b-a0d00b911101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc1b5fc-5f66-4642-959c-892d5e3514b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a12e99-b549-4d52-bd35-0d97d4f7d1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642742ea-8915-47d3-95c5-71a4d12dfbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f713e4-151f-4ca3-8099-ce55fc2b5fb3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cde0b5-96ae-4897-928b-9fa39e51ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001bee1b-8814-48f2-80c8-7ef90aedbaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97744097-717c-455a-81c7-464c126e6a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b563dbe-1481-43f3-be4f-d7e7a8f6fd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d711bcc-5519-49d4-a503-880e35650aa6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c6b7f0-7179-461e-8b9f-c293a66b93d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060c0d35-2ff2-4b22-ac5c-c0a9331ebafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16893934-486a-4456-94f9-0224fb75b4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b303c8d4-eb30-4faa-be8a-7c6ccd6d9cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1971c4e4-0cd7-45b0-96a8-7292a2077349",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bae0ea6-6054-4798-9ebb-1ff9626ffc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8317fafa-68d9-446f-9aa2-22d216604216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69d1b3b-4756-4f45-9874-637a7e6b4334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb356da3-4e37-4ad0-b9f1-09ce3553af6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ddce2-65fe-43ca-9416-9fd41a907bc3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afe38c4-dbd2-409d-9678-13b784b946a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d534d66-0780-4723-9f31-a2d1e192497d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495e68dd-c0d8-40e4-b197-a059178662ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d465f2ec-2652-460e-9652-73fe62c3829e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fcc9d7-1247-4501-9d04-e0c883dc458e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044ebc11-f333-45a2-a35e-3f80e965e697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64284a68-e92c-438e-9731-0aaa27698bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd16e801-b15e-4de9-b88f-5af30d481060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d1394b-3d3f-466d-8dc7-27f58bd38f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34aa21e7-c8a3-4fb8-84e2-484ed6794422",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875460c1-29a7-42b0-8d8c-41d34a2b8a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd0b625-bbf6-4c9d-9e96-6fade614112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e2815-aa7f-4743-966f-61d4e9e1ed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdef51e-7ad5-484d-94dc-e83023837a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea4dd13-6791-4383-aace-adb21796922d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee658442-157b-4289-8f4d-19075a0d2fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44dd977-de78-4d4f-81f5-2f11c2e5ee05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba33bc7c-0fe6-4906-91d4-2b2de900b75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6e3766-3b52-4a53-9ff0-2c346e1c5cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbae133-aa00-4638-9f7f-3986a4ddb557",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa5b467-1bba-4740-a182-4a2eb08d6739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940510e2-d06c-4286-a91b-7c971617b8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa68aa6-0f3f-4d9e-8326-67ae02bcdef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797eebc8-277c-4d77-871f-002fc9767cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca1a28a-d26a-49c8-9ebe-fcf317e44f7c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7443c7ec-3c40-4a57-866c-830cfa5e91bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b80bbf4-ef33-4bf7-9c80-dfd19445f4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c4d8a7-7858-4103-8c77-a1d578a8c7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61d01ba-eab2-4e37-9069-27ed9f9ab16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0176958-c9db-4d20-ac51-ed78c1d3ff58",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0374de27-5287-4c13-8e58-5f91da1c9dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1556b68a-47cf-4d50-aef4-7d41d9f3c0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f611c8eb-2a62-47c9-93de-a87a10194c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47c5c81-6302-474b-a1eb-aea112a7db70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43f1d13-9392-4b70-a6ac-7b71004ea694",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fff5bd-cdc6-4162-9b30-7cf66a1a8dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b869ef07-0d20-4fc9-a2a3-d473549ccc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4f884-55c5-4aa5-8143-299a7a7d97d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4e1b6e-04cc-4289-a54c-abdc440a88d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b600dc-d73c-4656-a6cc-366c82a85a17",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f1e396-6ef0-4e36-b08c-cbb909e1d965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e65433c-0184-4e7a-a1bf-9a1684e2f57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba052307-0d3a-4859-a8d3-98e68d4d5b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2d83d9-db38-49d4-9b82-6f4094b362db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429e6f3-d4c4-4bb6-b67f-17d6634b5ff9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d111cd6-2d67-455a-b756-80489558ea86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f90925-8711-4031-9b5d-261d66211648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6688484-d245-4d4f-9c30-faa82677a41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554025c6-51fa-4761-b8d3-d6c9eaabafe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1a4f70-2427-4b76-bb64-56dabafcf8a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ee8025-1359-42e1-84c4-bae80270b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65094389-52ef-4e93-9adb-f68c2798d02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e68c8e-9000-4702-b82d-969a3b1e53e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482e4811-8cae-4b30-897d-72a7c9350786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8ed6a0-9880-4ee8-9ddf-b19228c4368c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fde5189-ff5f-42b7-98ff-02f919faf174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2954e559-9ad8-4161-8ce5-f34d1e7db379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6af678-175f-4085-bdce-24946b01d885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392d12df-e8eb-4415-8686-b693cb9ab43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750d2ef8-24c6-4cc0-b93b-58e319df9824",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98aee1b-8c48-4fbe-b0eb-7a6e90b371d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a7279b-8499-4f36-93f5-b96e6ba64916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a1ae82-1d6b-49f3-b83a-b1da05c480fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8a8b5e-30e4-4ddd-8a81-8d62e8ebd54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc87f9d-9866-433d-82b6-7f8dc48202f3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a2bf65-88f4-4108-bb92-c8e0dc5e7590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d422c3-4fe6-4710-b828-c965aa60a90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7452dbbd-3d81-4463-98fc-ec0318957a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818e85b5-f5fb-4ee4-bc93-f30dfdf4722f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f4fc12-981a-4cf2-a7bf-bb258a0a6bec",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317b13c5-6a07-4d7c-bf72-8bc57357ab2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bd8e2b-cd78-4a9f-80d9-2f808cc0cf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2428f6-c123-4396-9af1-dc89e4b742df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5f0ebc-2f94-4542-99e5-ac6c21c95492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b02598-2171-469c-90e5-2b843d2a78f2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bb1402-38f8-4d91-9adf-14517c5331ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0fc618-2a86-41d0-be45-d40181ac7060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9334407f-88c4-4484-ae42-d30b211eb4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd919b7f-55c0-44c4-85c5-08ea4a60ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c07cc4f-6f17-4396-9eb0-84d0c3b70a90",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371eb173-d266-41a0-a38e-13f1ee8603ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b0a81e-0431-45b5-9f95-e5b671d90ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be68518-225d-4c68-b516-49ff2f54649e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a23ce8-bf94-4513-84ff-65ee47f70354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231ea185-71f9-4883-9024-d15f80c65157",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6562f01-3e5b-44a7-9163-6fcf51aec016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2085955-c1a3-4243-9649-40f54b3ab929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafeaca7-1068-412a-8088-f2db25eb78b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f243a3-3069-4e4f-b334-385cdd8ace46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3ce95-92e1-46b9-bb12-81073d534208",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666dc052-e3c6-4564-890e-87f35a8420f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989a0955-6d63-4f51-803d-e3f704475047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e11f204-c33d-4cda-9ca4-898873b063a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bd88f8-3a0b-4353-aa71-0c68ebcef9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a735d48-1061-4881-bb66-01f6086933d8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c626ee-ba15-43ae-ab19-e084ac4d0844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282f13e9-4c78-4f6b-a6ee-0a18d4f93d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95eb1a7-18a5-4508-beee-070c722531ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435c1da3-598d-4520-bdf8-7f77351fd797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf3ef9-7caf-4e05-ab99-ec186b0ec488",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fa2caa-2497-4398-8017-641514f46811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45d2e7b-83f6-4f6a-8aa3-d0639725533b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd475a4c-9991-4a66-8e09-87a7afc4b1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03460a39-6b6c-4c52-8a61-0e4371bae5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c9b4f3-5f6b-4641-9224-1366355ab314",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dc2003-9062-48a4-81a9-72cbe3527a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6707bd32-4a28-4ee5-8216-db24e59c3c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0744cd02-72f1-4742-bad4-b9abfd06b510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b63b50a-c648-419e-a45d-f0b4ed654aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33758816-04fa-4deb-9677-cf22fcc022cf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d988ac-155f-4101-b70c-c736a5bb6504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2032df4-67cb-45fa-a062-de0896999c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d87d16-d26d-4d0a-851f-8b58ee363dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75326bc9-ebe9-45be-a1bc-c359252382f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fbd427-56c4-4cc7-85ea-5ec33f359402",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837ab64f-ee7a-4d7c-a3da-60460ea425e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad2bdc4-7889-4d2d-8b9d-489ed422e7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99256165-48dc-4bf0-a587-9fdf78be0657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67f1f0e-cda0-4320-9f73-1711d92cc82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704175f-dd4b-47c7-a507-cdb8012dff2d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c6c76a-c13c-4c69-9089-e38abce81086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3023d9-d5bd-4167-9983-fca4c632b4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db119e1-0e66-4388-a5f2-86cac6f6547b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b4d6ce-fd1b-4982-b2cf-51b093262a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cfea8d-804a-4133-a8aa-da9458272067",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94ecbc8-5db9-4e68-94ea-afec8755c4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16658990-832a-4184-88b8-6da656f6822f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ea2af-6ae1-46b8-a4d6-e43ac9c31906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4768700-030e-44ee-8920-f218a8c75c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f797e-cb4a-4238-b928-46821a1c070a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8e4453-98b1-4aac-91d8-01d2f3da759a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7ac631-a773-4412-8387-30405ee33215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af1f46b-bc10-4e77-b23a-54c611523136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61d3fea-50aa-43c0-b490-de0f1bb5172c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c944368-0675-424c-95da-98e9f40dfc10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3fcd8b-9fa8-4bfc-a4fe-29b379acad0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59b0241-eeba-4218-b98d-5d3fd5dce5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f9b5f-c94d-488f-9fd5-c0a61ac34b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48ecc76-c468-4174-ab2f-063b39d1f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b331b6f-9e6e-4910-9b0b-a0226ace0f3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b79cb6-56f6-41cc-bda0-fd4fc4f73915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1503750d-50fa-4d20-b573-11a2f553a9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75ad095-785f-4787-ac6f-967c231c5d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5792ba3-edeb-4af5-89e7-4246843c7c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8030c0d3-5652-4cc5-a2f8-55b3cf862d52",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1038f7b-6b61-4292-9c04-779c63bd1bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048e9a2f-efce-446a-b2b5-1d509dd2e73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d17f9a-d20f-4a4b-ad5e-4ed5840c78db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84dfc660-e6ba-473c-a049-37a666d64db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1fdf6e-5f51-48f5-9cdd-56150b202973",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c089de3d-8225-4455-9deb-1f741eb02745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b55696d-8e88-40fd-a8f6-5ee3d1c52d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bc488a-9a1b-4f21-a70d-045bf82bc63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95a1806-9b32-4ef5-8ad3-57b6f0585223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87199fd3-93bb-4ee5-a793-e0757ac828db",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd4f3d9-3417-4601-8961-aac47da0f64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aa7b92-a479-4fbe-b01b-3e471d6d30fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2669e834-3658-4a5c-8c9a-2fefce4571c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218bae6d-910f-4b9e-97aa-06297135a136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bdf238-9608-4e3f-b714-9acf998eb87a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239c368-cb01-46f6-aad6-3c9938e20ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646af64b-f140-4185-be11-03bdea27e847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba92285-aab8-488a-a5b9-5b700d21a667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02294a97-10fd-40ce-8ed6-bd4f51ee9431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b38bbb4-9907-4b38-bdec-3d4451b69daf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4325806d-8c98-46ed-a2c7-c753751d36c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868c562a-9bc1-4fa9-a92c-855b623b0b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b05a1b0-06ac-445a-81ea-6a6227d07103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8032e4b3-7cb8-42af-97d2-cc4201045795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f87667-5351-4ff2-812e-993ea22da136",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2447454-1502-4235-bbc8-73ada2453e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f8dcc8-ad78-410d-acca-f92e8d30808b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26546af4-2890-4028-8de9-94f4f283d2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996e9077-8e68-4b8a-a45d-e11522f0e8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc4be2-3aa0-4179-8376-369d45f7a6c7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a8944-dd98-478b-8f06-89c26672c4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214fe210-4f2e-47f5-86db-9d4d82289d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c7d01-48d1-4136-bbca-4d9661efaba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa672ed-a05f-4a22-a054-67e7f1fef601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c6a39-971c-44b5-89ac-690917dcb8bc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e87915-f542-40ef-8052-646d19bee31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34e1fae-a178-4686-b09f-a050b6a14055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c417377-7714-4bf4-9582-27af811ed111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32b953a-ccf1-4056-9b08-5ce11c632a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cb1df7-523b-470e-9017-a87f6df27140",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08956f1e-d2ae-4b76-8e8c-3212ac110358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dca06ba-893b-41bd-a1f2-42a15c35f57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ac73b3-583e-470c-8f5a-d15ac6024fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef34bebb-4fd3-448f-b726-3b56b1bc51e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e65b67e-cc96-40b3-91a1-3bd65fae14df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324593d4-5097-422d-b091-372a3661c63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0ae8cf-b777-482a-a21d-586161507457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b815973-cb4b-4b8b-9e74-ea4ec328e0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568bf07d-b6ea-4dc2-bdc0-c7989a00c28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ca8d52-f0cf-4deb-a31f-dc8c1ca9f9d5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c8b40-8910-46a2-9e31-04adf5fe5307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0468ef24-36bc-494d-ab37-1e05382f91ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36c35b7-feda-4739-82e5-57f28ac6b34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e197b89-eebf-433a-8fae-22d1b16e6b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b483aa7-47f9-4788-a89d-f9ce83bc7f2c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5132071b-8019-4f7e-9340-555eab269d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7049bd41-4dd0-4831-8408-df7110a32d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9513ecf5-a8c3-42a5-9e86-f49abd050474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efd7a94-f3c4-4709-9be3-42c2c159f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470a1666-62db-4a5e-8e9b-35f6135a536a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800deb1-4cdb-4e04-8a4c-0d842356d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb01bcd1-1a6e-44a8-a0cb-5dac1f5c7c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaa09b6-e410-4a1a-b607-1539cbbd1bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c4ba86-54bb-4617-bf67-928649d34b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd3ac1c-e124-4fcc-a51f-06367f4b4146",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f8760-9f8e-4b76-aaa9-963e109bf071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d806585-e071-4111-96e1-cad98660582d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f622d399-496c-4d80-9951-d124dd69a677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884113d0-fa09-46ab-bbbd-b2d33eb1486e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f670400e-1852-4ee8-8375-c71a605ab94b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6640e4ce-7613-4564-8345-9ce3065f078e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d2ec14-5082-4fab-b281-ca9010f2a043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4a097-1b00-4206-995c-c9552f33ff18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dcd804-81f0-45d5-ba6a-902906dbb987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c790761-01c1-4aac-8bcc-7981435dfd8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476e374a-0d14-4aa7-91ab-727c1c4bab48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119f3dd-11d3-4aba-822b-0f6a8c79f301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c0487b-4811-4bde-89e6-f87a7c39c530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d8da88-952c-49e1-86f6-77fec3fbec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e467ba0e-198c-4717-b163-fc31e0d8096b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e0e2b2-c47b-414e-acf9-e0da018f0a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebba429d-a5e9-403a-9fef-3beb9bc6530e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a59fe4-69f8-49d6-92fb-40b90e3aa2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55007480-a79d-4c50-9c7a-c054c11b9b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146756b5-182f-495d-950b-cf6be9dbdac2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9ee25c-f761-4f8c-87d7-5a1aea9b8deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3856482-a686-43b4-bab5-efa4828455a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ba2043-cc60-482d-a863-93e78ea7462d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4091653c-3b4f-47da-9e83-880f79f63be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be030c8-f69d-43a4-a645-cd99e90ec530",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1ee14e-6615-4d37-bfd0-1fb7f8c63724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34760223-d8ab-40f1-afa3-ffd8a8995fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3da5510-93b8-4f3e-a717-a8c516869ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e48ad37-36ef-4fe8-bd49-1e86439026a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65a309f-3917-4aaf-b930-6a25e51626e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7a2a69-0f3a-463a-a8bf-64d965f6b1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19e9d19-7f0c-4241-be66-f0bf4fff1cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68e329b-1b73-4586-b5cc-9f75f9cedd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17ca941-2bbd-43a7-b30d-e1cae9dc2b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c1c944-3bff-455d-b5a4-1e02d45d43e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6492f4-4fb0-4f24-b383-511ce3964264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2738de99-9e5a-4ef3-9f6f-dc96b2ff392e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d0c388-163f-407f-9495-06f5b88b63ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c24591-410d-4cbf-b613-66520f27a700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f3aa3e-1ba5-4f05-b765-cd21136417f1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9facbb8-8f92-497b-9bb7-143b01aa1010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5458b0ea-224c-42e4-b634-61b101729632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f920ec97-bb98-4b12-a765-783f848588f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bff0f64-4002-4942-b24e-8f206c651f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8181f3-1e35-45d0-af1d-3b3801661881",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e01f340-dd78-4823-8427-e204707d2370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3a4cb5-ce6f-4d3b-bea9-da404a781a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d530c6ad-f698-46ac-869e-8d6f748c0604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f7d7aa-561d-4137-91e0-03c7e265a497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9398d6-db5b-4124-bad0-f2290b88bb44",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb9449-96db-492f-ac88-84b7df112a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12eb054-6f4b-4105-a1fe-38a1f5202d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2970dd6d-efd2-4524-ac08-ba368af9f4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c91219b-5a0e-46a3-9e0e-8f43e7051ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af81e0de-b091-4ec5-a26f-7243df76affd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ce7677-0cca-4d97-934a-ef62b12a60f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4e715a-654b-4621-b605-3f066c351652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4eb9ee-831d-4aef-8c8b-95800f818d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b67cae-f637-4323-a0d4-cb1b3f3fd12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae9ab81-664d-4ed2-bad7-bc08f6d7f910",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f79a83e-8773-4c88-ac62-5c431bf09a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000b3fc1-b7d1-4531-b29b-b6d298864a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2ad79f-297b-4f5d-b3e9-6b158af82990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87206e66-e5dd-45ae-8b49-d27b1bceee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f715243c-b55a-4082-a73c-05b108fef876",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db634a9-5e44-4a76-9871-f0cea3afd6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837b7582-b34d-410d-8f51-8f8c637e077f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6385fcb7-bc56-4966-9b86-c845a10253fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77da39fc-00e9-4372-af12-309d24290c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcced90-73d2-4780-9240-b19d80b5cdd8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296c1e95-49a6-40b8-8639-14b2e8e8eaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81e1ebc-de57-4376-81e1-f484036d6068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc8e3d0-c4ae-4dd0-a2f3-4cb4acabddc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fffee04-e927-406a-bbee-7a6ff82b2dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2498f093-5cae-4678-94d2-14d3b62cd9c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c4c39-2ccd-452e-9394-e8977b4bbda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f989a6-4938-4fb9-b172-04e6db68c12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297e9311-168c-45f4-bc33-c873cdf6f209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7dd119-6b01-476f-803b-6f9e7e8f1624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c096339-ef28-4aa5-b5b2-062056705a81",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15165167-1c79-42fc-a61e-6e04f086b929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cde0c5-6d2b-48ae-8a9d-ec588d180b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da9b0a-8a02-4cfd-a844-90ec5fd65c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55e094-54f0-4ed9-b229-807bd0af9a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec41353-6236-447a-b562-feb383818cde",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b3bdad-7e86-46f1-bf1d-741feca9a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7374c498-b29e-484d-bdf1-4c02ba982573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ad995-78d4-409f-90f7-095b9f78fb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4a982f-5832-440f-81fa-920c7e198d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976b2fde-bdff-4164-b60d-8888f4518c54",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94a149f-6cde-4bef-869a-867b067d193c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fff5903-a387-4f98-a407-7abe9de8b436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52bd257-023c-4ac8-886a-ef4ed2580bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f484f61c-706a-4064-b8e3-d675434c6fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec31ff40-002a-45a6-b401-9a57806884b0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602b8d1d-9063-4176-94b0-a37e2c897c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d209fb8d-fc2c-4eca-9b3f-3e028fdb2be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cb097b-2adb-4ad2-89a4-d304b93a463d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dced203a-2298-46d7-9446-01550a2db96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e32f4a-aab9-414b-a7b4-98adb4e8b006",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767adeb-aef4-45de-afeb-ee1106f0124f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6feecdb3-982d-4895-b551-c69bbfc559d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c336a97-57e5-4b83-8493-1092c1007e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cd6ab2-7e91-422c-89cb-c63e454e05d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10433660-a51b-4504-9103-e5462c43988b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ef5cc2-f136-4605-8f34-2e99e319258c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8657367-aa88-4ae6-ae08-cc304733d6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ccb74d-79d2-4bb0-bc1f-f26abccc50cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f099ba79-8b39-4e37-b199-f8eaacd6409a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8319977c-93fd-4a8e-b9f6-cff9f7162885",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83a238d-756d-4fd2-9760-276f41fb3862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49304011-576f-4de3-b47a-86bf0e42aea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515b1895-433c-4d5f-8090-dbe75e3bc19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612a855c-4027-48e9-90f1-34b88afaddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258b6907-29f1-4ecf-82c0-9610738d94ca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df61ea-7322-4cf1-85d8-b80c33c3e400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d48294a-e2bd-4ae3-9b65-9fb013de7665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d07266-80f3-4247-97f6-aa5c8d740d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfedeedb-cd80-48b5-85aa-115b9c876f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc56bac-31cb-4587-b9af-0e0948ceb03a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeb60fe-ef79-4c98-ba7c-64da34beab00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c992a600-ad02-4559-bb04-06397f0f0d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68d3fe5-aa61-404e-9f88-ea233d5fae15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfa4728-da52-44fd-9576-ce0eb796a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c79d85-b153-4ba9-bc18-d971767405c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d23a885-ce88-4ba0-80e5-69ec5c527efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b691c626-f3ab-4d5e-ad6f-f84715ff7a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0fd88a-f988-4388-a42d-0234e6b2a56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d8e775-a7a0-4b74-a5c8-f062ce4cfae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d95bee2-7b6d-43c1-97d0-bbcedc375bb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5bc405-84ca-40cf-bf3e-29c85c10b047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58dc90b1-6eae-4a83-819e-7a69e821df8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24bd590-fd6e-4271-bffe-5fd543aed0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98b142d-5e15-4532-852a-9d913bad2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0e9f27-8d43-4426-9146-737fa3ba51c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82249976-cafd-48ae-9922-6f84c54a7f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7ab80e-f2af-439f-94f0-3e9001f1712c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ec469a-ec56-4dfd-8019-e697ea52ba8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fb0904-ab5d-4bc1-a7de-8b1745236777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feaa03a-82a3-4df9-86d6-6c85819fc49d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc1aee1-9e16-439d-a7ed-d2cfb3d563b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2768f7a2-c1d4-4671-a5cd-ad3c5814fa16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915a7d79-3e9f-455a-a6bd-f4a3bb2bde32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ebed2f-9a22-4a42-8869-5021f3dd4d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22505754-a044-4416-b0d3-28e7d9a6e7d8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1fca6d-0157-4b24-b728-cc2e6b8cea7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53fe7b3-6ac6-471d-a3ff-fb421c240095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e866e52-d107-4e35-8b2e-2e56425f008f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf643211-da66-47e3-afcf-bc55fdb280c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11cfc96-8c09-4491-94e6-e51e1e0a721b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a9c735-48ea-4c4c-bcef-e08135a1ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bab859d-a2e4-4399-bd2e-c937a7d1537d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c3ea8d-1766-43db-9ca1-b2ff71e5d493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0af633-b447-42e7-b617-87b1a36b2a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bee4826-4c1c-4d6d-b1fc-8b8dcb4cfd27",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f0cc43-5262-4827-8a5c-1a0fc5a659f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783a0c20-f4ed-49b9-8ab5-d23ff88a9def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5843d259-6ed6-4b4d-8e2e-cc4a8b337ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc6e071-6c9c-4b7a-acee-98b65510253b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f81944-e952-4f73-bce0-0a511e60c55a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8292b90-f470-4c93-891b-79ac90050260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98eae45-b770-411e-a260-4eab7ba66452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a56e23-12ea-4fa3-a539-fc2fc94476bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718b7cad-e41a-45a5-b5f7-0cf3d79f3e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ac07e9-1208-414a-874d-141986a960d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650cf007-2221-4b52-bad2-76e3e3351e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8384fb0-8be3-4596-abfc-680ee6e2dd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09874ca-16a4-451d-8190-0a19b85946a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9062d5-7dad-4e15-acaf-3bb308036371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0bdca7-9f96-49e0-a003-52a703edb8a5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819a0849-7018-4936-8c34-8f7a063c469d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4077e4-7178-42d4-b086-504cd1d9216f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1174c7f-bd02-4587-8909-c9ad48231160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cb9994-3bea-4934-8517-6bac13b0f4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d09220-ddde-4330-a0a6-b194c58e5bae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdde1705-d964-4093-85e1-880fdce7e87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b89788-7729-4d8c-b671-855f02b4be36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ffb77-31d5-4916-9f09-4f7968bc295b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c92bc6c-3dc1-49ff-8740-23eefaa6b009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49f17a9-b192-4a51-b894-d10ea654eec6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00958cf7-24c0-4ae2-bc7b-5ae9570058dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56fba9ad-dc8c-4054-80a5-238046f36645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc45086f-b52e-4d74-b980-13e9df2c1c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7668b67-63b6-429e-ac13-f20257377427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91500ac6-7c26-4722-bd5c-1dec9038d7ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b3ce06-c030-48b8-a520-4b945c9317d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c54794-a94b-4c52-9140-3358800f4ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e61ce-2e9f-4ce9-901f-f8d9d154e3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f86961f-b83b-46ef-9ad0-96b345766ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191b5574-e5e2-45de-af02-128f0164bad1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492348e0-dc57-4742-83b3-e3e886fe7790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07865a30-2601-4177-b5fb-6d47fbec1d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d3460-6176-4a98-bff0-fe20af12eb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fda90e-29f2-4ace-acb6-bf56d600a90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebec3e1-b071-4ff4-80ae-5c4cedacf163",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51bdee-c64e-471e-bdc0-3512de37873a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e3f3c60-b546-446d-a5c3-be293c160bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8948245-4af1-44be-8ba1-28e3dcd1ea4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4bb145-2f5f-416d-aea9-c9a430d1c982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83d7658-5134-45f4-818f-52f98be3e1a4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6526a629-278d-4743-a721-5c7b5b6df639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617c8fd8-01ff-4729-8891-8589aa372d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16f1126-4a2c-4247-b3df-da90cccd5cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281ea3e3-e19c-4f70-b2ef-a132568b3e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208e9e95-c83c-432d-9b42-f1b3fd327275",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a15146-4d69-4a2a-bc32-8803849618d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbe1d3e-d915-4447-b829-79be0a448ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ebe639-c5c9-44f4-929a-673e111b9dbf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2171ae18-e65f-4f6b-8b1d-1ba6b0b25737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb709d6-da58-4a73-9aa9-ea9fa19723f6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67548ce8-5dd8-4246-8fef-c9a331ce374a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f375fd6-0adb-4469-8193-12d671761f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a69833-b635-431b-837a-3c473ed09ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d39bb4-4b03-4de0-a933-13ef35f4d6ce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b13b6dfe-0511-4e48-bf8d-05010dd191c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0766b105-38ca-47aa-bfa5-58ac6bc762b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f04bcda-e52e-4b2a-b209-ef3cc0cde031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c42a50a-3b7c-4ef5-9eef-9e806cac01bd"
                    }
                  }
                ]
              },
              {
                "id": "fd99de96-8735-44f1-8478-a8cf72aa13e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55513c04-a00a-4dd1-bf6d-cee9da29e618",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ecec9c-96f9-4b41-90aa-ee0c7488b73b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5441f3fa-7708-4cfa-9eb6-bedcd90a938d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7b9fbf-cae9-4e43-ae45-5fceb8d186bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84cb6976-1323-4bb5-89a3-7f913208eab7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c46b38a6-9b03-44dd-81e3-3587ae3be942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d51c9b82-f8e5-4daa-ace8-dc0d1021add6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5243d75-447a-4140-811c-804b5fc86131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cb8fb74-de52-4cc4-a2dc-d2c9887c2d58"
                    }
                  }
                ]
              },
              {
                "id": "d81b3a3f-8e70-4699-9f95-76eba7945004",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3102854b-c0a5-43d5-9df8-30c626cefa64",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9a0032-1f8e-4d03-93b9-7201ad37ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b48a4d74-6364-45ae-84e6-2d9ff307176c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4117b00-a7f0-49e0-87f0-dd00b6bd1e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e28e109-880e-426c-8590-216b3966a1af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b1adae68-6803-41cf-b821-1f52099c302b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac58ef64-ebcf-4a0d-b652-1691d7ef884a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "191c9941-fe47-4532-9f8b-1aa4436cf2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0052d51-ce92-41f5-8fe9-8a718103473f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1355536-3b33-46b7-8e54-d2fb3fcdc3d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77f6d3c6-f67e-4e92-904c-edc20236feb1"
                    }
                  }
                ]
              },
              {
                "id": "6c426417-222c-4727-bae9-266a2f1343c9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ef7dcf8-225f-4f27-a86c-f52b9ee4b55b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7193e052-fadc-418d-abe9-62f257c66a78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c5e0f52-bfcc-4971-841d-87cf28e07df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e870de-2458-4c6f-8998-93a3e418dbd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e54080b-b0f6-42e8-b75d-becc8b1bfe7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e628201e-9a60-4dba-8669-9a3c3275b914"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d54bae8a-dac6-415f-a885-13b537a54491",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4863bde-0071-40da-80ba-43cf7d9567c5"
            }
          }
        ]
      },
      {
        "id": "c10ad284-a5c0-4af2-8c73-e79f0182068f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "19c50d19-6a54-486d-8494-4ff8bc64984e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65aeb306-83a3-46f4-82d2-428fa7e542fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c521380-e396-4427-853d-f0ff05e4affe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bb06e3-5ed2-46ef-8e14-5543409a6df9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d7bc3e33-1dfc-43bd-b909-3e260f77526c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e0a43b-dc17-4e96-912f-c887c80029a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82c00e4-2219-41e3-a7a4-36643aabc47a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc697f0-3b1d-4061-9cac-dd22f03f8c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca1e320-87b0-4dbb-ba55-d4552b967105"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9fc9df3-f9f7-4ed8-9351-a83da96f418e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b62af020-a20c-46bc-afc5-2e8e127b19e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d38b4340-6a83-4ae8-ac32-4df1a21da910",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e5fd985a-987b-4295-a743-6872a5e6e43e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b684b52-bfcd-4786-b5d6-0cb5707c7356",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb196668-05aa-4102-84d2-8d86c8140128"
            }
          }
        ]
      },
      {
        "id": "5fa4acb6-a105-41d3-aec6-5553771abddb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b05a9b86-22f2-4450-a663-6d34e14affc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68501ead-ff37-44a5-bf3a-ccc65ed7d1ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc546ae8-e5e6-49dd-9c6e-abdb215dba34",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61133426-b2ac-4fdc-84ab-ce0fba91d846",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5919d66-9b60-40ce-9cba-56068ef0c880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c4dc9-0557-42e1-980d-c323dc1cb205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cdd83d2-0214-49e9-b3d9-4690dec6dce2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be8b5076-0dac-48d3-b691-ea4c639e3c39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db2b3469-cd64-48b7-9932-6b1f0c164654"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d35af6b4-c312-4ee1-afa5-6c1c40cd9373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b8f344-4b0b-4d32-bcb8-6b05f53ba3ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bb8c4a5-74a3-47f9-a89e-40115f95c14d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e249eb6-0bfe-4e72-9757-827b605d5187"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be9dc17-4fda-44d1-8648-cc4ef4a6fb03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f8a6763-7234-4a3a-89cc-6e0eabdd6427"
            }
          }
        ]
      },
      {
        "id": "b90bc342-8e02-4036-9fa1-3363fb8ee800",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ff52310-4860-4db1-a792-e64bd803c8e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7dea3cf-2e8b-4eac-bea4-0e3357a01e5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5f7563c-d707-4134-bf45-cf21c6620683",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9697c239-4857-44ff-b982-03a89b126d6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e523cc78-357e-4503-8200-46afc458b804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f891e2-edcd-4cf8-9833-f5c8c44d3dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc13c70-8072-4251-be5d-bfd700754b9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d44254-4ac5-4083-86f4-2493eed15a35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74fc7a88-e3ba-4d4f-bb1f-6c9efd11ab3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eff3a3f-7f93-4eef-b9ba-6eea61f87a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c507d19-298f-4d7f-a493-1b6a83955deb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f37568d-7129-4be3-a3bf-6a96b1c1779c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e4cbfb9-ddd9-4b3e-9313-29a74987814e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cefe919e-340f-4c50-8039-f66774e3c0c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1680a7e-0824-41aa-ae37-1202c00e98dc"
            }
          }
        ]
      },
      {
        "id": "f370a223-e003-4583-adbd-81d937c74a06",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90650541-2240-4f02-9deb-eb62457209f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68c7436b-6eae-4fd0-a195-452102302644",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e52381a0-4128-4d16-b1a7-628af4b0f3e3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c84e2c9b-a3d6-45c8-905a-b5d950157a5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6468fb41-3388-4c58-9d33-b3ed425545db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 169.5614035087719,
      "responseMin": 5,
      "responseMax": 10291,
      "responseSd": 848.7162321535023,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709685253228,
      "completed": 1709685310681
    },
    "executions": [
      {
        "id": "7c22489d-51d9-493d-8b2f-6b6033afffd5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c27e2258-e03e-451d-917d-505e744ee0de",
          "httpRequestId": "4f7d2362-98bb-4ebc-9f07-cb2017bfba8f"
        },
        "item": {
          "id": "7c22489d-51d9-493d-8b2f-6b6033afffd5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7262c671-8b52-4a7b-a66a-5726b2158310",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 0
        }
      },
      {
        "id": "e5cebf62-41a7-45b3-a2cc-ed4994bd8ef5",
        "cursor": {
          "ref": "50abd0cc-64bf-432d-abf2-e641b757f3a5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5ca925e1-a338-48ef-9d22-9daa8b1a222e"
        },
        "item": {
          "id": "e5cebf62-41a7-45b3-a2cc-ed4994bd8ef5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "53fd14b1-6191-4f80-ba2f-ca31a9a390c3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "73014d6d-ecf4-412f-b831-eac677d00f96",
        "cursor": {
          "ref": "ffa1050e-4431-4e58-b773-b716ddb3907c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0d9effdf-fa61-4ef8-b317-784fe272f57d"
        },
        "item": {
          "id": "73014d6d-ecf4-412f-b831-eac677d00f96",
          "name": "did_json"
        },
        "response": {
          "id": "0d2fa4f2-98e5-4c37-b658-8c8c17098754",
          "status": "OK",
          "code": 200,
          "responseTime": 433,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e22dc3-adf4-4e46-8a8c-e1dbff438c85",
        "cursor": {
          "ref": "cfac5e6c-85b3-46d8-bf08-ef43ceaea93c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d74e1a5-66c0-444b-a4ec-6f3cf1197dc3"
        },
        "item": {
          "id": "16e22dc3-adf4-4e46-8a8c-e1dbff438c85",
          "name": "did:invalid"
        },
        "response": {
          "id": "dde57b15-54af-411f-a442-7af4de78d22f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1330,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e22dc3-adf4-4e46-8a8c-e1dbff438c85",
        "cursor": {
          "ref": "cfac5e6c-85b3-46d8-bf08-ef43ceaea93c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d74e1a5-66c0-444b-a4ec-6f3cf1197dc3"
        },
        "item": {
          "id": "16e22dc3-adf4-4e46-8a8c-e1dbff438c85",
          "name": "did:invalid"
        },
        "response": {
          "id": "dde57b15-54af-411f-a442-7af4de78d22f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1330,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa62ba4-88b1-4027-a2a1-b19b2a337737",
        "cursor": {
          "ref": "f8b8dbe7-753e-43d0-9935-1df4e8efe99c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e30702b-a4b2-427c-a75c-209143877b6c"
        },
        "item": {
          "id": "afa62ba4-88b1-4027-a2a1-b19b2a337737",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8931eb1c-c43d-406f-b69c-3f66374a806f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cfa77a-3195-400f-83eb-a17872f0677f",
        "cursor": {
          "ref": "f3cb04c0-cc49-4ed9-b328-fe4d1ab3dba5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a9bc0c27-47b6-4dfb-be3e-07a6e15b3d3d"
        },
        "item": {
          "id": "06cfa77a-3195-400f-83eb-a17872f0677f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "668df53b-4ca5-4475-9eee-633585c9a5a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c91130-be70-4b67-82d4-d702df7ad52a",
        "cursor": {
          "ref": "9579aad5-48fe-441a-be45-97ec551bc66e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0b1c951b-f89b-4643-a7c5-9efd806940e4"
        },
        "item": {
          "id": "c9c91130-be70-4b67-82d4-d702df7ad52a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "954e426b-a1fd-453e-9575-789a2318d733",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 120,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f645c-6e05-425d-b957-8c7d7dc80dd5",
        "cursor": {
          "ref": "015dc5b3-adfa-47cb-930e-61a3de60a001",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a548dac-675a-4597-afe6-0caf271b68c7"
        },
        "item": {
          "id": "c29f645c-6e05-425d-b957-8c7d7dc80dd5",
          "name": "identifiers"
        },
        "response": {
          "id": "d027d884-6f20-480e-8717-8ceb4fe1dde0",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ce7fb8-ff87-4463-a99a-5eb3887a5718",
        "cursor": {
          "ref": "6425573c-fc6d-4f38-9694-f148f13c8bf9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a2a70fc-d505-4da8-a63f-1bbb5abcdd64"
        },
        "item": {
          "id": "f4ce7fb8-ff87-4463-a99a-5eb3887a5718",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b9fc4afc-d9b9-4e7f-b005-9fb454d259ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5047617-145e-434d-9d5b-741dbe783908",
        "cursor": {
          "ref": "5370045b-5828-4e42-b989-b6f508bc8fe3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e842a8e-7964-41c8-b52b-9ac354c26a66"
        },
        "item": {
          "id": "e5047617-145e-434d-9d5b-741dbe783908",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b94f2a49-2dba-447a-9294-3cd010d35dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9872f2-c985-4872-bfbd-5c65614a47d6",
        "cursor": {
          "ref": "7acff063-f05c-4f88-bcd2-e86a148bbb1a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3cabb3e9-105d-4870-a672-9e037925bcdf"
        },
        "item": {
          "id": "6a9872f2-c985-4872-bfbd-5c65614a47d6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c8ae6c4-b331-4082-aefd-c6825004e74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ad96b1-2b17-4a2b-9e9a-ddc704f2dc58",
        "cursor": {
          "ref": "3580fd55-cb03-431e-a2f7-791e04cae479",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4be6762d-bb2f-4740-8e91-e30e5f37e500"
        },
        "item": {
          "id": "33ad96b1-2b17-4a2b-9e9a-ddc704f2dc58",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "74756c9a-f079-4e20-a67a-f387865a506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a42b29-449e-4086-b94f-99783b3b70b2",
        "cursor": {
          "ref": "e4f851c7-228c-47de-ae9d-c868b6f7f29f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "66052e2f-b647-4efd-b0bc-3c22779a8311"
        },
        "item": {
          "id": "79a42b29-449e-4086-b94f-99783b3b70b2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "88b6d8d9-41bf-4b53-aa03-a726975f089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be10cc-ed47-4716-b60c-c6e777d6c113",
        "cursor": {
          "ref": "3521121f-a821-4df7-b094-2bb168c17d27",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "05129aa8-226c-4e34-b794-8a85455395aa"
        },
        "item": {
          "id": "62be10cc-ed47-4716-b60c-c6e777d6c113",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15d060d1-8fdc-45dd-bb77-f4089e4295a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75639ab3-b1a6-4d83-93bf-8adf18d14f0e",
        "cursor": {
          "ref": "88c307fd-19d0-4671-8e6a-5ba14e155fdd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a3a163fa-2d67-4846-ba3f-4ef1241d49de"
        },
        "item": {
          "id": "75639ab3-b1a6-4d83-93bf-8adf18d14f0e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ab08965-5ad0-4fa4-a080-4b33583275fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461909cc-eb71-4412-97b9-e6d8c80a7595",
        "cursor": {
          "ref": "26d863a7-d899-4d16-902b-b298c761db37",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb064f28-ccec-4141-883e-368588dcae57"
        },
        "item": {
          "id": "461909cc-eb71-4412-97b9-e6d8c80a7595",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "30e8ba48-2ab1-4063-bf39-e17f0aa825e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a53b16-60a2-417a-9e35-575211d1195a",
        "cursor": {
          "ref": "61088fda-457f-4e15-a388-a63d4d87f8ef",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b6fd2274-6f9c-4da7-ad20-b7950874ec6c"
        },
        "item": {
          "id": "71a53b16-60a2-417a-9e35-575211d1195a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "13e80d7b-25bb-43e0-852e-98f22321e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dba2754-77e6-4e65-a205-14ef78da3b49",
        "cursor": {
          "ref": "f699fc91-bfab-44e0-8714-af71d4a96545",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "37f03ac1-72d0-4bb4-b6db-5e735467773f"
        },
        "item": {
          "id": "5dba2754-77e6-4e65-a205-14ef78da3b49",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dd6bd5c9-102c-43b2-b503-80aed52a0da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc8d59-c8d6-4618-8ada-b6e58a88c49b",
        "cursor": {
          "ref": "afbd80fe-0e1f-43ae-acbd-0a693f177786",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "783c1f29-afc7-40a2-95ee-69f0fd6e3bc0"
        },
        "item": {
          "id": "1bcc8d59-c8d6-4618-8ada-b6e58a88c49b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "727b1778-e54f-4f03-96c0-317dd3be2f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f104ef77-18bb-4c35-b831-1118f3e9523a",
        "cursor": {
          "ref": "fc3ecddb-1734-49f3-8316-720944e3c0b7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd95b11a-21cc-478b-a248-82082512bee1"
        },
        "item": {
          "id": "f104ef77-18bb-4c35-b831-1118f3e9523a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "165195b7-90eb-475b-8c47-820632a0158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8effbd58-2763-4ba3-b70b-33f77e914a42",
        "cursor": {
          "ref": "708f6806-6aeb-4e0b-af47-07eaf9fb37dc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d99203a-6c06-444c-98c5-9713569766ca"
        },
        "item": {
          "id": "8effbd58-2763-4ba3-b70b-33f77e914a42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f901026e-ee39-4cb9-9255-4b0f62acbcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a423b127-acc5-421e-bffe-dfee105d8368",
        "cursor": {
          "ref": "ee5e944c-30d5-4100-acbd-d4b9d9f8b400",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "afda3050-5e8d-4831-a6a1-809f3b993a6b"
        },
        "item": {
          "id": "a423b127-acc5-421e-bffe-dfee105d8368",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6cc9fb42-6171-4d18-b02e-c637eadcbc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc81a584-2993-4d86-a5e6-d2387f9ec336",
        "cursor": {
          "ref": "a04de9fd-66e1-4b56-ab82-757f15ec387c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "40e3a0b6-d1b4-490f-9f88-7ed1046b7f4e"
        },
        "item": {
          "id": "bc81a584-2993-4d86-a5e6-d2387f9ec336",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b94e3bf6-3063-45d1-8aec-6e87cb83a732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff809d0-73d5-437a-b0e1-15baf374207a",
        "cursor": {
          "ref": "e65013c1-8074-4d88-943c-1c477f336bab",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6992cc4e-8fde-45f4-8124-b88b99d61512"
        },
        "item": {
          "id": "6ff809d0-73d5-437a-b0e1-15baf374207a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f3446e81-713d-4c7b-980b-9df8cba0a899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18eeb63-3bf5-4077-a2dd-57a6676afa8f",
        "cursor": {
          "ref": "38e24064-9d44-464e-9532-c9165767cce8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0876aa3e-ac7a-4400-865c-738e82e8159a"
        },
        "item": {
          "id": "e18eeb63-3bf5-4077-a2dd-57a6676afa8f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "778e52aa-80b5-45ff-b294-64c3ab093ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f77993-810a-4169-b837-066f21824e53",
        "cursor": {
          "ref": "e70bda55-5831-49b2-9afa-2491a837dfec",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f218c01-d95c-48c5-a6c4-2adcb4860ac0"
        },
        "item": {
          "id": "46f77993-810a-4169-b837-066f21824e53",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "56b1653c-0278-49f0-b3a6-2d1fa7410472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74119d5a-81bd-4013-ac74-2b2b0acb0787",
        "cursor": {
          "ref": "c6e405be-6326-42bd-b8f9-ceb2d5a0fa50",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69e3218a-6e78-44c6-a7c5-28f4545912aa"
        },
        "item": {
          "id": "74119d5a-81bd-4013-ac74-2b2b0acb0787",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b5acaf97-93b8-498e-a1d9-f60438d47f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b52ec6-45fa-4287-b533-550a0309ce25",
        "cursor": {
          "ref": "d27948fe-9168-47c1-8981-16c65c030655",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8f6a70c2-0517-4c7f-8fd6-a164ab789669"
        },
        "item": {
          "id": "f4b52ec6-45fa-4287-b533-550a0309ce25",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ff60c26d-1309-4da1-bca5-1393910857d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf10af6-8afc-41ef-9e40-5fef7fac2067",
        "cursor": {
          "ref": "bec04b1b-011e-43a5-91ea-fe046ed4653c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2b78ab3d-7ca9-4a7b-b62f-111a73ce0bbb"
        },
        "item": {
          "id": "cdf10af6-8afc-41ef-9e40-5fef7fac2067",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f3c850cb-0d99-4692-a377-bb0cb13d2bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d70b0-e2af-4c62-8dc3-fcc4fdb6c8f0",
        "cursor": {
          "ref": "075b379d-f867-41e2-a45f-114f8cf66c2f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "de4ca108-35de-4830-8f7b-d88c917f0542"
        },
        "item": {
          "id": "694d70b0-e2af-4c62-8dc3-fcc4fdb6c8f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ec868024-9ba1-49e0-80ae-d2c547c1f905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acad24ce-081d-4739-b254-ef294a17ed6c",
        "cursor": {
          "ref": "9e4a25fe-2825-4ffe-ad9f-9d1fee32a484",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d3fdc0b0-6a24-4b4c-8c66-03c276eec3af"
        },
        "item": {
          "id": "acad24ce-081d-4739-b254-ef294a17ed6c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f99e0bdc-5646-44bf-a0d6-e873aa16dd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89300fed-3d99-4cca-8cbb-2775a475367f",
        "cursor": {
          "ref": "b7b8a9f9-3650-473f-8580-2a312b4c7b66",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "137ca440-0a81-4bd9-9796-7fe6942fb7bf"
        },
        "item": {
          "id": "89300fed-3d99-4cca-8cbb-2775a475367f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e397bb4b-ba1e-4d50-85f8-f3f65341c2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67898c8f-8c5e-4754-a905-240859e77b97",
        "cursor": {
          "ref": "c762d3d7-df4e-4126-b3c5-a3aa4af700f8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2d0cd9de-b6eb-46ee-be7f-07486706eb75"
        },
        "item": {
          "id": "67898c8f-8c5e-4754-a905-240859e77b97",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b56d0867-2448-47f3-8012-1cb55b5e04e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee500bb2-3b81-4b28-aad8-f85388fcc5cc",
        "cursor": {
          "ref": "f9c3e6e8-5539-4f08-9900-1e0dfbb9ffef",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "19c38ba6-8e35-406d-9cc6-76e23eb7c529"
        },
        "item": {
          "id": "ee500bb2-3b81-4b28-aad8-f85388fcc5cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "922e5652-12c7-4483-b73a-8ee06fcd166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbefef2-e8d9-4b07-8d43-04b13ce077c3",
        "cursor": {
          "ref": "ea100135-a374-4ee0-bd88-abe3aa77460c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bd58d718-386e-4123-aa0d-8b64417ece6a"
        },
        "item": {
          "id": "5cbefef2-e8d9-4b07-8d43-04b13ce077c3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7822608f-dfb7-4911-b226-fdc5ac1ba3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec47066-c4ba-444c-a12b-0afe3183409f",
        "cursor": {
          "ref": "9a6ec41a-0899-4310-b5e8-fbea1b33de8e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fdb5088e-4e5c-48d8-94ff-b3fd84437737"
        },
        "item": {
          "id": "5ec47066-c4ba-444c-a12b-0afe3183409f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "139a3fc6-cc52-488d-a932-3a95ec32c895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7681966-55fc-4cea-aee4-73582034067b",
        "cursor": {
          "ref": "7bc85f9d-3ede-480e-a3c0-1c8448cd086d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "85e96e61-36fc-478c-b2a4-a895058f7051"
        },
        "item": {
          "id": "d7681966-55fc-4cea-aee4-73582034067b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b8d97b23-463e-44cd-88fa-9bc21b3585d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385728f8-ed0f-4dc7-93b4-938ae2b32e75",
        "cursor": {
          "ref": "7b98ea73-8d0b-449d-9164-299c2dccd91c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4293ee2d-375a-463f-8f35-2a68f4fc1a0d"
        },
        "item": {
          "id": "385728f8-ed0f-4dc7-93b4-938ae2b32e75",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6078d0f8-b399-4a0c-9b67-f02810816c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dfa1cf-f783-449f-af62-551642826fcd",
        "cursor": {
          "ref": "69a40045-a7c0-42e0-8e03-437be29ca221",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e7bc0aec-4495-4740-8aa2-ec320ef4ca52"
        },
        "item": {
          "id": "55dfa1cf-f783-449f-af62-551642826fcd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "13108f94-7fa6-4fd6-9497-a61a95275f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf435cb-e144-49d6-9b2a-02f4fdd6733c",
        "cursor": {
          "ref": "14066cc7-45c8-43c3-a39e-e75a8051091f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "970eb19a-4f45-4fe8-9a5d-6479b5819833"
        },
        "item": {
          "id": "fdf435cb-e144-49d6-9b2a-02f4fdd6733c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8013d991-627e-40f1-aaec-5fecd399bb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f05647d-8e73-4ea7-94a8-0838b300cb70",
        "cursor": {
          "ref": "233aad2a-74f7-4451-bc2c-62b03775558b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c9555294-3b67-42d0-9606-9b6c2a278be3"
        },
        "item": {
          "id": "3f05647d-8e73-4ea7-94a8-0838b300cb70",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dadf44e6-0f46-498c-8e4e-79c3abfea972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc0030-be35-4e9f-b4f2-f0a487c4f78d",
        "cursor": {
          "ref": "4fdb85f1-8f1e-4673-b5d6-e7cfcf0ce3db",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "54d4e914-c106-4b6f-8e21-b973bd588ee4"
        },
        "item": {
          "id": "7fbc0030-be35-4e9f-b4f2-f0a487c4f78d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5972b8c8-3dc3-4c5e-b7ab-0a639ea47c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf6c094-e7f7-4a5f-a3e0-b5075af3efb8",
        "cursor": {
          "ref": "67d9351f-3ac1-4bf2-a713-293ef2c1e9c9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "88a0ad7e-af7b-442c-b0c4-6abf324af6ab"
        },
        "item": {
          "id": "7bf6c094-e7f7-4a5f-a3e0-b5075af3efb8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1fc05fac-0d6e-4469-9b72-f7dad425dc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f18004-9979-4ad2-b523-ef3ed7ec272c",
        "cursor": {
          "ref": "a5af4073-afff-40ab-b7b3-a0dd20c944ae",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "97b6fde0-7582-4fcb-a240-a4fab9258f97"
        },
        "item": {
          "id": "69f18004-9979-4ad2-b523-ef3ed7ec272c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0e053782-30d3-4d47-9066-5d9b124c8c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092059bf-38bb-4cce-9e9f-fa2a0c607c5b",
        "cursor": {
          "ref": "cc97437e-a679-494c-b095-5789bbf53b40",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2ed5f483-f1d4-47e2-b491-28bd582d7193"
        },
        "item": {
          "id": "092059bf-38bb-4cce-9e9f-fa2a0c607c5b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3c8f0d00-0e8b-47b7-bd81-570e7cd3319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3bf706-58a7-4b70-a0c4-f1ed4fa67a75",
        "cursor": {
          "ref": "af63b54d-5d4d-40cd-a77c-f9ee94c1a310",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "66f7fd5a-316e-46a4-9116-eee7b6f46a11"
        },
        "item": {
          "id": "cc3bf706-58a7-4b70-a0c4-f1ed4fa67a75",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "570a3d01-abc6-4dea-8285-5717b028f6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60e0224-f39c-4435-bd96-119c405b54b4",
        "cursor": {
          "ref": "6d5e8701-a271-4ff7-9892-d3bbaa5a2684",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e81e57f-d534-47bd-b3ca-a9ed6934fd8a"
        },
        "item": {
          "id": "a60e0224-f39c-4435-bd96-119c405b54b4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "05c807b5-300a-4de2-9037-22466c44e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f964b36-9d1b-4788-af59-2be186a8b5db",
        "cursor": {
          "ref": "4ab34feb-21dd-47b8-afc1-c696e64880d0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "41c21455-98f7-446a-b053-83aa447d8c66"
        },
        "item": {
          "id": "6f964b36-9d1b-4788-af59-2be186a8b5db",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0bd23d3e-a6df-413d-b4e4-e9c88e1c2343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba1d076-bd21-4b88-b134-530870e0127f",
        "cursor": {
          "ref": "896a9609-45c6-455b-8c9e-dc1c3766027a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e3eb4f7b-0c58-4d2e-8c66-3a9c8b5a5f5c"
        },
        "item": {
          "id": "cba1d076-bd21-4b88-b134-530870e0127f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "883ee92b-7d01-4a08-b67d-4a4248b9a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4cba3f-3017-4b58-bace-81f516eb7575",
        "cursor": {
          "ref": "609f7491-b657-43e6-b61c-6d1387367e70",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "83d0e088-73c1-4553-b428-0b03cef1aff7"
        },
        "item": {
          "id": "fe4cba3f-3017-4b58-bace-81f516eb7575",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64db0a8b-0c83-4abd-a513-783298d2edf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bed1075-7c68-496f-8d91-b0892c4ee39b",
        "cursor": {
          "ref": "81c76be8-98f0-4831-9bea-cdff5282e3fa",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb804e52-417d-47db-8639-3634dc0ea7f0"
        },
        "item": {
          "id": "4bed1075-7c68-496f-8d91-b0892c4ee39b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9eba2012-cc7c-4d07-ad5c-0b2dc76ab929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5940265-f15c-42bc-a2f9-e7e528889b52",
        "cursor": {
          "ref": "17e56dbc-4b7d-4997-b1aa-3dad04a2eb52",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6a2503a2-2b58-4cac-9cfb-5165d37dccbf"
        },
        "item": {
          "id": "b5940265-f15c-42bc-a2f9-e7e528889b52",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ee78e015-5cb9-4485-85e2-a75aeffec4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80026311-4b58-407f-9ea2-0979538ad90c",
        "cursor": {
          "ref": "a82ca2e2-afb6-4908-afc7-6272bda9e960",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1357caa-a9e4-4711-b3de-0826b1c41914"
        },
        "item": {
          "id": "80026311-4b58-407f-9ea2-0979538ad90c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "71bc64bd-2f9f-4074-b3b2-903c3d769487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925a9d6d-bf59-4f18-beef-9764612d717f",
        "cursor": {
          "ref": "a30f961e-883f-4755-9f5b-21d0d8813941",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cfe34156-3ad0-45db-99ad-34205d3374f5"
        },
        "item": {
          "id": "925a9d6d-bf59-4f18-beef-9764612d717f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "016ca8c4-61f6-4df6-9c1e-205300be700a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac31896-3086-4ff2-96d5-1365e766879f",
        "cursor": {
          "ref": "2e27ec52-2222-4269-ac2d-c1ae87143875",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9cc8859b-19f2-4e9a-b607-99ba1c594a12"
        },
        "item": {
          "id": "6ac31896-3086-4ff2-96d5-1365e766879f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7718ad05-8da8-4071-94d4-49cc254629ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e3d025-8069-479a-a29a-eb826fd1205f",
        "cursor": {
          "ref": "e7ff9328-fb85-48df-b626-291b4efc3672",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d9091f24-b7b9-440e-bee1-0dca20b37cc4"
        },
        "item": {
          "id": "d3e3d025-8069-479a-a29a-eb826fd1205f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "404fdabe-2708-4c20-a408-22f98589f4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fdb5c4-e329-43c2-b581-381e75e4bd96",
        "cursor": {
          "ref": "a0d8cd0a-cc99-48cb-be2b-b3ba2ddd9114",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c0c8dcb-2623-4d33-81d8-a5d88fdf0048"
        },
        "item": {
          "id": "c8fdb5c4-e329-43c2-b581-381e75e4bd96",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4440f672-b614-4e98-8e47-1c62cd413490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38b5210-3cea-4566-be72-ef979e9ba8a0",
        "cursor": {
          "ref": "deaddaae-4dd8-4760-893d-b3f18563050c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fef11cad-1e21-4dd3-804e-f8c2a1c92650"
        },
        "item": {
          "id": "a38b5210-3cea-4566-be72-ef979e9ba8a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ef2fd9fe-324d-4768-969e-de45c56c31f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7392397c-eb44-4540-aa26-0b381d34d052",
        "cursor": {
          "ref": "96a42bbf-ff8e-452f-89e0-0b1d6917d7c5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8c121718-6bde-4764-b1ba-57c8dcc89ddf"
        },
        "item": {
          "id": "7392397c-eb44-4540-aa26-0b381d34d052",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "38901656-f4fa-4685-a1f0-8df07f749d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ab5e39-f8e6-4741-a1e2-dc6aa29b2176",
        "cursor": {
          "ref": "8d9de102-6a7a-43b4-a661-e927dab1dc10",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "19414a70-536c-46ad-8a03-e2287f2c1a79"
        },
        "item": {
          "id": "a8ab5e39-f8e6-4741-a1e2-dc6aa29b2176",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eb44e0ee-e924-4a79-8463-f6c8ad0fedce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c67e719-5723-46e0-9f1a-ddfe35bd71d2",
        "cursor": {
          "ref": "a36e0893-bc6d-4185-91cf-c2814a88d729",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "32af9984-ed63-4941-a317-7bac4a8bbb87"
        },
        "item": {
          "id": "7c67e719-5723-46e0-9f1a-ddfe35bd71d2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e9dba962-ccd0-449b-a26f-e63ca204eda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2671d68d-d8f9-4cf0-a1af-add7f4292542",
        "cursor": {
          "ref": "23f9303d-e2fe-4e1d-a16e-0a40c0d1fc82",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df58702d-c4ab-4524-b2ca-2295550ded73"
        },
        "item": {
          "id": "2671d68d-d8f9-4cf0-a1af-add7f4292542",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f5b3fd78-9d69-4916-aa51-958638f6a0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7274e90-ef03-481e-aaa6-92dad3cbb5bb",
        "cursor": {
          "ref": "dfad6e8c-8bbe-4b37-87d5-d113228b1d52",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fca5067d-ed96-4352-80f4-90c9c9d1b223"
        },
        "item": {
          "id": "c7274e90-ef03-481e-aaa6-92dad3cbb5bb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29078623-5d27-43ed-aa28-8681bd7cbf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d222bf63-3e4f-48ba-9cff-1fe841088b6e",
        "cursor": {
          "ref": "12956329-4e70-4a2f-a6f0-96992d54b4cf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6d3044f8-1550-4325-b929-299802476d7d"
        },
        "item": {
          "id": "d222bf63-3e4f-48ba-9cff-1fe841088b6e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bcf84a1c-d147-4bf2-adca-7899dd271daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ba12c9-7858-4972-80fa-7cb80cbb2d47",
        "cursor": {
          "ref": "22bfd63b-17e5-4d6d-a89a-721640e6bc97",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "49acdb61-71e7-4416-a57f-95fb77aef18c"
        },
        "item": {
          "id": "b4ba12c9-7858-4972-80fa-7cb80cbb2d47",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "80c034f6-6b9f-4b37-a23e-2dff888c8790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18498bc6-43e6-4eb6-933d-62689000e2e7",
        "cursor": {
          "ref": "80cd558f-815d-4b4a-86e0-7a024585fec0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7b4db213-7300-4ee8-8ef1-875e6036131f"
        },
        "item": {
          "id": "18498bc6-43e6-4eb6-933d-62689000e2e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "720d5762-de3e-418c-a1ca-dec7aea54134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93edae20-7aea-4bdd-a7fe-33a784320824",
        "cursor": {
          "ref": "aaeff84f-03d4-4bb9-bd75-29a3f9e8319e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "30c3ef8a-d967-4a05-8da8-f36f4c6edb9d"
        },
        "item": {
          "id": "93edae20-7aea-4bdd-a7fe-33a784320824",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f7d23eaa-8a56-494f-a2a1-9295a12c9e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2bb8c6-70dc-4751-bbec-002647331dc1",
        "cursor": {
          "ref": "9c3baf09-2a7e-46e1-9722-bbdebcf855a1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "19166d87-90cd-43a7-916d-14a50d1944e1"
        },
        "item": {
          "id": "2a2bb8c6-70dc-4751-bbec-002647331dc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cb8f86d1-b2cf-4080-a88b-916219248bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2c6573-4313-4b10-bc11-a99f5d65fc60",
        "cursor": {
          "ref": "fe7c2582-6b06-4579-a1a5-0a39c12046cd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "66a72e18-d8e2-4676-ad7d-fb9ec64a58d5"
        },
        "item": {
          "id": "ba2c6573-4313-4b10-bc11-a99f5d65fc60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fd39e7f5-ed96-4d43-8fcc-b144c7b2893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966f25e6-7a4f-412c-8a68-ac0bfa927a6e",
        "cursor": {
          "ref": "60da6eeb-f441-4551-be83-d5a7bfdb4b99",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "92453127-e633-4b09-bc32-76d79fdc196b"
        },
        "item": {
          "id": "966f25e6-7a4f-412c-8a68-ac0bfa927a6e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46308da6-2a6b-40c6-9051-1cf03f17cb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a7651b-f56f-49ca-987b-18cf32649d35",
        "cursor": {
          "ref": "e2e115de-46b2-44ee-b80a-d32278c5b96d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8ab7d3cb-4580-449c-985c-4d7d3391c5de"
        },
        "item": {
          "id": "c5a7651b-f56f-49ca-987b-18cf32649d35",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b5637e0b-9e96-430f-86ac-00f442889af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1591b8-575f-44db-8dc5-3153889bfcf6",
        "cursor": {
          "ref": "e7b1012f-f130-4426-b65e-34f00e683318",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f6959b49-ee80-4c5b-8a13-8bdfa4862c43"
        },
        "item": {
          "id": "7e1591b8-575f-44db-8dc5-3153889bfcf6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ef30d144-5539-4e05-a28b-2a2c8ba1436a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3405c88-f88c-4aee-a245-db2593a097e6",
        "cursor": {
          "ref": "9eb3783b-31dc-4bff-b7ef-bf933a65fc34",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca3d579a-9823-4276-8814-da7f47136402"
        },
        "item": {
          "id": "d3405c88-f88c-4aee-a245-db2593a097e6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "78069fa3-6a80-4ccf-b5d9-c4b2632cf7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd1cde-0866-4d1d-8398-49a6296b2e7e",
        "cursor": {
          "ref": "054c5fe9-e151-418f-a886-a201570c51c0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2d455620-890f-4e49-826e-14e9fc8c3aaa"
        },
        "item": {
          "id": "0ebd1cde-0866-4d1d-8398-49a6296b2e7e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "79ab2981-69e4-4a87-94dd-9007be029ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54daf3cd-3950-46a3-8f8d-b8098e58ff8e",
        "cursor": {
          "ref": "265c1565-4aa9-4709-8d1a-76ca98866824",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "73babfee-0096-4164-b4d9-7f77515cbd62"
        },
        "item": {
          "id": "54daf3cd-3950-46a3-8f8d-b8098e58ff8e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bd9db960-da63-403d-a6ae-93469355f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585485ea-7fd5-427d-82ec-be81eeb099eb",
        "cursor": {
          "ref": "27101ead-c354-46d8-a27e-08e96cab6dfd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47ddd1dd-a955-4229-a971-67b6ed8d699d"
        },
        "item": {
          "id": "585485ea-7fd5-427d-82ec-be81eeb099eb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "35d630aa-77f4-47fe-a279-1c9a5d08e170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c2eb28-bbc1-49a2-a3b5-ed178112a336",
        "cursor": {
          "ref": "ed37aafa-b658-4975-9f39-ccc5c73244fc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2cda8406-980b-4dce-82eb-0a4803098e02"
        },
        "item": {
          "id": "74c2eb28-bbc1-49a2-a3b5-ed178112a336",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "efe5503f-b283-4647-a5bd-3270aa15d383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9284c594-48e3-4b9c-a14d-dfc799324d21",
        "cursor": {
          "ref": "9737d4fe-add9-4fac-a863-8b12f6776436",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1d31f156-c040-460a-9779-753671ee0178"
        },
        "item": {
          "id": "9284c594-48e3-4b9c-a14d-dfc799324d21",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83b4f761-43fb-48fc-93b8-00caf420084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9a181-2eca-48a6-a5b5-0bfce82993a7",
        "cursor": {
          "ref": "8943611e-bee8-448c-b2a2-1a02fad67006",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e2303f13-d4cf-42e2-97d7-6450bd51c808"
        },
        "item": {
          "id": "75c9a181-2eca-48a6-a5b5-0bfce82993a7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e23bf04d-2968-4404-ac01-b6686ef366cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1346045-675c-47c1-aa6d-234f0979889e",
        "cursor": {
          "ref": "bcbf790b-0f9f-45a0-a535-95cd22ee5b89",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "461a0f7f-32e5-42bd-94cd-1d566f6f6876"
        },
        "item": {
          "id": "c1346045-675c-47c1-aa6d-234f0979889e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2041a3b1-ef58-43d8-b32c-5df1efc6ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7b82a9-c34d-443a-b864-e9d4c2295745",
        "cursor": {
          "ref": "5b227660-b472-40de-8544-37ab095c544e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "83640db1-8710-4fe7-a9d3-5e12f727a0e7"
        },
        "item": {
          "id": "cf7b82a9-c34d-443a-b864-e9d4c2295745",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "19fa4163-b667-4fa0-af35-b088fcbbd4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3767c01c-d0f3-4cf6-badb-832a9bd67da8",
        "cursor": {
          "ref": "613e38f8-484b-4af9-8429-5278a31660fb",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4635c707-d687-4eba-a67a-2cb3bdc808ac"
        },
        "item": {
          "id": "3767c01c-d0f3-4cf6-badb-832a9bd67da8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "053567fa-8359-4193-a362-b5d5251fef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fdebfd-8c71-4523-aa23-9532b318d657",
        "cursor": {
          "ref": "031234fc-67ff-4cff-9d7a-8a38336f4813",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "55d904f1-3af6-4492-a712-9a5f3052bb4e"
        },
        "item": {
          "id": "74fdebfd-8c71-4523-aa23-9532b318d657",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "39ef4ca3-c7d3-4a11-b087-7e483d948b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f47dfa6-7cd1-4924-95b0-cf442b0fdfc4",
        "cursor": {
          "ref": "26375b8c-eb92-47d0-a1e7-160b9a5cf721",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db6c734a-c320-4a4b-b8dc-c937cfce42dd"
        },
        "item": {
          "id": "4f47dfa6-7cd1-4924-95b0-cf442b0fdfc4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ef5d7b59-4238-4356-a836-c4aa804a988c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892177cf-727b-4534-aaee-e89258a2ecf7",
        "cursor": {
          "ref": "6e755e6b-a1a5-471f-bae7-a89d8c32a9aa",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "25764773-c35b-4d81-84ef-1a0c1ea48fa7"
        },
        "item": {
          "id": "892177cf-727b-4534-aaee-e89258a2ecf7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f300a741-3834-412b-a8ab-70e907b99077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3394e603-e9ef-4b9f-afd4-dc74eddea191",
        "cursor": {
          "ref": "784e4eea-2fd5-49dc-9155-525138509b87",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fe090039-544a-4a20-8cbb-d098c5a603f6"
        },
        "item": {
          "id": "3394e603-e9ef-4b9f-afd4-dc74eddea191",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ef792307-ca90-4519-9801-e52ea1f7badf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa91ccf1-cbdf-4f11-9438-7fd35b7b80b3",
        "cursor": {
          "ref": "5a8074a3-1512-4cb8-9008-039fd338d5ee",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0c2efeaa-3b74-494a-85be-1d27534470ac"
        },
        "item": {
          "id": "fa91ccf1-cbdf-4f11-9438-7fd35b7b80b3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d76c3a5b-347b-4e5e-b758-7d5c8e0e3210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee42acc1-0c87-409c-8ad7-ec1116acd52e",
        "cursor": {
          "ref": "c6ac4659-36e9-4d30-803d-dc8fd9dccfd5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e825077f-2240-4a9a-ab2f-3ce3b7cefd9c"
        },
        "item": {
          "id": "ee42acc1-0c87-409c-8ad7-ec1116acd52e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a96ad487-c119-4ea6-abf9-3591b3ffcfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2463302-b8b1-490b-9db2-eea515f54243",
        "cursor": {
          "ref": "2be22fae-335b-439e-8da9-934536b61ccf",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fbe37df4-852d-4073-9c2c-7eb8e0ea1a79"
        },
        "item": {
          "id": "f2463302-b8b1-490b-9db2-eea515f54243",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4777b6e0-d490-4e91-a317-fbe34e398d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb074463-3d4d-4c63-a42e-b66781386a4a",
        "cursor": {
          "ref": "28252285-44e2-4454-88da-6f51b93c36dd",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e999b03-97c1-4196-aac1-a1a73a573361"
        },
        "item": {
          "id": "fb074463-3d4d-4c63-a42e-b66781386a4a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e63c8a99-f94f-43c4-9848-02df1f186011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06654352-5791-4b9c-b5c6-466a5f8bfa2b",
        "cursor": {
          "ref": "be3b282c-8864-4656-acf0-5d3f0a65fe0e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "be98b8ee-6e2e-4630-803c-ace1cc8eaca9"
        },
        "item": {
          "id": "06654352-5791-4b9c-b5c6-466a5f8bfa2b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1ff83476-6e35-4153-86a7-45b103314976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f444d3a2-3602-4cfd-bb7d-a17147903b00",
        "cursor": {
          "ref": "a5eb3d4c-64ce-4cdc-96e0-73e2797d5b5b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "25f223fd-f2ed-4b5b-918e-fe8150bc6629"
        },
        "item": {
          "id": "f444d3a2-3602-4cfd-bb7d-a17147903b00",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "480a65e2-2a1a-4db5-9efc-492f5740e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823f5971-558c-4c65-b2a8-61ed17ea9e16",
        "cursor": {
          "ref": "b78d9c75-9076-4cfe-80e4-d34028c325b1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "88baee59-bb08-44bc-b194-b7faf9bd962b"
        },
        "item": {
          "id": "823f5971-558c-4c65-b2a8-61ed17ea9e16",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d50fcc6-da78-4765-a11e-0d4e4ab8f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54235140-8c49-43c4-a434-75c23658a41f",
        "cursor": {
          "ref": "f461b277-0714-4d22-8c0b-b880f2104423",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e177ee7-7796-486d-b63d-563ce43f91c0"
        },
        "item": {
          "id": "54235140-8c49-43c4-a434-75c23658a41f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5ae2c498-7bd3-4bb4-90eb-dc49dd96e440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1087a09f-5f45-48dc-98ec-e2cdf14cc027",
        "cursor": {
          "ref": "7d993d79-ec4f-4648-a837-a568fd4d842f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ee4ba224-091b-4695-b2f9-3095b85d8132"
        },
        "item": {
          "id": "1087a09f-5f45-48dc-98ec-e2cdf14cc027",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b2af1c26-f26a-4065-8bab-7f41f197a21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b10a17c-ac6b-48ef-b699-687ef6cd519f",
        "cursor": {
          "ref": "20ff929c-acd8-4f96-a5ec-f367ed910b34",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b3248bff-e600-49b5-a86f-06450b52419c"
        },
        "item": {
          "id": "8b10a17c-ac6b-48ef-b699-687ef6cd519f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5b3462bb-8c14-42e7-b18d-4e28c52335da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63bab81-e470-4e11-b014-35724618c947",
        "cursor": {
          "ref": "38d03aff-d1ea-4e56-a39b-0ad79e1fa922",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6541a3f1-ba91-4044-9aad-6d06b594a8a1"
        },
        "item": {
          "id": "c63bab81-e470-4e11-b014-35724618c947",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0921c131-57fa-456d-84d3-7d01e8ae6c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a20a80-a326-4d0b-891c-b5e405d9ee05",
        "cursor": {
          "ref": "6b59ecd5-7d4a-445f-aec3-a5963975e9fd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f732362-cb0b-48c6-b8b5-93c3fdeb5cd5"
        },
        "item": {
          "id": "b1a20a80-a326-4d0b-891c-b5e405d9ee05",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0c60dc24-7200-4437-8908-01839f4af407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bfc205-a550-4dfe-b559-36d5e0e1ba95",
        "cursor": {
          "ref": "593c6cbb-3fe0-4e24-b2a1-afbd79f58a00",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "98cc8cec-cb7c-4b0d-aa69-d7de122199c9"
        },
        "item": {
          "id": "74bfc205-a550-4dfe-b559-36d5e0e1ba95",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f837242-58c1-48ff-b6f6-0823f204ff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6ffd8-4799-462f-b8a0-09a1d330ffd7",
        "cursor": {
          "ref": "c656b61b-2bbc-42ca-9431-c61f732a8cbd",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ef4ea61b-8a00-424d-a54f-ec9a9b0b2a22"
        },
        "item": {
          "id": "cca6ffd8-4799-462f-b8a0-09a1d330ffd7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "770cb621-9776-4c7b-a77b-e026fc577f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834a3931-6ea1-436c-b538-639640aa17b3",
        "cursor": {
          "ref": "c2d33ca2-7fcf-4dbe-adbe-d2cfbc890c04",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a99cadba-f5cd-45f6-8134-02f17e4e5605"
        },
        "item": {
          "id": "834a3931-6ea1-436c-b538-639640aa17b3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b6753776-2a0a-4158-9cd7-b859441c9bb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560db7c5-002f-40b7-afbe-39a516889f27",
        "cursor": {
          "ref": "9a28e269-6394-468f-8681-de497ba713fd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a04d621d-2747-4e4e-839b-f9df2d309779"
        },
        "item": {
          "id": "560db7c5-002f-40b7-afbe-39a516889f27",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "43750dfd-f9a3-422a-8aa6-14dac5228007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "eb25d117-15db-49e0-bc54-32d99b2c235c",
        "cursor": {
          "ref": "d300abf6-28e5-4ee3-a28d-42c6598dd582",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b4fd49e-2179-417f-b796-0da5a670b6ac"
        },
        "item": {
          "id": "eb25d117-15db-49e0-bc54-32d99b2c235c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7809d701-5ff4-4c5d-b94b-4153c4eb611a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8941e28d-8a53-4348-823c-175199e8555d",
        "cursor": {
          "ref": "b67272ec-25af-42b2-8de3-2815b603e0de",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "30f47610-ac46-4961-9d75-815fc171eb60"
        },
        "item": {
          "id": "8941e28d-8a53-4348-823c-175199e8555d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2fbf25d5-76ec-4ef2-ba5a-3a4575438dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "34db891a-024f-476c-b9fd-7ba93f3df322",
        "cursor": {
          "ref": "b09e151c-a131-43ca-ab2e-f8b39e7eeb00",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "471c433a-72e1-4d76-bd80-3cd96750bbdc"
        },
        "item": {
          "id": "34db891a-024f-476c-b9fd-7ba93f3df322",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ee69a862-7b77-4ed5-ba4e-c400726a2240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "047352c9-b12d-4792-aa87-6972aab425f2",
        "cursor": {
          "ref": "3444782a-7e8b-49ca-abdf-21aae8cf173f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ac63385f-4d4d-46c3-aa41-5bb8230254ef"
        },
        "item": {
          "id": "047352c9-b12d-4792-aa87-6972aab425f2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4865f71e-bfef-4139-86d1-fb32bd160219",
          "status": "Created",
          "code": 201,
          "responseTime": 10291,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c41381-6175-4918-af91-8022df27ddf6",
        "cursor": {
          "ref": "a59b4d85-a655-4faf-a372-aca21455e69d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "88c8e1ef-45ef-4141-aaaa-eab4ba9fc6f5"
        },
        "item": {
          "id": "10c41381-6175-4918-af91-8022df27ddf6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "66001a1a-760f-4b2b-980c-8b1107db92fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a42ffa18-9c73-4715-9694-1ddd7866eae0",
        "cursor": {
          "ref": "84394281-4a0d-42c5-bdb7-cff0c5f104de",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fde0cd8b-121b-476b-be0d-8025e9638ba0"
        },
        "item": {
          "id": "a42ffa18-9c73-4715-9694-1ddd7866eae0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fc2323cc-3da5-4459-b2b0-b95a5ad9f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9576c0d3-d9a7-45d7-b02c-79ce411e8799",
        "cursor": {
          "ref": "08346365-6cd9-4991-84ad-dea5ce7fcc19",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0249198d-e17f-40f8-b0c7-2d2edbbfdc5b"
        },
        "item": {
          "id": "9576c0d3-d9a7-45d7-b02c-79ce411e8799",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b32bfb89-ca5a-4f58-84e0-6c812c18c4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc80022-b9a3-40b7-aba7-ca2cf7f88b36",
        "cursor": {
          "ref": "6ee9eb1e-2557-4180-bc7d-a829eb54d6bc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "797264a1-a887-4ed0-b167-77f671ffb293"
        },
        "item": {
          "id": "5fc80022-b9a3-40b7-aba7-ca2cf7f88b36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b190af3e-f4b2-420d-b5d8-7af575dbee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6efcf0-3f29-4398-8d70-23e9ad80a3b3",
        "cursor": {
          "ref": "d4b5fcf0-bc67-4d59-afcc-f18d49634d19",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6b8396af-9063-490e-a412-87fad20968eb"
        },
        "item": {
          "id": "3f6efcf0-3f29-4398-8d70-23e9ad80a3b3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "88c63681-195c-4196-8369-058cb402aead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8ae4a0-4630-48d1-8f43-b245971632ff",
        "cursor": {
          "ref": "ff000ada-0478-42ec-8d03-71631a379958",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c4ccf957-f00b-4600-a99a-0d3c5a5271ed"
        },
        "item": {
          "id": "4b8ae4a0-4630-48d1-8f43-b245971632ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "79423877-88ec-4897-b601-63e5fe2dc567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b653db-9672-48d4-941a-23806324d67d",
        "cursor": {
          "ref": "4e8c0ce8-e74e-4b72-9e19-3a91b5e23667",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e1c328c9-fa5c-4581-b4c3-70286f932e33"
        },
        "item": {
          "id": "13b653db-9672-48d4-941a-23806324d67d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c43df7ea-8551-4a72-b485-0bed6060b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6aeef5-ea0c-4620-aa42-36a4bd197590",
        "cursor": {
          "ref": "ec28e2c9-b539-4fd3-8807-f5ffc0a02c0a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a374c05-9aeb-42f6-9525-e27a0c1d5b85"
        },
        "item": {
          "id": "2d6aeef5-ea0c-4620-aa42-36a4bd197590",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "542ef66e-24d8-4872-9963-ed8d9fa673ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cc3edb-1f33-4dc5-bdc8-2ead3794806b",
        "cursor": {
          "ref": "47ac2d0a-6c44-49b6-a080-e8c2678a70b8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "003f2bd8-4ec7-4cc9-abe2-329b13b626b0"
        },
        "item": {
          "id": "a2cc3edb-1f33-4dc5-bdc8-2ead3794806b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "037b34f0-27f7-4327-926c-6bc6286ed7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3826b86-7fce-4ff7-9e61-4e1f4e6d9ff9",
        "cursor": {
          "ref": "0f1cf9db-5805-4a98-b0e2-647342d8813e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13a65546-0096-4efa-a5d4-85861f70e1e2"
        },
        "item": {
          "id": "b3826b86-7fce-4ff7-9e61-4e1f4e6d9ff9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4d30b7c-7eda-4150-971a-9f382b84eebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d909f5d-a5ea-4e52-a04b-008db95b7a0e",
        "cursor": {
          "ref": "9e6c133c-8db9-46e7-88f4-8ac0e6c018b0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0c8f70fa-67de-4f4a-882c-ce07875fa8ba"
        },
        "item": {
          "id": "7d909f5d-a5ea-4e52-a04b-008db95b7a0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "be2e5847-3ffe-499e-ae90-2bf5d38634ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9190078b-a35f-464c-98df-7eca29627bad",
        "cursor": {
          "ref": "0f2b9f94-39e0-4009-a1f0-ed05b87c4dc2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5b6999f4-1181-42cf-b8ef-d07a124f8c60"
        },
        "item": {
          "id": "9190078b-a35f-464c-98df-7eca29627bad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd64f857-bd98-4770-98ab-0486eb0d60c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891c75f2-d4ae-405c-89e3-781eb04a9555",
        "cursor": {
          "ref": "246a7d79-4d81-4268-a7de-6007707ea0a7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f044d803-15cb-4ba5-8358-4b43126018e7"
        },
        "item": {
          "id": "891c75f2-d4ae-405c-89e3-781eb04a9555",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2eaed1d7-75c4-4caa-8bd9-67c59aeb9414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2319796-8bc2-4888-807a-9d3a0b4327ff",
        "cursor": {
          "ref": "e4004543-4266-4cb5-9444-b10102f75fcf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d0590027-8d2a-4943-b15b-e46fef09c4eb"
        },
        "item": {
          "id": "c2319796-8bc2-4888-807a-9d3a0b4327ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84179b0f-e127-43c2-878b-ee40476deb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bece4b6-55d7-42b5-807a-40411f9bce24",
        "cursor": {
          "ref": "aa20437d-a408-4947-aac8-d901f9a1ccb7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a44113d9-1ba0-480f-945e-b743e497fe04"
        },
        "item": {
          "id": "3bece4b6-55d7-42b5-807a-40411f9bce24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ccedf2b-8876-4da0-a019-34b4e2cabdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795ee4b-b8ee-4db8-a650-88e4804c3782",
        "cursor": {
          "ref": "aa1daef3-f805-4b50-bc5c-ad2885d15032",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7ea11365-e01f-4ac6-a3ac-ab907003b17c"
        },
        "item": {
          "id": "b795ee4b-b8ee-4db8-a650-88e4804c3782",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "461f070f-0595-4dc3-9c64-2cdcff494f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb2f4ff-b54b-4ae0-90fe-34b1ac7022ef",
        "cursor": {
          "ref": "8a8e46a3-56b3-417b-b26e-20c7938d0dd1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d754859b-048c-4403-8ef6-85da4571462d"
        },
        "item": {
          "id": "edb2f4ff-b54b-4ae0-90fe-34b1ac7022ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ce08e1b-d414-4225-828e-d41f481ae832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c40d7-6a39-4539-b9a2-488e2952cd21",
        "cursor": {
          "ref": "e8916522-d7b2-4750-8254-c990d0fbe2a8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7ae3844-ee5d-4737-8dda-0e363887b6d4"
        },
        "item": {
          "id": "044c40d7-6a39-4539-b9a2-488e2952cd21",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9b21bc56-b82a-409a-a419-f0727bb55ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f25fca-4049-4d73-8d32-b73b23d02cef",
        "cursor": {
          "ref": "20f76695-3b10-4adb-a07a-a9f58b7a168b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "00e09fb1-a0af-4a4b-9dfc-2b3eba425e01"
        },
        "item": {
          "id": "42f25fca-4049-4d73-8d32-b73b23d02cef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d7973163-c3cc-4733-bc8c-a29ea67f0e9e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "80c3eeb6-f210-4198-a2f4-079a753afcc4",
        "cursor": {
          "ref": "75657e75-0a7c-4b14-9617-ff6a29463330",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9d9f88e-fd40-47d5-b127-bfde0fb4cf6a"
        },
        "item": {
          "id": "80c3eeb6-f210-4198-a2f4-079a753afcc4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aa80f2bf-5a47-4773-b0de-5bddb6c63a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1846995c-41e7-4a6c-8ea6-255f44392ec2",
        "cursor": {
          "ref": "06923377-307e-4367-9925-4b1217bee20f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d719183-2f08-4b47-8a29-ac6e18493d80"
        },
        "item": {
          "id": "1846995c-41e7-4a6c-8ea6-255f44392ec2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18cab0c8-7d75-4c3f-82d1-4f06afa3137a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d26f81-7cd5-4701-bd3e-f2574431cee6",
        "cursor": {
          "ref": "83dc764c-8f0d-403f-b9a0-619da3a4b463",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "76877092-6585-4a2e-a242-6844d13f2cd3"
        },
        "item": {
          "id": "73d26f81-7cd5-4701-bd3e-f2574431cee6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db6ac7d1-157a-4be8-8cae-93d6baef7674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa4792d-ae1d-400c-a4a3-62aa1b282bc1",
        "cursor": {
          "ref": "6b4d80b7-5559-4184-b1bf-10b718806fe8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0b99025-c0ee-4a56-86f2-afee5ebb49bc"
        },
        "item": {
          "id": "baa4792d-ae1d-400c-a4a3-62aa1b282bc1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "da5e03ad-515e-4df2-8202-7ad7d7c13255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45be3ec-0b1f-4d1f-9862-a7cea0d5900a",
        "cursor": {
          "ref": "c84d6e84-7d62-4150-92fd-cef54d8f8b9d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "891a32e2-75a3-4355-8af8-1006ef6f1230"
        },
        "item": {
          "id": "d45be3ec-0b1f-4d1f-9862-a7cea0d5900a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6adf52d0-d909-4527-9479-684e02d1493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed150327-79d2-41fe-a766-e41d871615f4",
        "cursor": {
          "ref": "396ad5a1-91a0-4def-ac4a-1090353e7703",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d8191b31-3ed0-4161-a39d-dfb6af692108"
        },
        "item": {
          "id": "ed150327-79d2-41fe-a766-e41d871615f4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f3911e3d-6e27-4b64-93db-857f69df9676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb16e5ae-943f-4ccf-8c57-2c9008f287b3",
        "cursor": {
          "ref": "6d05c741-6220-4427-a352-51e1c4e10976",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a8e9237-04f3-480b-986a-301973c85009"
        },
        "item": {
          "id": "eb16e5ae-943f-4ccf-8c57-2c9008f287b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d58f004a-252c-48c7-ad62-5555e503b56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a97b53-058d-4abd-b598-b99592a3fb5f",
        "cursor": {
          "ref": "a06c8c53-5279-4fb7-b208-edd5d6c75926",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "00b01290-8685-4b75-8972-cc687c57e06f"
        },
        "item": {
          "id": "50a97b53-058d-4abd-b598-b99592a3fb5f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4668ab0b-999a-40e5-8751-437c364e0ef1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "45a1a951-08fa-47ec-a5f1-896de8a88676",
        "cursor": {
          "ref": "deec5631-db8b-4aa4-b965-410559fcb476",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5376c35a-702f-4445-85a3-910ddb18d418"
        },
        "item": {
          "id": "45a1a951-08fa-47ec-a5f1-896de8a88676",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e10d4765-74d1-4bea-8ff1-834c9990cb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46924c2e-ec42-42f0-a3c2-5e65048ff7e7",
        "cursor": {
          "ref": "448f0cb1-d55a-4691-8fa1-01791dd4a80c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cbb12f82-34d7-44ff-ab5f-d297fe3aa891"
        },
        "item": {
          "id": "46924c2e-ec42-42f0-a3c2-5e65048ff7e7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05dda292-5945-47cd-a462-1a44fcf955f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1599bbe2-7a12-42d9-bd0e-fe40952cf0a6",
        "cursor": {
          "ref": "381f3246-a195-4478-86a8-f15fdf7d29c5",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "45c1dd53-4413-4a5f-b9d2-f7b1c95a1403"
        },
        "item": {
          "id": "1599bbe2-7a12-42d9-bd0e-fe40952cf0a6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e1afe050-66f6-4ac6-b2ab-5095b9bbddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1da05a-7b95-48d3-8a95-d08f8f88ae8e",
        "cursor": {
          "ref": "ef2ae577-c00a-4a69-93f2-d28a26489bea",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8e6e9fdf-c697-4fc6-a24c-f49f87c1ce59"
        },
        "item": {
          "id": "8e1da05a-7b95-48d3-8a95-d08f8f88ae8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e542ff02-2c17-4cf7-a905-37e5162dd555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bf34c7-f916-4e1c-89e8-7e346e579d5b",
        "cursor": {
          "ref": "377fff65-c249-4d14-9c1f-74284fa9056f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81b921bd-9056-4f89-9ad6-4cc97b4e2839"
        },
        "item": {
          "id": "c9bf34c7-f916-4e1c-89e8-7e346e579d5b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c84fbd9c-1c77-4a3f-b12d-1ffa10ba75f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e648a-4d7d-427a-81d9-791360442c29",
        "cursor": {
          "ref": "52b07e9d-0da5-477c-8f3d-f156d8d0006e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9eb1fa33-734f-48fa-a001-cb5f82a87e7a"
        },
        "item": {
          "id": "e31e648a-4d7d-427a-81d9-791360442c29",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2e899a3-77c6-43e2-ab72-b8818bd8096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39ed808-a75a-42cf-b570-9c7c57d56ffe",
        "cursor": {
          "ref": "69074657-94fa-4781-9212-98cf4e61706b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "070c8ed4-7a83-48ac-9cb6-e21e9f7b4b68"
        },
        "item": {
          "id": "f39ed808-a75a-42cf-b570-9c7c57d56ffe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c1335316-2eaa-42b4-bdf3-6e960916e39b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b5b4329b-cb4b-4e55-9a9c-59323501d52c",
        "cursor": {
          "ref": "a0ddea25-7a5d-44d0-a40a-c03130a2d72f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8ae4a7b5-8ee1-4608-96a9-672e43480337"
        },
        "item": {
          "id": "b5b4329b-cb4b-4e55-9a9c-59323501d52c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb2b4947-ac56-4854-a412-aa19774550ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3146afd-5114-4359-87b1-78d8db247a5b",
        "cursor": {
          "ref": "ec347260-6270-4e28-8514-f848ea145034",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "239c0f26-95f7-49ea-8e2d-bf1e8a511019"
        },
        "item": {
          "id": "a3146afd-5114-4359-87b1-78d8db247a5b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "230d5fcf-b6de-449b-983a-09221b63c9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a94a1f4-ec53-412a-918d-0da73837070a",
        "cursor": {
          "ref": "24a7ee0f-6717-4d9c-ac2e-b278288062f5",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a58d653-231e-472b-89cc-cb6ad7bbe7a0"
        },
        "item": {
          "id": "6a94a1f4-ec53-412a-918d-0da73837070a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ec1d5e7-37d3-47c0-86c7-82f5f5606cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff8178-69b3-4f67-9876-36981f3899d3",
        "cursor": {
          "ref": "e4f0feef-e9a4-4398-883b-31cf5bae2068",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "de7968bd-5ba1-4e06-9dc7-e4fe8b51867d"
        },
        "item": {
          "id": "99ff8178-69b3-4f67-9876-36981f3899d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1113659c-fe22-486e-80b1-6a0cf1bde431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3761ad7b-0824-4aa9-b73f-3c4f81ab38a9",
        "cursor": {
          "ref": "64712878-69bd-4cd6-a045-585450594589",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ebe1c8bf-e9a7-4926-a86e-b217c4da9719"
        },
        "item": {
          "id": "3761ad7b-0824-4aa9-b73f-3c4f81ab38a9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d46f9f5f-e986-4acd-b869-26c82f3ce339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d877c8aa-8f84-45c0-98ab-bf2b0d21776d",
        "cursor": {
          "ref": "729c785d-2cc5-4b6b-a9c7-fb2f4887e3c7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ef6bdb1-a9a8-4057-926d-535de95d3dfd"
        },
        "item": {
          "id": "d877c8aa-8f84-45c0-98ab-bf2b0d21776d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e98090e-def5-4152-b820-f3fa9c41b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7f8f4-80eb-4e2c-91fb-7a3431025fe1",
        "cursor": {
          "ref": "38e0ae20-0124-4382-92f5-f38638815767",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5cb310a3-96bf-4223-88f8-ee38b7237892"
        },
        "item": {
          "id": "59d7f8f4-80eb-4e2c-91fb-7a3431025fe1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "371514e1-9c1e-4844-b2ed-8d828045f018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e9170f-6f36-455d-b486-823a773705db",
        "cursor": {
          "ref": "dfe86639-e964-4222-a522-25a6cc99a053",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6d42ee46-318d-4533-bf52-33e18e370cf5"
        },
        "item": {
          "id": "83e9170f-6f36-455d-b486-823a773705db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "719441c0-71cb-4797-93c8-fd74aac47fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa284b3b-85bf-4d32-ba6c-74dc03cfcd1f",
        "cursor": {
          "ref": "cb571917-5113-4ae4-8250-ce6396b01b2a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ee21da51-4e6b-44e5-9f48-5ac034cafcea"
        },
        "item": {
          "id": "fa284b3b-85bf-4d32-ba6c-74dc03cfcd1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4d884b5-82c1-4672-bd67-d86000db69e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477af3a-fb36-4187-b754-fbe485c18467",
        "cursor": {
          "ref": "d5a51f7d-5f5f-4009-93bd-18f481afa139",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "371fedb1-2f9a-4558-9b22-5b5e6066544f"
        },
        "item": {
          "id": "c477af3a-fb36-4187-b754-fbe485c18467",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ecb2b018-aab2-4e2e-9975-cb36256e1b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925ef3e-a2bf-4a75-89e1-9a315aa7e1e4",
        "cursor": {
          "ref": "bdf2830b-47ab-49b6-a117-8a46369e9ed6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "08ea314d-916c-4b56-b068-add12d7809ab"
        },
        "item": {
          "id": "e925ef3e-a2bf-4a75-89e1-9a315aa7e1e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "31c0bad4-d8d1-49d4-b120-2a013a3ecd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fe2aa9-bb80-4e08-8e3a-26437befe9eb",
        "cursor": {
          "ref": "520fbcc5-0cbd-4028-ba2f-1c49623ca4ff",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ad6e8cfe-6fa6-4778-bbf8-b03694c3d027"
        },
        "item": {
          "id": "22fe2aa9-bb80-4e08-8e3a-26437befe9eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ffbedd3-ba9b-41bb-b90f-18e1c7654ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e824ec-ee89-419c-a238-8ff3029d8e1d",
        "cursor": {
          "ref": "447f5291-846b-45ee-80ee-018ef4089781",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55529480-2f09-4854-8814-7cd69188e12f"
        },
        "item": {
          "id": "f6e824ec-ee89-419c-a238-8ff3029d8e1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9e45e1e6-affc-4e81-9bea-637c1ad0c3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6853e5-0d04-432f-b6f1-76198af4fd1b",
        "cursor": {
          "ref": "e8dc7c4e-a134-4908-a4a6-eb54e26811db",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e4ee4701-efef-44f7-a484-7c060d960c3c"
        },
        "item": {
          "id": "bb6853e5-0d04-432f-b6f1-76198af4fd1b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a897b2a-f41f-4f2d-aef6-45680e65b033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26bf7d6-1c39-4ae2-9b01-12ee31ecd6ae",
        "cursor": {
          "ref": "b3b5863d-502e-4315-94a5-1f66c1e0f42a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ec9cd775-6f9d-4c45-856a-9ddd64cf7211"
        },
        "item": {
          "id": "a26bf7d6-1c39-4ae2-9b01-12ee31ecd6ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c47a5fd-d452-4abf-bdf0-476066a710bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee1ce4-015d-49cb-bfd1-c707715bee1c",
        "cursor": {
          "ref": "a17ee74d-0604-48c3-b128-5a44ab3538df",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c80353b8-af3f-4cab-8807-bb11093dfc11"
        },
        "item": {
          "id": "5cee1ce4-015d-49cb-bfd1-c707715bee1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42616e06-7135-44d5-8972-5fac504acb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eb595d-3a8b-4e84-9910-49a2d5d14333",
        "cursor": {
          "ref": "98f69f2a-ceff-49b5-8a94-d1b1d41f249f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "354e8278-032d-41fc-b30f-db0478409d4d"
        },
        "item": {
          "id": "04eb595d-3a8b-4e84-9910-49a2d5d14333",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ab836bc-7372-4abb-83e0-c5599735af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621fb3fd-839c-4bdd-9a25-e0d3dd3f5c2c",
        "cursor": {
          "ref": "9e15879d-ac7e-4525-b6c9-7b458ad7d81f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7fd3f7be-6b11-4f33-8373-131d9455fd99"
        },
        "item": {
          "id": "621fb3fd-839c-4bdd-9a25-e0d3dd3f5c2c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "54fcb646-7f74-4e31-b11f-f8563bcd7592",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 170,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4165ec08-80b1-4ab9-8e1b-c4d35c0e0a5b",
        "cursor": {
          "ref": "3d6f146d-7baf-4960-a8b8-80da16099ce2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6d1eb30a-fee0-4dda-8c11-16b68fb8528b"
        },
        "item": {
          "id": "4165ec08-80b1-4ab9-8e1b-c4d35c0e0a5b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "89f865ef-0c33-4686-b3c1-ff7c5d7dc554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10e4ff0-f3a1-476b-9540-42158ab19e48",
        "cursor": {
          "ref": "23eb468d-8f02-4043-9ea6-8f1d6f7b3002",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d26dc0c-3e82-419c-b188-5e3a2140e1ae"
        },
        "item": {
          "id": "a10e4ff0-f3a1-476b-9540-42158ab19e48",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42a7cf79-b6c9-4348-835a-e592b141c7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64e1b8-51ae-4dc6-8396-468e7fbfb8a9",
        "cursor": {
          "ref": "ef946a27-bc3d-4a10-be22-80552a1b9577",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0084b373-df34-41ca-8b31-e2ebca66ee49"
        },
        "item": {
          "id": "ab64e1b8-51ae-4dc6-8396-468e7fbfb8a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe4ff2ac-0e9f-4b2a-946f-29e57d899073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c857011c-4edc-4a62-9f70-bec38a10f8b2",
        "cursor": {
          "ref": "58c39f2d-a69a-4b25-8e98-21a1b351554c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ee64152-bc3d-450e-847d-6a898aa42780"
        },
        "item": {
          "id": "c857011c-4edc-4a62-9f70-bec38a10f8b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "43b5dfb7-0cc4-4c18-928c-3c6a02abc209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc05511-bc59-498d-8626-02386c70138c",
        "cursor": {
          "ref": "bec4d0a5-ebb5-43e6-9f67-e341725ec951",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2cdbc30f-b76e-4246-a7e0-87ad3bd8dd4a"
        },
        "item": {
          "id": "afc05511-bc59-498d-8626-02386c70138c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b8796ef3-4e21-4cfc-a4cd-80a7dbccf1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b0d9b8-2803-45f7-bff4-483becb53dc2",
        "cursor": {
          "ref": "e5581e85-7c6b-4351-80e8-dcf641f093ec",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6380a921-4f67-46fa-b399-8aa81c4a3ea2"
        },
        "item": {
          "id": "98b0d9b8-2803-45f7-bff4-483becb53dc2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8cc0577c-d7c3-436f-8495-db8dc948e030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6918bde-f878-426e-8dfb-4ed62f74f1b7",
        "cursor": {
          "ref": "14ad4112-29bf-43f4-a5e1-1e4f456b188b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b1e16445-e81b-42c8-9b07-da49a8381903"
        },
        "item": {
          "id": "c6918bde-f878-426e-8dfb-4ed62f74f1b7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f0b8a6d8-49e3-4195-8f7b-e03560893a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277f7aa5-df3c-4c4e-a9f3-d2965ca9ed7e",
        "cursor": {
          "ref": "9262ba8b-8e1f-447e-ad8b-6d60b13183a5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2ea9c090-1191-448d-a345-7b7481bf4371"
        },
        "item": {
          "id": "277f7aa5-df3c-4c4e-a9f3-d2965ca9ed7e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "551817cb-6621-42bf-b393-08db5ae14d38",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "54916666-77b9-4462-9f65-9b60dd222425",
        "cursor": {
          "ref": "70a74ded-a4cb-4b3b-98ad-fc795dc1a4da",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "13a008b2-2f9d-448c-81fa-db40a5a9f451"
        },
        "item": {
          "id": "54916666-77b9-4462-9f65-9b60dd222425",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1fa7c2a8-0e71-49ed-a79e-c85058bbf291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ebfec-e3fc-49ed-b479-d13fc8ab9bcd",
        "cursor": {
          "ref": "79051066-e49d-44a7-a938-14971a4b98c0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e845e464-33bf-4c58-b790-4d01949b8313"
        },
        "item": {
          "id": "eb8ebfec-e3fc-49ed-b479-d13fc8ab9bcd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96b4eb4f-0591-4edc-83af-14e2824780ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3549aadc-80d4-4572-ae4d-0078f0ed34af",
        "cursor": {
          "ref": "2906e0cc-8171-4c6f-8690-306d43f65d33",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2122b3bd-3e9f-4f60-bdb1-544afbcf38b4"
        },
        "item": {
          "id": "3549aadc-80d4-4572-ae4d-0078f0ed34af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f2bb4f4-1d26-4152-b4cd-ca47a94e4373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96793dc-76ca-47d2-af6a-601541e3fa1a",
        "cursor": {
          "ref": "fb95c8be-7e70-49e2-9e23-927041b9993e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "20cc0615-8853-4085-a4e8-2241fe35be30"
        },
        "item": {
          "id": "a96793dc-76ca-47d2-af6a-601541e3fa1a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "35f817b7-ada5-48af-842a-329fc591808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9422d9d-bc5e-44ee-b623-5684e1e8af3a",
        "cursor": {
          "ref": "4d42f824-7289-4943-99fd-607e168fca59",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e002ad94-63f4-4e4c-b073-c3ec209382f7"
        },
        "item": {
          "id": "e9422d9d-bc5e-44ee-b623-5684e1e8af3a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c1bbeed7-2013-45bf-8b84-43ddc7908f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540ac53f-aa3e-477c-9354-15086d84cba1",
        "cursor": {
          "ref": "bcec994e-0020-40eb-aeee-b32ad102c0ca",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "355ddf1e-0866-46e3-8ef2-671a74558161"
        },
        "item": {
          "id": "540ac53f-aa3e-477c-9354-15086d84cba1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0563ceef-3e9c-4b1c-b80a-925493a1e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbad2d82-40f4-4af1-9946-417d7ba42aa8",
        "cursor": {
          "ref": "fa24f865-de3c-46b2-be3f-096d1eb352f6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ad32c6f0-35e6-4d30-b842-4e15c9bcd3b7"
        },
        "item": {
          "id": "dbad2d82-40f4-4af1-9946-417d7ba42aa8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bbafede7-2ba9-42ee-9c76-74509b56a552",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "3460f3b5-6a26-4fcc-a64c-695587ce8545",
        "cursor": {
          "ref": "c67f13ee-d704-4ba9-9c03-e77eb68d0bf2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "acc1c63c-d5d0-4643-bec4-7eff4ff19ebd"
        },
        "item": {
          "id": "3460f3b5-6a26-4fcc-a64c-695587ce8545",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ba29cbcf-3e51-4597-ae11-6167719bc0f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "295dd1fa-f606-4f0f-9c2b-11e36d4e4b42",
        "cursor": {
          "ref": "51cce30f-6712-4e53-ac03-9701da95e016",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "45a79ea1-0ba6-4277-b5c6-4e0a993c18bb"
        },
        "item": {
          "id": "295dd1fa-f606-4f0f-9c2b-11e36d4e4b42",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b00e0b3e-5ce1-46b2-b05b-2877c243d38a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "3268fb4c-861d-44b1-b7f9-5837178bbf43",
        "cursor": {
          "ref": "6a6bc8d5-5c13-4dfa-98e0-49766d239300",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9e866751-be66-4333-9d29-0b93b8ed804e"
        },
        "item": {
          "id": "3268fb4c-861d-44b1-b7f9-5837178bbf43",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "08d6d7dd-44ba-4868-b35c-06a9a66374c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "8928acad-9196-461a-b6dc-d4cd65656709",
        "cursor": {
          "ref": "f6c656c6-7d27-4e9e-847c-ee699d383b07",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fd240335-9579-4932-a30f-d6de98f61b10"
        },
        "item": {
          "id": "8928acad-9196-461a-b6dc-d4cd65656709",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eb8e654b-01ff-45db-8d23-ed26d72c8f98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "4d6e8deb-3c02-4aab-abba-bd0daa863411",
        "cursor": {
          "ref": "db5cd911-6b9b-437a-812b-7db5c0b8d812",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d02ab1e3-ef79-4b18-9f64-5a5ca2565641"
        },
        "item": {
          "id": "4d6e8deb-3c02-4aab-abba-bd0daa863411",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9861d149-e6a1-4463-820b-5b0b6b635b70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "858b7745-a04a-412d-be4e-940124066b93",
        "cursor": {
          "ref": "3c2b4862-a760-4983-aa26-b96d42de46da",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "018d4557-cdf4-4599-84ef-fa3e7ca6d83d"
        },
        "item": {
          "id": "858b7745-a04a-412d-be4e-940124066b93",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9d952e44-dd63-41a1-9272-66bd59b187c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e496660-a40b-49d4-94eb-92234634dc3e",
        "cursor": {
          "ref": "4f0c37f4-72ac-4ec8-94b1-ef1883042fb4",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c2f680d-23ec-4601-a587-5892ab2ae361"
        },
        "item": {
          "id": "7e496660-a40b-49d4-94eb-92234634dc3e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8634aaa-be6b-42f8-a429-987ac3d3ce6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243de914-a438-468e-a18c-d731401c9a7c",
        "cursor": {
          "ref": "05f94313-6250-4549-bf49-7011dfbdbc22",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fa382512-7866-420a-a187-2142e619ebb1"
        },
        "item": {
          "id": "243de914-a438-468e-a18c-d731401c9a7c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3268296b-c28e-4dc8-a666-ed5f7740e68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2692850a-d432-4ab2-bdda-42ea5e2b54be",
        "cursor": {
          "ref": "3ef2455f-b01d-4d37-b50b-b3dfa20ddfb8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "958f1cc6-ad60-47db-bda3-b97efd72afb3"
        },
        "item": {
          "id": "2692850a-d432-4ab2-bdda-42ea5e2b54be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "78614f87-2768-4f24-9951-29bf576607bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17284764-97c4-4687-915c-b2ad23836519",
        "cursor": {
          "ref": "cf156876-54a0-44b0-93f5-4607c1b46b61",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a8e1a10e-7a6e-4e1f-8e09-393a1b853d1b"
        },
        "item": {
          "id": "17284764-97c4-4687-915c-b2ad23836519",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9b05b4e6-b7a1-4fd5-bca3-ba486e6c990d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e58f65c-8dd2-47ee-8086-e352f99c5d5f",
        "cursor": {
          "ref": "61704709-2756-423a-9693-2eb068dc9a10",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "896ed71c-7d56-46f8-8027-22e372b1bc28"
        },
        "item": {
          "id": "6e58f65c-8dd2-47ee-8086-e352f99c5d5f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "97f2dbd2-c4be-4ff2-be34-83fe91650a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcae43c-dfc4-401c-b942-f6126f948c5a",
        "cursor": {
          "ref": "f0040549-fd92-40b7-80b6-5d203cd2a88c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2478ec27-1fa0-4e17-a402-d2779df5dd4f"
        },
        "item": {
          "id": "0bcae43c-dfc4-401c-b942-f6126f948c5a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9392ef7f-059a-417e-a787-bff9efdc270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b562e4a-6fc5-48ad-8411-961f54e072d4",
        "cursor": {
          "ref": "c461f986-3944-41ce-a331-aca2c1524e5b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7d0fbf81-ead0-4e77-8e6a-8ec7e8bfe09e"
        },
        "item": {
          "id": "8b562e4a-6fc5-48ad-8411-961f54e072d4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cc6a27b8-f0b0-47da-abba-a2872d2f0533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc08cd9-2a88-4e22-b524-e4a3c0cf80d1",
        "cursor": {
          "ref": "00254e84-3f1d-4701-b9ac-c39c4461e709",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0c21d5e6-3d2f-46db-924f-1edfd774b3cc"
        },
        "item": {
          "id": "abc08cd9-2a88-4e22-b524-e4a3c0cf80d1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "212434ff-1bbe-4361-afaa-20960bab2b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6db75-2443-4924-8069-80fb09c0b8e2",
        "cursor": {
          "ref": "4227ede7-ef81-42b0-8850-e73639ca1a98",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3d39c81d-b2ef-4a61-90f8-ad7afc114113"
        },
        "item": {
          "id": "16c6db75-2443-4924-8069-80fb09c0b8e2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ef6b156d-d1a2-452d-9db1-1d397dc21bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f713e4-151f-4ca3-8099-ce55fc2b5fb3",
        "cursor": {
          "ref": "a71ba6ad-6a33-4709-a41c-d2e4f5c02b48",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3d1dcd3a-1728-4987-87e6-b08456f9b7d0"
        },
        "item": {
          "id": "39f713e4-151f-4ca3-8099-ce55fc2b5fb3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8d46a969-b761-4315-a236-7662e0f05ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d711bcc-5519-49d4-a503-880e35650aa6",
        "cursor": {
          "ref": "03ceff03-0a23-46f5-b94b-d812f0d4a08d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c6526f5f-5a08-469d-80ea-7e7824e924e6"
        },
        "item": {
          "id": "7d711bcc-5519-49d4-a503-880e35650aa6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae82bd3a-a343-42e1-b650-1eeae25f55e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1971c4e4-0cd7-45b0-96a8-7292a2077349",
        "cursor": {
          "ref": "27cdcd11-da3f-40a3-bc97-74fa1f7360d5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0c4b3fb2-6bf9-4cf6-a05d-7bdd562ae196"
        },
        "item": {
          "id": "1971c4e4-0cd7-45b0-96a8-7292a2077349",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5671e7fa-cdd8-4ee3-a4ba-63c03e678122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ddce2-65fe-43ca-9416-9fd41a907bc3",
        "cursor": {
          "ref": "46411d0f-ee2d-4015-b276-a817443f496c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3e09be33-d194-4964-a926-9f7f58107704"
        },
        "item": {
          "id": "0c0ddce2-65fe-43ca-9416-9fd41a907bc3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "107d71f9-94a0-4b03-9db1-81f191a3c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fcc9d7-1247-4501-9d04-e0c883dc458e",
        "cursor": {
          "ref": "1e37cb3e-32db-4923-b60e-fc6692f0208f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7f397e2a-c05a-4286-9309-eba22f100f8e"
        },
        "item": {
          "id": "86fcc9d7-1247-4501-9d04-e0c883dc458e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0b8db55c-4101-44e3-b053-faef15c6219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34aa21e7-c8a3-4fb8-84e2-484ed6794422",
        "cursor": {
          "ref": "22f3f808-db56-4e12-96c5-bee0f458f711",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cf628589-8af3-4356-8824-e8be38a61635"
        },
        "item": {
          "id": "34aa21e7-c8a3-4fb8-84e2-484ed6794422",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ce99e91-fad8-43d6-b218-c633c7b13dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4dd13-6791-4383-aace-adb21796922d",
        "cursor": {
          "ref": "37c01594-dd07-466c-b1d4-165b5b4e5ee7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "349298a5-5daa-48bd-934b-1e741c291544"
        },
        "item": {
          "id": "6ea4dd13-6791-4383-aace-adb21796922d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9bd7b911-20b9-40d8-8578-1dd3860998cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbae133-aa00-4638-9f7f-3986a4ddb557",
        "cursor": {
          "ref": "5a83c1a7-d54a-4250-8066-49b0a0682d5f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad0f33cb-9d65-406e-b1cf-8804e5d7065c"
        },
        "item": {
          "id": "6cbae133-aa00-4638-9f7f-3986a4ddb557",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5931e2b1-15e8-4836-a4b7-226ebff34901",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "1ca1a28a-d26a-49c8-9ebe-fcf317e44f7c",
        "cursor": {
          "ref": "9a098bbd-4fe9-4481-bcec-82c6995e7c28",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2a34d55e-85af-4ef5-a2f1-f2bc5189ef3c"
        },
        "item": {
          "id": "1ca1a28a-d26a-49c8-9ebe-fcf317e44f7c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1cd73e09-e2b8-4250-8a1b-c7879f6e2991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0176958-c9db-4d20-ac51-ed78c1d3ff58",
        "cursor": {
          "ref": "353943c6-4969-4136-b50c-3bd604bf6f37",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9119f9bc-6b6e-4be3-90bb-e5e4abdbac5b"
        },
        "item": {
          "id": "e0176958-c9db-4d20-ac51-ed78c1d3ff58",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b31e977a-ea91-4b1b-a3cf-b6fb963f3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43f1d13-9392-4b70-a6ac-7b71004ea694",
        "cursor": {
          "ref": "ccbeaac0-40b6-4abc-81dd-c4bdc2a6b909",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8ab356da-1409-45bb-83b8-6ee78b3498be"
        },
        "item": {
          "id": "c43f1d13-9392-4b70-a6ac-7b71004ea694",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f571bb42-121d-4ff8-adfd-4824746fa382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b600dc-d73c-4656-a6cc-366c82a85a17",
        "cursor": {
          "ref": "1ba0d4a4-b5c9-44bf-a260-e6b2a9af17ae",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "22a8c741-49ae-48f4-a8b9-a4ddde94c763"
        },
        "item": {
          "id": "03b600dc-d73c-4656-a6cc-366c82a85a17",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6b861b5-4122-464e-afab-534e2b0ee450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429e6f3-d4c4-4bb6-b67f-17d6634b5ff9",
        "cursor": {
          "ref": "3298f5dd-3d25-4190-84fd-c6990f1e033d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6f15825c-5c02-42fb-997d-7ed3bff5decb"
        },
        "item": {
          "id": "5429e6f3-d4c4-4bb6-b67f-17d6634b5ff9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ae8d8209-d68a-4210-85ab-defbb9717c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1a4f70-2427-4b76-bb64-56dabafcf8a0",
        "cursor": {
          "ref": "56064a50-bad4-44a8-a838-5d0860574ae3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "93f26143-5322-4f2f-90e3-31f92eee88c1"
        },
        "item": {
          "id": "3f1a4f70-2427-4b76-bb64-56dabafcf8a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2875c62f-2f91-4484-96e6-3a2d14424219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8ed6a0-9880-4ee8-9ddf-b19228c4368c",
        "cursor": {
          "ref": "ba08cb36-f18b-44b2-a4b9-dd104bb59ad4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7ce00803-e918-459e-adbf-09785205577e"
        },
        "item": {
          "id": "9b8ed6a0-9880-4ee8-9ddf-b19228c4368c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4158ea03-6b59-4716-b0f3-67271d80ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750d2ef8-24c6-4cc0-b93b-58e319df9824",
        "cursor": {
          "ref": "419f432c-e43c-4378-8011-ab024c34c0dc",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f753b7ad-60b5-4a80-811a-bc41af0795d6"
        },
        "item": {
          "id": "750d2ef8-24c6-4cc0-b93b-58e319df9824",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44183780-1818-4b33-8d1b-201007242ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc87f9d-9866-433d-82b6-7f8dc48202f3",
        "cursor": {
          "ref": "1eac3753-7679-4627-8924-cb920b012449",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "205bdcea-783f-4927-8f56-20acc9b37b7f"
        },
        "item": {
          "id": "afc87f9d-9866-433d-82b6-7f8dc48202f3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57ea01d6-ab6d-4a35-840b-e2f16877753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f4fc12-981a-4cf2-a7bf-bb258a0a6bec",
        "cursor": {
          "ref": "29d41718-f948-436f-ab08-0c96326ded7c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cd45bcbf-9689-492c-bacb-a58c90d0f330"
        },
        "item": {
          "id": "89f4fc12-981a-4cf2-a7bf-bb258a0a6bec",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "89354ac9-98fe-4444-bd53-0d6fac2de8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b02598-2171-469c-90e5-2b843d2a78f2",
        "cursor": {
          "ref": "18fea9df-abc0-4094-9bf5-e439831d24b5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1451910f-4d91-4b1e-bcf0-a50fee727cdf"
        },
        "item": {
          "id": "06b02598-2171-469c-90e5-2b843d2a78f2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f68ac6a7-71d7-46e4-ad21-e111be58e6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c07cc4f-6f17-4396-9eb0-84d0c3b70a90",
        "cursor": {
          "ref": "5fd4ecc5-25aa-4f47-be14-7eb3f22679a7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3443e526-159f-4d5d-a383-1724bdaae067"
        },
        "item": {
          "id": "6c07cc4f-6f17-4396-9eb0-84d0c3b70a90",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ca3ccf5-85e0-4aea-ad7a-a48f803a1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231ea185-71f9-4883-9024-d15f80c65157",
        "cursor": {
          "ref": "0fc80379-fb51-475d-bb29-fb49713d19e7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8d3e4eea-8131-4de0-a168-2b2d5b995cf7"
        },
        "item": {
          "id": "231ea185-71f9-4883-9024-d15f80c65157",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1f87102a-a438-48e0-bb64-125adea25aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3ce95-92e1-46b9-bb12-81073d534208",
        "cursor": {
          "ref": "336b032d-6e81-4e59-abac-33ed61110e19",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b8e8ebf5-3701-422b-b3d3-6e541d80954e"
        },
        "item": {
          "id": "79c3ce95-92e1-46b9-bb12-81073d534208",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "78533c3e-7c76-4f47-a695-fd2e0e5400da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a735d48-1061-4881-bb66-01f6086933d8",
        "cursor": {
          "ref": "96589d33-6996-4a20-8500-57c8226e98ca",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fd8f5352-1dab-4656-b01e-4bc8e4205ef1"
        },
        "item": {
          "id": "6a735d48-1061-4881-bb66-01f6086933d8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "66c9eb96-95a6-4231-9872-5a934510b600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf3ef9-7caf-4e05-ab99-ec186b0ec488",
        "cursor": {
          "ref": "6292582b-9a39-401b-a79e-8227609fde77",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9c104979-54df-49c6-aebe-ca7d1b179132"
        },
        "item": {
          "id": "fbbf3ef9-7caf-4e05-ab99-ec186b0ec488",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "11a47be6-cc23-4f32-b7fd-1eee044fb40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9b4f3-5f6b-4641-9224-1366355ab314",
        "cursor": {
          "ref": "897372e8-9efa-4c4f-be6c-e439d26dc99a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5106ca51-ff27-4f6b-acfd-3b6f7fe8f2ab"
        },
        "item": {
          "id": "a2c9b4f3-5f6b-4641-9224-1366355ab314",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "091cc99f-547a-4a59-b467-b611b334c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33758816-04fa-4deb-9677-cf22fcc022cf",
        "cursor": {
          "ref": "0cb950d5-4565-41b7-a83c-58968507bb4a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc00f07b-74f8-455f-a078-89c5f213ec5c"
        },
        "item": {
          "id": "33758816-04fa-4deb-9677-cf22fcc022cf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e602b2d3-bdec-434a-b859-c5709ff844cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fbd427-56c4-4cc7-85ea-5ec33f359402",
        "cursor": {
          "ref": "80ede1ac-fe4e-4a65-a9b2-6537f9841585",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3a79ad9a-6b0b-4d39-8111-43baa908cc02"
        },
        "item": {
          "id": "12fbd427-56c4-4cc7-85ea-5ec33f359402",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "79390f54-89c5-45d5-be70-f2637ad5c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704175f-dd4b-47c7-a507-cdb8012dff2d",
        "cursor": {
          "ref": "b5655963-d3ea-4afd-8ad3-29e807f56049",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "420b1ebf-108b-49cf-bb69-f40245bd9661"
        },
        "item": {
          "id": "6704175f-dd4b-47c7-a507-cdb8012dff2d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4a98805f-d36a-4760-ab2a-42fb698bb8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cfea8d-804a-4133-a8aa-da9458272067",
        "cursor": {
          "ref": "248e76a8-785f-46cc-94af-f8c2a7a4ceee",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "088bbb45-03f9-4267-89aa-b96cc2a265e3"
        },
        "item": {
          "id": "26cfea8d-804a-4133-a8aa-da9458272067",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27500952-5584-4a72-9bb8-f0ebf6c1b986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f797e-cb4a-4238-b928-46821a1c070a",
        "cursor": {
          "ref": "bdd17a5e-fb76-4611-a4f7-62ac987596f8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4fe5119b-f290-4009-ad90-9e6e0db98291"
        },
        "item": {
          "id": "4e4f797e-cb4a-4238-b928-46821a1c070a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d29ab398-9129-4c4c-84c6-742dd821fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c944368-0675-424c-95da-98e9f40dfc10",
        "cursor": {
          "ref": "611b0f2e-1857-4559-a219-d8d6737101dc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cdb1b96c-6eaa-497e-8390-015e3e09e26c"
        },
        "item": {
          "id": "5c944368-0675-424c-95da-98e9f40dfc10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c7df23c-3b90-4ab9-aa17-e6546c46e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b331b6f-9e6e-4910-9b0b-a0226ace0f3f",
        "cursor": {
          "ref": "0e1cbfd5-03f8-48d6-80ab-aeb7b45a67a0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0c3ddde6-d469-4789-ab1e-50a7d4733f37"
        },
        "item": {
          "id": "0b331b6f-9e6e-4910-9b0b-a0226ace0f3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a94d4db6-ddf2-402c-8546-482aadb5e924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8030c0d3-5652-4cc5-a2f8-55b3cf862d52",
        "cursor": {
          "ref": "9d39768b-a475-4784-a0a4-bad8e45f0ccc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be7a6e91-6ba7-4347-aeaa-7a87bc4dd4a8"
        },
        "item": {
          "id": "8030c0d3-5652-4cc5-a2f8-55b3cf862d52",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "69f936cd-1675-4f7c-98e4-1a6d4a5662e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1fdf6e-5f51-48f5-9cdd-56150b202973",
        "cursor": {
          "ref": "b961ea1f-27fe-4795-8b12-1acccfb4d34e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0603a279-b2c0-42bf-b405-8ca8d0e57747"
        },
        "item": {
          "id": "fe1fdf6e-5f51-48f5-9cdd-56150b202973",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b98750df-8f76-4785-959f-51fbe093ef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87199fd3-93bb-4ee5-a793-e0757ac828db",
        "cursor": {
          "ref": "67e501fa-ba81-424b-8489-6b1fc9732d7a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f10f627f-ee89-4784-848d-cccd03151487"
        },
        "item": {
          "id": "87199fd3-93bb-4ee5-a793-e0757ac828db",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd5a3083-3709-4132-8839-b6f75e57c95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bdf238-9608-4e3f-b714-9acf998eb87a",
        "cursor": {
          "ref": "3341e438-bc65-4777-800f-bece94e89fe2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f509350-f2fb-4ea4-bff0-7f8c76837ec2"
        },
        "item": {
          "id": "34bdf238-9608-4e3f-b714-9acf998eb87a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b95ffd80-9947-48a0-88da-31122c0540e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b38bbb4-9907-4b38-bdec-3d4451b69daf",
        "cursor": {
          "ref": "b0ed8697-3ce1-470f-87bd-6a4eb8f8676e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bbd287ce-7660-4e74-a416-815dd59eb18f"
        },
        "item": {
          "id": "0b38bbb4-9907-4b38-bdec-3d4451b69daf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "430c8d4d-623a-4a3b-a64b-9402f050c44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f87667-5351-4ff2-812e-993ea22da136",
        "cursor": {
          "ref": "23b273dd-44bc-48f4-b258-dc27c8c1161a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fdaeaac0-8980-45a3-a6e5-1fb2a9fe4844"
        },
        "item": {
          "id": "21f87667-5351-4ff2-812e-993ea22da136",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e67d9c09-9870-4e09-a639-e0fa3060b840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc4be2-3aa0-4179-8376-369d45f7a6c7",
        "cursor": {
          "ref": "950cf258-1a8c-4248-8710-5c42ca110092",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "89d1b321-d2e5-4e5a-a1b5-ae7279f07c75"
        },
        "item": {
          "id": "6edc4be2-3aa0-4179-8376-369d45f7a6c7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8eab9115-4b98-435b-ad80-eacda37d09f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344c6a39-971c-44b5-89ac-690917dcb8bc",
        "cursor": {
          "ref": "47f5923b-b751-46ba-b456-59a240dc3668",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dd643580-a86c-41aa-bad7-01ad37de16ce"
        },
        "item": {
          "id": "344c6a39-971c-44b5-89ac-690917dcb8bc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "86b8cd25-0aba-465a-a55d-c7217d1570fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb1df7-523b-470e-9017-a87f6df27140",
        "cursor": {
          "ref": "e680c967-bd1a-4282-9674-e00e60b92624",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "63eeeb54-97ec-4000-8c55-98ebe7090ec1"
        },
        "item": {
          "id": "a2cb1df7-523b-470e-9017-a87f6df27140",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f0ef905-9889-4397-9bb2-6179e5dd3155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e65b67e-cc96-40b3-91a1-3bd65fae14df",
        "cursor": {
          "ref": "619b0e68-719f-498a-a355-c17f4f977821",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "32c8eed6-e8a3-479b-a833-c00195f279b8"
        },
        "item": {
          "id": "9e65b67e-cc96-40b3-91a1-3bd65fae14df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5beb66eb-e551-429f-ae4d-22025b37efb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ca8d52-f0cf-4deb-a31f-dc8c1ca9f9d5",
        "cursor": {
          "ref": "56767749-831c-4f6d-b1b1-916626362b46",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "655169a7-da1c-4aa8-b4fe-31aaa34668eb"
        },
        "item": {
          "id": "89ca8d52-f0cf-4deb-a31f-dc8c1ca9f9d5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f315e585-8d79-48bc-975b-b01549051ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b483aa7-47f9-4788-a89d-f9ce83bc7f2c",
        "cursor": {
          "ref": "c4f33575-26fc-45e2-8f4f-baee6856a164",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2f88447-0b2c-44d3-9fc3-5a9791a3639b"
        },
        "item": {
          "id": "4b483aa7-47f9-4788-a89d-f9ce83bc7f2c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "870edd87-d3de-4190-bff4-8b3fd48725fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470a1666-62db-4a5e-8e9b-35f6135a536a",
        "cursor": {
          "ref": "e56bbef7-9f65-4217-91a6-7d8a7ee83091",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "02b9ed86-5db9-46cd-86de-8845b78b7708"
        },
        "item": {
          "id": "470a1666-62db-4a5e-8e9b-35f6135a536a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b114c58f-0b6d-487c-bf48-ea4f3827c0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd3ac1c-e124-4fcc-a51f-06367f4b4146",
        "cursor": {
          "ref": "20c9ab86-2fb4-46d1-a336-1bab6189f85f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "63fee9c3-7121-443e-8c6a-ec27e48c0654"
        },
        "item": {
          "id": "5cd3ac1c-e124-4fcc-a51f-06367f4b4146",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc179720-ef6b-4e42-b9f1-06aa671ba3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f670400e-1852-4ee8-8375-c71a605ab94b",
        "cursor": {
          "ref": "ae5ee5c6-b049-455c-9a0c-c5cbc094b020",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "25884540-c53d-4f13-90d6-8a430e86a99d"
        },
        "item": {
          "id": "f670400e-1852-4ee8-8375-c71a605ab94b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e48980b6-61fd-4d8c-ba2e-1a27013fc665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c790761-01c1-4aac-8bcc-7981435dfd8f",
        "cursor": {
          "ref": "fc6b51f6-c147-496d-8ad3-a30cf2a5bfc2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c5646c9-0b6a-45f9-9ade-0bf64decd556"
        },
        "item": {
          "id": "2c790761-01c1-4aac-8bcc-7981435dfd8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b58a1d0d-c3e1-448a-b559-95fe08c93ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467ba0e-198c-4717-b163-fc31e0d8096b",
        "cursor": {
          "ref": "6149000e-ec63-4d84-927f-17949cebf8c9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f3a33126-ed4a-422a-9f9a-39502a5a1d5f"
        },
        "item": {
          "id": "e467ba0e-198c-4717-b163-fc31e0d8096b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "21b40bfb-c1fd-4bd8-a715-347887b9b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146756b5-182f-495d-950b-cf6be9dbdac2",
        "cursor": {
          "ref": "6d9d7c03-a10b-40b7-9a67-8ebfd301e75a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eed64d5f-4afc-459b-9268-f34f685e13ee"
        },
        "item": {
          "id": "146756b5-182f-495d-950b-cf6be9dbdac2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "01b256c2-dfba-4a1f-811c-b2272de25da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be030c8-f69d-43a4-a645-cd99e90ec530",
        "cursor": {
          "ref": "21ababef-0866-4f36-b958-7f51a3030352",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "01a5f3ca-7769-44a3-807b-b4a7d2de6000"
        },
        "item": {
          "id": "3be030c8-f69d-43a4-a645-cd99e90ec530",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec29e9b8-e2cc-44cc-ac59-f72f79f4063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65a309f-3917-4aaf-b930-6a25e51626e1",
        "cursor": {
          "ref": "f9d3de11-349e-4bec-9009-eda178242abd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c6652eef-6dcc-4d73-b1d6-8e4663e309ba"
        },
        "item": {
          "id": "e65a309f-3917-4aaf-b930-6a25e51626e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9113ff80-2307-4349-b5c2-581290c3f592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c1c944-3bff-455d-b5a4-1e02d45d43e8",
        "cursor": {
          "ref": "4832572b-fc7e-4963-8992-36dd11127045",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d4904ab-e18a-490e-a2d8-be589b50a29c"
        },
        "item": {
          "id": "50c1c944-3bff-455d-b5a4-1e02d45d43e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c620b675-88d1-42ea-a9d4-d0b0e0112450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f3aa3e-1ba5-4f05-b765-cd21136417f1",
        "cursor": {
          "ref": "60d28044-8afb-4625-bcf0-0cb774063edf",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e4db77ab-490a-44f0-9458-dd863644e704"
        },
        "item": {
          "id": "54f3aa3e-1ba5-4f05-b765-cd21136417f1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b35b35da-4cc0-4e41-b665-0c7ff99c8fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8181f3-1e35-45d0-af1d-3b3801661881",
        "cursor": {
          "ref": "16f67376-df94-4092-a806-b270b9446a36",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6ce0df6-4755-40c5-a341-61b0ab7493b7"
        },
        "item": {
          "id": "2e8181f3-1e35-45d0-af1d-3b3801661881",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "129ff49c-3a25-47b5-9d4b-7ab5d41403f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9398d6-db5b-4124-bad0-f2290b88bb44",
        "cursor": {
          "ref": "89f83ec8-500a-4a8e-a14a-149b93506b88",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "39c481ec-848b-4c2c-82a9-eb7108306005"
        },
        "item": {
          "id": "4a9398d6-db5b-4124-bad0-f2290b88bb44",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5bfab63b-8162-436d-8eb9-d64f1bd3c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af81e0de-b091-4ec5-a26f-7243df76affd",
        "cursor": {
          "ref": "7c99d253-ee51-4f4f-8568-e21fea6d18b3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c37dda4-707b-47bc-a187-847c0be6fb15"
        },
        "item": {
          "id": "af81e0de-b091-4ec5-a26f-7243df76affd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "681bfc71-f171-4a0d-a52f-dcad18581fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae9ab81-664d-4ed2-bad7-bc08f6d7f910",
        "cursor": {
          "ref": "d106f370-8829-456a-8048-999f9d4e2770",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3a4f106f-37d4-480f-8789-32033b109511"
        },
        "item": {
          "id": "fae9ab81-664d-4ed2-bad7-bc08f6d7f910",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b596cfc1-d7d2-43c7-8363-68e4111df0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f715243c-b55a-4082-a73c-05b108fef876",
        "cursor": {
          "ref": "102a56af-46ac-42a3-b593-29809809707d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7da520eb-3a93-4f15-ab21-4b3147923385"
        },
        "item": {
          "id": "f715243c-b55a-4082-a73c-05b108fef876",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "125aa51e-39b9-441c-b186-c3ded22c6232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcced90-73d2-4780-9240-b19d80b5cdd8",
        "cursor": {
          "ref": "8f79f88d-37d2-468b-a264-9b191345bf07",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fcebc56f-f433-4190-ab0c-c8ccfadc1cfc"
        },
        "item": {
          "id": "9fcced90-73d2-4780-9240-b19d80b5cdd8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2c32f892-681b-4c5f-8edf-0f9f124d7a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2498f093-5cae-4678-94d2-14d3b62cd9c6",
        "cursor": {
          "ref": "15e4f5e1-4f42-4dab-8183-cb24a5c8c879",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85670a8c-1c53-47af-9bac-e945a477a7bb"
        },
        "item": {
          "id": "2498f093-5cae-4678-94d2-14d3b62cd9c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0422c501-01d3-48d5-a12a-3f76b149de79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c096339-ef28-4aa5-b5b2-062056705a81",
        "cursor": {
          "ref": "2748ef42-2eec-4b06-8f9e-27a1e5c6699b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "68ce587b-3906-466b-ba0a-a808bc4400f9"
        },
        "item": {
          "id": "9c096339-ef28-4aa5-b5b2-062056705a81",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "087326d7-14d0-473a-910b-38632a985422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec41353-6236-447a-b562-feb383818cde",
        "cursor": {
          "ref": "0c994829-905d-418d-b4a4-96cabe0dae32",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c4c23c13-8126-47cd-9dec-15bab84a2bd5"
        },
        "item": {
          "id": "0ec41353-6236-447a-b562-feb383818cde",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a61edad7-e1c9-44e1-b024-a6b11d6c7fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976b2fde-bdff-4164-b60d-8888f4518c54",
        "cursor": {
          "ref": "28bec3c0-94b2-48f6-afa9-534f74ce50d6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8ed29907-6f4f-4492-9986-0e90d4af180b"
        },
        "item": {
          "id": "976b2fde-bdff-4164-b60d-8888f4518c54",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "356f249f-50f7-4661-a2f8-b392c68e81da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec31ff40-002a-45a6-b401-9a57806884b0",
        "cursor": {
          "ref": "a518512d-6cde-415b-a83a-fa1372a980a0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f02bb048-2494-4df8-9984-b851b5bba404"
        },
        "item": {
          "id": "ec31ff40-002a-45a6-b401-9a57806884b0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9885c19a-1073-47a3-834d-ab4b4a2dff35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e32f4a-aab9-414b-a7b4-98adb4e8b006",
        "cursor": {
          "ref": "cda40076-3389-4fda-8512-986709a892c1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8074b140-6ec4-4827-b4cc-d4e06b6a600b"
        },
        "item": {
          "id": "b0e32f4a-aab9-414b-a7b4-98adb4e8b006",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3506054b-d219-4a01-a058-e481e6cffcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10433660-a51b-4504-9103-e5462c43988b",
        "cursor": {
          "ref": "dc218742-9fb1-406b-9294-b523073c5965",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "beacbd87-3324-4ca8-99e6-f5e0accbbe60"
        },
        "item": {
          "id": "10433660-a51b-4504-9103-e5462c43988b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e6ef10c-b2a2-423d-9cbf-48e318edc938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8319977c-93fd-4a8e-b9f6-cff9f7162885",
        "cursor": {
          "ref": "d5dccc15-27d4-454b-937f-d2ad64417b0b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5d79d815-694e-4249-8ece-de91fa142c06"
        },
        "item": {
          "id": "8319977c-93fd-4a8e-b9f6-cff9f7162885",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c6f8e8c-b457-4670-8e07-ab816f9f5dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258b6907-29f1-4ecf-82c0-9610738d94ca",
        "cursor": {
          "ref": "4eea556c-449e-48e6-83eb-a0cfa8fc7420",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "035eacb5-35cd-42c7-b28a-7fe2fb75e94a"
        },
        "item": {
          "id": "258b6907-29f1-4ecf-82c0-9610738d94ca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "695fb10a-804c-42c3-9586-49725d042ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc56bac-31cb-4587-b9af-0e0948ceb03a",
        "cursor": {
          "ref": "f1a8bd90-7048-4efa-83e3-852b383f62f2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "34f8a146-a5e2-4d9a-9716-4eb527ef87b5"
        },
        "item": {
          "id": "2bc56bac-31cb-4587-b9af-0e0948ceb03a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a303efb4-20f3-4b6d-b08b-1b625d64dc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c79d85-b153-4ba9-bc18-d971767405c0",
        "cursor": {
          "ref": "a7cec102-d87b-4ce4-b9b8-079825d2f829",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d4bd7036-1eb4-4304-9e33-de42ebe512e4"
        },
        "item": {
          "id": "77c79d85-b153-4ba9-bc18-d971767405c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0983becf-e49d-46be-ac44-7c2ac554bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d95bee2-7b6d-43c1-97d0-bbcedc375bb0",
        "cursor": {
          "ref": "3c8d9892-24f7-4f80-aed0-86288f0ca69b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c14eb802-18a0-4e2b-b237-56ffb6065037"
        },
        "item": {
          "id": "1d95bee2-7b6d-43c1-97d0-bbcedc375bb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "180e43f0-5746-41ce-8341-169154555e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0e9f27-8d43-4426-9146-737fa3ba51c9",
        "cursor": {
          "ref": "2a15474e-4ce6-4d97-a880-9ca91e9a17fc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "941256fc-f6ff-4cc6-8429-d4f6b2e4e8ce"
        },
        "item": {
          "id": "fd0e9f27-8d43-4426-9146-737fa3ba51c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "66f9cb83-ee8c-4a44-aae7-1e8f163f97ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feaa03a-82a3-4df9-86d6-6c85819fc49d",
        "cursor": {
          "ref": "3898ffca-6234-4cd9-9d7f-869ac24bd791",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "30fdd10c-7d58-4c0c-98b9-7c3dc3f76da8"
        },
        "item": {
          "id": "0feaa03a-82a3-4df9-86d6-6c85819fc49d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49418b5b-d395-4cf9-9acb-e8b9b309c446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22505754-a044-4416-b0d3-28e7d9a6e7d8",
        "cursor": {
          "ref": "360f934e-ff54-4499-94f1-aa9788d6ee19",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dfbeece8-be81-40ad-b10b-9a62aa9005cc"
        },
        "item": {
          "id": "22505754-a044-4416-b0d3-28e7d9a6e7d8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4a41d2aa-bb4e-40e2-98a5-67ffb8c32516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11cfc96-8c09-4491-94e6-e51e1e0a721b",
        "cursor": {
          "ref": "121a2047-a2e2-4664-95f9-48812c05c11f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "94f64424-addc-4165-a977-c6299ab0200e"
        },
        "item": {
          "id": "c11cfc96-8c09-4491-94e6-e51e1e0a721b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f7c811d-effc-4f21-9413-89565a13bc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bee4826-4c1c-4d6d-b1fc-8b8dcb4cfd27",
        "cursor": {
          "ref": "27682948-568d-475c-a951-4597040c4641",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4fea36fd-7c25-44ee-b245-a8fdbb31ded2"
        },
        "item": {
          "id": "5bee4826-4c1c-4d6d-b1fc-8b8dcb4cfd27",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c2c7c0c2-ab10-44fa-9359-9c61618e2a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f81944-e952-4f73-bce0-0a511e60c55a",
        "cursor": {
          "ref": "9c5a1db3-a94c-495f-8b87-e3e8f659a2ad",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "710884e6-3ff6-4563-bf79-1c2aba5ad68f"
        },
        "item": {
          "id": "13f81944-e952-4f73-bce0-0a511e60c55a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f88fb650-d113-4b47-9703-070bce5bc550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac07e9-1208-414a-874d-141986a960d7",
        "cursor": {
          "ref": "6ce4b462-6a5d-4b74-ac94-b5d7e4208466",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a3b231d4-fcf3-4ad7-bf13-efb7aefc635f"
        },
        "item": {
          "id": "42ac07e9-1208-414a-874d-141986a960d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8f48347e-2033-428d-a708-9e5ed8b430cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0bdca7-9f96-49e0-a003-52a703edb8a5",
        "cursor": {
          "ref": "458ea348-a4f6-4435-91cd-3d70ef30f89f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6ef3fd88-38fb-4792-9828-3139c0a526a5"
        },
        "item": {
          "id": "5b0bdca7-9f96-49e0-a003-52a703edb8a5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "863075d7-baa0-4271-a22e-4bc1bf4294d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d09220-ddde-4330-a0a6-b194c58e5bae",
        "cursor": {
          "ref": "e40c854a-1c52-4734-9bf6-3f5bcc2a44db",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "74090f3f-91a0-43c3-a81a-f9bf72ee4644"
        },
        "item": {
          "id": "99d09220-ddde-4330-a0a6-b194c58e5bae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3c43dc7b-b941-4ffc-82ec-e780a1b8e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49f17a9-b192-4a51-b894-d10ea654eec6",
        "cursor": {
          "ref": "eca2ebab-55be-472b-8740-4366656709b6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "69f36df4-8a84-4c6a-9066-7daace37a970"
        },
        "item": {
          "id": "a49f17a9-b192-4a51-b894-d10ea654eec6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80537e22-18c1-4dd1-8ecb-a1c3bfb9e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91500ac6-7c26-4722-bd5c-1dec9038d7ce",
        "cursor": {
          "ref": "9da23918-4768-4bb6-aba0-8e07375410db",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1c1ff582-5d06-4ecf-8e39-93b8df7b6fbe"
        },
        "item": {
          "id": "91500ac6-7c26-4722-bd5c-1dec9038d7ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "029bb573-63d9-4854-8d4f-c843e7c96190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191b5574-e5e2-45de-af02-128f0164bad1",
        "cursor": {
          "ref": "d5cb1573-61e4-4482-8a7d-d051160804a9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e69a36b1-a65e-48b9-bbc3-bda44d6767c9"
        },
        "item": {
          "id": "191b5574-e5e2-45de-af02-128f0164bad1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "739e70b0-2360-4954-8261-4a4d550c3168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebec3e1-b071-4ff4-80ae-5c4cedacf163",
        "cursor": {
          "ref": "c8c995fe-d3be-40ab-8b65-acb305989327",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "27e2069a-41d2-4a92-aecc-6683e6bef22a"
        },
        "item": {
          "id": "8ebec3e1-b071-4ff4-80ae-5c4cedacf163",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "498e7a21-84b5-45e7-a54a-64e922033bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83d7658-5134-45f4-818f-52f98be3e1a4",
        "cursor": {
          "ref": "2e4fd5ad-ef1e-4875-8584-60d1760d9170",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2092277e-1529-4c1c-bb09-147b9ee9255d"
        },
        "item": {
          "id": "d83d7658-5134-45f4-818f-52f98be3e1a4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ae564a6-7666-4c33-99d9-75355ecfab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208e9e95-c83c-432d-9b42-f1b3fd327275",
        "cursor": {
          "ref": "e15e0258-c5bf-4e7e-83eb-1fef5441e7ec",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f02fef52-be3b-422e-bcd3-324aab1151bd"
        },
        "item": {
          "id": "208e9e95-c83c-432d-9b42-f1b3fd327275",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "54a36e29-7992-4be0-9793-f293b7fcd16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb709d6-da58-4a73-9aa9-ea9fa19723f6",
        "cursor": {
          "ref": "95ec58c6-c5d7-4ca0-984d-13ef68b31f16",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9cd638f2-6c29-446c-bef8-406bbf4a1400"
        },
        "item": {
          "id": "edb709d6-da58-4a73-9aa9-ea9fa19723f6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d233372-f250-4874-8070-499f5cc5d3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55513c04-a00a-4dd1-bf6d-cee9da29e618",
        "cursor": {
          "ref": "5bf1c150-eabb-40a1-908a-aee779ece94f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "123ec1a6-3cfb-4e8d-ac84-90d2347868e7"
        },
        "item": {
          "id": "55513c04-a00a-4dd1-bf6d-cee9da29e618",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fae1bfa3-d057-478a-becf-f68fd0a8690f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3102854b-c0a5-43d5-9df8-30c626cefa64",
        "cursor": {
          "ref": "894b1350-808f-4a9b-9dd1-8d996c953cf4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "de71f146-6342-44ac-87fc-db5055a14603"
        },
        "item": {
          "id": "3102854b-c0a5-43d5-9df8-30c626cefa64",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fed59b71-b514-4978-bae8-c9c19ebf6ccc",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac58ef64-ebcf-4a0d-b652-1691d7ef884a",
        "cursor": {
          "ref": "1c7ba570-425a-4795-b257-dfd3836d3e4d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bd05d7c7-fa73-4e9c-9edf-d17961aeb55d"
        },
        "item": {
          "id": "ac58ef64-ebcf-4a0d-b652-1691d7ef884a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b822d44f-5aa3-4cfd-9efc-b0550cdecdcf",
          "status": "OK",
          "code": 200,
          "responseTime": 7917,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c426417-222c-4727-bae9-266a2f1343c9",
        "cursor": {
          "ref": "ec4b6f30-bb0d-4fa2-bf7b-aa128cdc4ee8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4580ae30-a1ac-4bdf-9923-ae5e0c7d69fc"
        },
        "item": {
          "id": "6c426417-222c-4727-bae9-266a2f1343c9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f7410285-1f21-47c5-908e-d8589eacbc7d",
          "status": "OK",
          "code": 200,
          "responseTime": 5890,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c521380-e396-4427-853d-f0ff05e4affe",
        "cursor": {
          "ref": "df367d98-89f3-4f03-8544-44ba6f2f30f8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6e448a8c-5090-4ff9-99f1-5998eb60c3e1"
        },
        "item": {
          "id": "7c521380-e396-4427-853d-f0ff05e4affe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39753168-4df0-4917-8874-4d8bf9f78d80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c521380-e396-4427-853d-f0ff05e4affe",
        "cursor": {
          "ref": "df367d98-89f3-4f03-8544-44ba6f2f30f8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6e448a8c-5090-4ff9-99f1-5998eb60c3e1"
        },
        "item": {
          "id": "7c521380-e396-4427-853d-f0ff05e4affe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39753168-4df0-4917-8874-4d8bf9f78d80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc546ae8-e5e6-49dd-9c6e-abdb215dba34",
        "cursor": {
          "ref": "d1ef34f9-1e69-482f-b906-b8cfab15df45",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b2476064-5319-4dde-8485-8f9e80716f01"
        },
        "item": {
          "id": "dc546ae8-e5e6-49dd-9c6e-abdb215dba34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f9981c6d-5a30-4573-8aa1-ae38e464bb15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f7563c-d707-4134-bf45-cf21c6620683",
        "cursor": {
          "ref": "b3a87c2e-5abc-4602-9cda-ef9df0306cd4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "323032c9-5567-49ff-80dc-b2f229e18997"
        },
        "item": {
          "id": "d5f7563c-d707-4134-bf45-cf21c6620683",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c94e33e-4272-497d-81e4-b29fbda693a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}